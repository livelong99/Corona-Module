{"ast":null,"code":"/**\r\n * DevExtreme (ui/diagram/ui.diagram.commands.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _diagram_importer = require(\"./diagram_importer\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _file_saver = require(\"../../exporter/file_saver\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _window = require(\"../../core/utils/window\");\n\nvar _message = require(\"../../localization/message\");\n\nvar _message2 = _interopRequireDefault(_message);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar SEPARATOR = {\n  widget: \"separator\"\n};\nvar CSS_CLASSES = {\n  SMALL_SELECT: \"dx-diagram-select-sm\",\n  BUTTON_SELECT: \"dx-diagram-select-b\",\n  BUTTON_COLOR: \"dx-diagram-color-b\"\n};\nvar DiagramCommands = {\n  getAllToolbarCommands: function getAllToolbarCommands() {\n    var _this = this;\n\n    var _getDiagram = (0, _diagram_importer.getDiagram)(),\n        DiagramCommand = _getDiagram.DiagramCommand;\n\n    return this.toolbarCommands || (this.toolbarCommands = {\n      separator: SEPARATOR,\n      \"export\": {\n        widget: \"dxButton\",\n        icon: \"export\",\n        text: _message2.default.format(\"dxDiagram-commandExport\"),\n        hint: _message2.default.format(\"dxDiagram-commandExport\"),\n        items: [{\n          command: DiagramCommand.ExportSvg,\n          text: _message2.default.format(\"dxDiagram-commandExportToSvg\"),\n          getParameter: function getParameter(widget) {\n            return function (dataURI) {\n              return _this._exportTo(widget, dataURI, \"SVG\", \"image/svg+xml\");\n            };\n          }\n        }, {\n          command: DiagramCommand.ExportPng,\n          text: _message2.default.format(\"dxDiagram-commandExportToPng\"),\n          getParameter: function getParameter(widget) {\n            return function (dataURI) {\n              return _this._exportTo(widget, dataURI, \"PNG\", \"image/png\");\n            };\n          }\n        }, {\n          command: DiagramCommand.ExportJpg,\n          text: _message2.default.format(\"dxDiagram-commandExportToJpg\"),\n          getParameter: function getParameter(widget) {\n            return function (dataURI) {\n              return _this._exportTo(widget, dataURI, \"JPEG\", \"image/jpeg\");\n            };\n          }\n        }]\n      },\n      undo: {\n        command: DiagramCommand.Undo,\n        hint: _message2.default.format(\"dxDiagram-commandUndo\"),\n        text: _message2.default.format(\"dxDiagram-commandUndo\"),\n        icon: \"undo\"\n      },\n      redo: {\n        command: DiagramCommand.Redo,\n        hint: _message2.default.format(\"dxDiagram-commandRedo\"),\n        text: _message2.default.format(\"dxDiagram-commandRedo\"),\n        icon: \"redo\"\n      },\n      cut: {\n        command: DiagramCommand.Cut,\n        hint: _message2.default.format(\"dxDiagram-commandCut\"),\n        text: _message2.default.format(\"dxDiagram-commandCut\"),\n        icon: \"cut\"\n      },\n      copy: {\n        command: DiagramCommand.Copy,\n        hint: _message2.default.format(\"dxDiagram-commandCopy\"),\n        text: _message2.default.format(\"dxDiagram-commandCopy\"),\n        icon: \"copy\"\n      },\n      paste: {\n        command: DiagramCommand.PasteInPosition,\n        hint: _message2.default.format(\"dxDiagram-commandPaste\"),\n        text: _message2.default.format(\"dxDiagram-commandPaste\"),\n        icon: \"paste\",\n        getParameter: function getParameter(diagramContextMenu) {\n          return diagramContextMenu.clickPosition;\n        }\n      },\n      selectAll: {\n        command: DiagramCommand.SelectAll,\n        hint: _message2.default.format(\"dxDiagram-commandSelectAll\"),\n        text: _message2.default.format(\"dxDiagram-commandSelectAll\"),\n        icon: \"dx-diagram-i-button-select-all dx-diagram-i\"\n      },\n      \"delete\": {\n        command: DiagramCommand.Delete,\n        hint: _message2.default.format(\"dxDiagram-commandDelete\"),\n        text: _message2.default.format(\"dxDiagram-commandDelete\"),\n        icon: \"remove\"\n      },\n      fontName: {\n        command: DiagramCommand.FontName,\n        hint: _message2.default.format(\"dxDiagram-commandFontName\"),\n        widget: \"dxSelectBox\",\n        items: [\"Arial\", \"Arial Black\", \"Helvetica\", \"Times New Roman\", \"Courier New\", \"Courier\", \"Verdana\", \"Georgia\", \"Comic Sans MS\", \"Trebuchet MS\"]\n      },\n      fontSize: {\n        command: DiagramCommand.FontSize,\n        hint: _message2.default.format(\"dxDiagram-commandFontSize\"),\n        widget: \"dxSelectBox\",\n        items: [\"8pt\", \"9pt\", \"10pt\", \"11pt\", \"12pt\", \"14pt\", \"16pt\", \"18pt\", \"20pt\", \"22pt\", \"24pt\", \"26pt\", \"28pt\", \"36pt\", \"48pt\", \"72pt\"],\n        cssClass: CSS_CLASSES.SMALL_SELECT\n      },\n      bold: {\n        command: DiagramCommand.Bold,\n        hint: _message2.default.format(\"dxDiagram-commandBold\"),\n        text: _message2.default.format(\"dxDiagram-commandBold\"),\n        icon: \"bold\"\n      },\n      italic: {\n        command: DiagramCommand.Italic,\n        hint: _message2.default.format(\"dxDiagram-commandItalic\"),\n        text: _message2.default.format(\"dxDiagram-commandItalic\"),\n        icon: \"italic\"\n      },\n      underline: {\n        command: DiagramCommand.Underline,\n        hint: _message2.default.format(\"dxDiagram-commandUnderline\"),\n        text: _message2.default.format(\"dxDiagram-commandUnderline\"),\n        icon: \"underline\"\n      },\n      fontColor: {\n        command: DiagramCommand.FontColor,\n        text: _message2.default.format(\"dxDiagram-commandTextColor\"),\n        hint: _message2.default.format(\"dxDiagram-commandTextColor\"),\n        widget: \"dxColorBox\",\n        icon: \"dx-icon dx-icon-color\",\n        cssClass: CSS_CLASSES.BUTTON_COLOR\n      },\n      lineColor: {\n        command: DiagramCommand.StrokeColor,\n        text: _message2.default.format(\"dxDiagram-commandLineColor\"),\n        hint: _message2.default.format(\"dxDiagram-commandLineColor\"),\n        widget: \"dxColorBox\",\n        icon: \"dx-icon dx-icon-background\",\n        cssClass: CSS_CLASSES.BUTTON_COLOR\n      },\n      fillColor: {\n        command: DiagramCommand.FillColor,\n        text: _message2.default.format(\"dxDiagram-commandFillColor\"),\n        hint: _message2.default.format(\"dxDiagram-commandFillColor\"),\n        widget: \"dxColorBox\",\n        icon: \"dx-diagram-i dx-diagram-i-button-fill\",\n        cssClass: CSS_CLASSES.BUTTON_COLOR\n      },\n      textAlignLeft: {\n        command: DiagramCommand.TextLeftAlign,\n        hint: _message2.default.format(\"dxDiagram-commandAlignLeft\"),\n        text: _message2.default.format(\"dxDiagram-commandAlignLeft\"),\n        icon: \"alignleft\"\n      },\n      textAlignCenter: {\n        command: DiagramCommand.TextCenterAlign,\n        hint: _message2.default.format(\"dxDiagram-commandAlignCenter\"),\n        text: _message2.default.format(\"dxDiagram-commandAlignCenter\"),\n        icon: \"aligncenter\"\n      },\n      textAlignRight: {\n        command: DiagramCommand.TextRightAlign,\n        hint: _message2.default.format(\"dxDiagram-commandAlignRight\"),\n        text: _message2.default.format(\"dxDiagram-commandAlignRight\"),\n        icon: \"alignright\"\n      },\n      lock: {\n        command: DiagramCommand.Lock,\n        hint: _message2.default.format(\"dxDiagram-commandLock\"),\n        text: _message2.default.format(\"dxDiagram-commandLock\"),\n        icon: \"dx-diagram-i-button-lock dx-diagram-i\"\n      },\n      unlock: {\n        command: DiagramCommand.Unlock,\n        hint: _message2.default.format(\"dxDiagram-commandUnlock\"),\n        text: _message2.default.format(\"dxDiagram-commandUnlock\"),\n        icon: \"dx-diagram-i-button-unlock dx-diagram-i\"\n      },\n      bringToFront: {\n        command: DiagramCommand.BringToFront,\n        hint: _message2.default.format(\"dxDiagram-commandBringToFront\"),\n        text: _message2.default.format(\"dxDiagram-commandBringToFront\"),\n        icon: \"dx-diagram-i-button-bring-to-front dx-diagram-i\"\n      },\n      sendToBack: {\n        command: DiagramCommand.SendToBack,\n        hint: _message2.default.format(\"dxDiagram-commandSendToBack\"),\n        text: _message2.default.format(\"dxDiagram-commandSendToBack\"),\n        icon: \"dx-diagram-i-button-send-to-back dx-diagram-i\"\n      },\n      insertShapeImage: {\n        command: DiagramCommand.InsertShapeImage,\n        text: _message2.default.format(\"dxDiagram-commandInsertShapeImage\"),\n        icon: \"dx-diagram-i-button-image-insert dx-diagram-i\"\n      },\n      editShapeImage: {\n        command: DiagramCommand.EditShapeImage,\n        text: _message2.default.format(\"dxDiagram-commandEditShapeImage\"),\n        icon: \"dx-diagram-i-button-image-edit dx-diagram-i\"\n      },\n      deleteShapeImage: {\n        command: DiagramCommand.DeleteShapeImage,\n        text: _message2.default.format(\"dxDiagram-commandDeleteShapeImage\"),\n        icon: \"dx-diagram-i-button-image-delete dx-diagram-i\"\n      },\n      connectorLineType: {\n        command: DiagramCommand.ConnectorLineOption,\n        widget: \"dxSelectBox\",\n        hint: _message2.default.format(\"dxDiagram-commandConnectorLineType\"),\n        items: [{\n          value: 0,\n          icon: \"dx-diagram-i-connector-straight dx-diagram-i\",\n          hint: _message2.default.format(\"dxDiagram-commandConnectorLineStraight\")\n        }, {\n          value: 1,\n          icon: \"dx-diagram-i-connector-orthogonal dx-diagram-i\",\n          hint: _message2.default.format(\"dxDiagram-commandConnectorLineOrthogonal\")\n        }],\n        displayExpr: \"name\",\n        valueExpr: \"value\",\n        cssClass: CSS_CLASSES.BUTTON_SELECT\n      },\n      connectorLineStart: {\n        command: DiagramCommand.ConnectorStartLineEnding,\n        widget: \"dxSelectBox\",\n        items: [{\n          value: 0,\n          icon: \"dx-diagram-i-connector-begin-none dx-diagram-i\",\n          hint: _message2.default.format(\"dxDiagram-commandConnectorLineNone\")\n        }, {\n          value: 1,\n          icon: \"dx-diagram-i-connector-begin-arrow dx-diagram-i\",\n          hint: _message2.default.format(\"dxDiagram-commandConnectorLineArrow\")\n        }],\n        displayExpr: \"name\",\n        valueExpr: \"value\",\n        hint: _message2.default.format(\"dxDiagram-commandConnectorLineStart\"),\n        cssClass: CSS_CLASSES.BUTTON_SELECT\n      },\n      connectorLineEnd: {\n        command: DiagramCommand.ConnectorEndLineEnding,\n        widget: \"dxSelectBox\",\n        items: [{\n          value: 0,\n          icon: \"dx-diagram-i-connector-begin-none dx-diagram-i\",\n          hint: _message2.default.format(\"dxDiagram-commandConnectorLineNone\")\n        }, {\n          value: 1,\n          icon: \"dx-diagram-i-connector-begin-arrow dx-diagram-i\",\n          hint: _message2.default.format(\"dxDiagram-commandConnectorLineArrow\")\n        }],\n        displayExpr: \"name\",\n        valueExpr: \"value\",\n        hint: _message2.default.format(\"dxDiagram-commandConnectorLineEnd\"),\n        cssClass: CSS_CLASSES.BUTTON_SELECT\n      },\n      autoLayout: {\n        widget: \"dxButton\",\n        text: _message2.default.format(\"dxDiagram-commandAutoLayout\"),\n        showText: \"always\",\n        items: [{\n          text: _message2.default.format(\"dxDiagram-commandAutoLayoutTree\"),\n          items: [{\n            command: DiagramCommand.AutoLayoutTreeVertical,\n            text: _message2.default.format(\"dxDiagram-commandAutoLayoutVertical\")\n          }, {\n            command: DiagramCommand.AutoLayoutTreeHorizontal,\n            text: _message2.default.format(\"dxDiagram-commandAutoLayoutHorizontal\")\n          }]\n        }, {\n          text: _message2.default.format(\"dxDiagram-commandAutoLayoutLayered\"),\n          items: [{\n            command: DiagramCommand.AutoLayoutLayeredVertical,\n            text: _message2.default.format(\"dxDiagram-commandAutoLayoutVertical\")\n          }, {\n            command: DiagramCommand.AutoLayoutLayeredHorizontal,\n            text: _message2.default.format(\"dxDiagram-commandAutoLayoutHorizontal\")\n          }]\n        }]\n      },\n      fullScreen: {\n        command: DiagramCommand.Fullscreen,\n        hint: _message2.default.format(\"dxDiagram-commandFullscreen\"),\n        text: _message2.default.format(\"dxDiagram-commandFullscreen\"),\n        icon: \"dx-diagram-i dx-diagram-i-button-fullscreen\",\n        cssClass: CSS_CLASSES.BUTTON_COLOR\n      }\n    });\n  },\n  getToolbarCommands: function getToolbarCommands(commandNames) {\n    var commands = this.getAllToolbarCommands();\n\n    if (commandNames) {\n      return commandNames.map(function (cn) {\n        return commands[cn];\n      }).filter(function (c) {\n        return c;\n      });\n    }\n\n    return [commands.export, commands.separator, commands.undo, commands.redo, commands.separator, commands.fontName, commands.fontSize, commands.separator, commands.bold, commands.italic, commands.underline, commands.separator, commands.fontColor, commands.lineColor, commands.fillColor, commands.separator, commands.textAlignLeft, commands.textAlignCenter, commands.textAlignRight, commands.separator, commands.connectorLineType, commands.connectorLineStart, commands.connectorLineEnd, commands.separator, commands.autoLayout, commands.separator, commands.fullScreen];\n  },\n  getAllPropertyPanelCommands: function getAllPropertyPanelCommands() {\n    var _getDiagram2 = (0, _diagram_importer.getDiagram)(),\n        DiagramCommand = _getDiagram2.DiagramCommand;\n\n    return this.propertyPanelCommands || (this.propertyPanelCommands = {\n      units: {\n        command: DiagramCommand.ViewUnits,\n        text: _message2.default.format(\"dxDiagram-commandUnits\"),\n        widget: \"dxSelectBox\"\n      },\n      pageSize: {\n        command: DiagramCommand.PageSize,\n        text: _message2.default.format(\"dxDiagram-commandPageSize\"),\n        widget: \"dxSelectBox\",\n        getValue: function getValue(v) {\n          return JSON.parse(v);\n        },\n        setValue: function setValue(v) {\n          return JSON.stringify(v);\n        }\n      },\n      pageOrientation: {\n        command: DiagramCommand.PageLandscape,\n        text: _message2.default.format(\"dxDiagram-commandPageOrientation\"),\n        widget: \"dxSelectBox\",\n        items: [{\n          value: true,\n          title: _message2.default.format(\"dxDiagram-commandPageOrientationLandscape\")\n        }, {\n          value: false,\n          title: _message2.default.format(\"dxDiagram-commandPageOrientationPortrait\")\n        }]\n      },\n      pageColor: {\n        command: DiagramCommand.PageColor,\n        text: _message2.default.format(\"dxDiagram-commandPageColor\"),\n        widget: \"dxColorBox\"\n      },\n      showGrid: {\n        command: DiagramCommand.ShowGrid,\n        text: _message2.default.format(\"dxDiagram-commandShowGrid\"),\n        widget: \"dxCheckBox\"\n      },\n      snapToGrid: {\n        command: DiagramCommand.SnapToGrid,\n        text: _message2.default.format(\"dxDiagram-commandSnapToGrid\"),\n        widget: \"dxCheckBox\"\n      },\n      gridSize: {\n        command: DiagramCommand.GridSize,\n        text: _message2.default.format(\"dxDiagram-commandGridSize\"),\n        widget: \"dxSelectBox\"\n      },\n      zoomLevel: {\n        command: DiagramCommand.ZoomLevel,\n        text: _message2.default.format(\"dxDiagram-commandZoomLevel\"),\n        widget: \"dxSelectBox\"\n      },\n      autoZoom: {\n        command: DiagramCommand.ToggleAutoZoom,\n        text: _message2.default.format(\"dxDiagram-commandAutoZoom\"),\n        widget: \"dxCheckBox\"\n      },\n      simpleView: {\n        command: DiagramCommand.ToggleSimpleView,\n        text: _message2.default.format(\"dxDiagram-commandSimpleView\"),\n        widget: \"dxCheckBox\"\n      }\n    });\n  },\n  getDefaultPropertyPanelCommandGroups: function getDefaultPropertyPanelCommandGroups() {\n    return [{\n      commands: [\"units\"]\n    }, {\n      commands: [\"pageSize\", \"pageOrientation\", \"pageColor\"]\n    }, {\n      commands: [\"showGrid\", \"snapToGrid\", \"gridSize\"]\n    }, {\n      commands: [\"zoomLevel\", \"autoZoom\", \"simpleView\"]\n    }];\n  },\n  getPropertyPanelCommandsByGroups: function getPropertyPanelCommandsByGroups(groups) {\n    var commands = DiagramCommands.getAllPropertyPanelCommands();\n    var result = [];\n    groups.forEach(function (g, gi) {\n      g.commands.forEach(function (cn, ci) {\n        result.push((0, _extend.extend)(commands[cn], {\n          beginGroup: gi > 0 && 0 === ci\n        }));\n      });\n    });\n    return result;\n  },\n  getPropertyPanelCommands: function getPropertyPanelCommands(commandGroups) {\n    commandGroups = commandGroups || DiagramCommands.getDefaultPropertyPanelCommandGroups();\n    return DiagramCommands.getPropertyPanelCommandsByGroups(commandGroups);\n  },\n  getAllContextMenuCommands: function getAllContextMenuCommands() {\n    var _getDiagram3 = (0, _diagram_importer.getDiagram)(),\n        DiagramCommand = _getDiagram3.DiagramCommand;\n\n    return this.contextMenuCommands || (this.contextMenuCommands = {\n      separator: SEPARATOR,\n      cut: {\n        command: DiagramCommand.Cut,\n        text: _message2.default.format(\"dxDiagram-commandCut\"),\n        icon: \"cut\"\n      },\n      copy: {\n        command: DiagramCommand.Copy,\n        text: _message2.default.format(\"dxDiagram-commandCopy\"),\n        icon: \"copy\"\n      },\n      paste: {\n        command: DiagramCommand.PasteInPosition,\n        text: _message2.default.format(\"dxDiagram-commandPaste\"),\n        getParameter: function getParameter(diagramContextMenu) {\n          return diagramContextMenu.clickPosition;\n        },\n        icon: \"paste\"\n      },\n      selectAll: {\n        command: DiagramCommand.SelectAll,\n        text: _message2.default.format(\"dxDiagram-commandSelectAll\"),\n        icon: \"dx-diagram-i-menu-select-all dx-diagram-i\"\n      },\n      \"delete\": {\n        command: DiagramCommand.Delete,\n        text: _message2.default.format(\"dxDiagram-commandDelete\"),\n        icon: \"remove\"\n      },\n      bringToFront: {\n        command: DiagramCommand.BringToFront,\n        text: _message2.default.format(\"dxDiagram-commandBringToFront\"),\n        icon: \"dx-diagram-i-menu-bring-to-front dx-diagram-i\"\n      },\n      sendToBack: {\n        command: DiagramCommand.SendToBack,\n        text: _message2.default.format(\"dxDiagram-commandSendToBack\"),\n        icon: \"dx-diagram-i-menu-send-to-back dx-diagram-i\"\n      },\n      lock: {\n        command: DiagramCommand.Lock,\n        text: _message2.default.format(\"dxDiagram-commandLock\"),\n        icon: \"dx-diagram-i-menu-lock dx-diagram-i\"\n      },\n      unlock: {\n        command: DiagramCommand.Unlock,\n        text: _message2.default.format(\"dxDiagram-commandUnlock\"),\n        icon: \"dx-diagram-i-menu-unlock dx-diagram-i\"\n      },\n      insertShapeImage: {\n        command: DiagramCommand.InsertShapeImage,\n        text: _message2.default.format(\"dxDiagram-commandInsertShapeImage\"),\n        icon: \"dx-diagram-i-menu-image-insert dx-diagram-i\"\n      },\n      editShapeImage: {\n        command: DiagramCommand.EditShapeImage,\n        text: _message2.default.format(\"dxDiagram-commandEditShapeImage\"),\n        icon: \"dx-diagram-i-menu-image-edit dx-diagram-i\"\n      },\n      deleteShapeImage: {\n        command: DiagramCommand.DeleteShapeImage,\n        text: _message2.default.format(\"dxDiagram-commandDeleteShapeImage\"),\n        icon: \"dx-diagram-i-menu-image-delete dx-diagram-i\"\n      }\n    });\n  },\n  getContextMenuCommands: function getContextMenuCommands(commandNames) {\n    var commands = this.getAllContextMenuCommands();\n\n    if (commandNames) {\n      return commandNames.map(function (cn) {\n        return commands[cn];\n      }).filter(function (c) {\n        return c;\n      });\n    }\n\n    return [commands.cut, commands.copy, commands.paste, commands.delete, commands.separator, commands.selectAll, commands.separator, commands.bringToFront, commands.sendToBack, commands.separator, commands.lock, commands.unlock, commands.separator, commands.insertShapeImage, commands.editShapeImage, commands.deleteShapeImage];\n  },\n  _exportTo: function _exportTo(widget, dataURI, format, mimeString) {\n    var window = (0, _window.getWindow)();\n\n    if (window && window.atob && (0, _type.isFunction)(window.Blob)) {\n      var blob = this._getBlobByDataURI(window, dataURI, mimeString);\n\n      var options = widget.option(\"export\");\n\n      _file_saver.fileSaver.saveAs(options.fileName || \"foo\", format, blob, options.proxyURL);\n    }\n  },\n  _getBlobByDataURI: function _getBlobByDataURI(window, dataURI, mimeString) {\n    var byteString = window.atob(dataURI.split(\",\")[1]);\n    var ia = new Uint8Array(byteString.length);\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    return new window.Blob([ia.buffer], {\n      type: mimeString\n    });\n  }\n};\nmodule.exports = DiagramCommands;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/diagram/ui.diagram.commands.js"],"names":["_diagram_importer","require","_extend","_file_saver","_type","_window","_message","_message2","_interopRequireDefault","obj","__esModule","SEPARATOR","widget","CSS_CLASSES","SMALL_SELECT","BUTTON_SELECT","BUTTON_COLOR","DiagramCommands","getAllToolbarCommands","_this","_getDiagram","getDiagram","DiagramCommand","toolbarCommands","separator","icon","text","default","format","hint","items","command","ExportSvg","getParameter","dataURI","_exportTo","ExportPng","ExportJpg","undo","Undo","redo","Redo","cut","Cut","copy","Copy","paste","PasteInPosition","diagramContextMenu","clickPosition","selectAll","SelectAll","Delete","fontName","FontName","fontSize","FontSize","cssClass","bold","Bold","italic","Italic","underline","Underline","fontColor","FontColor","lineColor","StrokeColor","fillColor","FillColor","textAlignLeft","TextLeftAlign","textAlignCenter","TextCenterAlign","textAlignRight","TextRightAlign","lock","Lock","unlock","Unlock","bringToFront","BringToFront","sendToBack","SendToBack","insertShapeImage","InsertShapeImage","editShapeImage","EditShapeImage","deleteShapeImage","DeleteShapeImage","connectorLineType","ConnectorLineOption","value","displayExpr","valueExpr","connectorLineStart","ConnectorStartLineEnding","connectorLineEnd","ConnectorEndLineEnding","autoLayout","showText","AutoLayoutTreeVertical","AutoLayoutTreeHorizontal","AutoLayoutLayeredVertical","AutoLayoutLayeredHorizontal","fullScreen","Fullscreen","getToolbarCommands","commandNames","commands","map","cn","filter","c","export","getAllPropertyPanelCommands","_getDiagram2","propertyPanelCommands","units","ViewUnits","pageSize","PageSize","getValue","v","JSON","parse","setValue","stringify","pageOrientation","PageLandscape","title","pageColor","PageColor","showGrid","ShowGrid","snapToGrid","SnapToGrid","gridSize","GridSize","zoomLevel","ZoomLevel","autoZoom","ToggleAutoZoom","simpleView","ToggleSimpleView","getDefaultPropertyPanelCommandGroups","getPropertyPanelCommandsByGroups","groups","result","forEach","g","gi","ci","push","extend","beginGroup","getPropertyPanelCommands","commandGroups","getAllContextMenuCommands","_getDiagram3","contextMenuCommands","getContextMenuCommands","delete","mimeString","window","getWindow","atob","isFunction","Blob","blob","_getBlobByDataURI","options","option","fileSaver","saveAs","fileName","proxyURL","byteString","split","ia","Uint8Array","length","i","charCodeAt","buffer","type","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/diagram/ui.diagram.commands.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _diagram_importer = require(\"./diagram_importer\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _file_saver = require(\"../../exporter/file_saver\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _message = require(\"../../localization/message\");\r\nvar _message2 = _interopRequireDefault(_message);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SEPARATOR = {\r\n    widget: \"separator\"\r\n};\r\nvar CSS_CLASSES = {\r\n    SMALL_SELECT: \"dx-diagram-select-sm\",\r\n    BUTTON_SELECT: \"dx-diagram-select-b\",\r\n    BUTTON_COLOR: \"dx-diagram-color-b\"\r\n};\r\nvar DiagramCommands = {\r\n    getAllToolbarCommands: function() {\r\n        var _this = this;\r\n        var _getDiagram = (0, _diagram_importer.getDiagram)(),\r\n            DiagramCommand = _getDiagram.DiagramCommand;\r\n        return this.toolbarCommands || (this.toolbarCommands = {\r\n            separator: SEPARATOR,\r\n            \"export\": {\r\n                widget: \"dxButton\",\r\n                icon: \"export\",\r\n                text: _message2.default.format(\"dxDiagram-commandExport\"),\r\n                hint: _message2.default.format(\"dxDiagram-commandExport\"),\r\n                items: [{\r\n                    command: DiagramCommand.ExportSvg,\r\n                    text: _message2.default.format(\"dxDiagram-commandExportToSvg\"),\r\n                    getParameter: function(widget) {\r\n                        return function(dataURI) {\r\n                            return _this._exportTo(widget, dataURI, \"SVG\", \"image/svg+xml\")\r\n                        }\r\n                    }\r\n                }, {\r\n                    command: DiagramCommand.ExportPng,\r\n                    text: _message2.default.format(\"dxDiagram-commandExportToPng\"),\r\n                    getParameter: function(widget) {\r\n                        return function(dataURI) {\r\n                            return _this._exportTo(widget, dataURI, \"PNG\", \"image/png\")\r\n                        }\r\n                    }\r\n                }, {\r\n                    command: DiagramCommand.ExportJpg,\r\n                    text: _message2.default.format(\"dxDiagram-commandExportToJpg\"),\r\n                    getParameter: function(widget) {\r\n                        return function(dataURI) {\r\n                            return _this._exportTo(widget, dataURI, \"JPEG\", \"image/jpeg\")\r\n                        }\r\n                    }\r\n                }]\r\n            },\r\n            undo: {\r\n                command: DiagramCommand.Undo,\r\n                hint: _message2.default.format(\"dxDiagram-commandUndo\"),\r\n                text: _message2.default.format(\"dxDiagram-commandUndo\"),\r\n                icon: \"undo\"\r\n            },\r\n            redo: {\r\n                command: DiagramCommand.Redo,\r\n                hint: _message2.default.format(\"dxDiagram-commandRedo\"),\r\n                text: _message2.default.format(\"dxDiagram-commandRedo\"),\r\n                icon: \"redo\"\r\n            },\r\n            cut: {\r\n                command: DiagramCommand.Cut,\r\n                hint: _message2.default.format(\"dxDiagram-commandCut\"),\r\n                text: _message2.default.format(\"dxDiagram-commandCut\"),\r\n                icon: \"cut\"\r\n            },\r\n            copy: {\r\n                command: DiagramCommand.Copy,\r\n                hint: _message2.default.format(\"dxDiagram-commandCopy\"),\r\n                text: _message2.default.format(\"dxDiagram-commandCopy\"),\r\n                icon: \"copy\"\r\n            },\r\n            paste: {\r\n                command: DiagramCommand.PasteInPosition,\r\n                hint: _message2.default.format(\"dxDiagram-commandPaste\"),\r\n                text: _message2.default.format(\"dxDiagram-commandPaste\"),\r\n                icon: \"paste\",\r\n                getParameter: function(diagramContextMenu) {\r\n                    return diagramContextMenu.clickPosition\r\n                }\r\n            },\r\n            selectAll: {\r\n                command: DiagramCommand.SelectAll,\r\n                hint: _message2.default.format(\"dxDiagram-commandSelectAll\"),\r\n                text: _message2.default.format(\"dxDiagram-commandSelectAll\"),\r\n                icon: \"dx-diagram-i-button-select-all dx-diagram-i\"\r\n            },\r\n            \"delete\": {\r\n                command: DiagramCommand.Delete,\r\n                hint: _message2.default.format(\"dxDiagram-commandDelete\"),\r\n                text: _message2.default.format(\"dxDiagram-commandDelete\"),\r\n                icon: \"remove\"\r\n            },\r\n            fontName: {\r\n                command: DiagramCommand.FontName,\r\n                hint: _message2.default.format(\"dxDiagram-commandFontName\"),\r\n                widget: \"dxSelectBox\",\r\n                items: [\"Arial\", \"Arial Black\", \"Helvetica\", \"Times New Roman\", \"Courier New\", \"Courier\", \"Verdana\", \"Georgia\", \"Comic Sans MS\", \"Trebuchet MS\"]\r\n            },\r\n            fontSize: {\r\n                command: DiagramCommand.FontSize,\r\n                hint: _message2.default.format(\"dxDiagram-commandFontSize\"),\r\n                widget: \"dxSelectBox\",\r\n                items: [\"8pt\", \"9pt\", \"10pt\", \"11pt\", \"12pt\", \"14pt\", \"16pt\", \"18pt\", \"20pt\", \"22pt\", \"24pt\", \"26pt\", \"28pt\", \"36pt\", \"48pt\", \"72pt\"],\r\n                cssClass: CSS_CLASSES.SMALL_SELECT\r\n            },\r\n            bold: {\r\n                command: DiagramCommand.Bold,\r\n                hint: _message2.default.format(\"dxDiagram-commandBold\"),\r\n                text: _message2.default.format(\"dxDiagram-commandBold\"),\r\n                icon: \"bold\"\r\n            },\r\n            italic: {\r\n                command: DiagramCommand.Italic,\r\n                hint: _message2.default.format(\"dxDiagram-commandItalic\"),\r\n                text: _message2.default.format(\"dxDiagram-commandItalic\"),\r\n                icon: \"italic\"\r\n            },\r\n            underline: {\r\n                command: DiagramCommand.Underline,\r\n                hint: _message2.default.format(\"dxDiagram-commandUnderline\"),\r\n                text: _message2.default.format(\"dxDiagram-commandUnderline\"),\r\n                icon: \"underline\"\r\n            },\r\n            fontColor: {\r\n                command: DiagramCommand.FontColor,\r\n                text: _message2.default.format(\"dxDiagram-commandTextColor\"),\r\n                hint: _message2.default.format(\"dxDiagram-commandTextColor\"),\r\n                widget: \"dxColorBox\",\r\n                icon: \"dx-icon dx-icon-color\",\r\n                cssClass: CSS_CLASSES.BUTTON_COLOR\r\n            },\r\n            lineColor: {\r\n                command: DiagramCommand.StrokeColor,\r\n                text: _message2.default.format(\"dxDiagram-commandLineColor\"),\r\n                hint: _message2.default.format(\"dxDiagram-commandLineColor\"),\r\n                widget: \"dxColorBox\",\r\n                icon: \"dx-icon dx-icon-background\",\r\n                cssClass: CSS_CLASSES.BUTTON_COLOR\r\n            },\r\n            fillColor: {\r\n                command: DiagramCommand.FillColor,\r\n                text: _message2.default.format(\"dxDiagram-commandFillColor\"),\r\n                hint: _message2.default.format(\"dxDiagram-commandFillColor\"),\r\n                widget: \"dxColorBox\",\r\n                icon: \"dx-diagram-i dx-diagram-i-button-fill\",\r\n                cssClass: CSS_CLASSES.BUTTON_COLOR\r\n            },\r\n            textAlignLeft: {\r\n                command: DiagramCommand.TextLeftAlign,\r\n                hint: _message2.default.format(\"dxDiagram-commandAlignLeft\"),\r\n                text: _message2.default.format(\"dxDiagram-commandAlignLeft\"),\r\n                icon: \"alignleft\"\r\n            },\r\n            textAlignCenter: {\r\n                command: DiagramCommand.TextCenterAlign,\r\n                hint: _message2.default.format(\"dxDiagram-commandAlignCenter\"),\r\n                text: _message2.default.format(\"dxDiagram-commandAlignCenter\"),\r\n                icon: \"aligncenter\"\r\n            },\r\n            textAlignRight: {\r\n                command: DiagramCommand.TextRightAlign,\r\n                hint: _message2.default.format(\"dxDiagram-commandAlignRight\"),\r\n                text: _message2.default.format(\"dxDiagram-commandAlignRight\"),\r\n                icon: \"alignright\"\r\n            },\r\n            lock: {\r\n                command: DiagramCommand.Lock,\r\n                hint: _message2.default.format(\"dxDiagram-commandLock\"),\r\n                text: _message2.default.format(\"dxDiagram-commandLock\"),\r\n                icon: \"dx-diagram-i-button-lock dx-diagram-i\"\r\n            },\r\n            unlock: {\r\n                command: DiagramCommand.Unlock,\r\n                hint: _message2.default.format(\"dxDiagram-commandUnlock\"),\r\n                text: _message2.default.format(\"dxDiagram-commandUnlock\"),\r\n                icon: \"dx-diagram-i-button-unlock dx-diagram-i\"\r\n            },\r\n            bringToFront: {\r\n                command: DiagramCommand.BringToFront,\r\n                hint: _message2.default.format(\"dxDiagram-commandBringToFront\"),\r\n                text: _message2.default.format(\"dxDiagram-commandBringToFront\"),\r\n                icon: \"dx-diagram-i-button-bring-to-front dx-diagram-i\"\r\n            },\r\n            sendToBack: {\r\n                command: DiagramCommand.SendToBack,\r\n                hint: _message2.default.format(\"dxDiagram-commandSendToBack\"),\r\n                text: _message2.default.format(\"dxDiagram-commandSendToBack\"),\r\n                icon: \"dx-diagram-i-button-send-to-back dx-diagram-i\"\r\n            },\r\n            insertShapeImage: {\r\n                command: DiagramCommand.InsertShapeImage,\r\n                text: _message2.default.format(\"dxDiagram-commandInsertShapeImage\"),\r\n                icon: \"dx-diagram-i-button-image-insert dx-diagram-i\"\r\n            },\r\n            editShapeImage: {\r\n                command: DiagramCommand.EditShapeImage,\r\n                text: _message2.default.format(\"dxDiagram-commandEditShapeImage\"),\r\n                icon: \"dx-diagram-i-button-image-edit dx-diagram-i\"\r\n            },\r\n            deleteShapeImage: {\r\n                command: DiagramCommand.DeleteShapeImage,\r\n                text: _message2.default.format(\"dxDiagram-commandDeleteShapeImage\"),\r\n                icon: \"dx-diagram-i-button-image-delete dx-diagram-i\"\r\n            },\r\n            connectorLineType: {\r\n                command: DiagramCommand.ConnectorLineOption,\r\n                widget: \"dxSelectBox\",\r\n                hint: _message2.default.format(\"dxDiagram-commandConnectorLineType\"),\r\n                items: [{\r\n                    value: 0,\r\n                    icon: \"dx-diagram-i-connector-straight dx-diagram-i\",\r\n                    hint: _message2.default.format(\"dxDiagram-commandConnectorLineStraight\")\r\n                }, {\r\n                    value: 1,\r\n                    icon: \"dx-diagram-i-connector-orthogonal dx-diagram-i\",\r\n                    hint: _message2.default.format(\"dxDiagram-commandConnectorLineOrthogonal\")\r\n                }],\r\n                displayExpr: \"name\",\r\n                valueExpr: \"value\",\r\n                cssClass: CSS_CLASSES.BUTTON_SELECT\r\n            },\r\n            connectorLineStart: {\r\n                command: DiagramCommand.ConnectorStartLineEnding,\r\n                widget: \"dxSelectBox\",\r\n                items: [{\r\n                    value: 0,\r\n                    icon: \"dx-diagram-i-connector-begin-none dx-diagram-i\",\r\n                    hint: _message2.default.format(\"dxDiagram-commandConnectorLineNone\")\r\n                }, {\r\n                    value: 1,\r\n                    icon: \"dx-diagram-i-connector-begin-arrow dx-diagram-i\",\r\n                    hint: _message2.default.format(\"dxDiagram-commandConnectorLineArrow\")\r\n                }],\r\n                displayExpr: \"name\",\r\n                valueExpr: \"value\",\r\n                hint: _message2.default.format(\"dxDiagram-commandConnectorLineStart\"),\r\n                cssClass: CSS_CLASSES.BUTTON_SELECT\r\n            },\r\n            connectorLineEnd: {\r\n                command: DiagramCommand.ConnectorEndLineEnding,\r\n                widget: \"dxSelectBox\",\r\n                items: [{\r\n                    value: 0,\r\n                    icon: \"dx-diagram-i-connector-begin-none dx-diagram-i\",\r\n                    hint: _message2.default.format(\"dxDiagram-commandConnectorLineNone\")\r\n                }, {\r\n                    value: 1,\r\n                    icon: \"dx-diagram-i-connector-begin-arrow dx-diagram-i\",\r\n                    hint: _message2.default.format(\"dxDiagram-commandConnectorLineArrow\")\r\n                }],\r\n                displayExpr: \"name\",\r\n                valueExpr: \"value\",\r\n                hint: _message2.default.format(\"dxDiagram-commandConnectorLineEnd\"),\r\n                cssClass: CSS_CLASSES.BUTTON_SELECT\r\n            },\r\n            autoLayout: {\r\n                widget: \"dxButton\",\r\n                text: _message2.default.format(\"dxDiagram-commandAutoLayout\"),\r\n                showText: \"always\",\r\n                items: [{\r\n                    text: _message2.default.format(\"dxDiagram-commandAutoLayoutTree\"),\r\n                    items: [{\r\n                        command: DiagramCommand.AutoLayoutTreeVertical,\r\n                        text: _message2.default.format(\"dxDiagram-commandAutoLayoutVertical\")\r\n                    }, {\r\n                        command: DiagramCommand.AutoLayoutTreeHorizontal,\r\n                        text: _message2.default.format(\"dxDiagram-commandAutoLayoutHorizontal\")\r\n                    }]\r\n                }, {\r\n                    text: _message2.default.format(\"dxDiagram-commandAutoLayoutLayered\"),\r\n                    items: [{\r\n                        command: DiagramCommand.AutoLayoutLayeredVertical,\r\n                        text: _message2.default.format(\"dxDiagram-commandAutoLayoutVertical\")\r\n                    }, {\r\n                        command: DiagramCommand.AutoLayoutLayeredHorizontal,\r\n                        text: _message2.default.format(\"dxDiagram-commandAutoLayoutHorizontal\")\r\n                    }]\r\n                }]\r\n            },\r\n            fullScreen: {\r\n                command: DiagramCommand.Fullscreen,\r\n                hint: _message2.default.format(\"dxDiagram-commandFullscreen\"),\r\n                text: _message2.default.format(\"dxDiagram-commandFullscreen\"),\r\n                icon: \"dx-diagram-i dx-diagram-i-button-fullscreen\",\r\n                cssClass: CSS_CLASSES.BUTTON_COLOR\r\n            }\r\n        })\r\n    },\r\n    getToolbarCommands: function(commandNames) {\r\n        var commands = this.getAllToolbarCommands();\r\n        if (commandNames) {\r\n            return commandNames.map(function(cn) {\r\n                return commands[cn]\r\n            }).filter(function(c) {\r\n                return c\r\n            })\r\n        }\r\n        return [commands.export, commands.separator, commands.undo, commands.redo, commands.separator, commands.fontName, commands.fontSize, commands.separator, commands.bold, commands.italic, commands.underline, commands.separator, commands.fontColor, commands.lineColor, commands.fillColor, commands.separator, commands.textAlignLeft, commands.textAlignCenter, commands.textAlignRight, commands.separator, commands.connectorLineType, commands.connectorLineStart, commands.connectorLineEnd, commands.separator, commands.autoLayout, commands.separator, commands.fullScreen]\r\n    },\r\n    getAllPropertyPanelCommands: function() {\r\n        var _getDiagram2 = (0, _diagram_importer.getDiagram)(),\r\n            DiagramCommand = _getDiagram2.DiagramCommand;\r\n        return this.propertyPanelCommands || (this.propertyPanelCommands = {\r\n            units: {\r\n                command: DiagramCommand.ViewUnits,\r\n                text: _message2.default.format(\"dxDiagram-commandUnits\"),\r\n                widget: \"dxSelectBox\"\r\n            },\r\n            pageSize: {\r\n                command: DiagramCommand.PageSize,\r\n                text: _message2.default.format(\"dxDiagram-commandPageSize\"),\r\n                widget: \"dxSelectBox\",\r\n                getValue: function(v) {\r\n                    return JSON.parse(v)\r\n                },\r\n                setValue: function(v) {\r\n                    return JSON.stringify(v)\r\n                }\r\n            },\r\n            pageOrientation: {\r\n                command: DiagramCommand.PageLandscape,\r\n                text: _message2.default.format(\"dxDiagram-commandPageOrientation\"),\r\n                widget: \"dxSelectBox\",\r\n                items: [{\r\n                    value: true,\r\n                    title: _message2.default.format(\"dxDiagram-commandPageOrientationLandscape\")\r\n                }, {\r\n                    value: false,\r\n                    title: _message2.default.format(\"dxDiagram-commandPageOrientationPortrait\")\r\n                }]\r\n            },\r\n            pageColor: {\r\n                command: DiagramCommand.PageColor,\r\n                text: _message2.default.format(\"dxDiagram-commandPageColor\"),\r\n                widget: \"dxColorBox\"\r\n            },\r\n            showGrid: {\r\n                command: DiagramCommand.ShowGrid,\r\n                text: _message2.default.format(\"dxDiagram-commandShowGrid\"),\r\n                widget: \"dxCheckBox\"\r\n            },\r\n            snapToGrid: {\r\n                command: DiagramCommand.SnapToGrid,\r\n                text: _message2.default.format(\"dxDiagram-commandSnapToGrid\"),\r\n                widget: \"dxCheckBox\"\r\n            },\r\n            gridSize: {\r\n                command: DiagramCommand.GridSize,\r\n                text: _message2.default.format(\"dxDiagram-commandGridSize\"),\r\n                widget: \"dxSelectBox\"\r\n            },\r\n            zoomLevel: {\r\n                command: DiagramCommand.ZoomLevel,\r\n                text: _message2.default.format(\"dxDiagram-commandZoomLevel\"),\r\n                widget: \"dxSelectBox\"\r\n            },\r\n            autoZoom: {\r\n                command: DiagramCommand.ToggleAutoZoom,\r\n                text: _message2.default.format(\"dxDiagram-commandAutoZoom\"),\r\n                widget: \"dxCheckBox\"\r\n            },\r\n            simpleView: {\r\n                command: DiagramCommand.ToggleSimpleView,\r\n                text: _message2.default.format(\"dxDiagram-commandSimpleView\"),\r\n                widget: \"dxCheckBox\"\r\n            }\r\n        })\r\n    },\r\n    getDefaultPropertyPanelCommandGroups: function() {\r\n        return [{\r\n            commands: [\"units\"]\r\n        }, {\r\n            commands: [\"pageSize\", \"pageOrientation\", \"pageColor\"]\r\n        }, {\r\n            commands: [\"showGrid\", \"snapToGrid\", \"gridSize\"]\r\n        }, {\r\n            commands: [\"zoomLevel\", \"autoZoom\", \"simpleView\"]\r\n        }]\r\n    },\r\n    getPropertyPanelCommandsByGroups: function(groups) {\r\n        var commands = DiagramCommands.getAllPropertyPanelCommands();\r\n        var result = [];\r\n        groups.forEach(function(g, gi) {\r\n            g.commands.forEach(function(cn, ci) {\r\n                result.push((0, _extend.extend)(commands[cn], {\r\n                    beginGroup: gi > 0 && 0 === ci\r\n                }))\r\n            })\r\n        });\r\n        return result\r\n    },\r\n    getPropertyPanelCommands: function(commandGroups) {\r\n        commandGroups = commandGroups || DiagramCommands.getDefaultPropertyPanelCommandGroups();\r\n        return DiagramCommands.getPropertyPanelCommandsByGroups(commandGroups)\r\n    },\r\n    getAllContextMenuCommands: function() {\r\n        var _getDiagram3 = (0, _diagram_importer.getDiagram)(),\r\n            DiagramCommand = _getDiagram3.DiagramCommand;\r\n        return this.contextMenuCommands || (this.contextMenuCommands = {\r\n            separator: SEPARATOR,\r\n            cut: {\r\n                command: DiagramCommand.Cut,\r\n                text: _message2.default.format(\"dxDiagram-commandCut\"),\r\n                icon: \"cut\"\r\n            },\r\n            copy: {\r\n                command: DiagramCommand.Copy,\r\n                text: _message2.default.format(\"dxDiagram-commandCopy\"),\r\n                icon: \"copy\"\r\n            },\r\n            paste: {\r\n                command: DiagramCommand.PasteInPosition,\r\n                text: _message2.default.format(\"dxDiagram-commandPaste\"),\r\n                getParameter: function(diagramContextMenu) {\r\n                    return diagramContextMenu.clickPosition\r\n                },\r\n                icon: \"paste\"\r\n            },\r\n            selectAll: {\r\n                command: DiagramCommand.SelectAll,\r\n                text: _message2.default.format(\"dxDiagram-commandSelectAll\"),\r\n                icon: \"dx-diagram-i-menu-select-all dx-diagram-i\"\r\n            },\r\n            \"delete\": {\r\n                command: DiagramCommand.Delete,\r\n                text: _message2.default.format(\"dxDiagram-commandDelete\"),\r\n                icon: \"remove\"\r\n            },\r\n            bringToFront: {\r\n                command: DiagramCommand.BringToFront,\r\n                text: _message2.default.format(\"dxDiagram-commandBringToFront\"),\r\n                icon: \"dx-diagram-i-menu-bring-to-front dx-diagram-i\"\r\n            },\r\n            sendToBack: {\r\n                command: DiagramCommand.SendToBack,\r\n                text: _message2.default.format(\"dxDiagram-commandSendToBack\"),\r\n                icon: \"dx-diagram-i-menu-send-to-back dx-diagram-i\"\r\n            },\r\n            lock: {\r\n                command: DiagramCommand.Lock,\r\n                text: _message2.default.format(\"dxDiagram-commandLock\"),\r\n                icon: \"dx-diagram-i-menu-lock dx-diagram-i\"\r\n            },\r\n            unlock: {\r\n                command: DiagramCommand.Unlock,\r\n                text: _message2.default.format(\"dxDiagram-commandUnlock\"),\r\n                icon: \"dx-diagram-i-menu-unlock dx-diagram-i\"\r\n            },\r\n            insertShapeImage: {\r\n                command: DiagramCommand.InsertShapeImage,\r\n                text: _message2.default.format(\"dxDiagram-commandInsertShapeImage\"),\r\n                icon: \"dx-diagram-i-menu-image-insert dx-diagram-i\"\r\n            },\r\n            editShapeImage: {\r\n                command: DiagramCommand.EditShapeImage,\r\n                text: _message2.default.format(\"dxDiagram-commandEditShapeImage\"),\r\n                icon: \"dx-diagram-i-menu-image-edit dx-diagram-i\"\r\n            },\r\n            deleteShapeImage: {\r\n                command: DiagramCommand.DeleteShapeImage,\r\n                text: _message2.default.format(\"dxDiagram-commandDeleteShapeImage\"),\r\n                icon: \"dx-diagram-i-menu-image-delete dx-diagram-i\"\r\n            }\r\n        })\r\n    },\r\n    getContextMenuCommands: function(commandNames) {\r\n        var commands = this.getAllContextMenuCommands();\r\n        if (commandNames) {\r\n            return commandNames.map(function(cn) {\r\n                return commands[cn]\r\n            }).filter(function(c) {\r\n                return c\r\n            })\r\n        }\r\n        return [commands.cut, commands.copy, commands.paste, commands.delete, commands.separator, commands.selectAll, commands.separator, commands.bringToFront, commands.sendToBack, commands.separator, commands.lock, commands.unlock, commands.separator, commands.insertShapeImage, commands.editShapeImage, commands.deleteShapeImage]\r\n    },\r\n    _exportTo: function(widget, dataURI, format, mimeString) {\r\n        var window = (0, _window.getWindow)();\r\n        if (window && window.atob && (0, _type.isFunction)(window.Blob)) {\r\n            var blob = this._getBlobByDataURI(window, dataURI, mimeString);\r\n            var options = widget.option(\"export\");\r\n            _file_saver.fileSaver.saveAs(options.fileName || \"foo\", format, blob, options.proxyURL)\r\n        }\r\n    },\r\n    _getBlobByDataURI: function(window, dataURI, mimeString) {\r\n        var byteString = window.atob(dataURI.split(\",\")[1]);\r\n        var ia = new Uint8Array(byteString.length);\r\n        for (var i = 0; i < byteString.length; i++) {\r\n            ia[i] = byteString.charCodeAt(i)\r\n        }\r\n        return new window.Blob([ia.buffer], {\r\n            type: mimeString\r\n        })\r\n    }\r\n};\r\nmodule.exports = DiagramCommands;\r\n"]},"metadata":{},"sourceType":"script"}