{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/base_series.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar seriesNS = {};\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\").extend;\n\nvar _each = require(\"../../core/utils/iterator\").each;\n\nvar pointModule = require(\"./points/base_point\");\n\nvar _isDefined = typeUtils.isDefined;\n\nvar vizUtils = require(\"../core/utils\");\n\nvar _isEmptyObject = typeUtils.isEmptyObject;\nvar _normalizeEnum = vizUtils.normalizeEnum;\n\nvar _noop = require(\"../../core/utils/common\").noop;\n\nvar states = require(\"../components/consts\").states;\n\nvar rangeCalculator = require(\"./helpers/range_data_calculator\");\n\nvar scatterSeries = require(\"./scatter_series\");\n\nvar lineSeries = require(\"./line_series\");\n\nvar areaSeries = require(\"./area_series\");\n\nvar barSeries = require(\"./bar_series\");\n\nvar rangeSeries = require(\"./range_series\");\n\nvar bubbleSeries = require(\"./bubble_series\");\n\nvar pieSeries = require(\"./pie_series\");\n\nvar financialSeries = require(\"./financial_series\");\n\nvar stackedSeries = require(\"./stacked_series\");\n\nvar DISCRETE = \"discrete\";\nvar SELECTED_STATE = states.selectedMark;\nvar HOVER_STATE = states.hoverMark;\nvar HOVER = states.hover;\nvar NORMAL = states.normal;\nvar SELECTION = states.selection;\nvar APPLY_SELECTED = states.applySelected;\nvar APPLY_HOVER = states.applyHover;\nvar RESET_ITEM = states.resetItem;\nvar NONE_MODE = \"none\";\nvar INCLUDE_POINTS = \"includepoints\";\nvar NEAREST_POINT = \"nearestpoint\";\nvar SERIES_SELECTION_CHANGED = \"seriesSelectionChanged\";\nvar POINT_SELECTION_CHANGED = \"pointSelectionChanged\";\nvar SERIES_HOVER_CHANGED = \"seriesHoverChanged\";\nvar POINT_HOVER_CHANGED = \"pointHoverChanged\";\nvar ALL_SERIES_POINTS = \"allseriespoints\";\nvar ALL_ARGUMENT_POINTS = \"allargumentpoints\";\nvar POINT_HOVER = \"pointHover\";\nvar CLEAR_POINT_HOVER = \"clearPointHover\";\nvar SERIES_SELECT = \"seriesSelect\";\nvar POINT_SELECT = \"pointSelect\";\nvar POINT_DESELECT = \"pointDeselect\";\n\nvar getEmptyBusinessRange = function getEmptyBusinessRange() {\n  return {\n    arg: {},\n    val: {}\n  };\n};\n\nfunction triggerEvent(element, event, point) {\n  element && element.trigger(event, point);\n}\n\nseriesNS.mixins = {\n  chart: {},\n  pie: {},\n  polar: {}\n};\nseriesNS.mixins.chart.scatter = scatterSeries.chart;\nseriesNS.mixins.polar.scatter = scatterSeries.polar;\n\n_extend(seriesNS.mixins.pie, pieSeries);\n\n_extend(seriesNS.mixins.chart, lineSeries.chart, areaSeries.chart, barSeries.chart, rangeSeries.chart, bubbleSeries.chart, financialSeries, stackedSeries.chart);\n\n_extend(seriesNS.mixins.polar, lineSeries.polar, areaSeries.polar, barSeries.polar, rangeSeries.polar, bubbleSeries.polar, stackedSeries.polar);\n\nfunction includePointsMode(mode) {\n  mode = _normalizeEnum(mode);\n  return mode === INCLUDE_POINTS || mode === ALL_SERIES_POINTS;\n}\n\nfunction getLabelOptions(labelOptions, defaultColor) {\n  var opt = labelOptions || {};\n  var labelFont = _extend({}, opt.font) || {};\n  var labelBorder = opt.border || {};\n  var labelConnector = opt.connector || {};\n  var backgroundAttr = {\n    fill: opt.backgroundColor || defaultColor,\n    \"stroke-width\": labelBorder.visible ? labelBorder.width || 0 : 0,\n    stroke: labelBorder.visible && labelBorder.width ? labelBorder.color : \"none\",\n    dashStyle: labelBorder.dashStyle\n  };\n  var connectorAttr = {\n    stroke: labelConnector.visible && labelConnector.width ? labelConnector.color || defaultColor : \"none\",\n    \"stroke-width\": labelConnector.visible ? labelConnector.width || 0 : 0\n  };\n  labelFont.color = \"none\" === opt.backgroundColor && \"#ffffff\" === _normalizeEnum(labelFont.color) && \"inside\" !== opt.position ? defaultColor : labelFont.color;\n  return {\n    alignment: opt.alignment,\n    format: opt.format,\n    argumentFormat: opt.argumentFormat,\n    customizeText: typeUtils.isFunction(opt.customizeText) ? opt.customizeText : void 0,\n    attributes: {\n      font: labelFont\n    },\n    visible: 0 !== labelFont.size ? opt.visible : false,\n    showForZeroValues: opt.showForZeroValues,\n    horizontalOffset: opt.horizontalOffset,\n    verticalOffset: opt.verticalOffset,\n    radialOffset: opt.radialOffset,\n    background: backgroundAttr,\n    position: opt.position,\n    connector: connectorAttr,\n    rotationAngle: opt.rotationAngle,\n    wordWrap: opt.wordWrap,\n    textOverflow: opt.textOverflow,\n    cssClass: opt.cssClass\n  };\n}\n\nfunction setPointHoverState(point, legendCallback) {\n  point.fullState |= HOVER_STATE;\n  point.applyView(legendCallback);\n}\n\nfunction releasePointHoverState(point, legendCallback) {\n  point.fullState &= ~HOVER_STATE;\n  point.applyView(legendCallback);\n  point.releaseHoverState();\n}\n\nfunction setPointSelectedState(point, legendCallback) {\n  point.fullState |= SELECTED_STATE;\n  point.applyView(legendCallback);\n}\n\nfunction releasePointSelectedState(point, legendCallback) {\n  point.fullState &= ~SELECTED_STATE;\n  point.applyView(legendCallback);\n}\n\nfunction mergePointOptionsCore(base, extra) {\n  var options = _extend({}, base, extra);\n\n  options.border = _extend({}, base && base.border, extra && extra.border);\n  return options;\n}\n\nfunction mergePointOptions(base, extra) {\n  var options = mergePointOptionsCore(base, extra);\n  options.image = _extend(true, {}, base.image, extra.image);\n  options.selectionStyle = mergePointOptionsCore(base.selectionStyle, extra.selectionStyle);\n  options.hoverStyle = mergePointOptionsCore(base.hoverStyle, extra.hoverStyle);\n  return options;\n}\n\nfunction Series(settings, options) {\n  var that = this;\n  that.fullState = 0;\n  that._extGroups = settings;\n  that._renderer = settings.renderer;\n  that._group = settings.renderer.g().attr({\n    \"class\": \"dxc-series\"\n  });\n  that._eventTrigger = settings.eventTrigger;\n  that._eventPipe = settings.eventPipe;\n  that._incidentOccurred = settings.incidentOccurred;\n  that._legendCallback = _noop;\n  that.updateOptions(options, settings);\n}\n\nfunction getData(pointData) {\n  return pointData.data;\n}\n\nexports.Series = Series;\nexports.mixins = seriesNS.mixins;\n\nfunction getValueChecker(axisType, axis) {\n  if (!axis || \"logarithmic\" !== axisType || false !== axis.getOptions().allowNegatives) {\n    return function () {\n      return true;\n    };\n  } else {\n    return function (value) {\n      return value > 0;\n    };\n  }\n}\n\nSeries.prototype = {\n  constructor: Series,\n  _createLegendState: _noop,\n  getLegendStyles: function getLegendStyles() {\n    return this._styles.legendStyles;\n  },\n  _createStyles: function _createStyles(options) {\n    var that = this;\n    var mainSeriesColor = options.mainSeriesColor;\n    that._styles = {\n      normal: that._parseStyle(options, mainSeriesColor, mainSeriesColor),\n      hover: that._parseStyle(options.hoverStyle || {}, mainSeriesColor, mainSeriesColor),\n      selection: that._parseStyle(options.selectionStyle || {}, mainSeriesColor, mainSeriesColor),\n      legendStyles: {\n        normal: that._createLegendState(options, mainSeriesColor),\n        hover: that._createLegendState(options.hoverStyle || {}, mainSeriesColor),\n        selection: that._createLegendState(options.selectionStyle || {}, mainSeriesColor)\n      }\n    };\n  },\n  setClippingParams: function setClippingParams(baseId, wideId, forceClipping) {\n    var clipLabels = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;\n    this._paneClipRectID = baseId;\n    this._widePaneClipRectID = wideId;\n    this._forceClipping = forceClipping;\n    this._clipLabels = clipLabels;\n  },\n  applyClip: function applyClip() {\n    this._group.attr({\n      \"clip-path\": this._paneClipRectID\n    });\n  },\n  resetClip: function resetClip() {\n    this._group.attr({\n      \"clip-path\": null\n    });\n  },\n  getTagField: function getTagField() {\n    return this._options.tagField || \"tag\";\n  },\n  getValueFields: _noop,\n  getSizeField: _noop,\n  getArgumentField: _noop,\n  getPoints: function getPoints() {\n    return this._points;\n  },\n  getPointsInViewPort: function getPointsInViewPort() {\n    return rangeCalculator.getPointsInViewPort(this);\n  },\n  _createPoint: function _createPoint(data, index, oldPoint) {\n    data.index = index;\n    var that = this;\n    var pointsByArgument = that.pointsByArgument;\n\n    var options = that._getCreatingPointOptions(data);\n\n    var arg = data.argument.valueOf();\n    var point = oldPoint;\n    var pointByArgument;\n\n    if (point) {\n      point.update(data, options);\n    } else {\n      point = new pointModule.Point(that, data, options);\n\n      if (that.isSelected() && includePointsMode(that.lastSelectionMode)) {\n        point.setView(SELECTION);\n      }\n    }\n\n    pointByArgument = pointsByArgument[arg];\n\n    if (pointByArgument) {\n      pointByArgument.push(point);\n    } else {\n      pointsByArgument[arg] = [point];\n    }\n\n    if (point.hasValue()) {\n      that.customizePoint(point, data);\n    }\n\n    return point;\n  },\n  getRangeData: function getRangeData() {\n    return this._visible ? this._getRangeData() : getEmptyBusinessRange();\n  },\n  getArgumentRange: function getArgumentRange() {\n    return this._visible ? rangeCalculator.getArgumentRange(this) : getEmptyBusinessRange();\n  },\n  getViewport: function getViewport() {\n    return rangeCalculator.getViewport(this);\n  },\n  _deleteGroup: function _deleteGroup(groupName) {\n    var group = this[groupName];\n\n    if (group) {\n      group.dispose();\n      this[groupName] = null;\n    }\n  },\n  updateOptions: function updateOptions(newOptions, settings) {\n    var that = this;\n    var widgetType = newOptions.widgetType;\n    var oldType = that.type;\n    var newType = newOptions.type;\n    that.type = newType && _normalizeEnum(newType.toString());\n\n    if (!that._checkType(widgetType) || that._checkPolarBarType(widgetType, newOptions)) {\n      that.dispose();\n      that.isUpdated = false;\n      return;\n    }\n\n    if (oldType !== that.type) {\n      that._firstDrawing = true;\n\n      that._resetType(oldType, widgetType);\n\n      that._setType(that.type, widgetType);\n    } else {\n      that._defineDrawingState();\n    }\n\n    that._options = newOptions;\n    that._pointOptions = null;\n    that.name = newOptions.name;\n    that.pane = newOptions.pane;\n    that.tag = newOptions.tag;\n\n    if (settings) {\n      that._seriesModes = settings.commonSeriesModes || that._seriesModes;\n      that._valueAxis = settings.valueAxis || that._valueAxis;\n      that.axis = that._valueAxis && that._valueAxis.name;\n      that._argumentAxis = settings.argumentAxis || that._argumentAxis;\n    }\n\n    that._createStyles(newOptions);\n\n    that._stackName = null;\n\n    that._updateOptions(newOptions);\n\n    that._visible = newOptions.visible;\n    that.isUpdated = true;\n    that.stack = newOptions.stack;\n    that.barOverlapGroup = newOptions.barOverlapGroup;\n\n    that._createGroups();\n\n    that._processEmptyValue = newOptions.ignoreEmptyPoints ? function (x) {\n      return null === x ? void 0 : x;\n    } : function (x) {\n      return x;\n    };\n  },\n  _defineDrawingState: function _defineDrawingState() {\n    this._firstDrawing = true;\n  },\n  _disposePoints: function _disposePoints(points) {\n    _each(points || [], function (_, p) {\n      p.dispose();\n    });\n  },\n  updateDataType: function updateDataType(settings) {\n    var that = this;\n    that.argumentType = settings.argumentType;\n    that.valueType = settings.valueType;\n    that.argumentAxisType = settings.argumentAxisType;\n    that.valueAxisType = settings.valueAxisType;\n    that.showZero = settings.showZero;\n    this._argumentChecker = getValueChecker(settings.argumentAxisType, that.getArgumentAxis());\n    this._valueChecker = getValueChecker(settings.valueAxisType, that.getValueAxis());\n    return that;\n  },\n  _argumentChecker: function _argumentChecker() {\n    return true;\n  },\n  _valueChecker: function _valueChecker() {\n    return true;\n  },\n  getOptions: function getOptions() {\n    return this._options;\n  },\n  _getOldPoint: function _getOldPoint(data, oldPointsByArgument, index) {\n    var arg = data.argument && data.argument.valueOf();\n    var point = (oldPointsByArgument[arg] || [])[0];\n\n    if (point) {\n      oldPointsByArgument[arg].splice(0, 1);\n    }\n\n    return point;\n  },\n  updateData: function updateData(data) {\n    var that = this;\n    var options = that._options;\n    var nameField = options.nameField;\n    data = data || [];\n\n    if (data.length) {\n      that._canRenderCompleteHandle = true;\n    }\n\n    var dataSelector = this._getPointDataSelector();\n\n    var itemsWithoutArgument = 0;\n    that._data = data.reduce(function (data, dataItem, index) {\n      var pointDataItem = dataSelector(dataItem);\n\n      if (_isDefined(pointDataItem.argument)) {\n        if (!nameField || dataItem[nameField] === options.nameFieldValue) {\n          pointDataItem.index = index;\n          data.push(pointDataItem);\n        }\n      } else {\n        itemsWithoutArgument++;\n      }\n\n      return data;\n    }, []);\n\n    if (itemsWithoutArgument && itemsWithoutArgument === data.length) {\n      that._incidentOccurred(\"W2002\", [that.name, that.getArgumentField()]);\n    }\n\n    that._endUpdateData();\n  },\n  _getData: function _getData() {\n    var data = this._data || [];\n\n    if (this.useAggregation()) {\n      data = this._resample(this.getArgumentAxis().getAggregationInfo(this._useAllAggregatedPoints, this.argumentAxisType !== DISCRETE ? this.getArgumentRange() : {}), data);\n    }\n\n    return data;\n  },\n  useAggregation: function useAggregation() {\n    var aggregation = this.getOptions().aggregation;\n    return aggregation && aggregation.enabled;\n  },\n  autoHidePointMarkersEnabled: _noop,\n  usePointsToDefineAutoHiding: _noop,\n  createPoints: function createPoints(useAllAggregatedPoints) {\n    this._normalizeUsingAllAggregatedPoints(useAllAggregatedPoints);\n\n    this._createPoints();\n  },\n  _normalizeUsingAllAggregatedPoints: function _normalizeUsingAllAggregatedPoints(useAllAggregatedPoints) {\n    this._useAllAggregatedPoints = this.useAggregation() && (this.argumentAxisType === DISCRETE || (this._data || []).length > 1 && !!useAllAggregatedPoints);\n  },\n  _createPoints: function _createPoints() {\n    var that = this;\n    var oldPointsByArgument = that.pointsByArgument || {};\n\n    var data = that._getData();\n\n    var points;\n    that.pointsByArgument = {};\n\n    that._calculateErrorBars(data);\n\n    var skippedFields = {};\n    points = data.reduce(function (points, pointDataItem) {\n      if (that._checkData(pointDataItem, skippedFields)) {\n        var pointIndex = points.length;\n\n        var oldPoint = that._getOldPoint(pointDataItem, oldPointsByArgument, pointIndex);\n\n        var point = that._createPoint(pointDataItem, pointIndex, oldPoint);\n\n        points.push(point);\n      }\n\n      return points;\n    }, []);\n\n    for (var field in skippedFields) {\n      if (skippedFields[field] === data.length) {\n        that._incidentOccurred(\"W2002\", [that.name, field]);\n      }\n    }\n\n    Object.keys(oldPointsByArgument).forEach(function (key) {\n      return that._disposePoints(oldPointsByArgument[key]);\n    });\n    that._points = points;\n  },\n  _removeOldSegments: function _removeOldSegments() {\n    var that = this;\n    var startIndex = that._segments.length;\n\n    _each(that._graphics.splice(startIndex, that._graphics.length) || [], function (_, elem) {\n      that._removeElement(elem);\n    });\n\n    if (that._trackers) {\n      _each(that._trackers.splice(startIndex, that._trackers.length) || [], function (_, elem) {\n        elem.remove();\n      });\n    }\n  },\n  _drawElements: function _drawElements(animationEnabled, firstDrawing, translateAllPoints) {\n    var that = this;\n    var points = that._points || [];\n\n    var closeSegment = points[0] && points[0].hasValue() && that._options.closed;\n\n    var groupForPoint = {\n      markers: that._markersGroup,\n      errorBars: that._errorBarGroup\n    };\n    var segments;\n    that._drawnPoints = [];\n    that._graphics = that._graphics || [];\n    that._segments = [];\n    segments = points.reduce(function (segments, p) {\n      var segment = segments[segments.length - 1];\n\n      if (!p.translated || translateAllPoints) {\n        p.translate();\n        !translateAllPoints && p.setDefaultCoords();\n      }\n\n      if (p.hasValue() && p.hasCoords()) {\n        translateAllPoints && that._drawPoint({\n          point: p,\n          groups: groupForPoint,\n          hasAnimation: animationEnabled,\n          firstDrawing: firstDrawing\n        });\n        segment.push(p);\n      } else {\n        if (!p.hasValue()) {\n          segment.length && segments.push([]);\n        } else {\n          p.setInvisibility();\n        }\n      }\n\n      return segments;\n    }, [[]]);\n    segments.forEach(function (segment, index) {\n      if (segment.length) {\n        that._drawSegment(segment, animationEnabled, index, closeSegment && index === this.length - 1);\n      }\n    }, segments);\n    that._firstDrawing = points.length ? false : true;\n\n    that._removeOldSegments();\n\n    animationEnabled && that._animate(firstDrawing);\n  },\n  draw: function draw(animationEnabled, hideLayoutLabels, legendCallback) {\n    var that = this;\n    var firstDrawing = that._firstDrawing;\n    that._legendCallback = legendCallback || that._legendCallback;\n\n    if (!that._visible) {\n      animationEnabled = false;\n\n      that._group.remove();\n\n      return;\n    }\n\n    that._appendInGroup();\n\n    that._applyVisibleArea();\n\n    that._setGroupsSettings(animationEnabled, firstDrawing);\n\n    !firstDrawing && that._drawElements(false, firstDrawing, false);\n\n    that._drawElements(animationEnabled, firstDrawing, true);\n\n    hideLayoutLabels && that.hideLabels();\n\n    if (that.isSelected()) {\n      that._changeStyle(that.lastSelectionMode, void 0, true);\n    } else {\n      if (that.isHovered()) {\n        that._changeStyle(that.lastHoverMode, void 0, true);\n      } else {\n        that._applyStyle(that._styles.normal);\n      }\n    }\n  },\n  _setLabelGroupSettings: function _setLabelGroupSettings(animationEnabled) {\n    var settings = {\n      \"class\": \"dxc-labels\",\n      \"pointer-events\": \"none\"\n    };\n    this._clipLabels && this._applyElementsClipRect(settings);\n\n    this._applyClearingSettings(settings);\n\n    animationEnabled && (settings.opacity = .001);\n\n    this._labelsGroup.attr(settings).append(this._extGroups.labelsGroup);\n  },\n  _checkType: function _checkType(widgetType) {\n    return !!seriesNS.mixins[widgetType][this.type];\n  },\n  _checkPolarBarType: function _checkPolarBarType(widgetType, options) {\n    return \"polar\" === widgetType && options.spiderWidget && this.type.indexOf(\"bar\") !== -1;\n  },\n  _resetType: function _resetType(seriesType, widgetType) {\n    var methodName;\n    var methods;\n\n    if (seriesType) {\n      methods = seriesNS.mixins[widgetType][seriesType];\n\n      for (methodName in methods) {\n        delete this[methodName];\n      }\n    }\n  },\n  _setType: function _setType(seriesType, widgetType) {\n    var methodName;\n    var methods = seriesNS.mixins[widgetType][seriesType];\n\n    for (methodName in methods) {\n      this[methodName] = methods[methodName];\n    }\n  },\n  _setPointsView: function _setPointsView(view, target) {\n    this.getPoints().forEach(function (point) {\n      if (target !== point) {\n        point.setView(view);\n      }\n    });\n  },\n  _resetPointsView: function _resetPointsView(view, target) {\n    this.getPoints().forEach(function (point) {\n      if (target !== point) {\n        point.resetView(view);\n      }\n    });\n  },\n  _resetNearestPoint: function _resetNearestPoint() {\n    var that = this;\n    that._nearestPoint && null !== that._nearestPoint.series && that._nearestPoint.resetView(HOVER);\n    that._nearestPoint = null;\n  },\n  _setSelectedState: function _setSelectedState(mode) {\n    var that = this;\n    that.lastSelectionMode = _normalizeEnum(mode || that._options.selectionMode);\n    that.fullState = that.fullState | SELECTED_STATE;\n\n    that._resetNearestPoint();\n\n    that._changeStyle(that.lastSelectionMode);\n\n    if (that.lastSelectionMode !== NONE_MODE && that.isHovered() && includePointsMode(that.lastHoverMode)) {\n      that._resetPointsView(HOVER);\n    }\n  },\n  _releaseSelectedState: function _releaseSelectedState() {\n    var that = this;\n    that.fullState = that.fullState & ~SELECTED_STATE;\n\n    that._changeStyle(that.lastSelectionMode, SELECTION);\n\n    if (that.lastSelectionMode !== NONE_MODE && that.isHovered() && includePointsMode(that.lastHoverMode)) {\n      that._setPointsView(HOVER);\n    }\n  },\n  isFullStackedSeries: function isFullStackedSeries() {\n    return 0 === this.type.indexOf(\"fullstacked\");\n  },\n  isStackedSeries: function isStackedSeries() {\n    return 0 === this.type.indexOf(\"stacked\");\n  },\n  isFinancialSeries: function isFinancialSeries() {\n    return \"stock\" === this.type || \"candlestick\" === this.type;\n  },\n  _canChangeView: function _canChangeView() {\n    return !this.isSelected() && _normalizeEnum(this._options.hoverMode) !== NONE_MODE;\n  },\n  _changeStyle: function _changeStyle(mode, resetView, skipPoints) {\n    var that = this;\n    var state = that.fullState;\n    var styles = [NORMAL, HOVER, SELECTION, SELECTION];\n\n    if (\"none\" === that.lastHoverMode) {\n      state &= ~HOVER_STATE;\n    }\n\n    if (\"none\" === that.lastSelectionMode) {\n      state &= ~SELECTED_STATE;\n    }\n\n    if (includePointsMode(mode) && !skipPoints) {\n      if (!resetView) {\n        that._setPointsView(styles[state]);\n      } else {\n        that._resetPointsView(resetView);\n      }\n    }\n\n    that._legendCallback([RESET_ITEM, APPLY_HOVER, APPLY_SELECTED, APPLY_SELECTED][state]);\n\n    that._applyStyle(that._styles[styles[state]]);\n  },\n  updateHover: function updateHover(x, y) {\n    var that = this;\n    var currentNearestPoint = that._nearestPoint;\n    var point = that.isHovered() && that.lastHoverMode === NEAREST_POINT && that.getNeighborPoint(x, y);\n\n    if (point !== currentNearestPoint && !(that.isSelected() && that.lastSelectionMode !== NONE_MODE)) {\n      that._resetNearestPoint();\n\n      if (point) {\n        point.setView(HOVER);\n        that._nearestPoint = point;\n      }\n    }\n  },\n  _getMainAxisName: function _getMainAxisName() {\n    return this._options.rotated ? \"X\" : \"Y\";\n  },\n  areLabelsVisible: function areLabelsVisible() {\n    return !_isDefined(this._options.maxLabelCount) || this._points.length <= this._options.maxLabelCount;\n  },\n  getLabelVisibility: function getLabelVisibility() {\n    return this.areLabelsVisible() && this._options.label && this._options.label.visible;\n  },\n  customizePoint: function customizePoint(point, pointData) {\n    var that = this;\n    var options = that._options;\n    var customizePoint = options.customizePoint;\n    var customizeObject;\n    var pointOptions;\n    var customLabelOptions;\n    var customOptions;\n    var customizeLabel = options.customizeLabel;\n    var useLabelCustomOptions;\n    var usePointCustomOptions;\n\n    if (customizeLabel && customizeLabel.call) {\n      customizeObject = _extend({\n        seriesName: that.name\n      }, pointData);\n      customizeObject.series = that;\n      customLabelOptions = customizeLabel.call(customizeObject, customizeObject);\n      useLabelCustomOptions = customLabelOptions && !_isEmptyObject(customLabelOptions);\n      customLabelOptions = useLabelCustomOptions ? _extend(true, {}, options.label, customLabelOptions) : null;\n    }\n\n    if (customizePoint && customizePoint.call) {\n      customizeObject = customizeObject || _extend({\n        seriesName: that.name\n      }, pointData);\n      customizeObject.series = that;\n      customOptions = customizePoint.call(customizeObject, customizeObject);\n      usePointCustomOptions = customOptions && !_isEmptyObject(customOptions);\n    }\n\n    if (useLabelCustomOptions || usePointCustomOptions) {\n      pointOptions = that._parsePointOptions(that._preparePointOptions(customOptions), customLabelOptions || options.label, pointData, point);\n      pointOptions.styles.useLabelCustomOptions = useLabelCustomOptions;\n      pointOptions.styles.usePointCustomOptions = usePointCustomOptions;\n      point.updateOptions(pointOptions);\n    }\n  },\n  show: function show() {\n    if (!this._visible) {\n      this._changeVisibility(true);\n    }\n  },\n  hide: function hide() {\n    if (this._visible) {\n      this._changeVisibility(false);\n    }\n  },\n  _changeVisibility: function _changeVisibility(visibility) {\n    var that = this;\n    that._visible = that._options.visible = visibility;\n\n    that._updatePointsVisibility();\n\n    that.hidePointTooltip();\n\n    that._options.visibilityChanged(that);\n  },\n  _updatePointsVisibility: _noop,\n  hideLabels: function hideLabels() {\n    _each(this._points, function (_, point) {\n      point._label.draw(false);\n    });\n  },\n  _parsePointOptions: function _parsePointOptions(pointOptions, labelOptions, data, point) {\n    var that = this;\n    var options = that._options;\n\n    var styles = that._createPointStyles(pointOptions, data, point);\n\n    var parsedOptions = _extend({}, pointOptions, {\n      type: options.type,\n      rotated: options.rotated,\n      styles: styles,\n      widgetType: options.widgetType,\n      visibilityChanged: options.visibilityChanged\n    });\n\n    parsedOptions.label = getLabelOptions(labelOptions, styles.normal.fill);\n\n    if (that.areErrorBarsVisible()) {\n      parsedOptions.errorBars = options.valueErrorBar;\n    }\n\n    return parsedOptions;\n  },\n  _preparePointOptions: function _preparePointOptions(customOptions) {\n    var pointOptions = this._getOptionsForPoint();\n\n    return customOptions ? mergePointOptions(pointOptions, customOptions) : pointOptions;\n  },\n  _getMarkerGroupOptions: function _getMarkerGroupOptions() {\n    return _extend(false, {}, this._getOptionsForPoint(), {\n      hoverStyle: {},\n      selectionStyle: {}\n    });\n  },\n  _getAggregationMethod: function _getAggregationMethod(isDiscrete, aggregateByCategory) {\n    var options = this.getOptions().aggregation;\n\n    var method = _normalizeEnum(options.method);\n\n    var customAggregator = \"custom\" === method && options.calculate;\n    var aggregator;\n\n    if (isDiscrete && !aggregateByCategory) {\n      aggregator = function aggregator(_ref) {\n        var data = _ref.data;\n        return data[0];\n      };\n    } else {\n      aggregator = this._aggregators[method] || this._aggregators[this._defaultAggregator];\n    }\n\n    return customAggregator || aggregator;\n  },\n  _resample: function _resample(_ref2, data) {\n    var interval = _ref2.interval,\n        ticks = _ref2.ticks,\n        aggregateByCategory = _ref2.aggregateByCategory;\n    var that = this;\n    var isDiscrete = that.argumentAxisType === DISCRETE || that.valueAxisType === DISCRETE;\n    var dataIndex = 0;\n\n    var dataSelector = this._getPointDataSelector();\n\n    var options = that.getOptions();\n\n    var addAggregatedData = function addAggregatedData(target, data, aggregationInfo) {\n      if (!data) {\n        return;\n      }\n\n      var processData = function processData(d) {\n        var pointData = d && dataSelector(d, options);\n\n        if (pointData && that._checkData(pointData)) {\n          pointData.aggregationInfo = aggregationInfo;\n          target.push(pointData);\n        }\n      };\n\n      if (data.length) {\n        data.forEach(processData);\n      } else {\n        processData(data);\n      }\n    };\n\n    var aggregationMethod = this._getAggregationMethod(isDiscrete, aggregateByCategory);\n\n    if (isDiscrete) {\n      if (aggregateByCategory) {\n        var categories = this.getArgumentAxis().getTranslator().getBusinessRange().categories;\n        var groups = categories.reduce(function (g, category) {\n          g[category.valueOf()] = [];\n          return g;\n        }, {});\n        data.forEach(function (dataItem) {\n          groups[dataItem.argument].push(dataItem);\n        });\n        return categories.reduce(function (result, c) {\n          addAggregatedData(result, aggregationMethod({\n            aggregationInterval: null,\n            intervalStart: c,\n            intervalEnd: c,\n            data: groups[c].map(getData)\n          }, that));\n          return result;\n        }, []);\n      } else {\n        return data.reduce(function (result, dataItem, index, data) {\n          result[1].push(dataItem);\n\n          if (index === data.length - 1 || (index + 1) % interval === 0) {\n            var dataInInterval = result[1];\n            var aggregationInfo = {\n              aggregationInterval: interval,\n              data: dataInInterval.map(getData)\n            };\n            addAggregatedData(result[0], aggregationMethod(aggregationInfo, that));\n            result[1] = [];\n          }\n\n          return result;\n        }, [[], []])[0];\n      }\n    }\n\n    var aggregatedData = [];\n\n    for (var i = 1; i < ticks.length; i++) {\n      var intervalEnd = ticks[i];\n      var intervalStart = ticks[i - 1];\n      var dataInInterval = [];\n\n      while (data[dataIndex] && data[dataIndex].argument < intervalEnd) {\n        if (data[dataIndex].argument >= intervalStart) {\n          dataInInterval.push(data[dataIndex]);\n        }\n\n        dataIndex++;\n      }\n\n      var aggregationInfo = {\n        intervalStart: intervalStart,\n        intervalEnd: intervalEnd,\n        aggregationInterval: interval,\n        data: dataInInterval.map(getData)\n      };\n      addAggregatedData(aggregatedData, aggregationMethod(aggregationInfo, that), aggregationInfo);\n    }\n\n    that._endUpdateData();\n\n    return aggregatedData;\n  },\n  canRenderCompleteHandle: function canRenderCompleteHandle() {\n    var result = this._canRenderCompleteHandle;\n    delete this._canRenderCompleteHandle;\n    return !!result;\n  },\n  isHovered: function isHovered() {\n    return !!(1 & this.fullState);\n  },\n  isSelected: function isSelected() {\n    return !!(2 & this.fullState);\n  },\n  isVisible: function isVisible() {\n    return this._visible;\n  },\n  getAllPoints: function getAllPoints() {\n    this._createAllAggregatedPoints();\n\n    return (this._points || []).slice();\n  },\n  getPointByPos: function getPointByPos(pos) {\n    this._createAllAggregatedPoints();\n\n    return (this._points || [])[pos];\n  },\n  getVisiblePoints: function getVisiblePoints() {\n    return (this._drawnPoints || []).slice();\n  },\n  selectPoint: function selectPoint(point) {\n    if (!point.isSelected()) {\n      setPointSelectedState(point, this._legendCallback);\n\n      this._eventPipe({\n        action: POINT_SELECT,\n        target: point\n      });\n\n      this._eventTrigger(POINT_SELECTION_CHANGED, {\n        target: point\n      });\n    }\n  },\n  deselectPoint: function deselectPoint(point) {\n    if (point.isSelected()) {\n      releasePointSelectedState(point, this._legendCallback);\n\n      this._eventPipe({\n        action: POINT_DESELECT,\n        target: point\n      });\n\n      this._eventTrigger(POINT_SELECTION_CHANGED, {\n        target: point\n      });\n    }\n  },\n  hover: function hover(mode) {\n    var that = this;\n    var eventTrigger = that._eventTrigger;\n\n    if (that.isHovered()) {\n      return;\n    }\n\n    that.lastHoverMode = _normalizeEnum(mode || that._options.hoverMode);\n    that.fullState = that.fullState | HOVER_STATE;\n\n    that._changeStyle(that.lastHoverMode, void 0, that.isSelected() && that.lastSelectionMode !== NONE_MODE);\n\n    eventTrigger(SERIES_HOVER_CHANGED, {\n      target: that\n    });\n  },\n  clearHover: function clearHover() {\n    var that = this;\n    var eventTrigger = that._eventTrigger;\n\n    if (!that.isHovered()) {\n      return;\n    }\n\n    that._resetNearestPoint();\n\n    that.fullState = that.fullState & ~HOVER_STATE;\n\n    that._changeStyle(that.lastHoverMode, HOVER, that.isSelected() && that.lastSelectionMode !== NONE_MODE);\n\n    eventTrigger(SERIES_HOVER_CHANGED, {\n      target: that\n    });\n  },\n  hoverPoint: function hoverPoint(point) {\n    var that = this;\n\n    if (!point.isHovered()) {\n      point.clearHover();\n      setPointHoverState(point, that._legendCallback);\n      that._canChangeView() && that._applyStyle(that._styles.hover);\n\n      that._eventPipe({\n        action: POINT_HOVER,\n        target: point\n      });\n\n      that._eventTrigger(POINT_HOVER_CHANGED, {\n        target: point\n      });\n    }\n  },\n  clearPointHover: function clearPointHover() {\n    var that = this;\n    that.getPoints().some(function (currentPoint) {\n      if (currentPoint.isHovered()) {\n        releasePointHoverState(currentPoint, that._legendCallback);\n        that._canChangeView() && that._applyStyle(that._styles.normal);\n\n        that._eventPipe({\n          action: CLEAR_POINT_HOVER,\n          target: currentPoint\n        });\n\n        that._eventTrigger(POINT_HOVER_CHANGED, {\n          target: currentPoint\n        });\n\n        return true;\n      }\n\n      return false;\n    });\n  },\n  showPointTooltip: function showPointTooltip(point) {\n    triggerEvent(this._extGroups.seriesGroup, \"showpointtooltip\", point);\n  },\n  hidePointTooltip: function hidePointTooltip(point) {\n    triggerEvent(this._extGroups.seriesGroup, \"hidepointtooltip\", point);\n  },\n  select: function select() {\n    var that = this;\n\n    if (!that.isSelected()) {\n      that._setSelectedState(that._options.selectionMode);\n\n      that._eventPipe({\n        action: SERIES_SELECT,\n        target: that\n      });\n\n      that._group.toForeground();\n\n      that._eventTrigger(SERIES_SELECTION_CHANGED, {\n        target: that\n      });\n    }\n  },\n  clearSelection: function clearSelection() {\n    var that = this;\n\n    if (that.isSelected()) {\n      that._releaseSelectedState();\n\n      that._eventTrigger(SERIES_SELECTION_CHANGED, {\n        target: that\n      });\n    }\n  },\n  getPointsByArg: function getPointsByArg(arg, skipPointsCreation) {\n    var that = this;\n    var argValue = arg.valueOf();\n    var points = that.pointsByArgument[argValue];\n\n    if (!points && !skipPointsCreation && that._createAllAggregatedPoints()) {\n      points = that.pointsByArgument[argValue];\n    }\n\n    return points || [];\n  },\n  _createAllAggregatedPoints: function _createAllAggregatedPoints() {\n    if (this.useAggregation() && !this._useAllAggregatedPoints) {\n      this.createPoints(true);\n      return true;\n    }\n\n    return false;\n  },\n  getPointsByKeys: function getPointsByKeys(arg) {\n    return this.getPointsByArg(arg);\n  },\n  notify: function notify(data) {\n    var that = this;\n    var action = data.action;\n    var seriesModes = that._seriesModes;\n    var target = data.target;\n    var targetOptions = target.getOptions();\n\n    var pointHoverMode = _normalizeEnum(targetOptions.hoverMode);\n\n    var selectionModeOfPoint = _normalizeEnum(targetOptions.selectionMode);\n\n    if (action === POINT_HOVER) {\n      that._hoverPointHandler(target, pointHoverMode, data.notifyLegend);\n    } else {\n      if (action === CLEAR_POINT_HOVER) {\n        that._clearPointHoverHandler(target, pointHoverMode, data.notifyLegend);\n      } else {\n        if (action === SERIES_SELECT) {\n          target !== that && \"single\" === seriesModes.seriesSelectionMode && that.clearSelection();\n        } else {\n          if (action === POINT_SELECT) {\n            if (\"single\" === seriesModes.pointSelectionMode) {\n              that.getPoints().some(function (currentPoint) {\n                if (currentPoint !== target && currentPoint.isSelected()) {\n                  that.deselectPoint(currentPoint);\n                  return true;\n                }\n\n                return false;\n              });\n            }\n\n            that._selectPointHandler(target, selectionModeOfPoint);\n          } else {\n            if (action === POINT_DESELECT) {\n              that._deselectPointHandler(target, selectionModeOfPoint);\n            }\n          }\n        }\n      }\n    }\n  },\n  _selectPointHandler: function _selectPointHandler(target, mode) {\n    var that = this;\n\n    if (mode === ALL_SERIES_POINTS) {\n      target.series === that && that._setPointsView(SELECTION, target);\n    } else {\n      if (mode === ALL_ARGUMENT_POINTS) {\n        that.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n          currentPoint !== target && currentPoint.setView(SELECTION);\n        });\n      }\n    }\n  },\n  _deselectPointHandler: function _deselectPointHandler(target, mode) {\n    if (mode === ALL_SERIES_POINTS) {\n      target.series === this && this._resetPointsView(SELECTION, target);\n    } else {\n      if (mode === ALL_ARGUMENT_POINTS) {\n        this.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n          currentPoint !== target && currentPoint.resetView(SELECTION);\n        });\n      }\n    }\n  },\n  _hoverPointHandler: function _hoverPointHandler(target, mode, notifyLegend) {\n    var that = this;\n\n    if (target.series !== that && mode === ALL_ARGUMENT_POINTS) {\n      that.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n        currentPoint.setView(HOVER);\n      });\n      notifyLegend && that._legendCallback(target);\n    } else {\n      if (mode === ALL_SERIES_POINTS && target.series === that) {\n        that._setPointsView(HOVER, target);\n      }\n    }\n  },\n  _clearPointHoverHandler: function _clearPointHoverHandler(target, mode, notifyLegend) {\n    var that = this;\n\n    if (mode === ALL_ARGUMENT_POINTS) {\n      target.series !== that && that.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n        currentPoint.resetView(HOVER);\n      });\n      notifyLegend && that._legendCallback(target);\n    } else {\n      if (mode === ALL_SERIES_POINTS && target.series === that) {\n        that._resetPointsView(HOVER, target);\n      }\n    }\n  },\n  _deletePoints: function _deletePoints() {\n    var that = this;\n\n    that._disposePoints(that._points);\n\n    that._points = that._drawnPoints = null;\n  },\n  _deleteTrackers: function _deleteTrackers() {\n    var that = this;\n\n    _each(that._trackers || [], function (_, tracker) {\n      tracker.remove();\n    });\n\n    that._trackersGroup && that._trackersGroup.dispose();\n    that._trackers = that._trackersGroup = null;\n  },\n  dispose: function dispose() {\n    var that = this;\n\n    that._deletePoints();\n\n    that._group.dispose();\n\n    that._labelsGroup && that._labelsGroup.dispose();\n    that._errorBarGroup && that._errorBarGroup.dispose();\n\n    that._deleteTrackers();\n\n    that._group = that._extGroups = that._markersGroup = that._elementsGroup = that._bordersGroup = that._labelsGroup = that._errorBarGroup = that._graphics = that._rangeData = that._renderer = that._styles = that._options = that._pointOptions = that._drawnPoints = that.pointsByArgument = that._segments = that._prevSeries = null;\n  },\n  correctPosition: _noop,\n  drawTrackers: _noop,\n  getNeighborPoint: _noop,\n  areErrorBarsVisible: _noop,\n  getMarginOptions: function getMarginOptions() {\n    return this._patchMarginOptions({\n      percentStick: this.isFullStackedSeries()\n    });\n  },\n  getColor: function getColor() {\n    return this.getLegendStyles().normal.fill;\n  },\n  getOpacity: function getOpacity() {\n    return this._options.opacity;\n  },\n  getStackName: function getStackName() {\n    return this._stackName;\n  },\n  getBarOverlapGroup: function getBarOverlapGroup() {\n    return this._options.barOverlapGroup;\n  },\n  getPointByCoord: function getPointByCoord(x, y) {\n    var point = this.getNeighborPoint(x, y);\n    return point && point.coordsIn(x, y) ? point : null;\n  },\n  getValueAxis: function getValueAxis() {\n    return this._valueAxis;\n  },\n  getArgumentAxis: function getArgumentAxis() {\n    return this._argumentAxis;\n  },\n  getMarkersGroup: function getMarkersGroup() {\n    return this._markersGroup;\n  },\n  getRenderer: function getRenderer() {\n    return this._renderer;\n  }\n};","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/series/base_series.js"],"names":["seriesNS","typeUtils","require","_extend","extend","_each","each","pointModule","_isDefined","isDefined","vizUtils","_isEmptyObject","isEmptyObject","_normalizeEnum","normalizeEnum","_noop","noop","states","rangeCalculator","scatterSeries","lineSeries","areaSeries","barSeries","rangeSeries","bubbleSeries","pieSeries","financialSeries","stackedSeries","DISCRETE","SELECTED_STATE","selectedMark","HOVER_STATE","hoverMark","HOVER","hover","NORMAL","normal","SELECTION","selection","APPLY_SELECTED","applySelected","APPLY_HOVER","applyHover","RESET_ITEM","resetItem","NONE_MODE","INCLUDE_POINTS","NEAREST_POINT","SERIES_SELECTION_CHANGED","POINT_SELECTION_CHANGED","SERIES_HOVER_CHANGED","POINT_HOVER_CHANGED","ALL_SERIES_POINTS","ALL_ARGUMENT_POINTS","POINT_HOVER","CLEAR_POINT_HOVER","SERIES_SELECT","POINT_SELECT","POINT_DESELECT","getEmptyBusinessRange","arg","val","triggerEvent","element","event","point","trigger","mixins","chart","pie","polar","scatter","includePointsMode","mode","getLabelOptions","labelOptions","defaultColor","opt","labelFont","font","labelBorder","border","labelConnector","connector","backgroundAttr","fill","backgroundColor","visible","width","stroke","color","dashStyle","connectorAttr","position","alignment","format","argumentFormat","customizeText","isFunction","attributes","size","showForZeroValues","horizontalOffset","verticalOffset","radialOffset","background","rotationAngle","wordWrap","textOverflow","cssClass","setPointHoverState","legendCallback","fullState","applyView","releasePointHoverState","releaseHoverState","setPointSelectedState","releasePointSelectedState","mergePointOptionsCore","base","extra","options","mergePointOptions","image","selectionStyle","hoverStyle","Series","settings","that","_extGroups","_renderer","renderer","_group","g","attr","_eventTrigger","eventTrigger","_eventPipe","eventPipe","_incidentOccurred","incidentOccurred","_legendCallback","updateOptions","getData","pointData","data","exports","getValueChecker","axisType","axis","getOptions","allowNegatives","value","prototype","constructor","_createLegendState","getLegendStyles","_styles","legendStyles","_createStyles","mainSeriesColor","_parseStyle","setClippingParams","baseId","wideId","forceClipping","clipLabels","arguments","length","_paneClipRectID","_widePaneClipRectID","_forceClipping","_clipLabels","applyClip","resetClip","getTagField","_options","tagField","getValueFields","getSizeField","getArgumentField","getPoints","_points","getPointsInViewPort","_createPoint","index","oldPoint","pointsByArgument","_getCreatingPointOptions","argument","valueOf","pointByArgument","update","Point","isSelected","lastSelectionMode","setView","push","hasValue","customizePoint","getRangeData","_visible","_getRangeData","getArgumentRange","getViewport","_deleteGroup","groupName","group","dispose","newOptions","widgetType","oldType","type","newType","toString","_checkType","_checkPolarBarType","isUpdated","_firstDrawing","_resetType","_setType","_defineDrawingState","_pointOptions","name","pane","tag","_seriesModes","commonSeriesModes","_valueAxis","valueAxis","_argumentAxis","argumentAxis","_stackName","_updateOptions","stack","barOverlapGroup","_createGroups","_processEmptyValue","ignoreEmptyPoints","x","_disposePoints","points","_","p","updateDataType","argumentType","valueType","argumentAxisType","valueAxisType","showZero","_argumentChecker","getArgumentAxis","_valueChecker","getValueAxis","_getOldPoint","oldPointsByArgument","splice","updateData","nameField","_canRenderCompleteHandle","dataSelector","_getPointDataSelector","itemsWithoutArgument","_data","reduce","dataItem","pointDataItem","nameFieldValue","_endUpdateData","_getData","useAggregation","_resample","getAggregationInfo","_useAllAggregatedPoints","aggregation","enabled","autoHidePointMarkersEnabled","usePointsToDefineAutoHiding","createPoints","useAllAggregatedPoints","_normalizeUsingAllAggregatedPoints","_createPoints","_calculateErrorBars","skippedFields","_checkData","pointIndex","field","Object","keys","forEach","key","_removeOldSegments","startIndex","_segments","_graphics","elem","_removeElement","_trackers","remove","_drawElements","animationEnabled","firstDrawing","translateAllPoints","closeSegment","closed","groupForPoint","markers","_markersGroup","errorBars","_errorBarGroup","segments","_drawnPoints","segment","translated","translate","setDefaultCoords","hasCoords","_drawPoint","groups","hasAnimation","setInvisibility","_drawSegment","_animate","draw","hideLayoutLabels","_appendInGroup","_applyVisibleArea","_setGroupsSettings","hideLabels","_changeStyle","isHovered","lastHoverMode","_applyStyle","_setLabelGroupSettings","_applyElementsClipRect","_applyClearingSettings","opacity","_labelsGroup","append","labelsGroup","spiderWidget","indexOf","seriesType","methodName","methods","_setPointsView","view","target","_resetPointsView","resetView","_resetNearestPoint","_nearestPoint","series","_setSelectedState","selectionMode","_releaseSelectedState","isFullStackedSeries","isStackedSeries","isFinancialSeries","_canChangeView","hoverMode","skipPoints","state","styles","updateHover","y","currentNearestPoint","getNeighborPoint","_getMainAxisName","rotated","areLabelsVisible","maxLabelCount","getLabelVisibility","label","customizeObject","pointOptions","customLabelOptions","customOptions","customizeLabel","useLabelCustomOptions","usePointCustomOptions","call","seriesName","_parsePointOptions","_preparePointOptions","show","_changeVisibility","hide","visibility","_updatePointsVisibility","hidePointTooltip","visibilityChanged","_label","_createPointStyles","parsedOptions","areErrorBarsVisible","valueErrorBar","_getOptionsForPoint","_getMarkerGroupOptions","_getAggregationMethod","isDiscrete","aggregateByCategory","method","customAggregator","calculate","aggregator","_ref","_aggregators","_defaultAggregator","_ref2","interval","ticks","dataIndex","addAggregatedData","aggregationInfo","processData","d","aggregationMethod","categories","getTranslator","getBusinessRange","category","result","c","aggregationInterval","intervalStart","intervalEnd","map","dataInInterval","aggregatedData","i","canRenderCompleteHandle","isVisible","getAllPoints","_createAllAggregatedPoints","slice","getPointByPos","pos","getVisiblePoints","selectPoint","action","deselectPoint","clearHover","hoverPoint","clearPointHover","some","currentPoint","showPointTooltip","seriesGroup","select","toForeground","clearSelection","getPointsByArg","skipPointsCreation","argValue","getPointsByKeys","notify","seriesModes","targetOptions","pointHoverMode","selectionModeOfPoint","_hoverPointHandler","notifyLegend","_clearPointHoverHandler","seriesSelectionMode","pointSelectionMode","_selectPointHandler","_deselectPointHandler","argumentIndex","_deletePoints","_deleteTrackers","tracker","_trackersGroup","_elementsGroup","_bordersGroup","_rangeData","_prevSeries","correctPosition","drawTrackers","getMarginOptions","_patchMarginOptions","percentStick","getColor","getOpacity","getStackName","getBarOverlapGroup","getPointByCoord","coordsIn","getMarkersGroup","getRenderer"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/base_series.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar seriesNS = {};\r\nvar typeUtils = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\").extend;\r\nvar _each = require(\"../../core/utils/iterator\").each;\r\nvar pointModule = require(\"./points/base_point\");\r\nvar _isDefined = typeUtils.isDefined;\r\nvar vizUtils = require(\"../core/utils\");\r\nvar _isEmptyObject = typeUtils.isEmptyObject;\r\nvar _normalizeEnum = vizUtils.normalizeEnum;\r\nvar _noop = require(\"../../core/utils/common\").noop;\r\nvar states = require(\"../components/consts\").states;\r\nvar rangeCalculator = require(\"./helpers/range_data_calculator\");\r\nvar scatterSeries = require(\"./scatter_series\");\r\nvar lineSeries = require(\"./line_series\");\r\nvar areaSeries = require(\"./area_series\");\r\nvar barSeries = require(\"./bar_series\");\r\nvar rangeSeries = require(\"./range_series\");\r\nvar bubbleSeries = require(\"./bubble_series\");\r\nvar pieSeries = require(\"./pie_series\");\r\nvar financialSeries = require(\"./financial_series\");\r\nvar stackedSeries = require(\"./stacked_series\");\r\nvar DISCRETE = \"discrete\";\r\nvar SELECTED_STATE = states.selectedMark;\r\nvar HOVER_STATE = states.hoverMark;\r\nvar HOVER = states.hover;\r\nvar NORMAL = states.normal;\r\nvar SELECTION = states.selection;\r\nvar APPLY_SELECTED = states.applySelected;\r\nvar APPLY_HOVER = states.applyHover;\r\nvar RESET_ITEM = states.resetItem;\r\nvar NONE_MODE = \"none\";\r\nvar INCLUDE_POINTS = \"includepoints\";\r\nvar NEAREST_POINT = \"nearestpoint\";\r\nvar SERIES_SELECTION_CHANGED = \"seriesSelectionChanged\";\r\nvar POINT_SELECTION_CHANGED = \"pointSelectionChanged\";\r\nvar SERIES_HOVER_CHANGED = \"seriesHoverChanged\";\r\nvar POINT_HOVER_CHANGED = \"pointHoverChanged\";\r\nvar ALL_SERIES_POINTS = \"allseriespoints\";\r\nvar ALL_ARGUMENT_POINTS = \"allargumentpoints\";\r\nvar POINT_HOVER = \"pointHover\";\r\nvar CLEAR_POINT_HOVER = \"clearPointHover\";\r\nvar SERIES_SELECT = \"seriesSelect\";\r\nvar POINT_SELECT = \"pointSelect\";\r\nvar POINT_DESELECT = \"pointDeselect\";\r\nvar getEmptyBusinessRange = function() {\r\n    return {\r\n        arg: {},\r\n        val: {}\r\n    }\r\n};\r\n\r\nfunction triggerEvent(element, event, point) {\r\n    element && element.trigger(event, point)\r\n}\r\nseriesNS.mixins = {\r\n    chart: {},\r\n    pie: {},\r\n    polar: {}\r\n};\r\nseriesNS.mixins.chart.scatter = scatterSeries.chart;\r\nseriesNS.mixins.polar.scatter = scatterSeries.polar;\r\n_extend(seriesNS.mixins.pie, pieSeries);\r\n_extend(seriesNS.mixins.chart, lineSeries.chart, areaSeries.chart, barSeries.chart, rangeSeries.chart, bubbleSeries.chart, financialSeries, stackedSeries.chart);\r\n_extend(seriesNS.mixins.polar, lineSeries.polar, areaSeries.polar, barSeries.polar, rangeSeries.polar, bubbleSeries.polar, stackedSeries.polar);\r\n\r\nfunction includePointsMode(mode) {\r\n    mode = _normalizeEnum(mode);\r\n    return mode === INCLUDE_POINTS || mode === ALL_SERIES_POINTS\r\n}\r\n\r\nfunction getLabelOptions(labelOptions, defaultColor) {\r\n    var opt = labelOptions || {};\r\n    var labelFont = _extend({}, opt.font) || {};\r\n    var labelBorder = opt.border || {};\r\n    var labelConnector = opt.connector || {};\r\n    var backgroundAttr = {\r\n        fill: opt.backgroundColor || defaultColor,\r\n        \"stroke-width\": labelBorder.visible ? labelBorder.width || 0 : 0,\r\n        stroke: labelBorder.visible && labelBorder.width ? labelBorder.color : \"none\",\r\n        dashStyle: labelBorder.dashStyle\r\n    };\r\n    var connectorAttr = {\r\n        stroke: labelConnector.visible && labelConnector.width ? labelConnector.color || defaultColor : \"none\",\r\n        \"stroke-width\": labelConnector.visible ? labelConnector.width || 0 : 0\r\n    };\r\n    labelFont.color = \"none\" === opt.backgroundColor && \"#ffffff\" === _normalizeEnum(labelFont.color) && \"inside\" !== opt.position ? defaultColor : labelFont.color;\r\n    return {\r\n        alignment: opt.alignment,\r\n        format: opt.format,\r\n        argumentFormat: opt.argumentFormat,\r\n        customizeText: typeUtils.isFunction(opt.customizeText) ? opt.customizeText : void 0,\r\n        attributes: {\r\n            font: labelFont\r\n        },\r\n        visible: 0 !== labelFont.size ? opt.visible : false,\r\n        showForZeroValues: opt.showForZeroValues,\r\n        horizontalOffset: opt.horizontalOffset,\r\n        verticalOffset: opt.verticalOffset,\r\n        radialOffset: opt.radialOffset,\r\n        background: backgroundAttr,\r\n        position: opt.position,\r\n        connector: connectorAttr,\r\n        rotationAngle: opt.rotationAngle,\r\n        wordWrap: opt.wordWrap,\r\n        textOverflow: opt.textOverflow,\r\n        cssClass: opt.cssClass\r\n    }\r\n}\r\n\r\nfunction setPointHoverState(point, legendCallback) {\r\n    point.fullState |= HOVER_STATE;\r\n    point.applyView(legendCallback)\r\n}\r\n\r\nfunction releasePointHoverState(point, legendCallback) {\r\n    point.fullState &= ~HOVER_STATE;\r\n    point.applyView(legendCallback);\r\n    point.releaseHoverState()\r\n}\r\n\r\nfunction setPointSelectedState(point, legendCallback) {\r\n    point.fullState |= SELECTED_STATE;\r\n    point.applyView(legendCallback)\r\n}\r\n\r\nfunction releasePointSelectedState(point, legendCallback) {\r\n    point.fullState &= ~SELECTED_STATE;\r\n    point.applyView(legendCallback)\r\n}\r\n\r\nfunction mergePointOptionsCore(base, extra) {\r\n    var options = _extend({}, base, extra);\r\n    options.border = _extend({}, base && base.border, extra && extra.border);\r\n    return options\r\n}\r\n\r\nfunction mergePointOptions(base, extra) {\r\n    var options = mergePointOptionsCore(base, extra);\r\n    options.image = _extend(true, {}, base.image, extra.image);\r\n    options.selectionStyle = mergePointOptionsCore(base.selectionStyle, extra.selectionStyle);\r\n    options.hoverStyle = mergePointOptionsCore(base.hoverStyle, extra.hoverStyle);\r\n    return options\r\n}\r\n\r\nfunction Series(settings, options) {\r\n    var that = this;\r\n    that.fullState = 0;\r\n    that._extGroups = settings;\r\n    that._renderer = settings.renderer;\r\n    that._group = settings.renderer.g().attr({\r\n        \"class\": \"dxc-series\"\r\n    });\r\n    that._eventTrigger = settings.eventTrigger;\r\n    that._eventPipe = settings.eventPipe;\r\n    that._incidentOccurred = settings.incidentOccurred;\r\n    that._legendCallback = _noop;\r\n    that.updateOptions(options, settings)\r\n}\r\n\r\nfunction getData(pointData) {\r\n    return pointData.data\r\n}\r\nexports.Series = Series;\r\nexports.mixins = seriesNS.mixins;\r\n\r\nfunction getValueChecker(axisType, axis) {\r\n    if (!axis || \"logarithmic\" !== axisType || false !== axis.getOptions().allowNegatives) {\r\n        return function() {\r\n            return true\r\n        }\r\n    } else {\r\n        return function(value) {\r\n            return value > 0\r\n        }\r\n    }\r\n}\r\nSeries.prototype = {\r\n    constructor: Series,\r\n    _createLegendState: _noop,\r\n    getLegendStyles: function() {\r\n        return this._styles.legendStyles\r\n    },\r\n    _createStyles: function(options) {\r\n        var that = this;\r\n        var mainSeriesColor = options.mainSeriesColor;\r\n        that._styles = {\r\n            normal: that._parseStyle(options, mainSeriesColor, mainSeriesColor),\r\n            hover: that._parseStyle(options.hoverStyle || {}, mainSeriesColor, mainSeriesColor),\r\n            selection: that._parseStyle(options.selectionStyle || {}, mainSeriesColor, mainSeriesColor),\r\n            legendStyles: {\r\n                normal: that._createLegendState(options, mainSeriesColor),\r\n                hover: that._createLegendState(options.hoverStyle || {}, mainSeriesColor),\r\n                selection: that._createLegendState(options.selectionStyle || {}, mainSeriesColor)\r\n            }\r\n        }\r\n    },\r\n    setClippingParams: function(baseId, wideId, forceClipping) {\r\n        var clipLabels = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;\r\n        this._paneClipRectID = baseId;\r\n        this._widePaneClipRectID = wideId;\r\n        this._forceClipping = forceClipping;\r\n        this._clipLabels = clipLabels\r\n    },\r\n    applyClip: function() {\r\n        this._group.attr({\r\n            \"clip-path\": this._paneClipRectID\r\n        })\r\n    },\r\n    resetClip: function() {\r\n        this._group.attr({\r\n            \"clip-path\": null\r\n        })\r\n    },\r\n    getTagField: function() {\r\n        return this._options.tagField || \"tag\"\r\n    },\r\n    getValueFields: _noop,\r\n    getSizeField: _noop,\r\n    getArgumentField: _noop,\r\n    getPoints: function() {\r\n        return this._points\r\n    },\r\n    getPointsInViewPort: function() {\r\n        return rangeCalculator.getPointsInViewPort(this)\r\n    },\r\n    _createPoint: function(data, index, oldPoint) {\r\n        data.index = index;\r\n        var that = this;\r\n        var pointsByArgument = that.pointsByArgument;\r\n        var options = that._getCreatingPointOptions(data);\r\n        var arg = data.argument.valueOf();\r\n        var point = oldPoint;\r\n        var pointByArgument;\r\n        if (point) {\r\n            point.update(data, options)\r\n        } else {\r\n            point = new pointModule.Point(that, data, options);\r\n            if (that.isSelected() && includePointsMode(that.lastSelectionMode)) {\r\n                point.setView(SELECTION)\r\n            }\r\n        }\r\n        pointByArgument = pointsByArgument[arg];\r\n        if (pointByArgument) {\r\n            pointByArgument.push(point)\r\n        } else {\r\n            pointsByArgument[arg] = [point]\r\n        }\r\n        if (point.hasValue()) {\r\n            that.customizePoint(point, data)\r\n        }\r\n        return point\r\n    },\r\n    getRangeData: function() {\r\n        return this._visible ? this._getRangeData() : getEmptyBusinessRange()\r\n    },\r\n    getArgumentRange: function() {\r\n        return this._visible ? rangeCalculator.getArgumentRange(this) : getEmptyBusinessRange()\r\n    },\r\n    getViewport: function() {\r\n        return rangeCalculator.getViewport(this)\r\n    },\r\n    _deleteGroup: function(groupName) {\r\n        var group = this[groupName];\r\n        if (group) {\r\n            group.dispose();\r\n            this[groupName] = null\r\n        }\r\n    },\r\n    updateOptions: function(newOptions, settings) {\r\n        var that = this;\r\n        var widgetType = newOptions.widgetType;\r\n        var oldType = that.type;\r\n        var newType = newOptions.type;\r\n        that.type = newType && _normalizeEnum(newType.toString());\r\n        if (!that._checkType(widgetType) || that._checkPolarBarType(widgetType, newOptions)) {\r\n            that.dispose();\r\n            that.isUpdated = false;\r\n            return\r\n        }\r\n        if (oldType !== that.type) {\r\n            that._firstDrawing = true;\r\n            that._resetType(oldType, widgetType);\r\n            that._setType(that.type, widgetType)\r\n        } else {\r\n            that._defineDrawingState()\r\n        }\r\n        that._options = newOptions;\r\n        that._pointOptions = null;\r\n        that.name = newOptions.name;\r\n        that.pane = newOptions.pane;\r\n        that.tag = newOptions.tag;\r\n        if (settings) {\r\n            that._seriesModes = settings.commonSeriesModes || that._seriesModes;\r\n            that._valueAxis = settings.valueAxis || that._valueAxis;\r\n            that.axis = that._valueAxis && that._valueAxis.name;\r\n            that._argumentAxis = settings.argumentAxis || that._argumentAxis\r\n        }\r\n        that._createStyles(newOptions);\r\n        that._stackName = null;\r\n        that._updateOptions(newOptions);\r\n        that._visible = newOptions.visible;\r\n        that.isUpdated = true;\r\n        that.stack = newOptions.stack;\r\n        that.barOverlapGroup = newOptions.barOverlapGroup;\r\n        that._createGroups();\r\n        that._processEmptyValue = newOptions.ignoreEmptyPoints ? function(x) {\r\n            return null === x ? void 0 : x\r\n        } : function(x) {\r\n            return x\r\n        }\r\n    },\r\n    _defineDrawingState: function() {\r\n        this._firstDrawing = true\r\n    },\r\n    _disposePoints: function(points) {\r\n        _each(points || [], function(_, p) {\r\n            p.dispose()\r\n        })\r\n    },\r\n    updateDataType: function(settings) {\r\n        var that = this;\r\n        that.argumentType = settings.argumentType;\r\n        that.valueType = settings.valueType;\r\n        that.argumentAxisType = settings.argumentAxisType;\r\n        that.valueAxisType = settings.valueAxisType;\r\n        that.showZero = settings.showZero;\r\n        this._argumentChecker = getValueChecker(settings.argumentAxisType, that.getArgumentAxis());\r\n        this._valueChecker = getValueChecker(settings.valueAxisType, that.getValueAxis());\r\n        return that\r\n    },\r\n    _argumentChecker: function() {\r\n        return true\r\n    },\r\n    _valueChecker: function() {\r\n        return true\r\n    },\r\n    getOptions: function() {\r\n        return this._options\r\n    },\r\n    _getOldPoint: function(data, oldPointsByArgument, index) {\r\n        var arg = data.argument && data.argument.valueOf();\r\n        var point = (oldPointsByArgument[arg] || [])[0];\r\n        if (point) {\r\n            oldPointsByArgument[arg].splice(0, 1)\r\n        }\r\n        return point\r\n    },\r\n    updateData: function(data) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var nameField = options.nameField;\r\n        data = data || [];\r\n        if (data.length) {\r\n            that._canRenderCompleteHandle = true\r\n        }\r\n        var dataSelector = this._getPointDataSelector();\r\n        var itemsWithoutArgument = 0;\r\n        that._data = data.reduce(function(data, dataItem, index) {\r\n            var pointDataItem = dataSelector(dataItem);\r\n            if (_isDefined(pointDataItem.argument)) {\r\n                if (!nameField || dataItem[nameField] === options.nameFieldValue) {\r\n                    pointDataItem.index = index;\r\n                    data.push(pointDataItem)\r\n                }\r\n            } else {\r\n                itemsWithoutArgument++\r\n            }\r\n            return data\r\n        }, []);\r\n        if (itemsWithoutArgument && itemsWithoutArgument === data.length) {\r\n            that._incidentOccurred(\"W2002\", [that.name, that.getArgumentField()])\r\n        }\r\n        that._endUpdateData()\r\n    },\r\n    _getData: function() {\r\n        var data = this._data || [];\r\n        if (this.useAggregation()) {\r\n            data = this._resample(this.getArgumentAxis().getAggregationInfo(this._useAllAggregatedPoints, this.argumentAxisType !== DISCRETE ? this.getArgumentRange() : {}), data)\r\n        }\r\n        return data\r\n    },\r\n    useAggregation: function() {\r\n        var aggregation = this.getOptions().aggregation;\r\n        return aggregation && aggregation.enabled\r\n    },\r\n    autoHidePointMarkersEnabled: _noop,\r\n    usePointsToDefineAutoHiding: _noop,\r\n    createPoints: function(useAllAggregatedPoints) {\r\n        this._normalizeUsingAllAggregatedPoints(useAllAggregatedPoints);\r\n        this._createPoints()\r\n    },\r\n    _normalizeUsingAllAggregatedPoints: function(useAllAggregatedPoints) {\r\n        this._useAllAggregatedPoints = this.useAggregation() && (this.argumentAxisType === DISCRETE || (this._data || []).length > 1 && !!useAllAggregatedPoints)\r\n    },\r\n    _createPoints: function() {\r\n        var that = this;\r\n        var oldPointsByArgument = that.pointsByArgument || {};\r\n        var data = that._getData();\r\n        var points;\r\n        that.pointsByArgument = {};\r\n        that._calculateErrorBars(data);\r\n        var skippedFields = {};\r\n        points = data.reduce(function(points, pointDataItem) {\r\n            if (that._checkData(pointDataItem, skippedFields)) {\r\n                var pointIndex = points.length;\r\n                var oldPoint = that._getOldPoint(pointDataItem, oldPointsByArgument, pointIndex);\r\n                var point = that._createPoint(pointDataItem, pointIndex, oldPoint);\r\n                points.push(point)\r\n            }\r\n            return points\r\n        }, []);\r\n        for (var field in skippedFields) {\r\n            if (skippedFields[field] === data.length) {\r\n                that._incidentOccurred(\"W2002\", [that.name, field])\r\n            }\r\n        }\r\n        Object.keys(oldPointsByArgument).forEach(function(key) {\r\n            return that._disposePoints(oldPointsByArgument[key])\r\n        });\r\n        that._points = points\r\n    },\r\n    _removeOldSegments: function() {\r\n        var that = this;\r\n        var startIndex = that._segments.length;\r\n        _each(that._graphics.splice(startIndex, that._graphics.length) || [], function(_, elem) {\r\n            that._removeElement(elem)\r\n        });\r\n        if (that._trackers) {\r\n            _each(that._trackers.splice(startIndex, that._trackers.length) || [], function(_, elem) {\r\n                elem.remove()\r\n            })\r\n        }\r\n    },\r\n    _drawElements: function(animationEnabled, firstDrawing, translateAllPoints) {\r\n        var that = this;\r\n        var points = that._points || [];\r\n        var closeSegment = points[0] && points[0].hasValue() && that._options.closed;\r\n        var groupForPoint = {\r\n            markers: that._markersGroup,\r\n            errorBars: that._errorBarGroup\r\n        };\r\n        var segments;\r\n        that._drawnPoints = [];\r\n        that._graphics = that._graphics || [];\r\n        that._segments = [];\r\n        segments = points.reduce(function(segments, p) {\r\n            var segment = segments[segments.length - 1];\r\n            if (!p.translated || translateAllPoints) {\r\n                p.translate();\r\n                !translateAllPoints && p.setDefaultCoords()\r\n            }\r\n            if (p.hasValue() && p.hasCoords()) {\r\n                translateAllPoints && that._drawPoint({\r\n                    point: p,\r\n                    groups: groupForPoint,\r\n                    hasAnimation: animationEnabled,\r\n                    firstDrawing: firstDrawing\r\n                });\r\n                segment.push(p)\r\n            } else {\r\n                if (!p.hasValue()) {\r\n                    segment.length && segments.push([])\r\n                } else {\r\n                    p.setInvisibility()\r\n                }\r\n            }\r\n            return segments\r\n        }, [\r\n            []\r\n        ]);\r\n        segments.forEach(function(segment, index) {\r\n            if (segment.length) {\r\n                that._drawSegment(segment, animationEnabled, index, closeSegment && index === this.length - 1)\r\n            }\r\n        }, segments);\r\n        that._firstDrawing = points.length ? false : true;\r\n        that._removeOldSegments();\r\n        animationEnabled && that._animate(firstDrawing)\r\n    },\r\n    draw: function(animationEnabled, hideLayoutLabels, legendCallback) {\r\n        var that = this;\r\n        var firstDrawing = that._firstDrawing;\r\n        that._legendCallback = legendCallback || that._legendCallback;\r\n        if (!that._visible) {\r\n            animationEnabled = false;\r\n            that._group.remove();\r\n            return\r\n        }\r\n        that._appendInGroup();\r\n        that._applyVisibleArea();\r\n        that._setGroupsSettings(animationEnabled, firstDrawing);\r\n        !firstDrawing && that._drawElements(false, firstDrawing, false);\r\n        that._drawElements(animationEnabled, firstDrawing, true);\r\n        hideLayoutLabels && that.hideLabels();\r\n        if (that.isSelected()) {\r\n            that._changeStyle(that.lastSelectionMode, void 0, true)\r\n        } else {\r\n            if (that.isHovered()) {\r\n                that._changeStyle(that.lastHoverMode, void 0, true)\r\n            } else {\r\n                that._applyStyle(that._styles.normal)\r\n            }\r\n        }\r\n    },\r\n    _setLabelGroupSettings: function(animationEnabled) {\r\n        var settings = {\r\n            \"class\": \"dxc-labels\",\r\n            \"pointer-events\": \"none\"\r\n        };\r\n        this._clipLabels && this._applyElementsClipRect(settings);\r\n        this._applyClearingSettings(settings);\r\n        animationEnabled && (settings.opacity = .001);\r\n        this._labelsGroup.attr(settings).append(this._extGroups.labelsGroup)\r\n    },\r\n    _checkType: function(widgetType) {\r\n        return !!seriesNS.mixins[widgetType][this.type]\r\n    },\r\n    _checkPolarBarType: function(widgetType, options) {\r\n        return \"polar\" === widgetType && options.spiderWidget && this.type.indexOf(\"bar\") !== -1\r\n    },\r\n    _resetType: function(seriesType, widgetType) {\r\n        var methodName;\r\n        var methods;\r\n        if (seriesType) {\r\n            methods = seriesNS.mixins[widgetType][seriesType];\r\n            for (methodName in methods) {\r\n                delete this[methodName]\r\n            }\r\n        }\r\n    },\r\n    _setType: function(seriesType, widgetType) {\r\n        var methodName;\r\n        var methods = seriesNS.mixins[widgetType][seriesType];\r\n        for (methodName in methods) {\r\n            this[methodName] = methods[methodName]\r\n        }\r\n    },\r\n    _setPointsView: function(view, target) {\r\n        this.getPoints().forEach(function(point) {\r\n            if (target !== point) {\r\n                point.setView(view)\r\n            }\r\n        })\r\n    },\r\n    _resetPointsView: function(view, target) {\r\n        this.getPoints().forEach(function(point) {\r\n            if (target !== point) {\r\n                point.resetView(view)\r\n            }\r\n        })\r\n    },\r\n    _resetNearestPoint: function() {\r\n        var that = this;\r\n        that._nearestPoint && null !== that._nearestPoint.series && that._nearestPoint.resetView(HOVER);\r\n        that._nearestPoint = null\r\n    },\r\n    _setSelectedState: function(mode) {\r\n        var that = this;\r\n        that.lastSelectionMode = _normalizeEnum(mode || that._options.selectionMode);\r\n        that.fullState = that.fullState | SELECTED_STATE;\r\n        that._resetNearestPoint();\r\n        that._changeStyle(that.lastSelectionMode);\r\n        if (that.lastSelectionMode !== NONE_MODE && that.isHovered() && includePointsMode(that.lastHoverMode)) {\r\n            that._resetPointsView(HOVER)\r\n        }\r\n    },\r\n    _releaseSelectedState: function() {\r\n        var that = this;\r\n        that.fullState = that.fullState & ~SELECTED_STATE;\r\n        that._changeStyle(that.lastSelectionMode, SELECTION);\r\n        if (that.lastSelectionMode !== NONE_MODE && that.isHovered() && includePointsMode(that.lastHoverMode)) {\r\n            that._setPointsView(HOVER)\r\n        }\r\n    },\r\n    isFullStackedSeries: function() {\r\n        return 0 === this.type.indexOf(\"fullstacked\")\r\n    },\r\n    isStackedSeries: function() {\r\n        return 0 === this.type.indexOf(\"stacked\")\r\n    },\r\n    isFinancialSeries: function() {\r\n        return \"stock\" === this.type || \"candlestick\" === this.type\r\n    },\r\n    _canChangeView: function() {\r\n        return !this.isSelected() && _normalizeEnum(this._options.hoverMode) !== NONE_MODE\r\n    },\r\n    _changeStyle: function(mode, resetView, skipPoints) {\r\n        var that = this;\r\n        var state = that.fullState;\r\n        var styles = [NORMAL, HOVER, SELECTION, SELECTION];\r\n        if (\"none\" === that.lastHoverMode) {\r\n            state &= ~HOVER_STATE\r\n        }\r\n        if (\"none\" === that.lastSelectionMode) {\r\n            state &= ~SELECTED_STATE\r\n        }\r\n        if (includePointsMode(mode) && !skipPoints) {\r\n            if (!resetView) {\r\n                that._setPointsView(styles[state])\r\n            } else {\r\n                that._resetPointsView(resetView)\r\n            }\r\n        }\r\n        that._legendCallback([RESET_ITEM, APPLY_HOVER, APPLY_SELECTED, APPLY_SELECTED][state]);\r\n        that._applyStyle(that._styles[styles[state]])\r\n    },\r\n    updateHover: function(x, y) {\r\n        var that = this;\r\n        var currentNearestPoint = that._nearestPoint;\r\n        var point = that.isHovered() && that.lastHoverMode === NEAREST_POINT && that.getNeighborPoint(x, y);\r\n        if (point !== currentNearestPoint && !(that.isSelected() && that.lastSelectionMode !== NONE_MODE)) {\r\n            that._resetNearestPoint();\r\n            if (point) {\r\n                point.setView(HOVER);\r\n                that._nearestPoint = point\r\n            }\r\n        }\r\n    },\r\n    _getMainAxisName: function() {\r\n        return this._options.rotated ? \"X\" : \"Y\"\r\n    },\r\n    areLabelsVisible: function() {\r\n        return !_isDefined(this._options.maxLabelCount) || this._points.length <= this._options.maxLabelCount\r\n    },\r\n    getLabelVisibility: function() {\r\n        return this.areLabelsVisible() && this._options.label && this._options.label.visible\r\n    },\r\n    customizePoint: function customizePoint(point, pointData) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var customizePoint = options.customizePoint;\r\n        var customizeObject;\r\n        var pointOptions;\r\n        var customLabelOptions;\r\n        var customOptions;\r\n        var customizeLabel = options.customizeLabel;\r\n        var useLabelCustomOptions;\r\n        var usePointCustomOptions;\r\n        if (customizeLabel && customizeLabel.call) {\r\n            customizeObject = _extend({\r\n                seriesName: that.name\r\n            }, pointData);\r\n            customizeObject.series = that;\r\n            customLabelOptions = customizeLabel.call(customizeObject, customizeObject);\r\n            useLabelCustomOptions = customLabelOptions && !_isEmptyObject(customLabelOptions);\r\n            customLabelOptions = useLabelCustomOptions ? _extend(true, {}, options.label, customLabelOptions) : null\r\n        }\r\n        if (customizePoint && customizePoint.call) {\r\n            customizeObject = customizeObject || _extend({\r\n                seriesName: that.name\r\n            }, pointData);\r\n            customizeObject.series = that;\r\n            customOptions = customizePoint.call(customizeObject, customizeObject);\r\n            usePointCustomOptions = customOptions && !_isEmptyObject(customOptions)\r\n        }\r\n        if (useLabelCustomOptions || usePointCustomOptions) {\r\n            pointOptions = that._parsePointOptions(that._preparePointOptions(customOptions), customLabelOptions || options.label, pointData, point);\r\n            pointOptions.styles.useLabelCustomOptions = useLabelCustomOptions;\r\n            pointOptions.styles.usePointCustomOptions = usePointCustomOptions;\r\n            point.updateOptions(pointOptions)\r\n        }\r\n    },\r\n    show: function() {\r\n        if (!this._visible) {\r\n            this._changeVisibility(true)\r\n        }\r\n    },\r\n    hide: function() {\r\n        if (this._visible) {\r\n            this._changeVisibility(false)\r\n        }\r\n    },\r\n    _changeVisibility: function(visibility) {\r\n        var that = this;\r\n        that._visible = that._options.visible = visibility;\r\n        that._updatePointsVisibility();\r\n        that.hidePointTooltip();\r\n        that._options.visibilityChanged(that)\r\n    },\r\n    _updatePointsVisibility: _noop,\r\n    hideLabels: function() {\r\n        _each(this._points, function(_, point) {\r\n            point._label.draw(false)\r\n        })\r\n    },\r\n    _parsePointOptions: function(pointOptions, labelOptions, data, point) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var styles = that._createPointStyles(pointOptions, data, point);\r\n        var parsedOptions = _extend({}, pointOptions, {\r\n            type: options.type,\r\n            rotated: options.rotated,\r\n            styles: styles,\r\n            widgetType: options.widgetType,\r\n            visibilityChanged: options.visibilityChanged\r\n        });\r\n        parsedOptions.label = getLabelOptions(labelOptions, styles.normal.fill);\r\n        if (that.areErrorBarsVisible()) {\r\n            parsedOptions.errorBars = options.valueErrorBar\r\n        }\r\n        return parsedOptions\r\n    },\r\n    _preparePointOptions: function(customOptions) {\r\n        var pointOptions = this._getOptionsForPoint();\r\n        return customOptions ? mergePointOptions(pointOptions, customOptions) : pointOptions\r\n    },\r\n    _getMarkerGroupOptions: function() {\r\n        return _extend(false, {}, this._getOptionsForPoint(), {\r\n            hoverStyle: {},\r\n            selectionStyle: {}\r\n        })\r\n    },\r\n    _getAggregationMethod: function(isDiscrete, aggregateByCategory) {\r\n        var options = this.getOptions().aggregation;\r\n        var method = _normalizeEnum(options.method);\r\n        var customAggregator = \"custom\" === method && options.calculate;\r\n        var aggregator;\r\n        if (isDiscrete && !aggregateByCategory) {\r\n            aggregator = function(_ref) {\r\n                var data = _ref.data;\r\n                return data[0]\r\n            }\r\n        } else {\r\n            aggregator = this._aggregators[method] || this._aggregators[this._defaultAggregator]\r\n        }\r\n        return customAggregator || aggregator\r\n    },\r\n    _resample: function(_ref2, data) {\r\n        var interval = _ref2.interval,\r\n            ticks = _ref2.ticks,\r\n            aggregateByCategory = _ref2.aggregateByCategory;\r\n        var that = this;\r\n        var isDiscrete = that.argumentAxisType === DISCRETE || that.valueAxisType === DISCRETE;\r\n        var dataIndex = 0;\r\n        var dataSelector = this._getPointDataSelector();\r\n        var options = that.getOptions();\r\n        var addAggregatedData = function(target, data, aggregationInfo) {\r\n            if (!data) {\r\n                return\r\n            }\r\n            var processData = function(d) {\r\n                var pointData = d && dataSelector(d, options);\r\n                if (pointData && that._checkData(pointData)) {\r\n                    pointData.aggregationInfo = aggregationInfo;\r\n                    target.push(pointData)\r\n                }\r\n            };\r\n            if (data.length) {\r\n                data.forEach(processData)\r\n            } else {\r\n                processData(data)\r\n            }\r\n        };\r\n        var aggregationMethod = this._getAggregationMethod(isDiscrete, aggregateByCategory);\r\n        if (isDiscrete) {\r\n            if (aggregateByCategory) {\r\n                var categories = this.getArgumentAxis().getTranslator().getBusinessRange().categories;\r\n                var groups = categories.reduce(function(g, category) {\r\n                    g[category.valueOf()] = [];\r\n                    return g\r\n                }, {});\r\n                data.forEach(function(dataItem) {\r\n                    groups[dataItem.argument].push(dataItem)\r\n                });\r\n                return categories.reduce(function(result, c) {\r\n                    addAggregatedData(result, aggregationMethod({\r\n                        aggregationInterval: null,\r\n                        intervalStart: c,\r\n                        intervalEnd: c,\r\n                        data: groups[c].map(getData)\r\n                    }, that));\r\n                    return result\r\n                }, [])\r\n            } else {\r\n                return data.reduce(function(result, dataItem, index, data) {\r\n                    result[1].push(dataItem);\r\n                    if (index === data.length - 1 || (index + 1) % interval === 0) {\r\n                        var dataInInterval = result[1];\r\n                        var aggregationInfo = {\r\n                            aggregationInterval: interval,\r\n                            data: dataInInterval.map(getData)\r\n                        };\r\n                        addAggregatedData(result[0], aggregationMethod(aggregationInfo, that));\r\n                        result[1] = []\r\n                    }\r\n                    return result\r\n                }, [\r\n                    [],\r\n                    []\r\n                ])[0]\r\n            }\r\n        }\r\n        var aggregatedData = [];\r\n        for (var i = 1; i < ticks.length; i++) {\r\n            var intervalEnd = ticks[i];\r\n            var intervalStart = ticks[i - 1];\r\n            var dataInInterval = [];\r\n            while (data[dataIndex] && data[dataIndex].argument < intervalEnd) {\r\n                if (data[dataIndex].argument >= intervalStart) {\r\n                    dataInInterval.push(data[dataIndex])\r\n                }\r\n                dataIndex++\r\n            }\r\n            var aggregationInfo = {\r\n                intervalStart: intervalStart,\r\n                intervalEnd: intervalEnd,\r\n                aggregationInterval: interval,\r\n                data: dataInInterval.map(getData)\r\n            };\r\n            addAggregatedData(aggregatedData, aggregationMethod(aggregationInfo, that), aggregationInfo)\r\n        }\r\n        that._endUpdateData();\r\n        return aggregatedData\r\n    },\r\n    canRenderCompleteHandle: function() {\r\n        var result = this._canRenderCompleteHandle;\r\n        delete this._canRenderCompleteHandle;\r\n        return !!result\r\n    },\r\n    isHovered: function() {\r\n        return !!(1 & this.fullState)\r\n    },\r\n    isSelected: function() {\r\n        return !!(2 & this.fullState)\r\n    },\r\n    isVisible: function() {\r\n        return this._visible\r\n    },\r\n    getAllPoints: function() {\r\n        this._createAllAggregatedPoints();\r\n        return (this._points || []).slice()\r\n    },\r\n    getPointByPos: function(pos) {\r\n        this._createAllAggregatedPoints();\r\n        return (this._points || [])[pos]\r\n    },\r\n    getVisiblePoints: function() {\r\n        return (this._drawnPoints || []).slice()\r\n    },\r\n    selectPoint: function(point) {\r\n        if (!point.isSelected()) {\r\n            setPointSelectedState(point, this._legendCallback);\r\n            this._eventPipe({\r\n                action: POINT_SELECT,\r\n                target: point\r\n            });\r\n            this._eventTrigger(POINT_SELECTION_CHANGED, {\r\n                target: point\r\n            })\r\n        }\r\n    },\r\n    deselectPoint: function(point) {\r\n        if (point.isSelected()) {\r\n            releasePointSelectedState(point, this._legendCallback);\r\n            this._eventPipe({\r\n                action: POINT_DESELECT,\r\n                target: point\r\n            });\r\n            this._eventTrigger(POINT_SELECTION_CHANGED, {\r\n                target: point\r\n            })\r\n        }\r\n    },\r\n    hover: function(mode) {\r\n        var that = this;\r\n        var eventTrigger = that._eventTrigger;\r\n        if (that.isHovered()) {\r\n            return\r\n        }\r\n        that.lastHoverMode = _normalizeEnum(mode || that._options.hoverMode);\r\n        that.fullState = that.fullState | HOVER_STATE;\r\n        that._changeStyle(that.lastHoverMode, void 0, that.isSelected() && that.lastSelectionMode !== NONE_MODE);\r\n        eventTrigger(SERIES_HOVER_CHANGED, {\r\n            target: that\r\n        })\r\n    },\r\n    clearHover: function() {\r\n        var that = this;\r\n        var eventTrigger = that._eventTrigger;\r\n        if (!that.isHovered()) {\r\n            return\r\n        }\r\n        that._resetNearestPoint();\r\n        that.fullState = that.fullState & ~HOVER_STATE;\r\n        that._changeStyle(that.lastHoverMode, HOVER, that.isSelected() && that.lastSelectionMode !== NONE_MODE);\r\n        eventTrigger(SERIES_HOVER_CHANGED, {\r\n            target: that\r\n        })\r\n    },\r\n    hoverPoint: function(point) {\r\n        var that = this;\r\n        if (!point.isHovered()) {\r\n            point.clearHover();\r\n            setPointHoverState(point, that._legendCallback);\r\n            that._canChangeView() && that._applyStyle(that._styles.hover);\r\n            that._eventPipe({\r\n                action: POINT_HOVER,\r\n                target: point\r\n            });\r\n            that._eventTrigger(POINT_HOVER_CHANGED, {\r\n                target: point\r\n            })\r\n        }\r\n    },\r\n    clearPointHover: function() {\r\n        var that = this;\r\n        that.getPoints().some(function(currentPoint) {\r\n            if (currentPoint.isHovered()) {\r\n                releasePointHoverState(currentPoint, that._legendCallback);\r\n                that._canChangeView() && that._applyStyle(that._styles.normal);\r\n                that._eventPipe({\r\n                    action: CLEAR_POINT_HOVER,\r\n                    target: currentPoint\r\n                });\r\n                that._eventTrigger(POINT_HOVER_CHANGED, {\r\n                    target: currentPoint\r\n                });\r\n                return true\r\n            }\r\n            return false\r\n        })\r\n    },\r\n    showPointTooltip: function(point) {\r\n        triggerEvent(this._extGroups.seriesGroup, \"showpointtooltip\", point)\r\n    },\r\n    hidePointTooltip: function(point) {\r\n        triggerEvent(this._extGroups.seriesGroup, \"hidepointtooltip\", point)\r\n    },\r\n    select: function() {\r\n        var that = this;\r\n        if (!that.isSelected()) {\r\n            that._setSelectedState(that._options.selectionMode);\r\n            that._eventPipe({\r\n                action: SERIES_SELECT,\r\n                target: that\r\n            });\r\n            that._group.toForeground();\r\n            that._eventTrigger(SERIES_SELECTION_CHANGED, {\r\n                target: that\r\n            })\r\n        }\r\n    },\r\n    clearSelection: function() {\r\n        var that = this;\r\n        if (that.isSelected()) {\r\n            that._releaseSelectedState();\r\n            that._eventTrigger(SERIES_SELECTION_CHANGED, {\r\n                target: that\r\n            })\r\n        }\r\n    },\r\n    getPointsByArg: function(arg, skipPointsCreation) {\r\n        var that = this;\r\n        var argValue = arg.valueOf();\r\n        var points = that.pointsByArgument[argValue];\r\n        if (!points && !skipPointsCreation && that._createAllAggregatedPoints()) {\r\n            points = that.pointsByArgument[argValue]\r\n        }\r\n        return points || []\r\n    },\r\n    _createAllAggregatedPoints: function() {\r\n        if (this.useAggregation() && !this._useAllAggregatedPoints) {\r\n            this.createPoints(true);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    getPointsByKeys: function(arg) {\r\n        return this.getPointsByArg(arg)\r\n    },\r\n    notify: function(data) {\r\n        var that = this;\r\n        var action = data.action;\r\n        var seriesModes = that._seriesModes;\r\n        var target = data.target;\r\n        var targetOptions = target.getOptions();\r\n        var pointHoverMode = _normalizeEnum(targetOptions.hoverMode);\r\n        var selectionModeOfPoint = _normalizeEnum(targetOptions.selectionMode);\r\n        if (action === POINT_HOVER) {\r\n            that._hoverPointHandler(target, pointHoverMode, data.notifyLegend)\r\n        } else {\r\n            if (action === CLEAR_POINT_HOVER) {\r\n                that._clearPointHoverHandler(target, pointHoverMode, data.notifyLegend)\r\n            } else {\r\n                if (action === SERIES_SELECT) {\r\n                    target !== that && \"single\" === seriesModes.seriesSelectionMode && that.clearSelection()\r\n                } else {\r\n                    if (action === POINT_SELECT) {\r\n                        if (\"single\" === seriesModes.pointSelectionMode) {\r\n                            that.getPoints().some(function(currentPoint) {\r\n                                if (currentPoint !== target && currentPoint.isSelected()) {\r\n                                    that.deselectPoint(currentPoint);\r\n                                    return true\r\n                                }\r\n                                return false\r\n                            })\r\n                        }\r\n                        that._selectPointHandler(target, selectionModeOfPoint)\r\n                    } else {\r\n                        if (action === POINT_DESELECT) {\r\n                            that._deselectPointHandler(target, selectionModeOfPoint)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _selectPointHandler: function(target, mode) {\r\n        var that = this;\r\n        if (mode === ALL_SERIES_POINTS) {\r\n            target.series === that && that._setPointsView(SELECTION, target)\r\n        } else {\r\n            if (mode === ALL_ARGUMENT_POINTS) {\r\n                that.getPointsByKeys(target.argument, target.argumentIndex).forEach(function(currentPoint) {\r\n                    currentPoint !== target && currentPoint.setView(SELECTION)\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _deselectPointHandler: function(target, mode) {\r\n        if (mode === ALL_SERIES_POINTS) {\r\n            target.series === this && this._resetPointsView(SELECTION, target)\r\n        } else {\r\n            if (mode === ALL_ARGUMENT_POINTS) {\r\n                this.getPointsByKeys(target.argument, target.argumentIndex).forEach(function(currentPoint) {\r\n                    currentPoint !== target && currentPoint.resetView(SELECTION)\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _hoverPointHandler: function(target, mode, notifyLegend) {\r\n        var that = this;\r\n        if (target.series !== that && mode === ALL_ARGUMENT_POINTS) {\r\n            that.getPointsByKeys(target.argument, target.argumentIndex).forEach(function(currentPoint) {\r\n                currentPoint.setView(HOVER)\r\n            });\r\n            notifyLegend && that._legendCallback(target)\r\n        } else {\r\n            if (mode === ALL_SERIES_POINTS && target.series === that) {\r\n                that._setPointsView(HOVER, target)\r\n            }\r\n        }\r\n    },\r\n    _clearPointHoverHandler: function(target, mode, notifyLegend) {\r\n        var that = this;\r\n        if (mode === ALL_ARGUMENT_POINTS) {\r\n            target.series !== that && that.getPointsByKeys(target.argument, target.argumentIndex).forEach(function(currentPoint) {\r\n                currentPoint.resetView(HOVER)\r\n            });\r\n            notifyLegend && that._legendCallback(target)\r\n        } else {\r\n            if (mode === ALL_SERIES_POINTS && target.series === that) {\r\n                that._resetPointsView(HOVER, target)\r\n            }\r\n        }\r\n    },\r\n    _deletePoints: function() {\r\n        var that = this;\r\n        that._disposePoints(that._points);\r\n        that._points = that._drawnPoints = null\r\n    },\r\n    _deleteTrackers: function() {\r\n        var that = this;\r\n        _each(that._trackers || [], function(_, tracker) {\r\n            tracker.remove()\r\n        });\r\n        that._trackersGroup && that._trackersGroup.dispose();\r\n        that._trackers = that._trackersGroup = null\r\n    },\r\n    dispose: function() {\r\n        var that = this;\r\n        that._deletePoints();\r\n        that._group.dispose();\r\n        that._labelsGroup && that._labelsGroup.dispose();\r\n        that._errorBarGroup && that._errorBarGroup.dispose();\r\n        that._deleteTrackers();\r\n        that._group = that._extGroups = that._markersGroup = that._elementsGroup = that._bordersGroup = that._labelsGroup = that._errorBarGroup = that._graphics = that._rangeData = that._renderer = that._styles = that._options = that._pointOptions = that._drawnPoints = that.pointsByArgument = that._segments = that._prevSeries = null\r\n    },\r\n    correctPosition: _noop,\r\n    drawTrackers: _noop,\r\n    getNeighborPoint: _noop,\r\n    areErrorBarsVisible: _noop,\r\n    getMarginOptions: function() {\r\n        return this._patchMarginOptions({\r\n            percentStick: this.isFullStackedSeries()\r\n        })\r\n    },\r\n    getColor: function() {\r\n        return this.getLegendStyles().normal.fill\r\n    },\r\n    getOpacity: function() {\r\n        return this._options.opacity\r\n    },\r\n    getStackName: function() {\r\n        return this._stackName\r\n    },\r\n    getBarOverlapGroup: function() {\r\n        return this._options.barOverlapGroup\r\n    },\r\n    getPointByCoord: function(x, y) {\r\n        var point = this.getNeighborPoint(x, y);\r\n        return point && point.coordsIn(x, y) ? point : null\r\n    },\r\n    getValueAxis: function() {\r\n        return this._valueAxis\r\n    },\r\n    getArgumentAxis: function() {\r\n        return this._argumentAxis\r\n    },\r\n    getMarkersGroup: function() {\r\n        return this._markersGroup\r\n    },\r\n    getRenderer: function() {\r\n        return this._renderer\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}