{"ast":null,"code":"/**\r\n * DevExtreme (animation/easing.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar isFunction = require(\"../core/utils/type\").isFunction;\n\nvar CSS_TRANSITION_EASING_REGEX = /cubic-bezier\\((\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\)/;\nvar TransitionTimingFuncMap = {\n  linear: \"cubic-bezier(0, 0, 1, 1)\",\n  swing: \"cubic-bezier(0.445, 0.05, 0.55, 0.95)\",\n  ease: \"cubic-bezier(0.25, 0.1, 0.25, 1)\",\n  \"ease-in\": \"cubic-bezier(0.42, 0, 1, 1)\",\n  \"ease-out\": \"cubic-bezier(0, 0, 0.58, 1)\",\n  \"ease-in-out\": \"cubic-bezier(0.42, 0, 0.58, 1)\"\n};\n\nvar polynomBezier = function polynomBezier(x1, y1, x2, y2) {\n  var Cx = 3 * x1;\n  var Bx = 3 * (x2 - x1) - Cx;\n  var Ax = 1 - Cx - Bx;\n  var Cy = 3 * y1;\n  var By = 3 * (y2 - y1) - Cy;\n  var Ay = 1 - Cy - By;\n\n  var bezierX = function bezierX(t) {\n    return t * (Cx + t * (Bx + t * Ax));\n  };\n\n  var bezierY = function bezierY(t) {\n    return t * (Cy + t * (By + t * Ay));\n  };\n\n  var findXFor = function findXFor(t) {\n    var x = t;\n    var i = 0;\n    var z;\n\n    while (i < 14) {\n      z = bezierX(x) - t;\n\n      if (Math.abs(z) < .001) {\n        break;\n      }\n\n      x -= z / derivativeX(x);\n      i++;\n    }\n\n    return x;\n  };\n\n  var derivativeX = function derivativeX(t) {\n    return Cx + t * (2 * Bx + 3 * t * Ax);\n  };\n\n  return function (t) {\n    return bezierY(findXFor(t));\n  };\n};\n\nvar easing = {};\n\nvar convertTransitionTimingFuncToEasing = function convertTransitionTimingFuncToEasing(cssTransitionEasing) {\n  cssTransitionEasing = TransitionTimingFuncMap[cssTransitionEasing] || cssTransitionEasing;\n  var coeffs = cssTransitionEasing.match(CSS_TRANSITION_EASING_REGEX);\n  var forceName;\n\n  if (!coeffs) {\n    forceName = \"linear\";\n    coeffs = TransitionTimingFuncMap[forceName].match(CSS_TRANSITION_EASING_REGEX);\n  }\n\n  coeffs = coeffs.slice(1, 5);\n\n  for (var i = 0; i < coeffs.length; i++) {\n    coeffs[i] = parseFloat(coeffs[i]);\n  }\n\n  var easingName = forceName || \"cubicbezier_\" + coeffs.join(\"_\").replace(/\\./g, \"p\");\n\n  if (!isFunction(easing[easingName])) {\n    easing[easingName] = function (x, t, b, c, d) {\n      return c * polynomBezier(coeffs[0], coeffs[1], coeffs[2], coeffs[3])(t / d) + b;\n    };\n  }\n\n  return easingName;\n};\n\nexports.setEasing = function (value) {\n  easing = value;\n};\n\nexports.getEasing = function (name) {\n  return easing[name];\n};\n\nexports.convertTransitionTimingFuncToEasing = convertTransitionTimingFuncToEasing;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/animation/easing.js"],"names":["isFunction","require","CSS_TRANSITION_EASING_REGEX","TransitionTimingFuncMap","linear","swing","ease","polynomBezier","x1","y1","x2","y2","Cx","Bx","Ax","Cy","By","Ay","bezierX","t","bezierY","findXFor","x","i","z","Math","abs","derivativeX","easing","convertTransitionTimingFuncToEasing","cssTransitionEasing","coeffs","match","forceName","slice","length","parseFloat","easingName","join","replace","b","c","d","exports","setEasing","value","getEasing","name"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (animation/easing.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar isFunction = require(\"../core/utils/type\").isFunction;\r\nvar CSS_TRANSITION_EASING_REGEX = /cubic-bezier\\((\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\)/;\r\nvar TransitionTimingFuncMap = {\r\n    linear: \"cubic-bezier(0, 0, 1, 1)\",\r\n    swing: \"cubic-bezier(0.445, 0.05, 0.55, 0.95)\",\r\n    ease: \"cubic-bezier(0.25, 0.1, 0.25, 1)\",\r\n    \"ease-in\": \"cubic-bezier(0.42, 0, 1, 1)\",\r\n    \"ease-out\": \"cubic-bezier(0, 0, 0.58, 1)\",\r\n    \"ease-in-out\": \"cubic-bezier(0.42, 0, 0.58, 1)\"\r\n};\r\nvar polynomBezier = function(x1, y1, x2, y2) {\r\n    var Cx = 3 * x1;\r\n    var Bx = 3 * (x2 - x1) - Cx;\r\n    var Ax = 1 - Cx - Bx;\r\n    var Cy = 3 * y1;\r\n    var By = 3 * (y2 - y1) - Cy;\r\n    var Ay = 1 - Cy - By;\r\n    var bezierX = function(t) {\r\n        return t * (Cx + t * (Bx + t * Ax))\r\n    };\r\n    var bezierY = function(t) {\r\n        return t * (Cy + t * (By + t * Ay))\r\n    };\r\n    var findXFor = function(t) {\r\n        var x = t;\r\n        var i = 0;\r\n        var z;\r\n        while (i < 14) {\r\n            z = bezierX(x) - t;\r\n            if (Math.abs(z) < .001) {\r\n                break\r\n            }\r\n            x -= z / derivativeX(x);\r\n            i++\r\n        }\r\n        return x\r\n    };\r\n    var derivativeX = function(t) {\r\n        return Cx + t * (2 * Bx + 3 * t * Ax)\r\n    };\r\n    return function(t) {\r\n        return bezierY(findXFor(t))\r\n    }\r\n};\r\nvar easing = {};\r\nvar convertTransitionTimingFuncToEasing = function(cssTransitionEasing) {\r\n    cssTransitionEasing = TransitionTimingFuncMap[cssTransitionEasing] || cssTransitionEasing;\r\n    var coeffs = cssTransitionEasing.match(CSS_TRANSITION_EASING_REGEX);\r\n    var forceName;\r\n    if (!coeffs) {\r\n        forceName = \"linear\";\r\n        coeffs = TransitionTimingFuncMap[forceName].match(CSS_TRANSITION_EASING_REGEX)\r\n    }\r\n    coeffs = coeffs.slice(1, 5);\r\n    for (var i = 0; i < coeffs.length; i++) {\r\n        coeffs[i] = parseFloat(coeffs[i])\r\n    }\r\n    var easingName = forceName || \"cubicbezier_\" + coeffs.join(\"_\").replace(/\\./g, \"p\");\r\n    if (!isFunction(easing[easingName])) {\r\n        easing[easingName] = function(x, t, b, c, d) {\r\n            return c * polynomBezier(coeffs[0], coeffs[1], coeffs[2], coeffs[3])(t / d) + b\r\n        }\r\n    }\r\n    return easingName\r\n};\r\nexports.setEasing = function(value) {\r\n    easing = value\r\n};\r\nexports.getEasing = function(name) {\r\n    return easing[name]\r\n};\r\nexports.convertTransitionTimingFuncToEasing = convertTransitionTimingFuncToEasing;\r\n"]},"metadata":{},"sourceType":"script"}