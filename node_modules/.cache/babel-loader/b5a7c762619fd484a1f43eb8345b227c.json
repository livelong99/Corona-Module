{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/dependency_injector.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nmodule.exports = function (object) {\n  var extend = require(\"./extend\").extend;\n\n  var isFunction = require(\"./type\").isFunction;\n\n  var each = require(\"./iterator\").each;\n\n  var Class = require(\"../class\");\n\n  var BaseClass = Class.inherit(object);\n  var InjectedClass = BaseClass;\n  var instance = new InjectedClass(object);\n  var initialFields = {};\n\n  var injectFields = function injectFields(injectionObject, initial) {\n    each(injectionObject, function (key) {\n      if (isFunction(instance[key])) {\n        if (initial || !object[key]) {\n          object[key] = function () {\n            return instance[key].apply(object, arguments);\n          };\n        }\n      } else {\n        if (initial) {\n          initialFields[key] = object[key];\n        }\n\n        object[key] = instance[key];\n      }\n    });\n  };\n\n  injectFields(object, true);\n\n  object.inject = function (injectionObject) {\n    InjectedClass = InjectedClass.inherit(injectionObject);\n    instance = new InjectedClass();\n    injectFields(injectionObject);\n  };\n\n  object.resetInjection = function () {\n    extend(object, initialFields);\n    InjectedClass = BaseClass;\n    instance = new BaseClass();\n  };\n\n  return object;\n};","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/core/utils/dependency_injector.js"],"names":["module","exports","object","extend","require","isFunction","each","Class","BaseClass","inherit","InjectedClass","instance","initialFields","injectFields","injectionObject","initial","key","apply","arguments","inject","resetInjection"],"mappings":"AAAA;;;;;;;;AAQA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAASC,MAAT,EAAiB;AAC9B,MAAIC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBD,MAAjC;;AACA,MAAIE,UAAU,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,UAAnC;;AACA,MAAIC,IAAI,GAAGF,OAAO,CAAC,YAAD,CAAP,CAAsBE,IAAjC;;AACA,MAAIC,KAAK,GAAGH,OAAO,CAAC,UAAD,CAAnB;;AACA,MAAII,SAAS,GAAGD,KAAK,CAACE,OAAN,CAAcP,MAAd,CAAhB;AACA,MAAIQ,aAAa,GAAGF,SAApB;AACA,MAAIG,QAAQ,GAAG,IAAID,aAAJ,CAAkBR,MAAlB,CAAf;AACA,MAAIU,aAAa,GAAG,EAApB;;AACA,MAAIC,YAAY,GAAG,SAAfA,YAAe,CAASC,eAAT,EAA0BC,OAA1B,EAAmC;AAClDT,IAAAA,IAAI,CAACQ,eAAD,EAAkB,UAASE,GAAT,EAAc;AAChC,UAAIX,UAAU,CAACM,QAAQ,CAACK,GAAD,CAAT,CAAd,EAA+B;AAC3B,YAAID,OAAO,IAAI,CAACb,MAAM,CAACc,GAAD,CAAtB,EAA6B;AACzBd,UAAAA,MAAM,CAACc,GAAD,CAAN,GAAc,YAAW;AACrB,mBAAOL,QAAQ,CAACK,GAAD,CAAR,CAAcC,KAAd,CAAoBf,MAApB,EAA4BgB,SAA5B,CAAP;AACH,WAFD;AAGH;AACJ,OAND,MAMO;AACH,YAAIH,OAAJ,EAAa;AACTH,UAAAA,aAAa,CAACI,GAAD,CAAb,GAAqBd,MAAM,CAACc,GAAD,CAA3B;AACH;;AACDd,QAAAA,MAAM,CAACc,GAAD,CAAN,GAAcL,QAAQ,CAACK,GAAD,CAAtB;AACH;AACJ,KAbG,CAAJ;AAcH,GAfD;;AAgBAH,EAAAA,YAAY,CAACX,MAAD,EAAS,IAAT,CAAZ;;AACAA,EAAAA,MAAM,CAACiB,MAAP,GAAgB,UAASL,eAAT,EAA0B;AACtCJ,IAAAA,aAAa,GAAGA,aAAa,CAACD,OAAd,CAAsBK,eAAtB,CAAhB;AACAH,IAAAA,QAAQ,GAAG,IAAID,aAAJ,EAAX;AACAG,IAAAA,YAAY,CAACC,eAAD,CAAZ;AACH,GAJD;;AAKAZ,EAAAA,MAAM,CAACkB,cAAP,GAAwB,YAAW;AAC/BjB,IAAAA,MAAM,CAACD,MAAD,EAASU,aAAT,CAAN;AACAF,IAAAA,aAAa,GAAGF,SAAhB;AACAG,IAAAA,QAAQ,GAAG,IAAIH,SAAJ,EAAX;AACH,GAJD;;AAKA,SAAON,MAAP;AACH,CArCD","sourcesContent":["/**\r\n * DevExtreme (core/utils/dependency_injector.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = function(object) {\r\n    var extend = require(\"./extend\").extend;\r\n    var isFunction = require(\"./type\").isFunction;\r\n    var each = require(\"./iterator\").each;\r\n    var Class = require(\"../class\");\r\n    var BaseClass = Class.inherit(object);\r\n    var InjectedClass = BaseClass;\r\n    var instance = new InjectedClass(object);\r\n    var initialFields = {};\r\n    var injectFields = function(injectionObject, initial) {\r\n        each(injectionObject, function(key) {\r\n            if (isFunction(instance[key])) {\r\n                if (initial || !object[key]) {\r\n                    object[key] = function() {\r\n                        return instance[key].apply(object, arguments)\r\n                    }\r\n                }\r\n            } else {\r\n                if (initial) {\r\n                    initialFields[key] = object[key]\r\n                }\r\n                object[key] = instance[key]\r\n            }\r\n        })\r\n    };\r\n    injectFields(object, true);\r\n    object.inject = function(injectionObject) {\r\n        InjectedClass = InjectedClass.inherit(injectionObject);\r\n        instance = new InjectedClass;\r\n        injectFields(injectionObject)\r\n    };\r\n    object.resetInjection = function() {\r\n        extend(object, initialFields);\r\n        InjectedClass = BaseClass;\r\n        instance = new BaseClass\r\n    };\r\n    return object\r\n};\r\n"]},"metadata":{},"sourceType":"script"}