{"ast":null,"code":"/**\r\n * DevExtreme (ui/date_box/ui.date_box.base.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar windowUtils = require(\"../../core/utils/window\");\n\nvar window = windowUtils.getWindow();\n\nvar registerComponent = require(\"../../core/component_registrator\");\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar dom = require(\"../../core/utils/dom\");\n\nvar each = require(\"../../core/utils/iterator\").each;\n\nvar compareVersions = require(\"../../core/utils/version\").compare;\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar support = require(\"../../core/utils/support\");\n\nvar devices = require(\"../../core/devices\");\n\nvar config = require(\"../../core/config\");\n\nvar dateUtils = require(\"../../core/utils/date\");\n\nvar uiDateUtils = require(\"./ui.date_utils\");\n\nvar dateSerialization = require(\"../../core/utils/date_serialization\");\n\nvar DropDownEditor = require(\"../drop_down_editor/ui.drop_down_editor\");\n\nvar dateLocalization = require(\"../../localization/date\");\n\nvar messageLocalization = require(\"../../localization/message\");\n\nvar DATEBOX_CLASS = \"dx-datebox\";\nvar DX_AUTO_WIDTH_CLASS = \"dx-auto-width\";\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\nvar DX_CLEAR_BUTTON_CLASS = \"dx-clear-button-area\";\nvar DATEBOX_WRAPPER_CLASS = \"dx-datebox-wrapper\";\nvar PICKER_TYPE = {\n  calendar: \"calendar\",\n  rollers: \"rollers\",\n  list: \"list\",\n  \"native\": \"native\"\n};\nvar TYPE = {\n  date: \"date\",\n  datetime: \"datetime\",\n  time: \"time\"\n};\nvar STRATEGY_NAME = {\n  calendar: \"Calendar\",\n  dateView: \"DateView\",\n  \"native\": \"Native\",\n  calendarWithTime: \"CalendarWithTime\",\n  list: \"List\"\n};\nvar STRATEGY_CLASSES = {\n  Calendar: require(\"./ui.date_box.strategy.calendar\"),\n  DateView: require(\"./ui.date_box.strategy.date_view\"),\n  Native: require(\"./ui.date_box.strategy.native\"),\n  CalendarWithTime: require(\"./ui.date_box.strategy.calendar_with_time\"),\n  List: require(\"./ui.date_box.strategy.list\")\n};\nvar DateBox = DropDownEditor.inherit({\n  _supportedKeys: function _supportedKeys() {\n    return extend(this.callBase(), this._strategy.supportedKeys());\n  },\n  _setDeprecatedOptions: function _setDeprecatedOptions() {\n    this.callBase();\n    extend(this._deprecatedOptions, {\n      maxZoomLevel: {\n        since: \"18.1\",\n        alias: \"calendarOptions.maxZoomLevel\"\n      },\n      minZoomLevel: {\n        since: \"18.1\",\n        alias: \"calendarOptions.minZoomLevel\"\n      }\n    });\n  },\n  _renderButtonContainers: function _renderButtonContainers() {\n    this.callBase.apply(this, arguments);\n\n    this._strategy.customizeButtons();\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      type: \"date\",\n      showAnalogClock: true,\n      value: null,\n      dateSerializationFormat: void 0,\n      min: void 0,\n      max: void 0,\n      displayFormat: null,\n      interval: 30,\n      disabledDates: null,\n      maxZoomLevel: \"month\",\n      minZoomLevel: \"century\",\n      pickerType: PICKER_TYPE.calendar,\n      invalidDateMessage: messageLocalization.format(\"dxDateBox-validation-datetime\"),\n      dateOutOfRangeMessage: messageLocalization.format(\"validation-range\"),\n      applyButtonText: messageLocalization.format(\"OK\"),\n      adaptivityEnabled: false,\n      calendarOptions: {},\n      useHiddenSubmitElement: true\n    });\n  },\n  _defaultOptionsRules: function _defaultOptionsRules() {\n    return this.callBase().concat([{\n      device: {\n        platform: \"ios\"\n      },\n      options: {\n        showPopupTitle: true\n      }\n    }, {\n      device: {\n        platform: \"android\"\n      },\n      options: {\n        buttonsLocation: \"bottom after\"\n      }\n    }, {\n      device: function device() {\n        var realDevice = devices.real();\n        var platform = realDevice.platform;\n        return \"ios\" === platform || \"android\" === platform;\n      },\n      options: {\n        pickerType: PICKER_TYPE.native\n      }\n    }, {\n      device: function device(currentDevice) {\n        var realDevice = devices.real();\n        var platform = realDevice.platform;\n        var version = realDevice.version;\n        return \"generic\" === platform && \"desktop\" !== currentDevice.deviceType || \"android\" === platform && compareVersions(version, [4, 4]) < 0;\n      },\n      options: {\n        pickerType: PICKER_TYPE.rollers\n      }\n    }, {\n      device: {\n        platform: \"generic\",\n        deviceType: \"desktop\"\n      },\n      options: {\n        buttonsLocation: \"bottom after\"\n      }\n    }]);\n  },\n  _initOptions: function _initOptions(options) {\n    this._userOptions = extend({}, options);\n    this.callBase(options);\n\n    this._updatePickerOptions();\n  },\n  _updatePickerOptions: function _updatePickerOptions() {\n    var pickerType = this.option(\"pickerType\");\n    var type = this.option(\"type\");\n\n    if (pickerType === PICKER_TYPE.list && (type === TYPE.datetime || type === TYPE.date)) {\n      pickerType = PICKER_TYPE.calendar;\n    }\n\n    if (type === TYPE.time && pickerType === PICKER_TYPE.calendar) {\n      pickerType = PICKER_TYPE.list;\n    }\n\n    this.option(\"showDropDownButton\", \"generic\" !== devices.real().platform || pickerType !== PICKER_TYPE.native);\n    this._pickerType = pickerType;\n  },\n  _init: function _init() {\n    this._initStrategy();\n\n    this.option(extend({}, this._strategy.getDefaultOptions(), this._userOptions));\n    delete this._userOptions;\n    this._skipCustomValidation = false;\n    this.callBase();\n  },\n  _toLowerCaseFirstLetter: function _toLowerCaseFirstLetter(string) {\n    return string.charAt(0).toLowerCase() + string.substr(1);\n  },\n  _initStrategy: function _initStrategy() {\n    var strategyName = this._getStrategyName(this._getFormatType());\n\n    var strategy = STRATEGY_CLASSES[strategyName];\n\n    if (!(this._strategy && this._strategy.NAME === strategyName)) {\n      this._strategy = new strategy(this);\n    }\n  },\n  _getFormatType: function _getFormatType() {\n    var currentType = this.option(\"type\");\n    var isTime = /h|m|s/g.test(currentType);\n    var isDate = /d|M|Y/g.test(currentType);\n    var type = \"\";\n\n    if (isDate) {\n      type += TYPE.date;\n    }\n\n    if (isTime) {\n      type += TYPE.time;\n    }\n\n    return type;\n  },\n  _getStrategyName: function _getStrategyName(type) {\n    var pickerType = this._pickerType;\n\n    if (pickerType === PICKER_TYPE.rollers) {\n      return STRATEGY_NAME.dateView;\n    } else {\n      if (pickerType === PICKER_TYPE.native) {\n        return STRATEGY_NAME.native;\n      }\n    }\n\n    if (type === TYPE.date) {\n      return STRATEGY_NAME.calendar;\n    }\n\n    if (type === TYPE.datetime) {\n      return STRATEGY_NAME.calendarWithTime;\n    }\n\n    return STRATEGY_NAME.list;\n  },\n  _initMarkup: function _initMarkup() {\n    this.$element().addClass(DATEBOX_CLASS);\n    this.callBase();\n\n    this._refreshFormatClass();\n\n    this._refreshPickerTypeClass();\n\n    this._strategy.renderInputMinMax(this._input());\n  },\n  _render: function _render() {\n    this.callBase();\n\n    this._formatValidationIcon();\n  },\n  _renderDimensions: function _renderDimensions() {\n    this.callBase();\n    this.$element().toggleClass(DX_AUTO_WIDTH_CLASS, !this.option(\"width\"));\n  },\n  _refreshFormatClass: function _refreshFormatClass() {\n    var $element = this.$element();\n    each(TYPE, function (_, item) {\n      $element.removeClass(DATEBOX_CLASS + \"-\" + item);\n    });\n    $element.addClass(DATEBOX_CLASS + \"-\" + this.option(\"type\"));\n  },\n  _refreshPickerTypeClass: function _refreshPickerTypeClass() {\n    var $element = this.$element();\n    each(PICKER_TYPE, function (_, item) {\n      $element.removeClass(DATEBOX_CLASS + \"-\" + item);\n    });\n    $element.addClass(DATEBOX_CLASS + \"-\" + this._pickerType);\n  },\n  _formatValidationIcon: function _formatValidationIcon() {\n    if (!windowUtils.hasWindow()) {\n      return;\n    }\n\n    var inputElement = this._input().get(0);\n\n    var isRtlEnabled = this.option(\"rtlEnabled\");\n\n    var clearButtonWidth = this._getClearButtonWidth();\n\n    var longestElementDimensions = this._getLongestElementDimensions();\n\n    var curWidth = parseFloat(window.getComputedStyle(inputElement).width) - clearButtonWidth;\n    var shouldHideValidationIcon = longestElementDimensions.width > curWidth;\n    var style = inputElement.style;\n    this.$element().toggleClass(DX_INVALID_BADGE_CLASS, !shouldHideValidationIcon);\n\n    if (shouldHideValidationIcon) {\n      if (void 0 === this._storedPadding) {\n        this._storedPadding = isRtlEnabled ? longestElementDimensions.leftPadding : longestElementDimensions.rightPadding;\n      }\n\n      isRtlEnabled ? style.paddingLeft = 0 : style.paddingRight = 0;\n    } else {\n      isRtlEnabled ? style.paddingLeft = this._storedPadding + \"px\" : style.paddingRight = this._storedPadding + \"px\";\n    }\n  },\n  _getClearButtonWidth: function _getClearButtonWidth() {\n    var clearButtonWidth = 0;\n\n    if (this._isClearButtonVisible() && \"\" === this._input().val()) {\n      var clearButtonElement = this.$element().find(\".\" + DX_CLEAR_BUTTON_CLASS).get(0);\n      clearButtonWidth = parseFloat(window.getComputedStyle(clearButtonElement).width);\n    }\n\n    return clearButtonWidth;\n  },\n  _getLongestElementDimensions: function _getLongestElementDimensions() {\n    var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n\n    var longestValue = dateLocalization.format(uiDateUtils.getLongestDate(format, dateLocalization.getMonthNames(), dateLocalization.getDayNames()), format);\n\n    var $input = this._input();\n\n    var inputElement = $input.get(0);\n    var $longestValueElement = dom.createTextElementHiddenCopy($input, longestValue);\n    var isPaddingStored = void 0 !== this._storedPadding;\n    var storedPadding = !isPaddingStored ? 0 : this._storedPadding;\n    $longestValueElement.appendTo(this.$element());\n    var elementWidth = parseFloat(window.getComputedStyle($longestValueElement.get(0)).width);\n    var rightPadding = parseFloat(window.getComputedStyle(inputElement).paddingRight);\n    var leftPadding = parseFloat(window.getComputedStyle(inputElement).paddingLeft);\n    var necessaryWidth = elementWidth + leftPadding + rightPadding + storedPadding;\n    $longestValueElement.remove();\n    return {\n      width: necessaryWidth,\n      leftPadding: leftPadding,\n      rightPadding: rightPadding\n    };\n  },\n  _attachChildKeyboardEvents: function _attachChildKeyboardEvents() {\n    this._strategy.attachKeyboardEvents(this._keyboardProcessor);\n  },\n  _renderPopup: function _renderPopup() {\n    this.callBase();\n\n    this._popup._wrapper().addClass(DATEBOX_WRAPPER_CLASS);\n\n    this._renderPopupWrapper();\n  },\n  _popupConfig: function _popupConfig() {\n    var popupConfig = this.callBase();\n    return extend(this._strategy.popupConfig(popupConfig), {\n      title: this._getPopupTitle(),\n      dragEnabled: false\n    });\n  },\n  _renderPopupWrapper: function _renderPopupWrapper() {\n    if (!this._popup) {\n      return;\n    }\n\n    var $element = this.$element();\n    var classPostfixes = extend({}, TYPE, PICKER_TYPE);\n    each(classPostfixes, function (_, item) {\n      $element.removeClass(DATEBOX_WRAPPER_CLASS + \"-\" + item);\n    }.bind(this));\n\n    this._popup._wrapper().addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this.option(\"type\")).addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this._pickerType);\n  },\n  _renderPopupContent: function _renderPopupContent() {\n    this.callBase();\n\n    this._strategy.renderPopupContent();\n  },\n  _getFirstPopupElement: function _getFirstPopupElement() {\n    return this._strategy.getFirstPopupElement() || this.callBase();\n  },\n  _getLastPopupElement: function _getLastPopupElement() {\n    return this._strategy.getLastPopupElement() || this.callBase();\n  },\n  _popupShowingHandler: function _popupShowingHandler() {\n    this.callBase();\n\n    this._strategy.popupShowingHandler();\n  },\n  _popupHiddenHandler: function _popupHiddenHandler() {\n    this.callBase();\n\n    this._strategy.popupHiddenHandler();\n  },\n  _visibilityChanged: function _visibilityChanged(visible) {\n    if (visible) {\n      this._formatValidationIcon();\n    }\n  },\n  _clearValueHandler: function _clearValueHandler(e) {\n    this.option(\"text\", \"\");\n    this.callBase(e);\n  },\n  _readOnlyPropValue: function _readOnlyPropValue() {\n    if (this._pickerType === PICKER_TYPE.rollers) {\n      return true;\n    }\n\n    var platform = devices.real().platform;\n    var isCustomValueDisabled = this._isNativeType() && (\"ios\" === platform || \"android\" === platform);\n\n    if (isCustomValueDisabled) {\n      return this.option(\"readOnly\");\n    }\n\n    return this.callBase();\n  },\n  _isClearButtonVisible: function _isClearButtonVisible() {\n    return this.callBase() && !this._isNativeType();\n  },\n  _renderValue: function _renderValue() {\n    var value = this.dateOption(\"value\");\n    this.option(\"text\", this._getDisplayedText(value));\n\n    this._strategy.renderValue();\n\n    return this.callBase();\n  },\n  _setSubmitValue: function _setSubmitValue() {\n    var value = this.dateOption(\"value\");\n    var dateSerializationFormat = this.option(\"dateSerializationFormat\");\n    var submitFormat = uiDateUtils.SUBMIT_FORMATS_MAP[this.option(\"type\")];\n    var submitValue = dateSerializationFormat ? dateSerialization.serializeDate(value, dateSerializationFormat) : uiDateUtils.toStandardDateFormat(value, submitFormat);\n\n    this._getSubmitElement().val(submitValue);\n  },\n  _getDisplayedText: function _getDisplayedText(value) {\n    var mode = this.option(\"mode\");\n    var displayedText;\n\n    if (\"text\" === mode) {\n      var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n\n      displayedText = dateLocalization.format(value, displayFormat);\n    } else {\n      var format = this._getFormatByMode(mode);\n\n      if (format) {\n        displayedText = dateLocalization.format(value, format);\n      } else {\n        displayedText = uiDateUtils.toStandardDateFormat(value, mode);\n      }\n    }\n\n    return displayedText;\n  },\n  _getFormatByMode: function _getFormatByMode(mode) {\n    return support.inputType(mode) ? null : uiDateUtils.FORMATS_MAP[mode];\n  },\n  _valueChangeEventHandler: function _valueChangeEventHandler(e) {\n    var text = this.option(\"text\");\n    var currentValue = this.dateOption(\"value\");\n\n    if (text === this._getDisplayedText(currentValue)) {\n      this._validateValue(currentValue);\n\n      return;\n    }\n\n    var parsedDate = this._getParsedDate(text);\n\n    var value = currentValue || this._getDateByDefault();\n\n    var type = this.option(\"type\");\n    var newValue = uiDateUtils.mergeDates(value, parsedDate, type);\n    var date = parsedDate && \"time\" === type ? newValue : parsedDate;\n\n    if (this._applyInternalValidation(date)) {\n      var displayedText = this._getDisplayedText(newValue);\n\n      if (value && newValue && value.getTime() === newValue.getTime() && displayedText !== text) {\n        this._renderValue();\n      } else {\n        this.dateValue(newValue, e);\n      }\n    }\n\n    this._applyCustomValidation(newValue);\n  },\n  _getDateByDefault: function _getDateByDefault() {\n    return this._strategy.useCurrentDateByDefault() && this._strategy.getDefaultDate();\n  },\n  _getParsedDate: function _getParsedDate(text) {\n    var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n\n    var parsedText = this._strategy.getParsedText(text, displayFormat);\n\n    return typeUtils.isDefined(parsedText) ? parsedText : void 0;\n  },\n  _validateValue: function _validateValue(value) {\n    var internalResult = this._applyInternalValidation(value);\n\n    var customResult = !this._skipCustomValidation ? this._applyCustomValidation(value) : true;\n    this._skipCustomValidation = false;\n    return internalResult && customResult;\n  },\n  _applyInternalValidation: function _applyInternalValidation(value) {\n    var text = this.option(\"text\");\n    var hasText = !!text && null !== value;\n    var isDate = !!value && typeUtils.isDate(value) && !isNaN(value.getTime());\n    var isDateInRange = isDate && dateUtils.dateInRange(value, this.dateOption(\"min\"), this.dateOption(\"max\"), this.option(\"type\"));\n    var isValid = !hasText && !value || isDateInRange;\n    var validationMessage = \"\";\n\n    if (!isDate) {\n      validationMessage = this.option(\"invalidDateMessage\");\n    } else {\n      if (!isDateInRange) {\n        validationMessage = this.option(\"dateOutOfRangeMessage\");\n      }\n    }\n\n    this.option({\n      isValid: isValid,\n      validationError: isValid ? null : {\n        editorSpecific: true,\n        message: validationMessage\n      }\n    });\n    return isValid;\n  },\n  _applyCustomValidation: function _applyCustomValidation(value) {\n    this.validationRequest.fire({\n      editor: this,\n      value: value\n    });\n    return this.option(\"isValid\");\n  },\n  _isValueChanged: function _isValueChanged(newValue) {\n    var oldValue = this.dateOption(\"value\");\n    var oldTime = oldValue && oldValue.getTime();\n    var newTime = newValue && newValue.getTime();\n    return oldTime !== newTime;\n  },\n  _isTextChanged: function _isTextChanged(newValue) {\n    var oldText = this.option(\"text\");\n    var newText = newValue && this._getDisplayedText(newValue) || \"\";\n    return oldText !== newText;\n  },\n  _renderProps: function _renderProps() {\n    this.callBase();\n\n    this._input().attr(\"autocomplete\", \"off\");\n  },\n  _renderOpenedState: function _renderOpenedState() {\n    if (!this._isNativeType()) {\n      this.callBase();\n    }\n\n    if (this._strategy.isAdaptivityChanged()) {\n      this._refreshStrategy();\n    }\n\n    this._strategy.renderOpenedState();\n  },\n  _getPopupTitle: function _getPopupTitle() {\n    var placeholder = this.option(\"placeholder\");\n\n    if (placeholder) {\n      return placeholder;\n    }\n\n    var type = this.option(\"type\");\n\n    if (type === TYPE.time) {\n      return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleTime\");\n    }\n\n    if (type === TYPE.date || type === TYPE.datetime) {\n      return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleDate\");\n    }\n\n    return \"\";\n  },\n  _renderPlaceholder: function _renderPlaceholder() {\n    this._popup && this._popup.option(\"title\", this._getPopupTitle());\n    this.callBase();\n  },\n  _refreshStrategy: function _refreshStrategy() {\n    this._strategy.dispose();\n\n    this._initStrategy();\n\n    this.option(this._strategy.getDefaultOptions());\n\n    this._refresh();\n  },\n  _applyButtonHandler: function _applyButtonHandler(e) {\n    var value = this._strategy.getValue();\n\n    if (this._applyInternalValidation(value)) {\n      this.dateValue(value, e.event);\n    }\n\n    this.callBase();\n  },\n  _dispose: function _dispose() {\n    this._strategy && this._strategy.dispose();\n    this.callBase();\n  },\n  _isNativeType: function _isNativeType() {\n    return this._pickerType === PICKER_TYPE.native;\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"showClearButton\":\n      case \"buttons\":\n        this.callBase.apply(this, arguments);\n\n        this._formatValidationIcon();\n\n        break;\n\n      case \"pickerType\":\n        this._updatePickerOptions({\n          pickerType: args.value\n        });\n\n        this._refreshStrategy();\n\n        this._refreshPickerTypeClass();\n\n        this._invalidate();\n\n        break;\n\n      case \"type\":\n        this._updatePickerOptions({\n          format: args.value\n        });\n\n        this._refreshStrategy();\n\n        this._refreshFormatClass();\n\n        this._renderPopupWrapper();\n\n        this._formatValidationIcon();\n\n        this._updateValue();\n\n        break;\n\n      case \"placeholder\":\n        this._renderPlaceholder();\n\n        break;\n\n      case \"min\":\n      case \"max\":\n        if (this.option(\"isValid\")) {\n          this._applyInternalValidation(this.dateOption(\"value\"));\n        } else {\n          this._validateValue(this.dateOption(\"value\"));\n        }\n\n        this._invalidate();\n\n        break;\n\n      case \"dateSerializationFormat\":\n      case \"interval\":\n      case \"disabledDates\":\n      case \"calendarOptions\":\n      case \"minZoomLevel\":\n      case \"maxZoomLevel\":\n        this._invalidate();\n\n        break;\n\n      case \"displayFormat\":\n        this.option(\"text\", this._getDisplayedText(this.dateOption(\"value\")));\n\n        this._renderInputValue();\n\n        break;\n\n      case \"formatWidthCalculator\":\n        break;\n\n      case \"closeOnValueChange\":\n        var applyValueMode = args.value ? \"instantly\" : \"useButtons\";\n        this.option(\"applyValueMode\", applyValueMode);\n        break;\n\n      case \"applyValueMode\":\n        this.option(\"closeOnValueChange\", \"instantly\" === args.value);\n        this.callBase.apply(this, arguments);\n        break;\n\n      case \"text\":\n        this._strategy.textChangedHandler(args.value);\n\n        this.callBase.apply(this, arguments);\n        break;\n\n      case \"isValid\":\n        this.callBase.apply(this, arguments);\n\n        this._formatValidationIcon();\n\n        break;\n\n      case \"showDropDownButton\":\n        this._formatValidationIcon();\n\n        this.callBase.apply(this, arguments);\n        break;\n\n      case \"readOnly\":\n        this.callBase.apply(this, arguments);\n\n        this._formatValidationIcon();\n\n        break;\n\n      case \"invalidDateMessage\":\n      case \"dateOutOfRangeMessage\":\n      case \"adaptivityEnabled\":\n      case \"showAnalogClock\":\n        break;\n\n      default:\n        this.callBase.apply(this, arguments);\n    }\n  },\n  _getSerializationFormat: function _getSerializationFormat() {\n    var value = this.option(\"value\");\n\n    if (this.option(\"dateSerializationFormat\") && config().forceIsoDateParsing) {\n      return this.option(\"dateSerializationFormat\");\n    }\n\n    if (typeUtils.isNumeric(value)) {\n      return \"number\";\n    }\n\n    if (!typeUtils.isString(value)) {\n      return;\n    }\n\n    return dateSerialization.getDateSerializationFormat(value);\n  },\n  _updateValue: function _updateValue(value) {\n    this.callBase();\n\n    this._validateValue(value || this.dateOption(\"value\"));\n  },\n  dateValue: function dateValue(value, dxEvent) {\n    var isValueChanged = this._isValueChanged(value);\n\n    if (isValueChanged && dxEvent) {\n      this._saveValueChangeEvent(dxEvent);\n    }\n\n    if (!isValueChanged && this._isTextChanged(value)) {\n      this._updateValue(value);\n    }\n\n    return this.dateOption(\"value\", value);\n  },\n  dateOption: function dateOption(optionName, value) {\n    if (1 === arguments.length) {\n      return dateSerialization.deserializeDate(this.option(optionName));\n    }\n\n    var serializationFormat = this._getSerializationFormat();\n\n    this.option(optionName, dateSerialization.serializeDate(value, serializationFormat));\n  },\n  reset: function reset() {\n    var defaultOptions = this._getDefaultOptions();\n\n    this._skipCustomValidation = defaultOptions.value === this.dateOption(\"value\");\n    this.callBase();\n\n    this._updateValue(this.dateOption(\"value\"));\n  }\n});\nregisterComponent(\"dxDateBox\", DateBox);\nmodule.exports = DateBox;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/date_box/ui.date_box.base.js"],"names":["windowUtils","require","window","getWindow","registerComponent","typeUtils","dom","each","compareVersions","compare","extend","support","devices","config","dateUtils","uiDateUtils","dateSerialization","DropDownEditor","dateLocalization","messageLocalization","DATEBOX_CLASS","DX_AUTO_WIDTH_CLASS","DX_INVALID_BADGE_CLASS","DX_CLEAR_BUTTON_CLASS","DATEBOX_WRAPPER_CLASS","PICKER_TYPE","calendar","rollers","list","TYPE","date","datetime","time","STRATEGY_NAME","dateView","calendarWithTime","STRATEGY_CLASSES","Calendar","DateView","Native","CalendarWithTime","List","DateBox","inherit","_supportedKeys","callBase","_strategy","supportedKeys","_setDeprecatedOptions","_deprecatedOptions","maxZoomLevel","since","alias","minZoomLevel","_renderButtonContainers","apply","arguments","customizeButtons","_getDefaultOptions","type","showAnalogClock","value","dateSerializationFormat","min","max","displayFormat","interval","disabledDates","pickerType","invalidDateMessage","format","dateOutOfRangeMessage","applyButtonText","adaptivityEnabled","calendarOptions","useHiddenSubmitElement","_defaultOptionsRules","concat","device","platform","options","showPopupTitle","buttonsLocation","realDevice","real","native","currentDevice","version","deviceType","_initOptions","_userOptions","_updatePickerOptions","option","_pickerType","_init","_initStrategy","getDefaultOptions","_skipCustomValidation","_toLowerCaseFirstLetter","string","charAt","toLowerCase","substr","strategyName","_getStrategyName","_getFormatType","strategy","NAME","currentType","isTime","test","isDate","_initMarkup","$element","addClass","_refreshFormatClass","_refreshPickerTypeClass","renderInputMinMax","_input","_render","_formatValidationIcon","_renderDimensions","toggleClass","_","item","removeClass","hasWindow","inputElement","get","isRtlEnabled","clearButtonWidth","_getClearButtonWidth","longestElementDimensions","_getLongestElementDimensions","curWidth","parseFloat","getComputedStyle","width","shouldHideValidationIcon","style","_storedPadding","leftPadding","rightPadding","paddingLeft","paddingRight","_isClearButtonVisible","val","clearButtonElement","find","getDisplayFormat","longestValue","getLongestDate","getMonthNames","getDayNames","$input","$longestValueElement","createTextElementHiddenCopy","isPaddingStored","storedPadding","appendTo","elementWidth","necessaryWidth","remove","_attachChildKeyboardEvents","attachKeyboardEvents","_keyboardProcessor","_renderPopup","_popup","_wrapper","_renderPopupWrapper","_popupConfig","popupConfig","title","_getPopupTitle","dragEnabled","classPostfixes","bind","_renderPopupContent","renderPopupContent","_getFirstPopupElement","getFirstPopupElement","_getLastPopupElement","getLastPopupElement","_popupShowingHandler","popupShowingHandler","_popupHiddenHandler","popupHiddenHandler","_visibilityChanged","visible","_clearValueHandler","e","_readOnlyPropValue","isCustomValueDisabled","_isNativeType","_renderValue","dateOption","_getDisplayedText","renderValue","_setSubmitValue","submitFormat","SUBMIT_FORMATS_MAP","submitValue","serializeDate","toStandardDateFormat","_getSubmitElement","mode","displayedText","_getFormatByMode","inputType","FORMATS_MAP","_valueChangeEventHandler","text","currentValue","_validateValue","parsedDate","_getParsedDate","_getDateByDefault","newValue","mergeDates","_applyInternalValidation","getTime","dateValue","_applyCustomValidation","useCurrentDateByDefault","getDefaultDate","parsedText","getParsedText","isDefined","internalResult","customResult","hasText","isNaN","isDateInRange","dateInRange","isValid","validationMessage","validationError","editorSpecific","message","validationRequest","fire","editor","_isValueChanged","oldValue","oldTime","newTime","_isTextChanged","oldText","newText","_renderProps","attr","_renderOpenedState","isAdaptivityChanged","_refreshStrategy","renderOpenedState","placeholder","_renderPlaceholder","dispose","_refresh","_applyButtonHandler","getValue","event","_dispose","_optionChanged","args","name","_invalidate","_updateValue","_renderInputValue","applyValueMode","textChangedHandler","_getSerializationFormat","forceIsoDateParsing","isNumeric","isString","getDateSerializationFormat","dxEvent","isValueChanged","_saveValueChangeEvent","optionName","length","deserializeDate","serializationFormat","reset","defaultOptions","module","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,WAAW,GAAGC,OAAO,CAAC,yBAAD,CAAzB;;AACA,IAAIC,MAAM,GAAGF,WAAW,CAACG,SAAZ,EAAb;;AACA,IAAIC,iBAAiB,GAAGH,OAAO,CAAC,kCAAD,CAA/B;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,uBAAD,CAAvB;;AACA,IAAIK,GAAG,GAAGL,OAAO,CAAC,sBAAD,CAAjB;;AACA,IAAIM,IAAI,GAAGN,OAAO,CAAC,2BAAD,CAAP,CAAqCM,IAAhD;;AACA,IAAIC,eAAe,GAAGP,OAAO,CAAC,0BAAD,CAAP,CAAoCQ,OAA1D;;AACA,IAAIC,MAAM,GAAGT,OAAO,CAAC,yBAAD,CAAP,CAAmCS,MAAhD;;AACA,IAAIC,OAAO,GAAGV,OAAO,CAAC,0BAAD,CAArB;;AACA,IAAIW,OAAO,GAAGX,OAAO,CAAC,oBAAD,CAArB;;AACA,IAAIY,MAAM,GAAGZ,OAAO,CAAC,mBAAD,CAApB;;AACA,IAAIa,SAAS,GAAGb,OAAO,CAAC,uBAAD,CAAvB;;AACA,IAAIc,WAAW,GAAGd,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAIe,iBAAiB,GAAGf,OAAO,CAAC,qCAAD,CAA/B;;AACA,IAAIgB,cAAc,GAAGhB,OAAO,CAAC,yCAAD,CAA5B;;AACA,IAAIiB,gBAAgB,GAAGjB,OAAO,CAAC,yBAAD,CAA9B;;AACA,IAAIkB,mBAAmB,GAAGlB,OAAO,CAAC,4BAAD,CAAjC;;AACA,IAAImB,aAAa,GAAG,YAApB;AACA,IAAIC,mBAAmB,GAAG,eAA1B;AACA,IAAIC,sBAAsB,GAAG,uBAA7B;AACA,IAAIC,qBAAqB,GAAG,sBAA5B;AACA,IAAIC,qBAAqB,GAAG,oBAA5B;AACA,IAAIC,WAAW,GAAG;AACdC,EAAAA,QAAQ,EAAE,UADI;AAEdC,EAAAA,OAAO,EAAE,SAFK;AAGdC,EAAAA,IAAI,EAAE,MAHQ;AAId,YAAU;AAJI,CAAlB;AAMA,IAAIC,IAAI,GAAG;AACPC,EAAAA,IAAI,EAAE,MADC;AAEPC,EAAAA,QAAQ,EAAE,UAFH;AAGPC,EAAAA,IAAI,EAAE;AAHC,CAAX;AAKA,IAAIC,aAAa,GAAG;AAChBP,EAAAA,QAAQ,EAAE,UADM;AAEhBQ,EAAAA,QAAQ,EAAE,UAFM;AAGhB,YAAU,QAHM;AAIhBC,EAAAA,gBAAgB,EAAE,kBAJF;AAKhBP,EAAAA,IAAI,EAAE;AALU,CAApB;AAOA,IAAIQ,gBAAgB,GAAG;AACnBC,EAAAA,QAAQ,EAAEpC,OAAO,CAAC,iCAAD,CADE;AAEnBqC,EAAAA,QAAQ,EAAErC,OAAO,CAAC,kCAAD,CAFE;AAGnBsC,EAAAA,MAAM,EAAEtC,OAAO,CAAC,+BAAD,CAHI;AAInBuC,EAAAA,gBAAgB,EAAEvC,OAAO,CAAC,2CAAD,CAJN;AAKnBwC,EAAAA,IAAI,EAAExC,OAAO,CAAC,6BAAD;AALM,CAAvB;AAOA,IAAIyC,OAAO,GAAGzB,cAAc,CAAC0B,OAAf,CAAuB;AACjCC,EAAAA,cAAc,EAAE,0BAAW;AACvB,WAAOlC,MAAM,CAAC,KAAKmC,QAAL,EAAD,EAAkB,KAAKC,SAAL,CAAeC,aAAf,EAAlB,CAAb;AACH,GAHgC;AAIjCC,EAAAA,qBAAqB,EAAE,iCAAW;AAC9B,SAAKH,QAAL;AACAnC,IAAAA,MAAM,CAAC,KAAKuC,kBAAN,EAA0B;AAC5BC,MAAAA,YAAY,EAAE;AACVC,QAAAA,KAAK,EAAE,MADG;AAEVC,QAAAA,KAAK,EAAE;AAFG,OADc;AAK5BC,MAAAA,YAAY,EAAE;AACVF,QAAAA,KAAK,EAAE,MADG;AAEVC,QAAAA,KAAK,EAAE;AAFG;AALc,KAA1B,CAAN;AAUH,GAhBgC;AAiBjCE,EAAAA,uBAAuB,EAAE,mCAAW;AAChC,SAAKT,QAAL,CAAcU,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;;AACA,SAAKV,SAAL,CAAeW,gBAAf;AACH,GApBgC;AAqBjCC,EAAAA,kBAAkB,EAAE,8BAAW;AAC3B,WAAOhD,MAAM,CAAC,KAAKmC,QAAL,EAAD,EAAkB;AAC3Bc,MAAAA,IAAI,EAAE,MADqB;AAE3BC,MAAAA,eAAe,EAAE,IAFU;AAG3BC,MAAAA,KAAK,EAAE,IAHoB;AAI3BC,MAAAA,uBAAuB,EAAE,KAAK,CAJH;AAK3BC,MAAAA,GAAG,EAAE,KAAK,CALiB;AAM3BC,MAAAA,GAAG,EAAE,KAAK,CANiB;AAO3BC,MAAAA,aAAa,EAAE,IAPY;AAQ3BC,MAAAA,QAAQ,EAAE,EARiB;AAS3BC,MAAAA,aAAa,EAAE,IATY;AAU3BjB,MAAAA,YAAY,EAAE,OAVa;AAW3BG,MAAAA,YAAY,EAAE,SAXa;AAY3Be,MAAAA,UAAU,EAAE3C,WAAW,CAACC,QAZG;AAa3B2C,MAAAA,kBAAkB,EAAElD,mBAAmB,CAACmD,MAApB,CAA2B,+BAA3B,CAbO;AAc3BC,MAAAA,qBAAqB,EAAEpD,mBAAmB,CAACmD,MAApB,CAA2B,kBAA3B,CAdI;AAe3BE,MAAAA,eAAe,EAAErD,mBAAmB,CAACmD,MAApB,CAA2B,IAA3B,CAfU;AAgB3BG,MAAAA,iBAAiB,EAAE,KAhBQ;AAiB3BC,MAAAA,eAAe,EAAE,EAjBU;AAkB3BC,MAAAA,sBAAsB,EAAE;AAlBG,KAAlB,CAAb;AAoBH,GA1CgC;AA2CjCC,EAAAA,oBAAoB,EAAE,gCAAW;AAC7B,WAAO,KAAK/B,QAAL,GAAgBgC,MAAhB,CAAuB,CAAC;AAC3BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADmB;AAI3BC,MAAAA,OAAO,EAAE;AACLC,QAAAA,cAAc,EAAE;AADX;AAJkB,KAAD,EAO3B;AACCH,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADT;AAICC,MAAAA,OAAO,EAAE;AACLE,QAAAA,eAAe,EAAE;AADZ;AAJV,KAP2B,EAc3B;AACCJ,MAAAA,MAAM,EAAE,kBAAW;AACf,YAAIK,UAAU,GAAGvE,OAAO,CAACwE,IAAR,EAAjB;AACA,YAAIL,QAAQ,GAAGI,UAAU,CAACJ,QAA1B;AACA,eAAO,UAAUA,QAAV,IAAsB,cAAcA,QAA3C;AACH,OALF;AAMCC,MAAAA,OAAO,EAAE;AACLZ,QAAAA,UAAU,EAAE3C,WAAW,CAAC4D;AADnB;AANV,KAd2B,EAuB3B;AACCP,MAAAA,MAAM,EAAE,gBAASQ,aAAT,EAAwB;AAC5B,YAAIH,UAAU,GAAGvE,OAAO,CAACwE,IAAR,EAAjB;AACA,YAAIL,QAAQ,GAAGI,UAAU,CAACJ,QAA1B;AACA,YAAIQ,OAAO,GAAGJ,UAAU,CAACI,OAAzB;AACA,eAAO,cAAcR,QAAd,IAA0B,cAAcO,aAAa,CAACE,UAAtD,IAAoE,cAAcT,QAAd,IAA0BvE,eAAe,CAAC+E,OAAD,EAAU,CAAC,CAAD,EAAI,CAAJ,CAAV,CAAf,GAAmC,CAAxI;AACH,OANF;AAOCP,MAAAA,OAAO,EAAE;AACLZ,QAAAA,UAAU,EAAE3C,WAAW,CAACE;AADnB;AAPV,KAvB2B,EAiC3B;AACCmD,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE,SADN;AAEJS,QAAAA,UAAU,EAAE;AAFR,OADT;AAKCR,MAAAA,OAAO,EAAE;AACLE,QAAAA,eAAe,EAAE;AADZ;AALV,KAjC2B,CAAvB,CAAP;AA0CH,GAtFgC;AAuFjCO,EAAAA,YAAY,EAAE,sBAAST,OAAT,EAAkB;AAC5B,SAAKU,YAAL,GAAoBhF,MAAM,CAAC,EAAD,EAAKsE,OAAL,CAA1B;AACA,SAAKnC,QAAL,CAAcmC,OAAd;;AACA,SAAKW,oBAAL;AACH,GA3FgC;AA4FjCA,EAAAA,oBAAoB,EAAE,gCAAW;AAC7B,QAAIvB,UAAU,GAAG,KAAKwB,MAAL,CAAY,YAAZ,CAAjB;AACA,QAAIjC,IAAI,GAAG,KAAKiC,MAAL,CAAY,MAAZ,CAAX;;AACA,QAAIxB,UAAU,KAAK3C,WAAW,CAACG,IAA3B,KAAoC+B,IAAI,KAAK9B,IAAI,CAACE,QAAd,IAA0B4B,IAAI,KAAK9B,IAAI,CAACC,IAA5E,CAAJ,EAAuF;AACnFsC,MAAAA,UAAU,GAAG3C,WAAW,CAACC,QAAzB;AACH;;AACD,QAAIiC,IAAI,KAAK9B,IAAI,CAACG,IAAd,IAAsBoC,UAAU,KAAK3C,WAAW,CAACC,QAArD,EAA+D;AAC3D0C,MAAAA,UAAU,GAAG3C,WAAW,CAACG,IAAzB;AACH;;AACD,SAAKgE,MAAL,CAAY,oBAAZ,EAAkC,cAAchF,OAAO,CAACwE,IAAR,GAAeL,QAA7B,IAAyCX,UAAU,KAAK3C,WAAW,CAAC4D,MAAtG;AACA,SAAKQ,WAAL,GAAmBzB,UAAnB;AACH,GAvGgC;AAwGjC0B,EAAAA,KAAK,EAAE,iBAAW;AACd,SAAKC,aAAL;;AACA,SAAKH,MAAL,CAAYlF,MAAM,CAAC,EAAD,EAAK,KAAKoC,SAAL,CAAekD,iBAAf,EAAL,EAAyC,KAAKN,YAA9C,CAAlB;AACA,WAAO,KAAKA,YAAZ;AACA,SAAKO,qBAAL,GAA6B,KAA7B;AACA,SAAKpD,QAAL;AACH,GA9GgC;AA+GjCqD,EAAAA,uBAAuB,EAAE,iCAASC,MAAT,EAAiB;AACtC,WAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,MAAP,CAAc,CAAd,CAAxC;AACH,GAjHgC;AAkHjCP,EAAAA,aAAa,EAAE,yBAAW;AACtB,QAAIQ,YAAY,GAAG,KAAKC,gBAAL,CAAsB,KAAKC,cAAL,EAAtB,CAAnB;;AACA,QAAIC,QAAQ,GAAGtE,gBAAgB,CAACmE,YAAD,CAA/B;;AACA,QAAI,EAAE,KAAKzD,SAAL,IAAkB,KAAKA,SAAL,CAAe6D,IAAf,KAAwBJ,YAA5C,CAAJ,EAA+D;AAC3D,WAAKzD,SAAL,GAAiB,IAAI4D,QAAJ,CAAa,IAAb,CAAjB;AACH;AACJ,GAxHgC;AAyHjCD,EAAAA,cAAc,EAAE,0BAAW;AACvB,QAAIG,WAAW,GAAG,KAAKhB,MAAL,CAAY,MAAZ,CAAlB;AACA,QAAIiB,MAAM,GAAG,SAASC,IAAT,CAAcF,WAAd,CAAb;AACA,QAAIG,MAAM,GAAG,SAASD,IAAT,CAAcF,WAAd,CAAb;AACA,QAAIjD,IAAI,GAAG,EAAX;;AACA,QAAIoD,MAAJ,EAAY;AACRpD,MAAAA,IAAI,IAAI9B,IAAI,CAACC,IAAb;AACH;;AACD,QAAI+E,MAAJ,EAAY;AACRlD,MAAAA,IAAI,IAAI9B,IAAI,CAACG,IAAb;AACH;;AACD,WAAO2B,IAAP;AACH,GArIgC;AAsIjC6C,EAAAA,gBAAgB,EAAE,0BAAS7C,IAAT,EAAe;AAC7B,QAAIS,UAAU,GAAG,KAAKyB,WAAtB;;AACA,QAAIzB,UAAU,KAAK3C,WAAW,CAACE,OAA/B,EAAwC;AACpC,aAAOM,aAAa,CAACC,QAArB;AACH,KAFD,MAEO;AACH,UAAIkC,UAAU,KAAK3C,WAAW,CAAC4D,MAA/B,EAAuC;AACnC,eAAOpD,aAAa,CAACoD,MAArB;AACH;AACJ;;AACD,QAAI1B,IAAI,KAAK9B,IAAI,CAACC,IAAlB,EAAwB;AACpB,aAAOG,aAAa,CAACP,QAArB;AACH;;AACD,QAAIiC,IAAI,KAAK9B,IAAI,CAACE,QAAlB,EAA4B;AACxB,aAAOE,aAAa,CAACE,gBAArB;AACH;;AACD,WAAOF,aAAa,CAACL,IAArB;AACH,GAtJgC;AAuJjCoF,EAAAA,WAAW,EAAE,uBAAW;AACpB,SAAKC,QAAL,GAAgBC,QAAhB,CAAyB9F,aAAzB;AACA,SAAKyB,QAAL;;AACA,SAAKsE,mBAAL;;AACA,SAAKC,uBAAL;;AACA,SAAKtE,SAAL,CAAeuE,iBAAf,CAAiC,KAAKC,MAAL,EAAjC;AACH,GA7JgC;AA8JjCC,EAAAA,OAAO,EAAE,mBAAW;AAChB,SAAK1E,QAAL;;AACA,SAAK2E,qBAAL;AACH,GAjKgC;AAkKjCC,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B,SAAK5E,QAAL;AACA,SAAKoE,QAAL,GAAgBS,WAAhB,CAA4BrG,mBAA5B,EAAiD,CAAC,KAAKuE,MAAL,CAAY,OAAZ,CAAlD;AACH,GArKgC;AAsKjCuB,EAAAA,mBAAmB,EAAE,+BAAW;AAC5B,QAAIF,QAAQ,GAAG,KAAKA,QAAL,EAAf;AACA1G,IAAAA,IAAI,CAACsB,IAAD,EAAO,UAAS8F,CAAT,EAAYC,IAAZ,EAAkB;AACzBX,MAAAA,QAAQ,CAACY,WAAT,CAAqBzG,aAAa,GAAG,GAAhB,GAAsBwG,IAA3C;AACH,KAFG,CAAJ;AAGAX,IAAAA,QAAQ,CAACC,QAAT,CAAkB9F,aAAa,GAAG,GAAhB,GAAsB,KAAKwE,MAAL,CAAY,MAAZ,CAAxC;AACH,GA5KgC;AA6KjCwB,EAAAA,uBAAuB,EAAE,mCAAW;AAChC,QAAIH,QAAQ,GAAG,KAAKA,QAAL,EAAf;AACA1G,IAAAA,IAAI,CAACkB,WAAD,EAAc,UAASkG,CAAT,EAAYC,IAAZ,EAAkB;AAChCX,MAAAA,QAAQ,CAACY,WAAT,CAAqBzG,aAAa,GAAG,GAAhB,GAAsBwG,IAA3C;AACH,KAFG,CAAJ;AAGAX,IAAAA,QAAQ,CAACC,QAAT,CAAkB9F,aAAa,GAAG,GAAhB,GAAsB,KAAKyE,WAA7C;AACH,GAnLgC;AAoLjC2B,EAAAA,qBAAqB,EAAE,iCAAW;AAC9B,QAAI,CAACxH,WAAW,CAAC8H,SAAZ,EAAL,EAA8B;AAC1B;AACH;;AACD,QAAIC,YAAY,GAAG,KAAKT,MAAL,GAAcU,GAAd,CAAkB,CAAlB,CAAnB;;AACA,QAAIC,YAAY,GAAG,KAAKrC,MAAL,CAAY,YAAZ,CAAnB;;AACA,QAAIsC,gBAAgB,GAAG,KAAKC,oBAAL,EAAvB;;AACA,QAAIC,wBAAwB,GAAG,KAAKC,4BAAL,EAA/B;;AACA,QAAIC,QAAQ,GAAGC,UAAU,CAACrI,MAAM,CAACsI,gBAAP,CAAwBT,YAAxB,EAAsCU,KAAvC,CAAV,GAA0DP,gBAAzE;AACA,QAAIQ,wBAAwB,GAAGN,wBAAwB,CAACK,KAAzB,GAAiCH,QAAhE;AACA,QAAIK,KAAK,GAAGZ,YAAY,CAACY,KAAzB;AACA,SAAK1B,QAAL,GAAgBS,WAAhB,CAA4BpG,sBAA5B,EAAoD,CAACoH,wBAArD;;AACA,QAAIA,wBAAJ,EAA8B;AAC1B,UAAI,KAAK,CAAL,KAAW,KAAKE,cAApB,EAAoC;AAChC,aAAKA,cAAL,GAAsBX,YAAY,GAAGG,wBAAwB,CAACS,WAA5B,GAA0CT,wBAAwB,CAACU,YAArG;AACH;;AACDb,MAAAA,YAAY,GAAGU,KAAK,CAACI,WAAN,GAAoB,CAAvB,GAA2BJ,KAAK,CAACK,YAAN,GAAqB,CAA5D;AACH,KALD,MAKO;AACHf,MAAAA,YAAY,GAAGU,KAAK,CAACI,WAAN,GAAoB,KAAKH,cAAL,GAAsB,IAA7C,GAAoDD,KAAK,CAACK,YAAN,GAAqB,KAAKJ,cAAL,GAAsB,IAA3G;AACH;AACJ,GAxMgC;AAyMjCT,EAAAA,oBAAoB,EAAE,gCAAW;AAC7B,QAAID,gBAAgB,GAAG,CAAvB;;AACA,QAAI,KAAKe,qBAAL,MAAgC,OAAO,KAAK3B,MAAL,GAAc4B,GAAd,EAA3C,EAAgE;AAC5D,UAAIC,kBAAkB,GAAG,KAAKlC,QAAL,GAAgBmC,IAAhB,CAAqB,MAAM7H,qBAA3B,EAAkDyG,GAAlD,CAAsD,CAAtD,CAAzB;AACAE,MAAAA,gBAAgB,GAAGK,UAAU,CAACrI,MAAM,CAACsI,gBAAP,CAAwBW,kBAAxB,EAA4CV,KAA7C,CAA7B;AACH;;AACD,WAAOP,gBAAP;AACH,GAhNgC;AAiNjCG,EAAAA,4BAA4B,EAAE,wCAAW;AACrC,QAAI/D,MAAM,GAAG,KAAKxB,SAAL,CAAeuG,gBAAf,CAAgC,KAAKzD,MAAL,CAAY,eAAZ,CAAhC,CAAb;;AACA,QAAI0D,YAAY,GAAGpI,gBAAgB,CAACoD,MAAjB,CAAwBvD,WAAW,CAACwI,cAAZ,CAA2BjF,MAA3B,EAAmCpD,gBAAgB,CAACsI,aAAjB,EAAnC,EAAqEtI,gBAAgB,CAACuI,WAAjB,EAArE,CAAxB,EAA8HnF,MAA9H,CAAnB;;AACA,QAAIoF,MAAM,GAAG,KAAKpC,MAAL,EAAb;;AACA,QAAIS,YAAY,GAAG2B,MAAM,CAAC1B,GAAP,CAAW,CAAX,CAAnB;AACA,QAAI2B,oBAAoB,GAAGrJ,GAAG,CAACsJ,2BAAJ,CAAgCF,MAAhC,EAAwCJ,YAAxC,CAA3B;AACA,QAAIO,eAAe,GAAG,KAAK,CAAL,KAAW,KAAKjB,cAAtC;AACA,QAAIkB,aAAa,GAAG,CAACD,eAAD,GAAmB,CAAnB,GAAuB,KAAKjB,cAAhD;AACAe,IAAAA,oBAAoB,CAACI,QAArB,CAA8B,KAAK9C,QAAL,EAA9B;AACA,QAAI+C,YAAY,GAAGzB,UAAU,CAACrI,MAAM,CAACsI,gBAAP,CAAwBmB,oBAAoB,CAAC3B,GAArB,CAAyB,CAAzB,CAAxB,EAAqDS,KAAtD,CAA7B;AACA,QAAIK,YAAY,GAAGP,UAAU,CAACrI,MAAM,CAACsI,gBAAP,CAAwBT,YAAxB,EAAsCiB,YAAvC,CAA7B;AACA,QAAIH,WAAW,GAAGN,UAAU,CAACrI,MAAM,CAACsI,gBAAP,CAAwBT,YAAxB,EAAsCgB,WAAvC,CAA5B;AACA,QAAIkB,cAAc,GAAGD,YAAY,GAAGnB,WAAf,GAA6BC,YAA7B,GAA4CgB,aAAjE;AACAH,IAAAA,oBAAoB,CAACO,MAArB;AACA,WAAO;AACHzB,MAAAA,KAAK,EAAEwB,cADJ;AAEHpB,MAAAA,WAAW,EAAEA,WAFV;AAGHC,MAAAA,YAAY,EAAEA;AAHX,KAAP;AAKH,GApOgC;AAqOjCqB,EAAAA,0BAA0B,EAAE,sCAAW;AACnC,SAAKrH,SAAL,CAAesH,oBAAf,CAAoC,KAAKC,kBAAzC;AACH,GAvOgC;AAwOjCC,EAAAA,YAAY,EAAE,wBAAW;AACrB,SAAKzH,QAAL;;AACA,SAAK0H,MAAL,CAAYC,QAAZ,GAAuBtD,QAAvB,CAAgC1F,qBAAhC;;AACA,SAAKiJ,mBAAL;AACH,GA5OgC;AA6OjCC,EAAAA,YAAY,EAAE,wBAAW;AACrB,QAAIC,WAAW,GAAG,KAAK9H,QAAL,EAAlB;AACA,WAAOnC,MAAM,CAAC,KAAKoC,SAAL,CAAe6H,WAAf,CAA2BA,WAA3B,CAAD,EAA0C;AACnDC,MAAAA,KAAK,EAAE,KAAKC,cAAL,EAD4C;AAEnDC,MAAAA,WAAW,EAAE;AAFsC,KAA1C,CAAb;AAIH,GAnPgC;AAoPjCL,EAAAA,mBAAmB,EAAE,+BAAW;AAC5B,QAAI,CAAC,KAAKF,MAAV,EAAkB;AACd;AACH;;AACD,QAAItD,QAAQ,GAAG,KAAKA,QAAL,EAAf;AACA,QAAI8D,cAAc,GAAGrK,MAAM,CAAC,EAAD,EAAKmB,IAAL,EAAWJ,WAAX,CAA3B;AACAlB,IAAAA,IAAI,CAACwK,cAAD,EAAiB,UAASpD,CAAT,EAAYC,IAAZ,EAAkB;AACnCX,MAAAA,QAAQ,CAACY,WAAT,CAAqBrG,qBAAqB,GAAG,GAAxB,GAA8BoG,IAAnD;AACH,KAFoB,CAEnBoD,IAFmB,CAEd,IAFc,CAAjB,CAAJ;;AAGA,SAAKT,MAAL,CAAYC,QAAZ,GAAuBtD,QAAvB,CAAgC1F,qBAAqB,GAAG,GAAxB,GAA8B,KAAKoE,MAAL,CAAY,MAAZ,CAA9D,EAAmFsB,QAAnF,CAA4F1F,qBAAqB,GAAG,GAAxB,GAA8B,KAAKqE,WAA/H;AACH,GA9PgC;AA+PjCoF,EAAAA,mBAAmB,EAAE,+BAAW;AAC5B,SAAKpI,QAAL;;AACA,SAAKC,SAAL,CAAeoI,kBAAf;AACH,GAlQgC;AAmQjCC,EAAAA,qBAAqB,EAAE,iCAAW;AAC9B,WAAO,KAAKrI,SAAL,CAAesI,oBAAf,MAAyC,KAAKvI,QAAL,EAAhD;AACH,GArQgC;AAsQjCwI,EAAAA,oBAAoB,EAAE,gCAAW;AAC7B,WAAO,KAAKvI,SAAL,CAAewI,mBAAf,MAAwC,KAAKzI,QAAL,EAA/C;AACH,GAxQgC;AAyQjC0I,EAAAA,oBAAoB,EAAE,gCAAW;AAC7B,SAAK1I,QAAL;;AACA,SAAKC,SAAL,CAAe0I,mBAAf;AACH,GA5QgC;AA6QjCC,EAAAA,mBAAmB,EAAE,+BAAW;AAC5B,SAAK5I,QAAL;;AACA,SAAKC,SAAL,CAAe4I,kBAAf;AACH,GAhRgC;AAiRjCC,EAAAA,kBAAkB,EAAE,4BAASC,OAAT,EAAkB;AAClC,QAAIA,OAAJ,EAAa;AACT,WAAKpE,qBAAL;AACH;AACJ,GArRgC;AAsRjCqE,EAAAA,kBAAkB,EAAE,4BAASC,CAAT,EAAY;AAC5B,SAAKlG,MAAL,CAAY,MAAZ,EAAoB,EAApB;AACA,SAAK/C,QAAL,CAAciJ,CAAd;AACH,GAzRgC;AA0RjCC,EAAAA,kBAAkB,EAAE,8BAAW;AAC3B,QAAI,KAAKlG,WAAL,KAAqBpE,WAAW,CAACE,OAArC,EAA8C;AAC1C,aAAO,IAAP;AACH;;AACD,QAAIoD,QAAQ,GAAGnE,OAAO,CAACwE,IAAR,GAAeL,QAA9B;AACA,QAAIiH,qBAAqB,GAAG,KAAKC,aAAL,OAAyB,UAAUlH,QAAV,IAAsB,cAAcA,QAA7D,CAA5B;;AACA,QAAIiH,qBAAJ,EAA2B;AACvB,aAAO,KAAKpG,MAAL,CAAY,UAAZ,CAAP;AACH;;AACD,WAAO,KAAK/C,QAAL,EAAP;AACH,GApSgC;AAqSjCoG,EAAAA,qBAAqB,EAAE,iCAAW;AAC9B,WAAO,KAAKpG,QAAL,MAAmB,CAAC,KAAKoJ,aAAL,EAA3B;AACH,GAvSgC;AAwSjCC,EAAAA,YAAY,EAAE,wBAAW;AACrB,QAAIrI,KAAK,GAAG,KAAKsI,UAAL,CAAgB,OAAhB,CAAZ;AACA,SAAKvG,MAAL,CAAY,MAAZ,EAAoB,KAAKwG,iBAAL,CAAuBvI,KAAvB,CAApB;;AACA,SAAKf,SAAL,CAAeuJ,WAAf;;AACA,WAAO,KAAKxJ,QAAL,EAAP;AACH,GA7SgC;AA8SjCyJ,EAAAA,eAAe,EAAE,2BAAW;AACxB,QAAIzI,KAAK,GAAG,KAAKsI,UAAL,CAAgB,OAAhB,CAAZ;AACA,QAAIrI,uBAAuB,GAAG,KAAK8B,MAAL,CAAY,yBAAZ,CAA9B;AACA,QAAI2G,YAAY,GAAGxL,WAAW,CAACyL,kBAAZ,CAA+B,KAAK5G,MAAL,CAAY,MAAZ,CAA/B,CAAnB;AACA,QAAI6G,WAAW,GAAG3I,uBAAuB,GAAG9C,iBAAiB,CAAC0L,aAAlB,CAAgC7I,KAAhC,EAAuCC,uBAAvC,CAAH,GAAqE/C,WAAW,CAAC4L,oBAAZ,CAAiC9I,KAAjC,EAAwC0I,YAAxC,CAA9G;;AACA,SAAKK,iBAAL,GAAyB1D,GAAzB,CAA6BuD,WAA7B;AACH,GApTgC;AAqTjCL,EAAAA,iBAAiB,EAAE,2BAASvI,KAAT,EAAgB;AAC/B,QAAIgJ,IAAI,GAAG,KAAKjH,MAAL,CAAY,MAAZ,CAAX;AACA,QAAIkH,aAAJ;;AACA,QAAI,WAAWD,IAAf,EAAqB;AACjB,UAAI5I,aAAa,GAAG,KAAKnB,SAAL,CAAeuG,gBAAf,CAAgC,KAAKzD,MAAL,CAAY,eAAZ,CAAhC,CAApB;;AACAkH,MAAAA,aAAa,GAAG5L,gBAAgB,CAACoD,MAAjB,CAAwBT,KAAxB,EAA+BI,aAA/B,CAAhB;AACH,KAHD,MAGO;AACH,UAAIK,MAAM,GAAG,KAAKyI,gBAAL,CAAsBF,IAAtB,CAAb;;AACA,UAAIvI,MAAJ,EAAY;AACRwI,QAAAA,aAAa,GAAG5L,gBAAgB,CAACoD,MAAjB,CAAwBT,KAAxB,EAA+BS,MAA/B,CAAhB;AACH,OAFD,MAEO;AACHwI,QAAAA,aAAa,GAAG/L,WAAW,CAAC4L,oBAAZ,CAAiC9I,KAAjC,EAAwCgJ,IAAxC,CAAhB;AACH;AACJ;;AACD,WAAOC,aAAP;AACH,GApUgC;AAqUjCC,EAAAA,gBAAgB,EAAE,0BAASF,IAAT,EAAe;AAC7B,WAAOlM,OAAO,CAACqM,SAAR,CAAkBH,IAAlB,IAA0B,IAA1B,GAAiC9L,WAAW,CAACkM,WAAZ,CAAwBJ,IAAxB,CAAxC;AACH,GAvUgC;AAwUjCK,EAAAA,wBAAwB,EAAE,kCAASpB,CAAT,EAAY;AAClC,QAAIqB,IAAI,GAAG,KAAKvH,MAAL,CAAY,MAAZ,CAAX;AACA,QAAIwH,YAAY,GAAG,KAAKjB,UAAL,CAAgB,OAAhB,CAAnB;;AACA,QAAIgB,IAAI,KAAK,KAAKf,iBAAL,CAAuBgB,YAAvB,CAAb,EAAmD;AAC/C,WAAKC,cAAL,CAAoBD,YAApB;;AACA;AACH;;AACD,QAAIE,UAAU,GAAG,KAAKC,cAAL,CAAoBJ,IAApB,CAAjB;;AACA,QAAItJ,KAAK,GAAGuJ,YAAY,IAAI,KAAKI,iBAAL,EAA5B;;AACA,QAAI7J,IAAI,GAAG,KAAKiC,MAAL,CAAY,MAAZ,CAAX;AACA,QAAI6H,QAAQ,GAAG1M,WAAW,CAAC2M,UAAZ,CAAuB7J,KAAvB,EAA8ByJ,UAA9B,EAA0C3J,IAA1C,CAAf;AACA,QAAI7B,IAAI,GAAGwL,UAAU,IAAI,WAAW3J,IAAzB,GAAgC8J,QAAhC,GAA2CH,UAAtD;;AACA,QAAI,KAAKK,wBAAL,CAA8B7L,IAA9B,CAAJ,EAAyC;AACrC,UAAIgL,aAAa,GAAG,KAAKV,iBAAL,CAAuBqB,QAAvB,CAApB;;AACA,UAAI5J,KAAK,IAAI4J,QAAT,IAAqB5J,KAAK,CAAC+J,OAAN,OAAoBH,QAAQ,CAACG,OAAT,EAAzC,IAA+Dd,aAAa,KAAKK,IAArF,EAA2F;AACvF,aAAKjB,YAAL;AACH,OAFD,MAEO;AACH,aAAK2B,SAAL,CAAeJ,QAAf,EAAyB3B,CAAzB;AACH;AACJ;;AACD,SAAKgC,sBAAL,CAA4BL,QAA5B;AACH,GA7VgC;AA8VjCD,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B,WAAO,KAAK1K,SAAL,CAAeiL,uBAAf,MAA4C,KAAKjL,SAAL,CAAekL,cAAf,EAAnD;AACH,GAhWgC;AAiWjCT,EAAAA,cAAc,EAAE,wBAASJ,IAAT,EAAe;AAC3B,QAAIlJ,aAAa,GAAG,KAAKnB,SAAL,CAAeuG,gBAAf,CAAgC,KAAKzD,MAAL,CAAY,eAAZ,CAAhC,CAApB;;AACA,QAAIqI,UAAU,GAAG,KAAKnL,SAAL,CAAeoL,aAAf,CAA6Bf,IAA7B,EAAmClJ,aAAnC,CAAjB;;AACA,WAAO5D,SAAS,CAAC8N,SAAV,CAAoBF,UAApB,IAAkCA,UAAlC,GAA+C,KAAK,CAA3D;AACH,GArWgC;AAsWjCZ,EAAAA,cAAc,EAAE,wBAASxJ,KAAT,EAAgB;AAC5B,QAAIuK,cAAc,GAAG,KAAKT,wBAAL,CAA8B9J,KAA9B,CAArB;;AACA,QAAIwK,YAAY,GAAG,CAAC,KAAKpI,qBAAN,GAA8B,KAAK6H,sBAAL,CAA4BjK,KAA5B,CAA9B,GAAmE,IAAtF;AACA,SAAKoC,qBAAL,GAA6B,KAA7B;AACA,WAAOmI,cAAc,IAAIC,YAAzB;AACH,GA3WgC;AA4WjCV,EAAAA,wBAAwB,EAAE,kCAAS9J,KAAT,EAAgB;AACtC,QAAIsJ,IAAI,GAAG,KAAKvH,MAAL,CAAY,MAAZ,CAAX;AACA,QAAI0I,OAAO,GAAG,CAAC,CAACnB,IAAF,IAAU,SAAStJ,KAAjC;AACA,QAAIkD,MAAM,GAAG,CAAC,CAAClD,KAAF,IAAWxD,SAAS,CAAC0G,MAAV,CAAiBlD,KAAjB,CAAX,IAAsC,CAAC0K,KAAK,CAAC1K,KAAK,CAAC+J,OAAN,EAAD,CAAzD;AACA,QAAIY,aAAa,GAAGzH,MAAM,IAAIjG,SAAS,CAAC2N,WAAV,CAAsB5K,KAAtB,EAA6B,KAAKsI,UAAL,CAAgB,KAAhB,CAA7B,EAAqD,KAAKA,UAAL,CAAgB,KAAhB,CAArD,EAA6E,KAAKvG,MAAL,CAAY,MAAZ,CAA7E,CAA9B;AACA,QAAI8I,OAAO,GAAG,CAACJ,OAAD,IAAY,CAACzK,KAAb,IAAsB2K,aAApC;AACA,QAAIG,iBAAiB,GAAG,EAAxB;;AACA,QAAI,CAAC5H,MAAL,EAAa;AACT4H,MAAAA,iBAAiB,GAAG,KAAK/I,MAAL,CAAY,oBAAZ,CAApB;AACH,KAFD,MAEO;AACH,UAAI,CAAC4I,aAAL,EAAoB;AAChBG,QAAAA,iBAAiB,GAAG,KAAK/I,MAAL,CAAY,uBAAZ,CAApB;AACH;AACJ;;AACD,SAAKA,MAAL,CAAY;AACR8I,MAAAA,OAAO,EAAEA,OADD;AAERE,MAAAA,eAAe,EAAEF,OAAO,GAAG,IAAH,GAAU;AAC9BG,QAAAA,cAAc,EAAE,IADc;AAE9BC,QAAAA,OAAO,EAAEH;AAFqB;AAF1B,KAAZ;AAOA,WAAOD,OAAP;AACH,GAlYgC;AAmYjCZ,EAAAA,sBAAsB,EAAE,gCAASjK,KAAT,EAAgB;AACpC,SAAKkL,iBAAL,CAAuBC,IAAvB,CAA4B;AACxBC,MAAAA,MAAM,EAAE,IADgB;AAExBpL,MAAAA,KAAK,EAAEA;AAFiB,KAA5B;AAIA,WAAO,KAAK+B,MAAL,CAAY,SAAZ,CAAP;AACH,GAzYgC;AA0YjCsJ,EAAAA,eAAe,EAAE,yBAASzB,QAAT,EAAmB;AAChC,QAAI0B,QAAQ,GAAG,KAAKhD,UAAL,CAAgB,OAAhB,CAAf;AACA,QAAIiD,OAAO,GAAGD,QAAQ,IAAIA,QAAQ,CAACvB,OAAT,EAA1B;AACA,QAAIyB,OAAO,GAAG5B,QAAQ,IAAIA,QAAQ,CAACG,OAAT,EAA1B;AACA,WAAOwB,OAAO,KAAKC,OAAnB;AACH,GA/YgC;AAgZjCC,EAAAA,cAAc,EAAE,wBAAS7B,QAAT,EAAmB;AAC/B,QAAI8B,OAAO,GAAG,KAAK3J,MAAL,CAAY,MAAZ,CAAd;AACA,QAAI4J,OAAO,GAAG/B,QAAQ,IAAI,KAAKrB,iBAAL,CAAuBqB,QAAvB,CAAZ,IAAgD,EAA9D;AACA,WAAO8B,OAAO,KAAKC,OAAnB;AACH,GApZgC;AAqZjCC,EAAAA,YAAY,EAAE,wBAAW;AACrB,SAAK5M,QAAL;;AACA,SAAKyE,MAAL,GAAcoI,IAAd,CAAmB,cAAnB,EAAmC,KAAnC;AACH,GAxZgC;AAyZjCC,EAAAA,kBAAkB,EAAE,8BAAW;AAC3B,QAAI,CAAC,KAAK1D,aAAL,EAAL,EAA2B;AACvB,WAAKpJ,QAAL;AACH;;AACD,QAAI,KAAKC,SAAL,CAAe8M,mBAAf,EAAJ,EAA0C;AACtC,WAAKC,gBAAL;AACH;;AACD,SAAK/M,SAAL,CAAegN,iBAAf;AACH,GAjagC;AAkajCjF,EAAAA,cAAc,EAAE,0BAAW;AACvB,QAAIkF,WAAW,GAAG,KAAKnK,MAAL,CAAY,aAAZ,CAAlB;;AACA,QAAImK,WAAJ,EAAiB;AACb,aAAOA,WAAP;AACH;;AACD,QAAIpM,IAAI,GAAG,KAAKiC,MAAL,CAAY,MAAZ,CAAX;;AACA,QAAIjC,IAAI,KAAK9B,IAAI,CAACG,IAAlB,EAAwB;AACpB,aAAOb,mBAAmB,CAACmD,MAApB,CAA2B,wCAA3B,CAAP;AACH;;AACD,QAAIX,IAAI,KAAK9B,IAAI,CAACC,IAAd,IAAsB6B,IAAI,KAAK9B,IAAI,CAACE,QAAxC,EAAkD;AAC9C,aAAOZ,mBAAmB,CAACmD,MAApB,CAA2B,wCAA3B,CAAP;AACH;;AACD,WAAO,EAAP;AACH,GA/agC;AAgbjC0L,EAAAA,kBAAkB,EAAE,8BAAW;AAC3B,SAAKzF,MAAL,IAAe,KAAKA,MAAL,CAAY3E,MAAZ,CAAmB,OAAnB,EAA4B,KAAKiF,cAAL,EAA5B,CAAf;AACA,SAAKhI,QAAL;AACH,GAnbgC;AAobjCgN,EAAAA,gBAAgB,EAAE,4BAAW;AACzB,SAAK/M,SAAL,CAAemN,OAAf;;AACA,SAAKlK,aAAL;;AACA,SAAKH,MAAL,CAAY,KAAK9C,SAAL,CAAekD,iBAAf,EAAZ;;AACA,SAAKkK,QAAL;AACH,GAzbgC;AA0bjCC,EAAAA,mBAAmB,EAAE,6BAASrE,CAAT,EAAY;AAC7B,QAAIjI,KAAK,GAAG,KAAKf,SAAL,CAAesN,QAAf,EAAZ;;AACA,QAAI,KAAKzC,wBAAL,CAA8B9J,KAA9B,CAAJ,EAA0C;AACtC,WAAKgK,SAAL,CAAehK,KAAf,EAAsBiI,CAAC,CAACuE,KAAxB;AACH;;AACD,SAAKxN,QAAL;AACH,GAhcgC;AAicjCyN,EAAAA,QAAQ,EAAE,oBAAW;AACjB,SAAKxN,SAAL,IAAkB,KAAKA,SAAL,CAAemN,OAAf,EAAlB;AACA,SAAKpN,QAAL;AACH,GApcgC;AAqcjCoJ,EAAAA,aAAa,EAAE,yBAAW;AACtB,WAAO,KAAKpG,WAAL,KAAqBpE,WAAW,CAAC4D,MAAxC;AACH,GAvcgC;AAwcjCkL,EAAAA,cAAc,EAAE,wBAASC,IAAT,EAAe;AAC3B,YAAQA,IAAI,CAACC,IAAb;AACI,WAAK,iBAAL;AACA,WAAK,SAAL;AACI,aAAK5N,QAAL,CAAcU,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;;AACA,aAAKgE,qBAAL;;AACA;;AACJ,WAAK,YAAL;AACI,aAAK7B,oBAAL,CAA0B;AACtBvB,UAAAA,UAAU,EAAEoM,IAAI,CAAC3M;AADK,SAA1B;;AAGA,aAAKgM,gBAAL;;AACA,aAAKzI,uBAAL;;AACA,aAAKsJ,WAAL;;AACA;;AACJ,WAAK,MAAL;AACI,aAAK/K,oBAAL,CAA0B;AACtBrB,UAAAA,MAAM,EAAEkM,IAAI,CAAC3M;AADS,SAA1B;;AAGA,aAAKgM,gBAAL;;AACA,aAAK1I,mBAAL;;AACA,aAAKsD,mBAAL;;AACA,aAAKjD,qBAAL;;AACA,aAAKmJ,YAAL;;AACA;;AACJ,WAAK,aAAL;AACI,aAAKX,kBAAL;;AACA;;AACJ,WAAK,KAAL;AACA,WAAK,KAAL;AACI,YAAI,KAAKpK,MAAL,CAAY,SAAZ,CAAJ,EAA4B;AACxB,eAAK+H,wBAAL,CAA8B,KAAKxB,UAAL,CAAgB,OAAhB,CAA9B;AACH,SAFD,MAEO;AACH,eAAKkB,cAAL,CAAoB,KAAKlB,UAAL,CAAgB,OAAhB,CAApB;AACH;;AACD,aAAKuE,WAAL;;AACA;;AACJ,WAAK,yBAAL;AACA,WAAK,UAAL;AACA,WAAK,eAAL;AACA,WAAK,iBAAL;AACA,WAAK,cAAL;AACA,WAAK,cAAL;AACI,aAAKA,WAAL;;AACA;;AACJ,WAAK,eAAL;AACI,aAAK9K,MAAL,CAAY,MAAZ,EAAoB,KAAKwG,iBAAL,CAAuB,KAAKD,UAAL,CAAgB,OAAhB,CAAvB,CAApB;;AACA,aAAKyE,iBAAL;;AACA;;AACJ,WAAK,uBAAL;AACI;;AACJ,WAAK,oBAAL;AACI,YAAIC,cAAc,GAAGL,IAAI,CAAC3M,KAAL,GAAa,WAAb,GAA2B,YAAhD;AACA,aAAK+B,MAAL,CAAY,gBAAZ,EAA8BiL,cAA9B;AACA;;AACJ,WAAK,gBAAL;AACI,aAAKjL,MAAL,CAAY,oBAAZ,EAAkC,gBAAgB4K,IAAI,CAAC3M,KAAvD;AACA,aAAKhB,QAAL,CAAcU,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;AACA;;AACJ,WAAK,MAAL;AACI,aAAKV,SAAL,CAAegO,kBAAf,CAAkCN,IAAI,CAAC3M,KAAvC;;AACA,aAAKhB,QAAL,CAAcU,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;AACA;;AACJ,WAAK,SAAL;AACI,aAAKX,QAAL,CAAcU,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;;AACA,aAAKgE,qBAAL;;AACA;;AACJ,WAAK,oBAAL;AACI,aAAKA,qBAAL;;AACA,aAAK3E,QAAL,CAAcU,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;AACA;;AACJ,WAAK,UAAL;AACI,aAAKX,QAAL,CAAcU,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;;AACA,aAAKgE,qBAAL;;AACA;;AACJ,WAAK,oBAAL;AACA,WAAK,uBAAL;AACA,WAAK,mBAAL;AACA,WAAK,iBAAL;AACI;;AACJ;AACI,aAAK3E,QAAL,CAAcU,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;AAhFR;AAkFH,GA3hBgC;AA4hBjCuN,EAAAA,uBAAuB,EAAE,mCAAW;AAChC,QAAIlN,KAAK,GAAG,KAAK+B,MAAL,CAAY,OAAZ,CAAZ;;AACA,QAAI,KAAKA,MAAL,CAAY,yBAAZ,KAA0C/E,MAAM,GAAGmQ,mBAAvD,EAA4E;AACxE,aAAO,KAAKpL,MAAL,CAAY,yBAAZ,CAAP;AACH;;AACD,QAAIvF,SAAS,CAAC4Q,SAAV,CAAoBpN,KAApB,CAAJ,EAAgC;AAC5B,aAAO,QAAP;AACH;;AACD,QAAI,CAACxD,SAAS,CAAC6Q,QAAV,CAAmBrN,KAAnB,CAAL,EAAgC;AAC5B;AACH;;AACD,WAAO7C,iBAAiB,CAACmQ,0BAAlB,CAA6CtN,KAA7C,CAAP;AACH,GAxiBgC;AAyiBjC8M,EAAAA,YAAY,EAAE,sBAAS9M,KAAT,EAAgB;AAC1B,SAAKhB,QAAL;;AACA,SAAKwK,cAAL,CAAoBxJ,KAAK,IAAI,KAAKsI,UAAL,CAAgB,OAAhB,CAA7B;AACH,GA5iBgC;AA6iBjC0B,EAAAA,SAAS,EAAE,mBAAShK,KAAT,EAAgBuN,OAAhB,EAAyB;AAChC,QAAIC,cAAc,GAAG,KAAKnC,eAAL,CAAqBrL,KAArB,CAArB;;AACA,QAAIwN,cAAc,IAAID,OAAtB,EAA+B;AAC3B,WAAKE,qBAAL,CAA2BF,OAA3B;AACH;;AACD,QAAI,CAACC,cAAD,IAAmB,KAAK/B,cAAL,CAAoBzL,KAApB,CAAvB,EAAmD;AAC/C,WAAK8M,YAAL,CAAkB9M,KAAlB;AACH;;AACD,WAAO,KAAKsI,UAAL,CAAgB,OAAhB,EAAyBtI,KAAzB,CAAP;AACH,GAtjBgC;AAujBjCsI,EAAAA,UAAU,EAAE,oBAASoF,UAAT,EAAqB1N,KAArB,EAA4B;AACpC,QAAI,MAAML,SAAS,CAACgO,MAApB,EAA4B;AACxB,aAAOxQ,iBAAiB,CAACyQ,eAAlB,CAAkC,KAAK7L,MAAL,CAAY2L,UAAZ,CAAlC,CAAP;AACH;;AACD,QAAIG,mBAAmB,GAAG,KAAKX,uBAAL,EAA1B;;AACA,SAAKnL,MAAL,CAAY2L,UAAZ,EAAwBvQ,iBAAiB,CAAC0L,aAAlB,CAAgC7I,KAAhC,EAAuC6N,mBAAvC,CAAxB;AACH,GA7jBgC;AA8jBjCC,EAAAA,KAAK,EAAE,iBAAW;AACd,QAAIC,cAAc,GAAG,KAAKlO,kBAAL,EAArB;;AACA,SAAKuC,qBAAL,GAA6B2L,cAAc,CAAC/N,KAAf,KAAyB,KAAKsI,UAAL,CAAgB,OAAhB,CAAtD;AACA,SAAKtJ,QAAL;;AACA,SAAK8N,YAAL,CAAkB,KAAKxE,UAAL,CAAgB,OAAhB,CAAlB;AACH;AAnkBgC,CAAvB,CAAd;AAqkBA/L,iBAAiB,CAAC,WAAD,EAAcsC,OAAd,CAAjB;AACAmP,MAAM,CAACC,OAAP,GAAiBpP,OAAjB","sourcesContent":["/**\r\n * DevExtreme (ui/date_box/ui.date_box.base.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar windowUtils = require(\"../../core/utils/window\");\r\nvar window = windowUtils.getWindow();\r\nvar registerComponent = require(\"../../core/component_registrator\");\r\nvar typeUtils = require(\"../../core/utils/type\");\r\nvar dom = require(\"../../core/utils/dom\");\r\nvar each = require(\"../../core/utils/iterator\").each;\r\nvar compareVersions = require(\"../../core/utils/version\").compare;\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar support = require(\"../../core/utils/support\");\r\nvar devices = require(\"../../core/devices\");\r\nvar config = require(\"../../core/config\");\r\nvar dateUtils = require(\"../../core/utils/date\");\r\nvar uiDateUtils = require(\"./ui.date_utils\");\r\nvar dateSerialization = require(\"../../core/utils/date_serialization\");\r\nvar DropDownEditor = require(\"../drop_down_editor/ui.drop_down_editor\");\r\nvar dateLocalization = require(\"../../localization/date\");\r\nvar messageLocalization = require(\"../../localization/message\");\r\nvar DATEBOX_CLASS = \"dx-datebox\";\r\nvar DX_AUTO_WIDTH_CLASS = \"dx-auto-width\";\r\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\r\nvar DX_CLEAR_BUTTON_CLASS = \"dx-clear-button-area\";\r\nvar DATEBOX_WRAPPER_CLASS = \"dx-datebox-wrapper\";\r\nvar PICKER_TYPE = {\r\n    calendar: \"calendar\",\r\n    rollers: \"rollers\",\r\n    list: \"list\",\r\n    \"native\": \"native\"\r\n};\r\nvar TYPE = {\r\n    date: \"date\",\r\n    datetime: \"datetime\",\r\n    time: \"time\"\r\n};\r\nvar STRATEGY_NAME = {\r\n    calendar: \"Calendar\",\r\n    dateView: \"DateView\",\r\n    \"native\": \"Native\",\r\n    calendarWithTime: \"CalendarWithTime\",\r\n    list: \"List\"\r\n};\r\nvar STRATEGY_CLASSES = {\r\n    Calendar: require(\"./ui.date_box.strategy.calendar\"),\r\n    DateView: require(\"./ui.date_box.strategy.date_view\"),\r\n    Native: require(\"./ui.date_box.strategy.native\"),\r\n    CalendarWithTime: require(\"./ui.date_box.strategy.calendar_with_time\"),\r\n    List: require(\"./ui.date_box.strategy.list\")\r\n};\r\nvar DateBox = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), this._strategy.supportedKeys())\r\n    },\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase();\r\n        extend(this._deprecatedOptions, {\r\n            maxZoomLevel: {\r\n                since: \"18.1\",\r\n                alias: \"calendarOptions.maxZoomLevel\"\r\n            },\r\n            minZoomLevel: {\r\n                since: \"18.1\",\r\n                alias: \"calendarOptions.minZoomLevel\"\r\n            }\r\n        })\r\n    },\r\n    _renderButtonContainers: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._strategy.customizeButtons()\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            type: \"date\",\r\n            showAnalogClock: true,\r\n            value: null,\r\n            dateSerializationFormat: void 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            displayFormat: null,\r\n            interval: 30,\r\n            disabledDates: null,\r\n            maxZoomLevel: \"month\",\r\n            minZoomLevel: \"century\",\r\n            pickerType: PICKER_TYPE.calendar,\r\n            invalidDateMessage: messageLocalization.format(\"dxDateBox-validation-datetime\"),\r\n            dateOutOfRangeMessage: messageLocalization.format(\"validation-range\"),\r\n            applyButtonText: messageLocalization.format(\"OK\"),\r\n            adaptivityEnabled: false,\r\n            calendarOptions: {},\r\n            useHiddenSubmitElement: true\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                showPopupTitle: true\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }, {\r\n            device: function() {\r\n                var realDevice = devices.real();\r\n                var platform = realDevice.platform;\r\n                return \"ios\" === platform || \"android\" === platform\r\n            },\r\n            options: {\r\n                pickerType: PICKER_TYPE.native\r\n            }\r\n        }, {\r\n            device: function(currentDevice) {\r\n                var realDevice = devices.real();\r\n                var platform = realDevice.platform;\r\n                var version = realDevice.version;\r\n                return \"generic\" === platform && \"desktop\" !== currentDevice.deviceType || \"android\" === platform && compareVersions(version, [4, 4]) < 0\r\n            },\r\n            options: {\r\n                pickerType: PICKER_TYPE.rollers\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\",\r\n                deviceType: \"desktop\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }])\r\n    },\r\n    _initOptions: function(options) {\r\n        this._userOptions = extend({}, options);\r\n        this.callBase(options);\r\n        this._updatePickerOptions()\r\n    },\r\n    _updatePickerOptions: function() {\r\n        var pickerType = this.option(\"pickerType\");\r\n        var type = this.option(\"type\");\r\n        if (pickerType === PICKER_TYPE.list && (type === TYPE.datetime || type === TYPE.date)) {\r\n            pickerType = PICKER_TYPE.calendar\r\n        }\r\n        if (type === TYPE.time && pickerType === PICKER_TYPE.calendar) {\r\n            pickerType = PICKER_TYPE.list\r\n        }\r\n        this.option(\"showDropDownButton\", \"generic\" !== devices.real().platform || pickerType !== PICKER_TYPE.native);\r\n        this._pickerType = pickerType\r\n    },\r\n    _init: function() {\r\n        this._initStrategy();\r\n        this.option(extend({}, this._strategy.getDefaultOptions(), this._userOptions));\r\n        delete this._userOptions;\r\n        this._skipCustomValidation = false;\r\n        this.callBase()\r\n    },\r\n    _toLowerCaseFirstLetter: function(string) {\r\n        return string.charAt(0).toLowerCase() + string.substr(1)\r\n    },\r\n    _initStrategy: function() {\r\n        var strategyName = this._getStrategyName(this._getFormatType());\r\n        var strategy = STRATEGY_CLASSES[strategyName];\r\n        if (!(this._strategy && this._strategy.NAME === strategyName)) {\r\n            this._strategy = new strategy(this)\r\n        }\r\n    },\r\n    _getFormatType: function() {\r\n        var currentType = this.option(\"type\");\r\n        var isTime = /h|m|s/g.test(currentType);\r\n        var isDate = /d|M|Y/g.test(currentType);\r\n        var type = \"\";\r\n        if (isDate) {\r\n            type += TYPE.date\r\n        }\r\n        if (isTime) {\r\n            type += TYPE.time\r\n        }\r\n        return type\r\n    },\r\n    _getStrategyName: function(type) {\r\n        var pickerType = this._pickerType;\r\n        if (pickerType === PICKER_TYPE.rollers) {\r\n            return STRATEGY_NAME.dateView\r\n        } else {\r\n            if (pickerType === PICKER_TYPE.native) {\r\n                return STRATEGY_NAME.native\r\n            }\r\n        }\r\n        if (type === TYPE.date) {\r\n            return STRATEGY_NAME.calendar\r\n        }\r\n        if (type === TYPE.datetime) {\r\n            return STRATEGY_NAME.calendarWithTime\r\n        }\r\n        return STRATEGY_NAME.list\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(DATEBOX_CLASS);\r\n        this.callBase();\r\n        this._refreshFormatClass();\r\n        this._refreshPickerTypeClass();\r\n        this._strategy.renderInputMinMax(this._input())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._formatValidationIcon()\r\n    },\r\n    _renderDimensions: function() {\r\n        this.callBase();\r\n        this.$element().toggleClass(DX_AUTO_WIDTH_CLASS, !this.option(\"width\"))\r\n    },\r\n    _refreshFormatClass: function() {\r\n        var $element = this.$element();\r\n        each(TYPE, function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        });\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this.option(\"type\"))\r\n    },\r\n    _refreshPickerTypeClass: function() {\r\n        var $element = this.$element();\r\n        each(PICKER_TYPE, function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        });\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this._pickerType)\r\n    },\r\n    _formatValidationIcon: function() {\r\n        if (!windowUtils.hasWindow()) {\r\n            return\r\n        }\r\n        var inputElement = this._input().get(0);\r\n        var isRtlEnabled = this.option(\"rtlEnabled\");\r\n        var clearButtonWidth = this._getClearButtonWidth();\r\n        var longestElementDimensions = this._getLongestElementDimensions();\r\n        var curWidth = parseFloat(window.getComputedStyle(inputElement).width) - clearButtonWidth;\r\n        var shouldHideValidationIcon = longestElementDimensions.width > curWidth;\r\n        var style = inputElement.style;\r\n        this.$element().toggleClass(DX_INVALID_BADGE_CLASS, !shouldHideValidationIcon);\r\n        if (shouldHideValidationIcon) {\r\n            if (void 0 === this._storedPadding) {\r\n                this._storedPadding = isRtlEnabled ? longestElementDimensions.leftPadding : longestElementDimensions.rightPadding\r\n            }\r\n            isRtlEnabled ? style.paddingLeft = 0 : style.paddingRight = 0\r\n        } else {\r\n            isRtlEnabled ? style.paddingLeft = this._storedPadding + \"px\" : style.paddingRight = this._storedPadding + \"px\"\r\n        }\r\n    },\r\n    _getClearButtonWidth: function() {\r\n        var clearButtonWidth = 0;\r\n        if (this._isClearButtonVisible() && \"\" === this._input().val()) {\r\n            var clearButtonElement = this.$element().find(\".\" + DX_CLEAR_BUTTON_CLASS).get(0);\r\n            clearButtonWidth = parseFloat(window.getComputedStyle(clearButtonElement).width)\r\n        }\r\n        return clearButtonWidth\r\n    },\r\n    _getLongestElementDimensions: function() {\r\n        var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var longestValue = dateLocalization.format(uiDateUtils.getLongestDate(format, dateLocalization.getMonthNames(), dateLocalization.getDayNames()), format);\r\n        var $input = this._input();\r\n        var inputElement = $input.get(0);\r\n        var $longestValueElement = dom.createTextElementHiddenCopy($input, longestValue);\r\n        var isPaddingStored = void 0 !== this._storedPadding;\r\n        var storedPadding = !isPaddingStored ? 0 : this._storedPadding;\r\n        $longestValueElement.appendTo(this.$element());\r\n        var elementWidth = parseFloat(window.getComputedStyle($longestValueElement.get(0)).width);\r\n        var rightPadding = parseFloat(window.getComputedStyle(inputElement).paddingRight);\r\n        var leftPadding = parseFloat(window.getComputedStyle(inputElement).paddingLeft);\r\n        var necessaryWidth = elementWidth + leftPadding + rightPadding + storedPadding;\r\n        $longestValueElement.remove();\r\n        return {\r\n            width: necessaryWidth,\r\n            leftPadding: leftPadding,\r\n            rightPadding: rightPadding\r\n        }\r\n    },\r\n    _attachChildKeyboardEvents: function() {\r\n        this._strategy.attachKeyboardEvents(this._keyboardProcessor)\r\n    },\r\n    _renderPopup: function() {\r\n        this.callBase();\r\n        this._popup._wrapper().addClass(DATEBOX_WRAPPER_CLASS);\r\n        this._renderPopupWrapper()\r\n    },\r\n    _popupConfig: function() {\r\n        var popupConfig = this.callBase();\r\n        return extend(this._strategy.popupConfig(popupConfig), {\r\n            title: this._getPopupTitle(),\r\n            dragEnabled: false\r\n        })\r\n    },\r\n    _renderPopupWrapper: function() {\r\n        if (!this._popup) {\r\n            return\r\n        }\r\n        var $element = this.$element();\r\n        var classPostfixes = extend({}, TYPE, PICKER_TYPE);\r\n        each(classPostfixes, function(_, item) {\r\n            $element.removeClass(DATEBOX_WRAPPER_CLASS + \"-\" + item)\r\n        }.bind(this));\r\n        this._popup._wrapper().addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this.option(\"type\")).addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this._pickerType)\r\n    },\r\n    _renderPopupContent: function() {\r\n        this.callBase();\r\n        this._strategy.renderPopupContent()\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._strategy.getFirstPopupElement() || this.callBase()\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._strategy.getLastPopupElement() || this.callBase()\r\n    },\r\n    _popupShowingHandler: function() {\r\n        this.callBase();\r\n        this._strategy.popupShowingHandler()\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this.callBase();\r\n        this._strategy.popupHiddenHandler()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._formatValidationIcon()\r\n        }\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        this.option(\"text\", \"\");\r\n        this.callBase(e)\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        if (this._pickerType === PICKER_TYPE.rollers) {\r\n            return true\r\n        }\r\n        var platform = devices.real().platform;\r\n        var isCustomValueDisabled = this._isNativeType() && (\"ios\" === platform || \"android\" === platform);\r\n        if (isCustomValueDisabled) {\r\n            return this.option(\"readOnly\")\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _isClearButtonVisible: function() {\r\n        return this.callBase() && !this._isNativeType()\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.dateOption(\"value\");\r\n        this.option(\"text\", this._getDisplayedText(value));\r\n        this._strategy.renderValue();\r\n        return this.callBase()\r\n    },\r\n    _setSubmitValue: function() {\r\n        var value = this.dateOption(\"value\");\r\n        var dateSerializationFormat = this.option(\"dateSerializationFormat\");\r\n        var submitFormat = uiDateUtils.SUBMIT_FORMATS_MAP[this.option(\"type\")];\r\n        var submitValue = dateSerializationFormat ? dateSerialization.serializeDate(value, dateSerializationFormat) : uiDateUtils.toStandardDateFormat(value, submitFormat);\r\n        this._getSubmitElement().val(submitValue)\r\n    },\r\n    _getDisplayedText: function(value) {\r\n        var mode = this.option(\"mode\");\r\n        var displayedText;\r\n        if (\"text\" === mode) {\r\n            var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n            displayedText = dateLocalization.format(value, displayFormat)\r\n        } else {\r\n            var format = this._getFormatByMode(mode);\r\n            if (format) {\r\n                displayedText = dateLocalization.format(value, format)\r\n            } else {\r\n                displayedText = uiDateUtils.toStandardDateFormat(value, mode)\r\n            }\r\n        }\r\n        return displayedText\r\n    },\r\n    _getFormatByMode: function(mode) {\r\n        return support.inputType(mode) ? null : uiDateUtils.FORMATS_MAP[mode]\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var text = this.option(\"text\");\r\n        var currentValue = this.dateOption(\"value\");\r\n        if (text === this._getDisplayedText(currentValue)) {\r\n            this._validateValue(currentValue);\r\n            return\r\n        }\r\n        var parsedDate = this._getParsedDate(text);\r\n        var value = currentValue || this._getDateByDefault();\r\n        var type = this.option(\"type\");\r\n        var newValue = uiDateUtils.mergeDates(value, parsedDate, type);\r\n        var date = parsedDate && \"time\" === type ? newValue : parsedDate;\r\n        if (this._applyInternalValidation(date)) {\r\n            var displayedText = this._getDisplayedText(newValue);\r\n            if (value && newValue && value.getTime() === newValue.getTime() && displayedText !== text) {\r\n                this._renderValue()\r\n            } else {\r\n                this.dateValue(newValue, e)\r\n            }\r\n        }\r\n        this._applyCustomValidation(newValue)\r\n    },\r\n    _getDateByDefault: function() {\r\n        return this._strategy.useCurrentDateByDefault() && this._strategy.getDefaultDate()\r\n    },\r\n    _getParsedDate: function(text) {\r\n        var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var parsedText = this._strategy.getParsedText(text, displayFormat);\r\n        return typeUtils.isDefined(parsedText) ? parsedText : void 0\r\n    },\r\n    _validateValue: function(value) {\r\n        var internalResult = this._applyInternalValidation(value);\r\n        var customResult = !this._skipCustomValidation ? this._applyCustomValidation(value) : true;\r\n        this._skipCustomValidation = false;\r\n        return internalResult && customResult\r\n    },\r\n    _applyInternalValidation: function(value) {\r\n        var text = this.option(\"text\");\r\n        var hasText = !!text && null !== value;\r\n        var isDate = !!value && typeUtils.isDate(value) && !isNaN(value.getTime());\r\n        var isDateInRange = isDate && dateUtils.dateInRange(value, this.dateOption(\"min\"), this.dateOption(\"max\"), this.option(\"type\"));\r\n        var isValid = !hasText && !value || isDateInRange;\r\n        var validationMessage = \"\";\r\n        if (!isDate) {\r\n            validationMessage = this.option(\"invalidDateMessage\")\r\n        } else {\r\n            if (!isDateInRange) {\r\n                validationMessage = this.option(\"dateOutOfRangeMessage\")\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: validationMessage\r\n            }\r\n        });\r\n        return isValid\r\n    },\r\n    _applyCustomValidation: function(value) {\r\n        this.validationRequest.fire({\r\n            editor: this,\r\n            value: value\r\n        });\r\n        return this.option(\"isValid\")\r\n    },\r\n    _isValueChanged: function(newValue) {\r\n        var oldValue = this.dateOption(\"value\");\r\n        var oldTime = oldValue && oldValue.getTime();\r\n        var newTime = newValue && newValue.getTime();\r\n        return oldTime !== newTime\r\n    },\r\n    _isTextChanged: function(newValue) {\r\n        var oldText = this.option(\"text\");\r\n        var newText = newValue && this._getDisplayedText(newValue) || \"\";\r\n        return oldText !== newText\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().attr(\"autocomplete\", \"off\")\r\n    },\r\n    _renderOpenedState: function() {\r\n        if (!this._isNativeType()) {\r\n            this.callBase()\r\n        }\r\n        if (this._strategy.isAdaptivityChanged()) {\r\n            this._refreshStrategy()\r\n        }\r\n        this._strategy.renderOpenedState()\r\n    },\r\n    _getPopupTitle: function() {\r\n        var placeholder = this.option(\"placeholder\");\r\n        if (placeholder) {\r\n            return placeholder\r\n        }\r\n        var type = this.option(\"type\");\r\n        if (type === TYPE.time) {\r\n            return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleTime\")\r\n        }\r\n        if (type === TYPE.date || type === TYPE.datetime) {\r\n            return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleDate\")\r\n        }\r\n        return \"\"\r\n    },\r\n    _renderPlaceholder: function() {\r\n        this._popup && this._popup.option(\"title\", this._getPopupTitle());\r\n        this.callBase()\r\n    },\r\n    _refreshStrategy: function() {\r\n        this._strategy.dispose();\r\n        this._initStrategy();\r\n        this.option(this._strategy.getDefaultOptions());\r\n        this._refresh()\r\n    },\r\n    _applyButtonHandler: function(e) {\r\n        var value = this._strategy.getValue();\r\n        if (this._applyInternalValidation(value)) {\r\n            this.dateValue(value, e.event)\r\n        }\r\n        this.callBase()\r\n    },\r\n    _dispose: function() {\r\n        this._strategy && this._strategy.dispose();\r\n        this.callBase()\r\n    },\r\n    _isNativeType: function() {\r\n        return this._pickerType === PICKER_TYPE.native\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"showClearButton\":\r\n            case \"buttons\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"pickerType\":\r\n                this._updatePickerOptions({\r\n                    pickerType: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshPickerTypeClass();\r\n                this._invalidate();\r\n                break;\r\n            case \"type\":\r\n                this._updatePickerOptions({\r\n                    format: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshFormatClass();\r\n                this._renderPopupWrapper();\r\n                this._formatValidationIcon();\r\n                this._updateValue();\r\n                break;\r\n            case \"placeholder\":\r\n                this._renderPlaceholder();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                if (this.option(\"isValid\")) {\r\n                    this._applyInternalValidation(this.dateOption(\"value\"))\r\n                } else {\r\n                    this._validateValue(this.dateOption(\"value\"))\r\n                }\r\n                this._invalidate();\r\n                break;\r\n            case \"dateSerializationFormat\":\r\n            case \"interval\":\r\n            case \"disabledDates\":\r\n            case \"calendarOptions\":\r\n            case \"minZoomLevel\":\r\n            case \"maxZoomLevel\":\r\n                this._invalidate();\r\n                break;\r\n            case \"displayFormat\":\r\n                this.option(\"text\", this._getDisplayedText(this.dateOption(\"value\")));\r\n                this._renderInputValue();\r\n                break;\r\n            case \"formatWidthCalculator\":\r\n                break;\r\n            case \"closeOnValueChange\":\r\n                var applyValueMode = args.value ? \"instantly\" : \"useButtons\";\r\n                this.option(\"applyValueMode\", applyValueMode);\r\n                break;\r\n            case \"applyValueMode\":\r\n                this.option(\"closeOnValueChange\", \"instantly\" === args.value);\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"text\":\r\n                this._strategy.textChangedHandler(args.value);\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"isValid\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"showDropDownButton\":\r\n                this._formatValidationIcon();\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"readOnly\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"invalidDateMessage\":\r\n            case \"dateOutOfRangeMessage\":\r\n            case \"adaptivityEnabled\":\r\n            case \"showAnalogClock\":\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _getSerializationFormat: function() {\r\n        var value = this.option(\"value\");\r\n        if (this.option(\"dateSerializationFormat\") && config().forceIsoDateParsing) {\r\n            return this.option(\"dateSerializationFormat\")\r\n        }\r\n        if (typeUtils.isNumeric(value)) {\r\n            return \"number\"\r\n        }\r\n        if (!typeUtils.isString(value)) {\r\n            return\r\n        }\r\n        return dateSerialization.getDateSerializationFormat(value)\r\n    },\r\n    _updateValue: function(value) {\r\n        this.callBase();\r\n        this._validateValue(value || this.dateOption(\"value\"))\r\n    },\r\n    dateValue: function(value, dxEvent) {\r\n        var isValueChanged = this._isValueChanged(value);\r\n        if (isValueChanged && dxEvent) {\r\n            this._saveValueChangeEvent(dxEvent)\r\n        }\r\n        if (!isValueChanged && this._isTextChanged(value)) {\r\n            this._updateValue(value)\r\n        }\r\n        return this.dateOption(\"value\", value)\r\n    },\r\n    dateOption: function(optionName, value) {\r\n        if (1 === arguments.length) {\r\n            return dateSerialization.deserializeDate(this.option(optionName))\r\n        }\r\n        var serializationFormat = this._getSerializationFormat();\r\n        this.option(optionName, dateSerialization.serializeDate(value, serializationFormat))\r\n    },\r\n    reset: function() {\r\n        var defaultOptions = this._getDefaultOptions();\r\n        this._skipCustomValidation = defaultOptions.value === this.dateOption(\"value\");\r\n        this.callBase();\r\n        this._updateValue(this.dateOption(\"value\"))\r\n    }\r\n});\r\nregisterComponent(\"dxDateBox\", DateBox);\r\nmodule.exports = DateBox;\r\n"]},"metadata":{},"sourceType":"script"}