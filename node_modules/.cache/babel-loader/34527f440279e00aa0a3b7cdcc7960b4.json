{"ast":null,"code":"/**\r\n * DevExtreme (exporter/excel/excel.cell_format_helper.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _excel = require(\"./excel.tag_helper\");\n\nvar _excel2 = _interopRequireDefault(_excel);\n\nvar _excel3 = require(\"./excel.cell_alignment_helper\");\n\nvar _excel4 = _interopRequireDefault(_excel3);\n\nvar _excel5 = require(\"./excel.fill_helper\");\n\nvar _excel6 = _interopRequireDefault(_excel5);\n\nvar _excel7 = require(\"./excel.font_helper\");\n\nvar _excel8 = _interopRequireDefault(_excel7);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar cellFormatHelper = {\n  tryCreateTag: function tryCreateTag(sourceObj, sharedItemsContainer) {\n    var result = null;\n\n    if ((0, _type.isDefined)(sourceObj)) {\n      var numberFormatId;\n\n      if (\"number\" === typeof sourceObj.numberFormat) {\n        numberFormatId = sourceObj.numberFormat;\n      } else {\n        numberFormatId = sharedItemsContainer.registerNumberFormat(sourceObj.numberFormat);\n      }\n\n      var fill = sourceObj.fill;\n\n      if (!(0, _type.isDefined)(fill)) {\n        fill = _excel6.default.tryCreateFillFromSimpleFormat(sourceObj);\n      }\n\n      result = {\n        numberFormatId: numberFormatId,\n        alignment: _excel4.default.tryCreateTag(sourceObj.alignment),\n        fontId: sharedItemsContainer.registerFont(sourceObj.font),\n        fillId: sharedItemsContainer.registerFill(fill)\n      };\n\n      if (cellFormatHelper.isEmpty(result)) {\n        result = null;\n      }\n    }\n\n    return result;\n  },\n  copy: function copy(source) {\n    var result;\n\n    if (null === source) {\n      result = null;\n    } else {\n      if ((0, _type.isDefined)(source)) {\n        result = {};\n\n        if (void 0 !== source.numberFormat) {\n          result.numberFormat = source.numberFormat;\n        }\n\n        if (void 0 !== source.fill) {\n          result.fill = _excel6.default.copy(source.fill);\n        } else {\n          _excel6.default.copySimpleFormat(source, result);\n        }\n\n        if (void 0 !== source.alignment) {\n          result.alignment = _excel4.default.copy(source.alignment);\n        }\n\n        if (void 0 !== source.font) {\n          result.font = _excel8.default.copy(source.font);\n        }\n      }\n    }\n\n    return result;\n  },\n  areEqual: function areEqual(leftTag, rightTag) {\n    return cellFormatHelper.isEmpty(leftTag) && cellFormatHelper.isEmpty(rightTag) || (0, _type.isDefined)(leftTag) && (0, _type.isDefined)(rightTag) && leftTag.fontId === rightTag.fontId && leftTag.numberFormatId === rightTag.numberFormatId && leftTag.fillId === rightTag.fillId && _excel4.default.areEqual(leftTag.alignment, rightTag.alignment);\n  },\n  isEmpty: function isEmpty(tag) {\n    return !(0, _type.isDefined)(tag) || !(0, _type.isDefined)(tag.fontId) && !(0, _type.isDefined)(tag.numberFormatId) && !(0, _type.isDefined)(tag.fillId) && _excel4.default.isEmpty(tag.alignment);\n  },\n  toXml: function toXml(tag) {\n    var isAlignmentEmpty = _excel4.default.isEmpty(tag.alignment);\n\n    var applyNumberFormat;\n\n    if ((0, _type.isDefined)(tag.numberFormatId)) {\n      applyNumberFormat = tag.numberFormatId > 0 ? 1 : 0;\n    }\n\n    return _excel2.default.toXml(\"xf\", {\n      xfId: 0,\n      applyAlignment: isAlignmentEmpty ? null : 1,\n      fontId: tag.fontId,\n      applyNumberFormat: applyNumberFormat,\n      fillId: tag.fillId,\n      numFmtId: tag.numberFormatId\n    }, isAlignmentEmpty ? null : _excel4.default.toXml(tag.alignment));\n  }\n};\nexports.default = cellFormatHelper;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/exporter/excel/excel.cell_format_helper.js"],"names":["Object","defineProperty","exports","value","_type","require","_excel","_excel2","_interopRequireDefault","_excel3","_excel4","_excel5","_excel6","_excel7","_excel8","obj","__esModule","cellFormatHelper","tryCreateTag","sourceObj","sharedItemsContainer","result","isDefined","numberFormatId","numberFormat","registerNumberFormat","fill","default","tryCreateFillFromSimpleFormat","alignment","fontId","registerFont","font","fillId","registerFill","isEmpty","copy","source","copySimpleFormat","areEqual","leftTag","rightTag","tag","toXml","isAlignmentEmpty","applyNumberFormat","xfId","applyAlignment","numFmtId"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (exporter/excel/excel.cell_format_helper.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _excel = require(\"./excel.tag_helper\");\r\nvar _excel2 = _interopRequireDefault(_excel);\r\nvar _excel3 = require(\"./excel.cell_alignment_helper\");\r\nvar _excel4 = _interopRequireDefault(_excel3);\r\nvar _excel5 = require(\"./excel.fill_helper\");\r\nvar _excel6 = _interopRequireDefault(_excel5);\r\nvar _excel7 = require(\"./excel.font_helper\");\r\nvar _excel8 = _interopRequireDefault(_excel7);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar cellFormatHelper = {\r\n    tryCreateTag: function(sourceObj, sharedItemsContainer) {\r\n        var result = null;\r\n        if ((0, _type.isDefined)(sourceObj)) {\r\n            var numberFormatId;\r\n            if (\"number\" === typeof sourceObj.numberFormat) {\r\n                numberFormatId = sourceObj.numberFormat\r\n            } else {\r\n                numberFormatId = sharedItemsContainer.registerNumberFormat(sourceObj.numberFormat)\r\n            }\r\n            var fill = sourceObj.fill;\r\n            if (!(0, _type.isDefined)(fill)) {\r\n                fill = _excel6.default.tryCreateFillFromSimpleFormat(sourceObj)\r\n            }\r\n            result = {\r\n                numberFormatId: numberFormatId,\r\n                alignment: _excel4.default.tryCreateTag(sourceObj.alignment),\r\n                fontId: sharedItemsContainer.registerFont(sourceObj.font),\r\n                fillId: sharedItemsContainer.registerFill(fill)\r\n            };\r\n            if (cellFormatHelper.isEmpty(result)) {\r\n                result = null\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    copy: function(source) {\r\n        var result;\r\n        if (null === source) {\r\n            result = null\r\n        } else {\r\n            if ((0, _type.isDefined)(source)) {\r\n                result = {};\r\n                if (void 0 !== source.numberFormat) {\r\n                    result.numberFormat = source.numberFormat\r\n                }\r\n                if (void 0 !== source.fill) {\r\n                    result.fill = _excel6.default.copy(source.fill)\r\n                } else {\r\n                    _excel6.default.copySimpleFormat(source, result)\r\n                }\r\n                if (void 0 !== source.alignment) {\r\n                    result.alignment = _excel4.default.copy(source.alignment)\r\n                }\r\n                if (void 0 !== source.font) {\r\n                    result.font = _excel8.default.copy(source.font)\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    areEqual: function(leftTag, rightTag) {\r\n        return cellFormatHelper.isEmpty(leftTag) && cellFormatHelper.isEmpty(rightTag) || (0, _type.isDefined)(leftTag) && (0, _type.isDefined)(rightTag) && leftTag.fontId === rightTag.fontId && leftTag.numberFormatId === rightTag.numberFormatId && leftTag.fillId === rightTag.fillId && _excel4.default.areEqual(leftTag.alignment, rightTag.alignment)\r\n    },\r\n    isEmpty: function(tag) {\r\n        return !(0, _type.isDefined)(tag) || !(0, _type.isDefined)(tag.fontId) && !(0, _type.isDefined)(tag.numberFormatId) && !(0, _type.isDefined)(tag.fillId) && _excel4.default.isEmpty(tag.alignment)\r\n    },\r\n    toXml: function(tag) {\r\n        var isAlignmentEmpty = _excel4.default.isEmpty(tag.alignment);\r\n        var applyNumberFormat;\r\n        if ((0, _type.isDefined)(tag.numberFormatId)) {\r\n            applyNumberFormat = tag.numberFormatId > 0 ? 1 : 0\r\n        }\r\n        return _excel2.default.toXml(\"xf\", {\r\n            xfId: 0,\r\n            applyAlignment: isAlignmentEmpty ? null : 1,\r\n            fontId: tag.fontId,\r\n            applyNumberFormat: applyNumberFormat,\r\n            fillId: tag.fillId,\r\n            numFmtId: tag.numberFormatId\r\n        }, isAlignmentEmpty ? null : _excel4.default.toXml(tag.alignment))\r\n    }\r\n};\r\nexports.default = cellFormatHelper;\r\n"]},"metadata":{},"sourceType":"script"}