{"ast":null,"code":"/**\r\n * DevExtreme (ui/selection/selection.strategy.standard.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar commonUtils = require(\"../../core/utils/common\");\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar isDefined = typeUtils.isDefined;\nvar getKeyHash = commonUtils.getKeyHash;\n\nvar dataQuery = require(\"../../data/query\");\n\nvar deferredUtils = require(\"../../core/utils/deferred\");\n\nvar SelectionFilterCreator = require(\"../../core/utils/selection_filter\").SelectionFilterCreator;\n\nvar when = deferredUtils.when;\nvar Deferred = deferredUtils.Deferred;\n\nvar errors = require(\"../widget/ui.errors\");\n\nvar SelectionStrategy = require(\"./selection.strategy\");\n\nmodule.exports = SelectionStrategy.inherit({\n  ctor: function ctor(options) {\n    this.callBase(options);\n\n    this._initSelectedItemKeyHash();\n  },\n  _initSelectedItemKeyHash: function _initSelectedItemKeyHash() {\n    this._setOption(\"keyHashIndices\", this.options.equalByReference ? null : {});\n  },\n  getSelectedItemKeys: function getSelectedItemKeys() {\n    return this.options.selectedItemKeys.slice(0);\n  },\n  getSelectedItems: function getSelectedItems() {\n    return this.options.selectedItems.slice(0);\n  },\n  _preserveSelectionUpdate: function _preserveSelectionUpdate(items, isDeselect) {\n    var keyOf = this.options.keyOf;\n    var keyIndicesToRemoveMap;\n    var keyIndex;\n    var i;\n\n    if (!keyOf) {\n      return;\n    }\n\n    var isBatchDeselect = isDeselect && items.length > 1 && !this.options.equalByReference;\n\n    if (isBatchDeselect) {\n      keyIndicesToRemoveMap = {};\n    }\n\n    for (i = 0; i < items.length; i++) {\n      var item = items[i];\n      var key = keyOf(item);\n\n      if (isDeselect) {\n        keyIndex = this.removeSelectedItem(key, keyIndicesToRemoveMap);\n\n        if (keyIndicesToRemoveMap && keyIndex >= 0) {\n          keyIndicesToRemoveMap[keyIndex] = true;\n        }\n      } else {\n        this.addSelectedItem(key, item);\n      }\n    }\n\n    if (isBatchDeselect) {\n      this._batchRemoveSelectedItems(keyIndicesToRemoveMap);\n    }\n  },\n  _batchRemoveSelectedItems: function _batchRemoveSelectedItems(keyIndicesToRemoveMap) {\n    var selectedItemKeys = this.options.selectedItemKeys.slice(0);\n    var selectedItems = this.options.selectedItems.slice(0);\n    this.options.selectedItemKeys.length = 0;\n    this.options.selectedItems.length = 0;\n\n    for (var i = 0; i < selectedItemKeys.length; i++) {\n      if (!keyIndicesToRemoveMap[i]) {\n        this.options.selectedItemKeys.push(selectedItemKeys[i]);\n        this.options.selectedItems.push(selectedItems[i]);\n      }\n    }\n\n    this._initSelectedItemKeyHash();\n\n    this.updateSelectedItemKeyHash(this.options.selectedItemKeys);\n  },\n  _loadSelectedItemsCore: function _loadSelectedItemsCore(keys, isDeselect, isSelectAll) {\n    var deferred = new Deferred();\n    var key = this.options.key();\n\n    if (!keys.length && !isSelectAll) {\n      deferred.resolve([]);\n      return deferred;\n    }\n\n    var filter = this.options.filter();\n\n    if (isSelectAll && isDeselect && !filter) {\n      deferred.resolve(this.getSelectedItems());\n      return deferred;\n    }\n\n    var selectionFilterCreator = new SelectionFilterCreator(keys, isSelectAll);\n    var combinedFilter = selectionFilterCreator.getCombinedFilter(key, filter);\n    var deselectedItems = [];\n\n    if (isDeselect) {\n      deselectedItems = combinedFilter ? dataQuery(this.options.selectedItems).filter(combinedFilter).toArray() : this.options.selectedItems.slice(0);\n    }\n\n    var filteredItems = deselectedItems.length ? deselectedItems : this.options.plainItems(true).filter(this.options.isSelectableItem).map(this.options.getItemData);\n    var localFilter = selectionFilterCreator.getLocalFilter(this.options.keyOf, this.equalKeys.bind(this), this.options.equalByReference, key);\n    filteredItems = filteredItems.filter(localFilter);\n\n    if (deselectedItems.length || !isSelectAll && filteredItems.length === keys.length) {\n      deferred.resolve(filteredItems);\n    } else {\n      deferred = this._loadFilteredData(combinedFilter, localFilter, null, isSelectAll);\n    }\n\n    return deferred;\n  },\n  _replaceSelectionUpdate: function _replaceSelectionUpdate(items) {\n    var internalKeys = [];\n    var keyOf = this.options.keyOf;\n\n    if (!keyOf) {\n      return;\n    }\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      var key = keyOf(item);\n      internalKeys.push(key);\n    }\n\n    this.setSelectedItems(internalKeys, items);\n  },\n  _warnOnIncorrectKeys: function _warnOnIncorrectKeys(keys) {\n    var allowNullValue = this.options.allowNullValue;\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if ((!allowNullValue || null !== key) && !this.isItemKeySelected(key)) {\n        errors.log(\"W1002\", key);\n      }\n    }\n  },\n  _loadSelectedItems: function _loadSelectedItems(keys, isDeselect, isSelectAll) {\n    var that = this;\n    var deferred = new Deferred();\n    when(that._lastLoadDeferred).always(function () {\n      that._loadSelectedItemsCore(keys, isDeselect, isSelectAll).done(deferred.resolve).fail(deferred.reject);\n    });\n    that._lastLoadDeferred = deferred;\n    return deferred;\n  },\n  selectedItemKeys: function selectedItemKeys(keys, preserve, isDeselect, isSelectAll) {\n    var that = this;\n\n    var deferred = that._loadSelectedItems(keys, isDeselect, isSelectAll);\n\n    deferred.done(function (items) {\n      if (preserve) {\n        that._preserveSelectionUpdate(items, isDeselect);\n      } else {\n        that._replaceSelectionUpdate(items);\n      }\n\n      that.onSelectionChanged();\n    });\n    return deferred;\n  },\n  addSelectedItem: function addSelectedItem(key, itemData) {\n    if (isDefined(itemData) && itemData.disabled) {\n      if (this.options.disabledItemKeys.indexOf(key) === -1) {\n        this.options.disabledItemKeys.push(key);\n      }\n\n      return;\n    }\n\n    var keyHash = this._getKeyHash(key);\n\n    if (this._indexOfSelectedItemKey(keyHash) === -1) {\n      if (!typeUtils.isObject(keyHash) && this.options.keyHashIndices) {\n        this.options.keyHashIndices[keyHash] = [this.options.selectedItemKeys.length];\n      }\n\n      this.options.selectedItemKeys.push(key);\n      this.options.addedItemKeys.push(key);\n      this.options.addedItems.push(itemData);\n      this.options.selectedItems.push(itemData);\n    }\n  },\n  _getSelectedIndexByKey: function _getSelectedIndexByKey(key, ignoreIndicesMap) {\n    var selectedItemKeys = this.options.selectedItemKeys;\n\n    for (var index = 0; index < selectedItemKeys.length; index++) {\n      if ((!ignoreIndicesMap || !ignoreIndicesMap[index]) && this.equalKeys(selectedItemKeys[index], key)) {\n        return index;\n      }\n    }\n\n    return -1;\n  },\n  _getSelectedIndexByHash: function _getSelectedIndexByHash(key, ignoreIndicesMap) {\n    var indices = this.options.keyHashIndices[key];\n\n    if (indices && indices.length > 1 && ignoreIndicesMap) {\n      indices = indices.filter(function (index) {\n        return !ignoreIndicesMap[index];\n      });\n    }\n\n    return indices && indices[0] >= 0 ? indices[0] : -1;\n  },\n  _indexOfSelectedItemKey: function _indexOfSelectedItemKey(key, ignoreIndicesMap) {\n    var selectedIndex;\n\n    if (this.options.equalByReference) {\n      selectedIndex = this.options.selectedItemKeys.indexOf(key);\n    } else {\n      if (typeUtils.isObject(key)) {\n        selectedIndex = this._getSelectedIndexByKey(key, ignoreIndicesMap);\n      } else {\n        selectedIndex = this._getSelectedIndexByHash(key, ignoreIndicesMap);\n      }\n    }\n\n    return selectedIndex;\n  },\n  _shiftSelectedKeyIndices: function _shiftSelectedKeyIndices(keyIndex) {\n    for (var currentKeyIndex = keyIndex; currentKeyIndex < this.options.selectedItemKeys.length; currentKeyIndex++) {\n      var currentKey = this.options.selectedItemKeys[currentKeyIndex];\n      var currentKeyHash = getKeyHash(currentKey);\n      var currentKeyIndices = this.options.keyHashIndices[currentKeyHash];\n\n      if (!currentKeyIndices) {\n        continue;\n      }\n\n      for (var i = 0; i < currentKeyIndices.length; i++) {\n        if (currentKeyIndices[i] > keyIndex) {\n          currentKeyIndices[i]--;\n        }\n      }\n    }\n  },\n  removeSelectedItem: function removeSelectedItem(key, keyIndicesToRemoveMap) {\n    var keyHash = this._getKeyHash(key);\n\n    var isBatchDeselect = !!keyIndicesToRemoveMap;\n\n    var keyIndex = this._indexOfSelectedItemKey(keyHash, keyIndicesToRemoveMap);\n\n    if (keyIndex < 0) {\n      return keyIndex;\n    }\n\n    this.options.removedItemKeys.push(key);\n    this.options.removedItems.push(this.options.selectedItems[keyIndex]);\n\n    if (isBatchDeselect) {\n      return keyIndex;\n    }\n\n    this.options.selectedItemKeys.splice(keyIndex, 1);\n    this.options.selectedItems.splice(keyIndex, 1);\n\n    if (typeUtils.isObject(keyHash) || !this.options.keyHashIndices) {\n      return keyIndex;\n    }\n\n    var keyIndices = this.options.keyHashIndices[keyHash];\n\n    if (!keyIndices) {\n      return keyIndex;\n    }\n\n    keyIndices.shift();\n\n    if (!keyIndices.length) {\n      delete this.options.keyHashIndices[keyHash];\n    }\n\n    this._shiftSelectedKeyIndices(keyIndex);\n\n    return keyIndex;\n  },\n  _updateAddedItemKeys: function _updateAddedItemKeys(keys, items) {\n    for (var i = 0; i < keys.length; i++) {\n      if (!this.isItemKeySelected(keys[i])) {\n        this.options.addedItemKeys.push(keys[i]);\n        this.options.addedItems.push(items[i]);\n      }\n    }\n  },\n  _updateRemovedItemKeys: function _updateRemovedItemKeys(keys, oldSelectedKeys, oldSelectedItems) {\n    for (var i = 0; i < oldSelectedKeys.length; i++) {\n      if (!this.isItemKeySelected(oldSelectedKeys[i])) {\n        this.options.removedItemKeys.push(oldSelectedKeys[i]);\n        this.options.removedItems.push(oldSelectedItems[i]);\n      }\n    }\n  },\n  _getKeyHash: function _getKeyHash(key) {\n    return this.options.equalByReference ? key : getKeyHash(key);\n  },\n  setSelectedItems: function setSelectedItems(keys, items) {\n    this._updateAddedItemKeys(keys, items);\n\n    var oldSelectedKeys = this.options.selectedItemKeys;\n    var oldSelectedItems = this.options.selectedItems;\n\n    if (!this.options.equalByReference) {\n      this._initSelectedItemKeyHash();\n\n      this.updateSelectedItemKeyHash(keys);\n    }\n\n    this._setOption(\"selectedItemKeys\", keys);\n\n    this._setOption(\"selectedItems\", items);\n\n    this._updateRemovedItemKeys(keys, oldSelectedKeys, oldSelectedItems);\n  },\n  isItemDataSelected: function isItemDataSelected(itemData) {\n    var key = this.options.keyOf(itemData);\n    return this.isItemKeySelected(key);\n  },\n  isItemKeySelected: function isItemKeySelected(key) {\n    var keyHash = this._getKeyHash(key);\n\n    var index = this._indexOfSelectedItemKey(keyHash);\n\n    return index !== -1;\n  },\n  getSelectAllState: function getSelectAllState(visibleOnly) {\n    if (visibleOnly) {\n      return this._getVisibleSelectAllState();\n    } else {\n      return this._getFullSelectAllState();\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/selection/selection.strategy.standard.js"],"names":["commonUtils","require","typeUtils","isDefined","getKeyHash","dataQuery","deferredUtils","SelectionFilterCreator","when","Deferred","errors","SelectionStrategy","module","exports","inherit","ctor","options","callBase","_initSelectedItemKeyHash","_setOption","equalByReference","getSelectedItemKeys","selectedItemKeys","slice","getSelectedItems","selectedItems","_preserveSelectionUpdate","items","isDeselect","keyOf","keyIndicesToRemoveMap","keyIndex","i","isBatchDeselect","length","item","key","removeSelectedItem","addSelectedItem","_batchRemoveSelectedItems","push","updateSelectedItemKeyHash","_loadSelectedItemsCore","keys","isSelectAll","deferred","resolve","filter","selectionFilterCreator","combinedFilter","getCombinedFilter","deselectedItems","toArray","filteredItems","plainItems","isSelectableItem","map","getItemData","localFilter","getLocalFilter","equalKeys","bind","_loadFilteredData","_replaceSelectionUpdate","internalKeys","setSelectedItems","_warnOnIncorrectKeys","allowNullValue","isItemKeySelected","log","_loadSelectedItems","that","_lastLoadDeferred","always","done","fail","reject","preserve","onSelectionChanged","itemData","disabled","disabledItemKeys","indexOf","keyHash","_getKeyHash","_indexOfSelectedItemKey","isObject","keyHashIndices","addedItemKeys","addedItems","_getSelectedIndexByKey","ignoreIndicesMap","index","_getSelectedIndexByHash","indices","selectedIndex","_shiftSelectedKeyIndices","currentKeyIndex","currentKey","currentKeyHash","currentKeyIndices","removedItemKeys","removedItems","splice","keyIndices","shift","_updateAddedItemKeys","_updateRemovedItemKeys","oldSelectedKeys","oldSelectedItems","isItemDataSelected","getSelectAllState","visibleOnly","_getVisibleSelectAllState","_getFullSelectAllState"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/selection/selection.strategy.standard.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar commonUtils = require(\"../../core/utils/common\");\r\nvar typeUtils = require(\"../../core/utils/type\");\r\nvar isDefined = typeUtils.isDefined;\r\nvar getKeyHash = commonUtils.getKeyHash;\r\nvar dataQuery = require(\"../../data/query\");\r\nvar deferredUtils = require(\"../../core/utils/deferred\");\r\nvar SelectionFilterCreator = require(\"../../core/utils/selection_filter\").SelectionFilterCreator;\r\nvar when = deferredUtils.when;\r\nvar Deferred = deferredUtils.Deferred;\r\nvar errors = require(\"../widget/ui.errors\");\r\nvar SelectionStrategy = require(\"./selection.strategy\");\r\nmodule.exports = SelectionStrategy.inherit({\r\n    ctor: function(options) {\r\n        this.callBase(options);\r\n        this._initSelectedItemKeyHash()\r\n    },\r\n    _initSelectedItemKeyHash: function() {\r\n        this._setOption(\"keyHashIndices\", this.options.equalByReference ? null : {})\r\n    },\r\n    getSelectedItemKeys: function() {\r\n        return this.options.selectedItemKeys.slice(0)\r\n    },\r\n    getSelectedItems: function() {\r\n        return this.options.selectedItems.slice(0)\r\n    },\r\n    _preserveSelectionUpdate: function(items, isDeselect) {\r\n        var keyOf = this.options.keyOf;\r\n        var keyIndicesToRemoveMap;\r\n        var keyIndex;\r\n        var i;\r\n        if (!keyOf) {\r\n            return\r\n        }\r\n        var isBatchDeselect = isDeselect && items.length > 1 && !this.options.equalByReference;\r\n        if (isBatchDeselect) {\r\n            keyIndicesToRemoveMap = {}\r\n        }\r\n        for (i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var key = keyOf(item);\r\n            if (isDeselect) {\r\n                keyIndex = this.removeSelectedItem(key, keyIndicesToRemoveMap);\r\n                if (keyIndicesToRemoveMap && keyIndex >= 0) {\r\n                    keyIndicesToRemoveMap[keyIndex] = true\r\n                }\r\n            } else {\r\n                this.addSelectedItem(key, item)\r\n            }\r\n        }\r\n        if (isBatchDeselect) {\r\n            this._batchRemoveSelectedItems(keyIndicesToRemoveMap)\r\n        }\r\n    },\r\n    _batchRemoveSelectedItems: function(keyIndicesToRemoveMap) {\r\n        var selectedItemKeys = this.options.selectedItemKeys.slice(0);\r\n        var selectedItems = this.options.selectedItems.slice(0);\r\n        this.options.selectedItemKeys.length = 0;\r\n        this.options.selectedItems.length = 0;\r\n        for (var i = 0; i < selectedItemKeys.length; i++) {\r\n            if (!keyIndicesToRemoveMap[i]) {\r\n                this.options.selectedItemKeys.push(selectedItemKeys[i]);\r\n                this.options.selectedItems.push(selectedItems[i])\r\n            }\r\n        }\r\n        this._initSelectedItemKeyHash();\r\n        this.updateSelectedItemKeyHash(this.options.selectedItemKeys)\r\n    },\r\n    _loadSelectedItemsCore: function(keys, isDeselect, isSelectAll) {\r\n        var deferred = new Deferred;\r\n        var key = this.options.key();\r\n        if (!keys.length && !isSelectAll) {\r\n            deferred.resolve([]);\r\n            return deferred\r\n        }\r\n        var filter = this.options.filter();\r\n        if (isSelectAll && isDeselect && !filter) {\r\n            deferred.resolve(this.getSelectedItems());\r\n            return deferred\r\n        }\r\n        var selectionFilterCreator = new SelectionFilterCreator(keys, isSelectAll);\r\n        var combinedFilter = selectionFilterCreator.getCombinedFilter(key, filter);\r\n        var deselectedItems = [];\r\n        if (isDeselect) {\r\n            deselectedItems = combinedFilter ? dataQuery(this.options.selectedItems).filter(combinedFilter).toArray() : this.options.selectedItems.slice(0)\r\n        }\r\n        var filteredItems = deselectedItems.length ? deselectedItems : this.options.plainItems(true).filter(this.options.isSelectableItem).map(this.options.getItemData);\r\n        var localFilter = selectionFilterCreator.getLocalFilter(this.options.keyOf, this.equalKeys.bind(this), this.options.equalByReference, key);\r\n        filteredItems = filteredItems.filter(localFilter);\r\n        if (deselectedItems.length || !isSelectAll && filteredItems.length === keys.length) {\r\n            deferred.resolve(filteredItems)\r\n        } else {\r\n            deferred = this._loadFilteredData(combinedFilter, localFilter, null, isSelectAll)\r\n        }\r\n        return deferred\r\n    },\r\n    _replaceSelectionUpdate: function(items) {\r\n        var internalKeys = [];\r\n        var keyOf = this.options.keyOf;\r\n        if (!keyOf) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var key = keyOf(item);\r\n            internalKeys.push(key)\r\n        }\r\n        this.setSelectedItems(internalKeys, items)\r\n    },\r\n    _warnOnIncorrectKeys: function(keys) {\r\n        var allowNullValue = this.options.allowNullValue;\r\n        for (var i = 0; i < keys.length; i++) {\r\n            var key = keys[i];\r\n            if ((!allowNullValue || null !== key) && !this.isItemKeySelected(key)) {\r\n                errors.log(\"W1002\", key)\r\n            }\r\n        }\r\n    },\r\n    _loadSelectedItems: function(keys, isDeselect, isSelectAll) {\r\n        var that = this;\r\n        var deferred = new Deferred;\r\n        when(that._lastLoadDeferred).always(function() {\r\n            that._loadSelectedItemsCore(keys, isDeselect, isSelectAll).done(deferred.resolve).fail(deferred.reject)\r\n        });\r\n        that._lastLoadDeferred = deferred;\r\n        return deferred\r\n    },\r\n    selectedItemKeys: function(keys, preserve, isDeselect, isSelectAll) {\r\n        var that = this;\r\n        var deferred = that._loadSelectedItems(keys, isDeselect, isSelectAll);\r\n        deferred.done(function(items) {\r\n            if (preserve) {\r\n                that._preserveSelectionUpdate(items, isDeselect)\r\n            } else {\r\n                that._replaceSelectionUpdate(items)\r\n            }\r\n            that.onSelectionChanged()\r\n        });\r\n        return deferred\r\n    },\r\n    addSelectedItem: function(key, itemData) {\r\n        if (isDefined(itemData) && itemData.disabled) {\r\n            if (this.options.disabledItemKeys.indexOf(key) === -1) {\r\n                this.options.disabledItemKeys.push(key)\r\n            }\r\n            return\r\n        }\r\n        var keyHash = this._getKeyHash(key);\r\n        if (this._indexOfSelectedItemKey(keyHash) === -1) {\r\n            if (!typeUtils.isObject(keyHash) && this.options.keyHashIndices) {\r\n                this.options.keyHashIndices[keyHash] = [this.options.selectedItemKeys.length]\r\n            }\r\n            this.options.selectedItemKeys.push(key);\r\n            this.options.addedItemKeys.push(key);\r\n            this.options.addedItems.push(itemData);\r\n            this.options.selectedItems.push(itemData)\r\n        }\r\n    },\r\n    _getSelectedIndexByKey: function(key, ignoreIndicesMap) {\r\n        var selectedItemKeys = this.options.selectedItemKeys;\r\n        for (var index = 0; index < selectedItemKeys.length; index++) {\r\n            if ((!ignoreIndicesMap || !ignoreIndicesMap[index]) && this.equalKeys(selectedItemKeys[index], key)) {\r\n                return index\r\n            }\r\n        }\r\n        return -1\r\n    },\r\n    _getSelectedIndexByHash: function(key, ignoreIndicesMap) {\r\n        var indices = this.options.keyHashIndices[key];\r\n        if (indices && indices.length > 1 && ignoreIndicesMap) {\r\n            indices = indices.filter(function(index) {\r\n                return !ignoreIndicesMap[index]\r\n            })\r\n        }\r\n        return indices && indices[0] >= 0 ? indices[0] : -1\r\n    },\r\n    _indexOfSelectedItemKey: function(key, ignoreIndicesMap) {\r\n        var selectedIndex;\r\n        if (this.options.equalByReference) {\r\n            selectedIndex = this.options.selectedItemKeys.indexOf(key)\r\n        } else {\r\n            if (typeUtils.isObject(key)) {\r\n                selectedIndex = this._getSelectedIndexByKey(key, ignoreIndicesMap)\r\n            } else {\r\n                selectedIndex = this._getSelectedIndexByHash(key, ignoreIndicesMap)\r\n            }\r\n        }\r\n        return selectedIndex\r\n    },\r\n    _shiftSelectedKeyIndices: function(keyIndex) {\r\n        for (var currentKeyIndex = keyIndex; currentKeyIndex < this.options.selectedItemKeys.length; currentKeyIndex++) {\r\n            var currentKey = this.options.selectedItemKeys[currentKeyIndex];\r\n            var currentKeyHash = getKeyHash(currentKey);\r\n            var currentKeyIndices = this.options.keyHashIndices[currentKeyHash];\r\n            if (!currentKeyIndices) {\r\n                continue\r\n            }\r\n            for (var i = 0; i < currentKeyIndices.length; i++) {\r\n                if (currentKeyIndices[i] > keyIndex) {\r\n                    currentKeyIndices[i]--\r\n                }\r\n            }\r\n        }\r\n    },\r\n    removeSelectedItem: function(key, keyIndicesToRemoveMap) {\r\n        var keyHash = this._getKeyHash(key);\r\n        var isBatchDeselect = !!keyIndicesToRemoveMap;\r\n        var keyIndex = this._indexOfSelectedItemKey(keyHash, keyIndicesToRemoveMap);\r\n        if (keyIndex < 0) {\r\n            return keyIndex\r\n        }\r\n        this.options.removedItemKeys.push(key);\r\n        this.options.removedItems.push(this.options.selectedItems[keyIndex]);\r\n        if (isBatchDeselect) {\r\n            return keyIndex\r\n        }\r\n        this.options.selectedItemKeys.splice(keyIndex, 1);\r\n        this.options.selectedItems.splice(keyIndex, 1);\r\n        if (typeUtils.isObject(keyHash) || !this.options.keyHashIndices) {\r\n            return keyIndex\r\n        }\r\n        var keyIndices = this.options.keyHashIndices[keyHash];\r\n        if (!keyIndices) {\r\n            return keyIndex\r\n        }\r\n        keyIndices.shift();\r\n        if (!keyIndices.length) {\r\n            delete this.options.keyHashIndices[keyHash]\r\n        }\r\n        this._shiftSelectedKeyIndices(keyIndex);\r\n        return keyIndex\r\n    },\r\n    _updateAddedItemKeys: function(keys, items) {\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (!this.isItemKeySelected(keys[i])) {\r\n                this.options.addedItemKeys.push(keys[i]);\r\n                this.options.addedItems.push(items[i])\r\n            }\r\n        }\r\n    },\r\n    _updateRemovedItemKeys: function(keys, oldSelectedKeys, oldSelectedItems) {\r\n        for (var i = 0; i < oldSelectedKeys.length; i++) {\r\n            if (!this.isItemKeySelected(oldSelectedKeys[i])) {\r\n                this.options.removedItemKeys.push(oldSelectedKeys[i]);\r\n                this.options.removedItems.push(oldSelectedItems[i])\r\n            }\r\n        }\r\n    },\r\n    _getKeyHash: function(key) {\r\n        return this.options.equalByReference ? key : getKeyHash(key)\r\n    },\r\n    setSelectedItems: function(keys, items) {\r\n        this._updateAddedItemKeys(keys, items);\r\n        var oldSelectedKeys = this.options.selectedItemKeys;\r\n        var oldSelectedItems = this.options.selectedItems;\r\n        if (!this.options.equalByReference) {\r\n            this._initSelectedItemKeyHash();\r\n            this.updateSelectedItemKeyHash(keys)\r\n        }\r\n        this._setOption(\"selectedItemKeys\", keys);\r\n        this._setOption(\"selectedItems\", items);\r\n        this._updateRemovedItemKeys(keys, oldSelectedKeys, oldSelectedItems)\r\n    },\r\n    isItemDataSelected: function(itemData) {\r\n        var key = this.options.keyOf(itemData);\r\n        return this.isItemKeySelected(key)\r\n    },\r\n    isItemKeySelected: function(key) {\r\n        var keyHash = this._getKeyHash(key);\r\n        var index = this._indexOfSelectedItemKey(keyHash);\r\n        return index !== -1\r\n    },\r\n    getSelectAllState: function(visibleOnly) {\r\n        if (visibleOnly) {\r\n            return this._getVisibleSelectAllState()\r\n        } else {\r\n            return this._getFullSelectAllState()\r\n        }\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}