{"ast":null,"code":"/**\r\n * DevExtreme (events/drag.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\");\n\nvar dataUtils = require(\"../core/element_data\");\n\nvar wrapToArray = require(\"../core/utils/array\").wrapToArray;\n\nvar inArray = require(\"../core/utils/array\").inArray;\n\nvar iteratorUtils = require(\"../core/utils/iterator\");\n\nvar contains = require(\"../core/utils/dom\").contains;\n\nvar registerEvent = require(\"./core/event_registrator\");\n\nvar eventUtils = require(\"./utils\");\n\nvar GestureEmitter = require(\"./gesture/emitter.gesture\");\n\nvar registerEmitter = require(\"./core/emitter_registrator\");\n\nvar DRAG_START_EVENT = \"dxdragstart\";\nvar DRAG_EVENT = \"dxdrag\";\nvar DRAG_END_EVENT = \"dxdragend\";\nvar DRAG_ENTER_EVENT = \"dxdragenter\";\nvar DRAG_LEAVE_EVENT = \"dxdragleave\";\nvar DROP_EVENT = \"dxdrop\";\nvar DX_DRAG_EVENTS_COUNT_KEY = \"dxDragEventsCount\";\nvar knownDropTargets = [];\nvar knownDropTargetSelectors = [];\nvar knownDropTargetConfigs = [];\nvar dropTargetRegistration = {\n  setup: function setup(element, data) {\n    var knownDropTarget = inArray(element, knownDropTargets) !== -1;\n\n    if (!knownDropTarget) {\n      knownDropTargets.push(element);\n      knownDropTargetSelectors.push([]);\n      knownDropTargetConfigs.push(data || {});\n    }\n  },\n  add: function add(element, handleObj) {\n    var index = inArray(element, knownDropTargets);\n    this.updateEventsCounter(element, handleObj.type, 1);\n    var selector = handleObj.selector;\n\n    if (inArray(selector, knownDropTargetSelectors[index]) === -1) {\n      knownDropTargetSelectors[index].push(selector);\n    }\n  },\n  updateEventsCounter: function updateEventsCounter(element, event, value) {\n    if ([DRAG_ENTER_EVENT, DRAG_LEAVE_EVENT, DROP_EVENT].indexOf(event) > -1) {\n      var eventsCount = dataUtils.data(element, DX_DRAG_EVENTS_COUNT_KEY) || 0;\n      dataUtils.data(element, DX_DRAG_EVENTS_COUNT_KEY, Math.max(0, eventsCount + value));\n    }\n  },\n  remove: function remove(element, handleObj) {\n    this.updateEventsCounter(element, handleObj.type, -1);\n  },\n  teardown: function teardown(element) {\n    var handlersCount = dataUtils.data(element, DX_DRAG_EVENTS_COUNT_KEY);\n\n    if (!handlersCount) {\n      var index = inArray(element, knownDropTargets);\n      knownDropTargets.splice(index, 1);\n      knownDropTargetSelectors.splice(index, 1);\n      knownDropTargetConfigs.splice(index, 1);\n      dataUtils.removeData(element, DX_DRAG_EVENTS_COUNT_KEY);\n    }\n  }\n};\nregisterEvent(DRAG_ENTER_EVENT, dropTargetRegistration);\nregisterEvent(DRAG_LEAVE_EVENT, dropTargetRegistration);\nregisterEvent(DROP_EVENT, dropTargetRegistration);\n\nvar getItemDelegatedTargets = function getItemDelegatedTargets($element) {\n  var dropTargetIndex = inArray($element.get(0), knownDropTargets);\n  var dropTargetSelectors = knownDropTargetSelectors[dropTargetIndex].filter(function (selector) {\n    return selector;\n  });\n  var $delegatedTargets = $element.find(dropTargetSelectors.join(\", \"));\n\n  if (inArray(void 0, knownDropTargetSelectors[dropTargetIndex]) !== -1) {\n    $delegatedTargets = $delegatedTargets.add($element);\n  }\n\n  return $delegatedTargets;\n};\n\nvar getItemConfig = function getItemConfig($element) {\n  var dropTargetIndex = inArray($element.get(0), knownDropTargets);\n  return knownDropTargetConfigs[dropTargetIndex];\n};\n\nvar getItemPosition = function getItemPosition(dropTargetConfig, $element) {\n  if (dropTargetConfig.itemPositionFunc) {\n    return dropTargetConfig.itemPositionFunc($element);\n  } else {\n    return $element.offset();\n  }\n};\n\nvar getItemSize = function getItemSize(dropTargetConfig, $element) {\n  if (dropTargetConfig.itemSizeFunc) {\n    return dropTargetConfig.itemSizeFunc($element);\n  }\n\n  return {\n    width: $element.get(0).getBoundingClientRect().width,\n    height: $element.get(0).getBoundingClientRect().height\n  };\n};\n\nvar DragEmitter = GestureEmitter.inherit({\n  ctor: function ctor(element) {\n    this.callBase(element);\n    this.direction = \"both\";\n  },\n  _init: function _init(e) {\n    this._initEvent = e;\n  },\n  _start: function _start(e) {\n    e = this._fireEvent(DRAG_START_EVENT, this._initEvent);\n    this._maxLeftOffset = e.maxLeftOffset;\n    this._maxRightOffset = e.maxRightOffset;\n    this._maxTopOffset = e.maxTopOffset;\n    this._maxBottomOffset = e.maxBottomOffset;\n    var dropTargets = wrapToArray(e.targetElements || (null === e.targetElements ? [] : knownDropTargets));\n    this._dropTargets = iteratorUtils.map(dropTargets, function (element) {\n      return $(element).get(0);\n    });\n  },\n  _move: function _move(e) {\n    var eventData = eventUtils.eventData(e);\n\n    var dragOffset = this._calculateOffset(eventData);\n\n    e = this._fireEvent(DRAG_EVENT, e, {\n      offset: dragOffset\n    });\n\n    this._processDropTargets(e);\n\n    if (!e._cancelPreventDefault) {\n      e.preventDefault();\n    }\n  },\n  _calculateOffset: function _calculateOffset(eventData) {\n    return {\n      x: this._calculateXOffset(eventData),\n      y: this._calculateYOffset(eventData)\n    };\n  },\n  _calculateXOffset: function _calculateXOffset(eventData) {\n    if (\"vertical\" !== this.direction) {\n      var offset = eventData.x - this._startEventData.x;\n      return this._fitOffset(offset, this._maxLeftOffset, this._maxRightOffset);\n    }\n\n    return 0;\n  },\n  _calculateYOffset: function _calculateYOffset(eventData) {\n    if (\"horizontal\" !== this.direction) {\n      var offset = eventData.y - this._startEventData.y;\n      return this._fitOffset(offset, this._maxTopOffset, this._maxBottomOffset);\n    }\n\n    return 0;\n  },\n  _fitOffset: function _fitOffset(offset, minOffset, maxOffset) {\n    if (null != minOffset) {\n      offset = Math.max(offset, -minOffset);\n    }\n\n    if (null != maxOffset) {\n      offset = Math.min(offset, maxOffset);\n    }\n\n    return offset;\n  },\n  _processDropTargets: function _processDropTargets(e) {\n    var target = this._findDropTarget(e);\n\n    var sameTarget = target === this._currentDropTarget;\n\n    if (!sameTarget) {\n      this._fireDropTargetEvent(e, DRAG_LEAVE_EVENT);\n\n      this._currentDropTarget = target;\n\n      this._fireDropTargetEvent(e, DRAG_ENTER_EVENT);\n    }\n  },\n  _fireDropTargetEvent: function _fireDropTargetEvent(event, eventName) {\n    if (!this._currentDropTarget) {\n      return;\n    }\n\n    var eventData = {\n      type: eventName,\n      originalEvent: event,\n      draggingElement: this._$element.get(0),\n      target: this._currentDropTarget\n    };\n    eventUtils.fireEvent(eventData);\n  },\n  _findDropTarget: function _findDropTarget(e) {\n    var that = this;\n    var result;\n    iteratorUtils.each(knownDropTargets, function (_, target) {\n      if (!that._checkDropTargetActive(target)) {\n        return;\n      }\n\n      var $target = $(target);\n      iteratorUtils.each(getItemDelegatedTargets($target), function (_, delegatedTarget) {\n        var $delegatedTarget = $(delegatedTarget);\n\n        if (that._checkDropTarget(getItemConfig($target), $delegatedTarget, e)) {\n          result = delegatedTarget;\n        }\n      });\n    });\n    return result;\n  },\n  _checkDropTargetActive: function _checkDropTargetActive(target) {\n    var active = false;\n    iteratorUtils.each(this._dropTargets, function (_, activeTarget) {\n      active = active || activeTarget === target || contains(activeTarget, target);\n      return !active;\n    });\n    return active;\n  },\n  _checkDropTarget: function _checkDropTarget(config, $target, e) {\n    var isDraggingElement = $target.get(0) === $(e.target).get(0);\n\n    if (isDraggingElement) {\n      return false;\n    }\n\n    var targetPosition = getItemPosition(config, $target);\n\n    if (e.pageX < targetPosition.left) {\n      return false;\n    }\n\n    if (e.pageY < targetPosition.top) {\n      return false;\n    }\n\n    var targetSize = getItemSize(config, $target);\n\n    if (e.pageX > targetPosition.left + targetSize.width) {\n      return false;\n    }\n\n    if (e.pageY > targetPosition.top + targetSize.height) {\n      return false;\n    }\n\n    if (config.checkDropTarget && !config.checkDropTarget($target, e)) {\n      return false;\n    }\n\n    return $target;\n  },\n  _end: function _end(e) {\n    var eventData = eventUtils.eventData(e);\n\n    this._fireEvent(DRAG_END_EVENT, e, {\n      offset: this._calculateOffset(eventData)\n    });\n\n    this._fireDropTargetEvent(e, DROP_EVENT);\n\n    delete this._currentDropTarget;\n  }\n});\nregisterEmitter({\n  emitter: DragEmitter,\n  events: [DRAG_START_EVENT, DRAG_EVENT, DRAG_END_EVENT]\n});\nexports.move = DRAG_EVENT;\nexports.start = DRAG_START_EVENT;\nexports.end = DRAG_END_EVENT;\nexports.enter = DRAG_ENTER_EVENT;\nexports.leave = DRAG_LEAVE_EVENT;\nexports.drop = DROP_EVENT;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/events/drag.js"],"names":["$","require","dataUtils","wrapToArray","inArray","iteratorUtils","contains","registerEvent","eventUtils","GestureEmitter","registerEmitter","DRAG_START_EVENT","DRAG_EVENT","DRAG_END_EVENT","DRAG_ENTER_EVENT","DRAG_LEAVE_EVENT","DROP_EVENT","DX_DRAG_EVENTS_COUNT_KEY","knownDropTargets","knownDropTargetSelectors","knownDropTargetConfigs","dropTargetRegistration","setup","element","data","knownDropTarget","push","add","handleObj","index","updateEventsCounter","type","selector","event","value","indexOf","eventsCount","Math","max","remove","teardown","handlersCount","splice","removeData","getItemDelegatedTargets","$element","dropTargetIndex","get","dropTargetSelectors","filter","$delegatedTargets","find","join","getItemConfig","getItemPosition","dropTargetConfig","itemPositionFunc","offset","getItemSize","itemSizeFunc","width","getBoundingClientRect","height","DragEmitter","inherit","ctor","callBase","direction","_init","e","_initEvent","_start","_fireEvent","_maxLeftOffset","maxLeftOffset","_maxRightOffset","maxRightOffset","_maxTopOffset","maxTopOffset","_maxBottomOffset","maxBottomOffset","dropTargets","targetElements","_dropTargets","map","_move","eventData","dragOffset","_calculateOffset","_processDropTargets","_cancelPreventDefault","preventDefault","x","_calculateXOffset","y","_calculateYOffset","_startEventData","_fitOffset","minOffset","maxOffset","min","target","_findDropTarget","sameTarget","_currentDropTarget","_fireDropTargetEvent","eventName","originalEvent","draggingElement","_$element","fireEvent","that","result","each","_","_checkDropTargetActive","$target","delegatedTarget","$delegatedTarget","_checkDropTarget","active","activeTarget","config","isDraggingElement","targetPosition","pageX","left","pageY","top","targetSize","checkDropTarget","_end","emitter","events","exports","move","start","end","enter","leave","drop"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (events/drag.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar dataUtils = require(\"../core/element_data\");\r\nvar wrapToArray = require(\"../core/utils/array\").wrapToArray;\r\nvar inArray = require(\"../core/utils/array\").inArray;\r\nvar iteratorUtils = require(\"../core/utils/iterator\");\r\nvar contains = require(\"../core/utils/dom\").contains;\r\nvar registerEvent = require(\"./core/event_registrator\");\r\nvar eventUtils = require(\"./utils\");\r\nvar GestureEmitter = require(\"./gesture/emitter.gesture\");\r\nvar registerEmitter = require(\"./core/emitter_registrator\");\r\nvar DRAG_START_EVENT = \"dxdragstart\";\r\nvar DRAG_EVENT = \"dxdrag\";\r\nvar DRAG_END_EVENT = \"dxdragend\";\r\nvar DRAG_ENTER_EVENT = \"dxdragenter\";\r\nvar DRAG_LEAVE_EVENT = \"dxdragleave\";\r\nvar DROP_EVENT = \"dxdrop\";\r\nvar DX_DRAG_EVENTS_COUNT_KEY = \"dxDragEventsCount\";\r\nvar knownDropTargets = [];\r\nvar knownDropTargetSelectors = [];\r\nvar knownDropTargetConfigs = [];\r\nvar dropTargetRegistration = {\r\n    setup: function(element, data) {\r\n        var knownDropTarget = inArray(element, knownDropTargets) !== -1;\r\n        if (!knownDropTarget) {\r\n            knownDropTargets.push(element);\r\n            knownDropTargetSelectors.push([]);\r\n            knownDropTargetConfigs.push(data || {})\r\n        }\r\n    },\r\n    add: function(element, handleObj) {\r\n        var index = inArray(element, knownDropTargets);\r\n        this.updateEventsCounter(element, handleObj.type, 1);\r\n        var selector = handleObj.selector;\r\n        if (inArray(selector, knownDropTargetSelectors[index]) === -1) {\r\n            knownDropTargetSelectors[index].push(selector)\r\n        }\r\n    },\r\n    updateEventsCounter: function(element, event, value) {\r\n        if ([DRAG_ENTER_EVENT, DRAG_LEAVE_EVENT, DROP_EVENT].indexOf(event) > -1) {\r\n            var eventsCount = dataUtils.data(element, DX_DRAG_EVENTS_COUNT_KEY) || 0;\r\n            dataUtils.data(element, DX_DRAG_EVENTS_COUNT_KEY, Math.max(0, eventsCount + value))\r\n        }\r\n    },\r\n    remove: function(element, handleObj) {\r\n        this.updateEventsCounter(element, handleObj.type, -1)\r\n    },\r\n    teardown: function(element) {\r\n        var handlersCount = dataUtils.data(element, DX_DRAG_EVENTS_COUNT_KEY);\r\n        if (!handlersCount) {\r\n            var index = inArray(element, knownDropTargets);\r\n            knownDropTargets.splice(index, 1);\r\n            knownDropTargetSelectors.splice(index, 1);\r\n            knownDropTargetConfigs.splice(index, 1);\r\n            dataUtils.removeData(element, DX_DRAG_EVENTS_COUNT_KEY)\r\n        }\r\n    }\r\n};\r\nregisterEvent(DRAG_ENTER_EVENT, dropTargetRegistration);\r\nregisterEvent(DRAG_LEAVE_EVENT, dropTargetRegistration);\r\nregisterEvent(DROP_EVENT, dropTargetRegistration);\r\nvar getItemDelegatedTargets = function($element) {\r\n    var dropTargetIndex = inArray($element.get(0), knownDropTargets);\r\n    var dropTargetSelectors = knownDropTargetSelectors[dropTargetIndex].filter(function(selector) {\r\n        return selector\r\n    });\r\n    var $delegatedTargets = $element.find(dropTargetSelectors.join(\", \"));\r\n    if (inArray(void 0, knownDropTargetSelectors[dropTargetIndex]) !== -1) {\r\n        $delegatedTargets = $delegatedTargets.add($element)\r\n    }\r\n    return $delegatedTargets\r\n};\r\nvar getItemConfig = function($element) {\r\n    var dropTargetIndex = inArray($element.get(0), knownDropTargets);\r\n    return knownDropTargetConfigs[dropTargetIndex]\r\n};\r\nvar getItemPosition = function(dropTargetConfig, $element) {\r\n    if (dropTargetConfig.itemPositionFunc) {\r\n        return dropTargetConfig.itemPositionFunc($element)\r\n    } else {\r\n        return $element.offset()\r\n    }\r\n};\r\nvar getItemSize = function(dropTargetConfig, $element) {\r\n    if (dropTargetConfig.itemSizeFunc) {\r\n        return dropTargetConfig.itemSizeFunc($element)\r\n    }\r\n    return {\r\n        width: $element.get(0).getBoundingClientRect().width,\r\n        height: $element.get(0).getBoundingClientRect().height\r\n    }\r\n};\r\nvar DragEmitter = GestureEmitter.inherit({\r\n    ctor: function(element) {\r\n        this.callBase(element);\r\n        this.direction = \"both\"\r\n    },\r\n    _init: function(e) {\r\n        this._initEvent = e\r\n    },\r\n    _start: function(e) {\r\n        e = this._fireEvent(DRAG_START_EVENT, this._initEvent);\r\n        this._maxLeftOffset = e.maxLeftOffset;\r\n        this._maxRightOffset = e.maxRightOffset;\r\n        this._maxTopOffset = e.maxTopOffset;\r\n        this._maxBottomOffset = e.maxBottomOffset;\r\n        var dropTargets = wrapToArray(e.targetElements || (null === e.targetElements ? [] : knownDropTargets));\r\n        this._dropTargets = iteratorUtils.map(dropTargets, function(element) {\r\n            return $(element).get(0)\r\n        })\r\n    },\r\n    _move: function(e) {\r\n        var eventData = eventUtils.eventData(e);\r\n        var dragOffset = this._calculateOffset(eventData);\r\n        e = this._fireEvent(DRAG_EVENT, e, {\r\n            offset: dragOffset\r\n        });\r\n        this._processDropTargets(e);\r\n        if (!e._cancelPreventDefault) {\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _calculateOffset: function(eventData) {\r\n        return {\r\n            x: this._calculateXOffset(eventData),\r\n            y: this._calculateYOffset(eventData)\r\n        }\r\n    },\r\n    _calculateXOffset: function(eventData) {\r\n        if (\"vertical\" !== this.direction) {\r\n            var offset = eventData.x - this._startEventData.x;\r\n            return this._fitOffset(offset, this._maxLeftOffset, this._maxRightOffset)\r\n        }\r\n        return 0\r\n    },\r\n    _calculateYOffset: function(eventData) {\r\n        if (\"horizontal\" !== this.direction) {\r\n            var offset = eventData.y - this._startEventData.y;\r\n            return this._fitOffset(offset, this._maxTopOffset, this._maxBottomOffset)\r\n        }\r\n        return 0\r\n    },\r\n    _fitOffset: function(offset, minOffset, maxOffset) {\r\n        if (null != minOffset) {\r\n            offset = Math.max(offset, -minOffset)\r\n        }\r\n        if (null != maxOffset) {\r\n            offset = Math.min(offset, maxOffset)\r\n        }\r\n        return offset\r\n    },\r\n    _processDropTargets: function(e) {\r\n        var target = this._findDropTarget(e);\r\n        var sameTarget = target === this._currentDropTarget;\r\n        if (!sameTarget) {\r\n            this._fireDropTargetEvent(e, DRAG_LEAVE_EVENT);\r\n            this._currentDropTarget = target;\r\n            this._fireDropTargetEvent(e, DRAG_ENTER_EVENT)\r\n        }\r\n    },\r\n    _fireDropTargetEvent: function(event, eventName) {\r\n        if (!this._currentDropTarget) {\r\n            return\r\n        }\r\n        var eventData = {\r\n            type: eventName,\r\n            originalEvent: event,\r\n            draggingElement: this._$element.get(0),\r\n            target: this._currentDropTarget\r\n        };\r\n        eventUtils.fireEvent(eventData)\r\n    },\r\n    _findDropTarget: function(e) {\r\n        var that = this;\r\n        var result;\r\n        iteratorUtils.each(knownDropTargets, function(_, target) {\r\n            if (!that._checkDropTargetActive(target)) {\r\n                return\r\n            }\r\n            var $target = $(target);\r\n            iteratorUtils.each(getItemDelegatedTargets($target), function(_, delegatedTarget) {\r\n                var $delegatedTarget = $(delegatedTarget);\r\n                if (that._checkDropTarget(getItemConfig($target), $delegatedTarget, e)) {\r\n                    result = delegatedTarget\r\n                }\r\n            })\r\n        });\r\n        return result\r\n    },\r\n    _checkDropTargetActive: function(target) {\r\n        var active = false;\r\n        iteratorUtils.each(this._dropTargets, function(_, activeTarget) {\r\n            active = active || activeTarget === target || contains(activeTarget, target);\r\n            return !active\r\n        });\r\n        return active\r\n    },\r\n    _checkDropTarget: function(config, $target, e) {\r\n        var isDraggingElement = $target.get(0) === $(e.target).get(0);\r\n        if (isDraggingElement) {\r\n            return false\r\n        }\r\n        var targetPosition = getItemPosition(config, $target);\r\n        if (e.pageX < targetPosition.left) {\r\n            return false\r\n        }\r\n        if (e.pageY < targetPosition.top) {\r\n            return false\r\n        }\r\n        var targetSize = getItemSize(config, $target);\r\n        if (e.pageX > targetPosition.left + targetSize.width) {\r\n            return false\r\n        }\r\n        if (e.pageY > targetPosition.top + targetSize.height) {\r\n            return false\r\n        }\r\n        if (config.checkDropTarget && !config.checkDropTarget($target, e)) {\r\n            return false\r\n        }\r\n        return $target\r\n    },\r\n    _end: function(e) {\r\n        var eventData = eventUtils.eventData(e);\r\n        this._fireEvent(DRAG_END_EVENT, e, {\r\n            offset: this._calculateOffset(eventData)\r\n        });\r\n        this._fireDropTargetEvent(e, DROP_EVENT);\r\n        delete this._currentDropTarget\r\n    }\r\n});\r\nregisterEmitter({\r\n    emitter: DragEmitter,\r\n    events: [DRAG_START_EVENT, DRAG_EVENT, DRAG_END_EVENT]\r\n});\r\nexports.move = DRAG_EVENT;\r\nexports.start = DRAG_START_EVENT;\r\nexports.end = DRAG_END_EVENT;\r\nexports.enter = DRAG_ENTER_EVENT;\r\nexports.leave = DRAG_LEAVE_EVENT;\r\nexports.drop = DROP_EVENT;\r\n"]},"metadata":{},"sourceType":"script"}