{"ast":null,"code":"/**\r\n * DevExtreme (ui/date_box/ui.date_box.mask.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _utils = require(\"../../events/utils\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _dom = require(\"../../core/utils/dom\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _math = require(\"../../core/utils/math\");\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _uiDate_boxMask = require(\"./ui.date_box.mask.parts\");\n\nvar _date = require(\"../../localization/date\");\n\nvar _date2 = _interopRequireDefault(_date);\n\nvar _date3 = require(\"../../localization/ldml/date.parser\");\n\nvar _date4 = require(\"../../localization/ldml/date.format\");\n\nvar _uiDate_box = require(\"./ui.date_box.base\");\n\nvar _uiDate_box2 = _interopRequireDefault(_uiDate_box);\n\nvar _number = require(\"../../localization/number\");\n\nvar _number2 = _interopRequireDefault(_number);\n\nvar _devices = require(\"../../core/devices\");\n\nvar _devices2 = _interopRequireDefault(_devices);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar MASK_EVENT_NAMESPACE = \"dateBoxMask\";\nvar FORWARD = 1;\nvar BACKWARD = -1;\n\nvar DateBoxMask = _uiDate_box2.default.inherit({\n  _supportedKeys: function _supportedKeys(e) {\n    var _this = this;\n\n    var originalHandlers = this.callBase(e);\n\n    var callOriginalHandler = function callOriginalHandler(e) {\n      var originalHandler = originalHandlers[(0, _utils.normalizeKeyName)(e)];\n      return originalHandler && originalHandler.apply(_this, [e]);\n    };\n\n    var applyHandler = function applyHandler(e, maskHandler) {\n      if (_this._shouldUseOriginalHandler(e)) {\n        return callOriginalHandler.apply(_this, [e]);\n      } else {\n        return maskHandler.apply(_this, [e]);\n      }\n    };\n\n    return (0, _extend.extend)({}, originalHandlers, {\n      del: function del(e) {\n        return applyHandler(e, function (event) {\n          _this._revertPart(FORWARD);\n\n          _this._isAllSelected() || event.preventDefault();\n        });\n      },\n      backspace: function backspace(e) {\n        return applyHandler(e, function (event) {\n          _this._revertPart(BACKWARD);\n\n          _this._isAllSelected() || event.preventDefault();\n        });\n      },\n      home: function home(e) {\n        return applyHandler(e, function (event) {\n          _this._selectFirstPart();\n\n          event.preventDefault();\n        });\n      },\n      end: function end(e) {\n        return applyHandler(e, function (event) {\n          _this._selectLastPart();\n\n          event.preventDefault();\n        });\n      },\n      escape: function escape(e) {\n        return applyHandler(e, function (event) {\n          _this._revertChanges(event);\n        });\n      },\n      enter: function enter(e) {\n        return applyHandler(e, function (event) {\n          _this._enterHandler(event);\n        });\n      },\n      leftArrow: function leftArrow(e) {\n        return applyHandler(e, function (event) {\n          _this._selectNextPart(BACKWARD);\n\n          event.preventDefault();\n        });\n      },\n      rightArrow: function rightArrow(e) {\n        return applyHandler(e, function (event) {\n          _this._selectNextPart(FORWARD);\n\n          event.preventDefault();\n        });\n      },\n      upArrow: function upArrow(e) {\n        return applyHandler(e, function (event) {\n          _this._upDownArrowHandler(FORWARD);\n\n          event.preventDefault();\n        });\n      },\n      downArrow: function downArrow(e) {\n        return applyHandler(e, function (event) {\n          _this._upDownArrowHandler(BACKWARD);\n\n          event.preventDefault();\n        });\n      }\n    });\n  },\n  _shouldUseOriginalHandler: function _shouldUseOriginalHandler(e) {\n    var keysToHandleByMask = [\"backspace\", \"del\"];\n    var isNotDeletingInCalendar = this.option(\"opened\") && e && keysToHandleByMask.indexOf((0, _utils.normalizeKeyName)(e)) === -1;\n    return !this._useMaskBehavior() || isNotDeletingInCalendar || e && e.altKey;\n  },\n  _upDownArrowHandler: function _upDownArrowHandler(step) {\n    this._setNewDateIfEmpty();\n\n    var originalValue = this._getActivePartValue(this._initialMaskValue);\n\n    var currentValue = this._getActivePartValue();\n\n    var delta = currentValue - originalValue;\n\n    this._loadMaskValue(this._initialMaskValue);\n\n    this._partIncrease(delta + step, true);\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return (0, _extend.extend)(this.callBase(), {\n      useMaskBehavior: false,\n      emptyDateValue: new Date(2e3, 0, 1, 0, 0, 0),\n      advanceCaret: true\n    });\n  },\n  _isSingleCharKey: function _isSingleCharKey(e) {\n    var key = e.originalEvent.data || e.originalEvent.key;\n    return \"string\" === typeof key && 1 === key.length && !e.ctrl && !e.alt;\n  },\n  _useBeforeInputEvent: function _useBeforeInputEvent() {\n    var device = _devices2.default.real();\n\n    return device.android && device.version[0] > 4;\n  },\n  _keyboardHandler: function _keyboardHandler(e) {\n    var key = e.originalEvent.key;\n    var result = this.callBase(e);\n\n    if (!this._useMaskBehavior() || this._useBeforeInputEvent() || !this._isSingleCharKey(e)) {\n      return result;\n    }\n\n    this._processInputKey(key);\n\n    e.originalEvent.preventDefault();\n    return result;\n  },\n  _maskBeforeInputHandler: function _maskBeforeInputHandler(e) {\n    var _this2 = this;\n\n    this._maskInputHandler = null;\n    var inputType = e.originalEvent.inputType;\n\n    if (\"insertCompositionText\" === inputType) {\n      this._maskInputHandler = function () {\n        _this2._renderDisplayText(_this2._getDisplayedText(_this2._maskValue));\n\n        _this2._selectNextPart();\n      };\n    }\n\n    var isBackwardDeletion = \"deleteContentBackward\" === inputType;\n    var isForwardDeletion = \"deleteContentForward\" === inputType;\n\n    if (isBackwardDeletion || isForwardDeletion) {\n      var direction = isBackwardDeletion ? BACKWARD : FORWARD;\n\n      this._maskInputHandler = function () {\n        _this2._revertPart();\n\n        _this2._selectNextPart(direction);\n      };\n    }\n\n    if (!this._useMaskBehavior() || !this._isSingleCharKey(e)) {\n      return;\n    }\n\n    var key = e.originalEvent.data;\n\n    this._processInputKey(key);\n\n    e.preventDefault();\n    return true;\n  },\n  _keyPressHandler: function _keyPressHandler(e) {\n    this.callBase(e);\n\n    if (this._maskInputHandler) {\n      this._maskInputHandler();\n\n      this._maskInputHandler = null;\n    }\n  },\n  _processInputKey: function _processInputKey(key) {\n    if (this._isAllSelected()) {\n      this._activePartIndex = 0;\n    }\n\n    this._setNewDateIfEmpty();\n\n    if (isNaN(parseInt(key))) {\n      this._searchString(key);\n    } else {\n      this._searchNumber(key);\n    }\n  },\n  _isAllSelected: function _isAllSelected() {\n    var caret = this._caret();\n\n    return caret.end - caret.start === this.option(\"text\").length;\n  },\n  _getFormatPattern: function _getFormatPattern() {\n    if (this._formatPattern) {\n      return this._formatPattern;\n    }\n\n    var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n\n    var isLDMLPattern = (0, _type.isString)(format) && !_date2.default._getPatternByFormat(format);\n\n    if (isLDMLPattern) {\n      this._formatPattern = format;\n    } else {\n      this._formatPattern = (0, _date4.getFormat)(function (value) {\n        return _date2.default.format(value, format);\n      });\n    }\n\n    return this._formatPattern;\n  },\n  _setNewDateIfEmpty: function _setNewDateIfEmpty() {\n    if (!this._maskValue) {\n      var value = \"time\" === this.option(\"type\") ? new Date(null) : new Date();\n      this._maskValue = value;\n      this._initialMaskValue = value;\n\n      this._renderDateParts();\n    }\n  },\n  _searchNumber: function _searchNumber(char) {\n    var _this$_getActivePartL = this._getActivePartLimits(),\n        max = _this$_getActivePartL.max;\n\n    var maxLimitLength = String(max).length;\n\n    var formatLength = this._getActivePartProp(\"pattern\").length;\n\n    this._searchValue = (this._searchValue + char).substr(-maxLimitLength);\n\n    if (isNaN(this._searchValue)) {\n      this._searchValue = char;\n    }\n\n    this._setActivePartValue(this._searchValue);\n\n    if (this.option(\"advanceCaret\")) {\n      var isShortFormat = 1 === formatLength;\n      var maxSearchLength = isShortFormat ? maxLimitLength : Math.min(formatLength, maxLimitLength);\n      var isLengthExceeded = this._searchValue.length === maxSearchLength;\n      var isValueOverflowed = parseInt(this._searchValue + \"0\") > max;\n\n      if (isLengthExceeded || isValueOverflowed) {\n        this._selectNextPart(FORWARD);\n      }\n    }\n  },\n  _searchString: function _searchString(char) {\n    if (!isNaN(parseInt(this._getActivePartProp(\"text\")))) {\n      return;\n    }\n\n    var limits = this._getActivePartProp(\"limits\")(this._maskValue);\n\n    var startString = this._searchValue + char.toLowerCase();\n    var endLimit = limits.max - limits.min;\n\n    for (var i = 0; i <= endLimit; i++) {\n      this._loadMaskValue(this._initialMaskValue);\n\n      this._partIncrease(i + 1);\n\n      if (0 === this._getActivePartProp(\"text\").toLowerCase().indexOf(startString)) {\n        this._searchValue = startString;\n        return;\n      }\n    }\n\n    this._setNewDateIfEmpty();\n\n    if (this._searchValue) {\n      this._clearSearchValue();\n\n      this._searchString(char);\n    }\n  },\n  _clearSearchValue: function _clearSearchValue() {\n    this._searchValue = \"\";\n  },\n  _revertPart: function _revertPart(direction) {\n    if (!this._isAllSelected()) {\n      var actual = this._getActivePartValue(this.option(\"emptyDateValue\"));\n\n      this._setActivePartValue(actual);\n\n      this._selectNextPart(direction);\n    }\n\n    this._clearSearchValue();\n  },\n  _useMaskBehavior: function _useMaskBehavior() {\n    return this.option(\"useMaskBehavior\") && \"text\" === this.option(\"mode\");\n  },\n  _prepareRegExpInfo: function _prepareRegExpInfo() {\n    this._regExpInfo = (0, _date3.getRegExpInfo)(this._getFormatPattern(), _date2.default);\n    var regExp = this._regExpInfo.regexp;\n    var flags = regExp.flags;\n\n    var convertedRegExp = _number2.default.convertDigits(this._regExpInfo.regexp.source, false);\n\n    this._regExpInfo.regexp = RegExp(convertedRegExp, flags);\n  },\n  _initMaskState: function _initMaskState() {\n    this._activePartIndex = 0;\n    this._formatPattern = null;\n\n    this._prepareRegExpInfo();\n\n    this._loadMaskValue();\n  },\n  _renderMask: function _renderMask() {\n    this.callBase();\n\n    this._detachMaskEvents();\n\n    this._clearMaskState();\n\n    if (this._useMaskBehavior()) {\n      this._attachMaskEvents();\n\n      this._initMaskState();\n\n      this._renderDateParts();\n    }\n  },\n  _renderDateParts: function _renderDateParts() {\n    if (!this._useMaskBehavior()) {\n      return;\n    }\n\n    var text = this.option(\"text\") || this._getDisplayedText(this._maskValue);\n\n    if (text) {\n      this._dateParts = (0, _uiDate_boxMask.renderDateParts)(text, this._regExpInfo);\n\n      this._selectNextPart();\n    }\n  },\n  _detachMaskEvents: function _detachMaskEvents() {\n    _events_engine2.default.off(this._input(), \".\" + MASK_EVENT_NAMESPACE);\n  },\n  _attachMaskEvents: function _attachMaskEvents() {\n    var _this3 = this;\n\n    _events_engine2.default.on(this._input(), (0, _utils.addNamespace)(\"dxclick\", MASK_EVENT_NAMESPACE), this._maskClickHandler.bind(this));\n\n    _events_engine2.default.on(this._input(), (0, _utils.addNamespace)(\"paste\", MASK_EVENT_NAMESPACE), this._maskPasteHandler.bind(this));\n\n    _events_engine2.default.on(this._input(), (0, _utils.addNamespace)(\"drop\", MASK_EVENT_NAMESPACE), function () {\n      _this3._renderDisplayText(_this3._getDisplayedText(_this3._maskValue));\n\n      _this3._selectNextPart();\n    });\n\n    if (this._useBeforeInputEvent()) {\n      _events_engine2.default.on(this._input(), (0, _utils.addNamespace)(\"beforeinput\", MASK_EVENT_NAMESPACE), this._maskBeforeInputHandler.bind(this));\n    }\n  },\n  _selectLastPart: function _selectLastPart() {\n    if (this.option(\"text\")) {\n      this._activePartIndex = this._dateParts.length;\n\n      this._selectNextPart(BACKWARD);\n    }\n  },\n  _selectFirstPart: function _selectFirstPart() {\n    if (this.option(\"text\")) {\n      this._activePartIndex = -1;\n\n      this._selectNextPart(FORWARD);\n    }\n  },\n  _onMouseWheel: function _onMouseWheel(e) {\n    if (this._useMaskBehavior()) {\n      this._partIncrease(e.delta > 0 ? FORWARD : BACKWARD, e);\n    }\n  },\n  _selectNextPart: function _selectNextPart() {\n    var step = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;\n\n    if (!this.option(\"text\") || this._disposed) {\n      return;\n    }\n\n    if (step) {\n      this._initialMaskValue = new Date(this._maskValue);\n    }\n\n    var index = (0, _math.fitIntoRange)(this._activePartIndex + step, 0, this._dateParts.length - 1);\n\n    if (this._dateParts[index].isStub) {\n      var isBoundaryIndex = 0 === index && step < 0 || index === this._dateParts.length - 1 && step > 0;\n\n      if (!isBoundaryIndex) {\n        this._selectNextPart(step >= 0 ? step + 1 : step - 1);\n\n        return;\n      } else {\n        index = this._activePartIndex;\n      }\n    }\n\n    if (this._activePartIndex !== index) {\n      this._clearSearchValue();\n    }\n\n    this._activePartIndex = index;\n\n    this._caret(this._getActivePartProp(\"caret\"));\n  },\n  _getRealLimitsPattern: function _getRealLimitsPattern() {\n    if (\"d\" === this._getActivePartProp(\"pattern\")[0]) {\n      return \"dM\";\n    }\n  },\n  _getActivePartLimits: function _getActivePartLimits(lockOtherParts) {\n    var limitFunction = this._getActivePartProp(\"limits\");\n\n    return limitFunction(this._maskValue, lockOtherParts && this._getRealLimitsPattern());\n  },\n  _getActivePartValue: function _getActivePartValue(dateValue) {\n    dateValue = dateValue || this._maskValue;\n\n    var getter = this._getActivePartProp(\"getter\");\n\n    return (0, _type.isFunction)(getter) ? getter(dateValue) : dateValue[getter]();\n  },\n  _addLeadingZeroes: function _addLeadingZeroes(value) {\n    var zeroes = this._searchValue.match(/^0+/);\n\n    var limits = this._getActivePartLimits();\n\n    var maxLimitLength = String(limits.max).length;\n    return ((zeroes && zeroes[0] || \"\") + String(value)).substr(-maxLimitLength);\n  },\n  _setActivePartValue: function _setActivePartValue(value, dateValue) {\n    dateValue = dateValue || this._maskValue;\n\n    var setter = this._getActivePartProp(\"setter\");\n\n    var limits = this._getActivePartLimits();\n\n    value = (0, _math.inRange)(value, limits.min, limits.max) ? value : value % 10;\n    value = this._addLeadingZeroes((0, _math.fitIntoRange)(value, limits.min, limits.max));\n    (0, _type.isFunction)(setter) ? setter(dateValue, value) : dateValue[setter](value);\n\n    this._renderDisplayText(this._getDisplayedText(dateValue));\n\n    this._renderDateParts();\n  },\n  _getActivePartProp: function _getActivePartProp(property) {\n    if (!this._dateParts || !this._dateParts[this._activePartIndex]) {\n      return;\n    }\n\n    return this._dateParts[this._activePartIndex][property];\n  },\n  _loadMaskValue: function _loadMaskValue() {\n    var value = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.dateOption(\"value\");\n    this._maskValue = value && new Date(value);\n    this._initialMaskValue = value && new Date(value);\n  },\n  _saveMaskValue: function _saveMaskValue() {\n    var value = this._maskValue && new Date(this._maskValue);\n    this._initialMaskValue = new Date(value);\n    this.dateOption(\"value\", value);\n  },\n  _revertChanges: function _revertChanges() {\n    this._loadMaskValue();\n\n    this._renderDisplayText(this._getDisplayedText(this._maskValue));\n\n    this._renderDateParts();\n  },\n  _renderDisplayText: function _renderDisplayText(text) {\n    this.callBase(text);\n\n    if (this._useMaskBehavior()) {\n      this.option(\"text\", text);\n    }\n  },\n  _partIncrease: function _partIncrease(step, lockOtherParts) {\n    this._setNewDateIfEmpty();\n\n    var _this$_getActivePartL2 = this._getActivePartLimits(lockOtherParts),\n        max = _this$_getActivePartL2.max,\n        min = _this$_getActivePartL2.min;\n\n    var limitDelta = max - min;\n\n    if (1 === limitDelta) {\n      limitDelta++;\n    }\n\n    var newValue = step + this._getActivePartValue();\n\n    if (newValue > max) {\n      newValue = this._applyLimits(newValue, {\n        limitBase: min,\n        limitClosest: max,\n        limitDelta: limitDelta\n      });\n    } else {\n      if (newValue < min) {\n        newValue = this._applyLimits(newValue, {\n          limitBase: max,\n          limitClosest: min,\n          limitDelta: limitDelta\n        });\n      }\n    }\n\n    this._setActivePartValue(newValue);\n  },\n  _applyLimits: function _applyLimits(newValue, _ref) {\n    var limitBase = _ref.limitBase,\n        limitClosest = _ref.limitClosest,\n        limitDelta = _ref.limitDelta;\n    var delta = (newValue - limitClosest) % limitDelta;\n    return delta ? limitBase + delta - 1 * (0, _math.sign)(delta) : limitClosest;\n  },\n  _maskClickHandler: function _maskClickHandler() {\n    if (this.option(\"text\")) {\n      this._activePartIndex = (0, _uiDate_boxMask.getDatePartIndexByPosition)(this._dateParts, this._caret().start);\n\n      this._caret(this._getActivePartProp(\"caret\"));\n    }\n  },\n  _maskPasteHandler: function _maskPasteHandler(e) {\n    var newText = this._replaceSelectedText(this.option(\"text\"), this._caret(), (0, _dom.clipboardText)(e));\n\n    var date = _date2.default.parse(newText, this._getFormatPattern());\n\n    if (date) {\n      this._maskValue = date;\n\n      this._renderDisplayText(this._getDisplayedText(this._maskValue));\n\n      this._renderDateParts();\n\n      this._selectNextPart();\n    }\n\n    e.preventDefault();\n  },\n  _isValueDirty: function _isValueDirty() {\n    var value = this.dateOption(\"value\");\n    return (this._maskValue && this._maskValue.getTime()) !== (value && value.getTime());\n  },\n  _fireChangeEvent: function _fireChangeEvent() {\n    this._clearSearchValue();\n\n    if (this._isValueDirty()) {\n      _events_engine2.default.trigger(this._input(), \"change\");\n    }\n  },\n  _enterHandler: function _enterHandler(e) {\n    this._fireChangeEvent();\n\n    this._selectNextPart(FORWARD);\n\n    e.preventDefault();\n  },\n  _focusOutHandler: function _focusOutHandler(e) {\n    this.callBase(e);\n\n    if (this._useMaskBehavior() && !e.isDefaultPrevented()) {\n      this._fireChangeEvent();\n\n      this._selectFirstPart(e);\n    }\n  },\n  _valueChangeEventHandler: function _valueChangeEventHandler(e) {\n    if (this._useMaskBehavior()) {\n      this._saveValueChangeEvent(e);\n\n      if (!this.option(\"text\")) {\n        this._maskValue = null;\n      }\n\n      this._saveMaskValue();\n    } else {\n      this.callBase(e);\n    }\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"useMaskBehavior\":\n        this._renderMask();\n\n        break;\n\n      case \"displayFormat\":\n      case \"mode\":\n        this.callBase(args);\n\n        this._renderMask();\n\n        break;\n\n      case \"value\":\n        this._loadMaskValue();\n\n        this.callBase(args);\n\n        this._renderDateParts();\n\n        break;\n\n      case \"advanceCaret\":\n      case \"emptyDateValue\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _clearMaskState: function _clearMaskState() {\n    this._clearSearchValue();\n\n    delete this._dateParts;\n    delete this._activePartIndex;\n    delete this._maskValue;\n  },\n  reset: function reset() {\n    this.callBase();\n\n    this._clearMaskState();\n\n    this._activePartIndex = 0;\n  },\n  _clean: function _clean() {\n    this.callBase();\n\n    this._detachMaskEvents();\n\n    this._clearMaskState();\n  }\n});\n\nmodule.exports = DateBoxMask;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/date_box/ui.date_box.mask.js"],"names":["_utils","require","_type","_dom","_extend","_math","_events_engine","_events_engine2","_interopRequireDefault","_uiDate_boxMask","_date","_date2","_date3","_date4","_uiDate_box","_uiDate_box2","_number","_number2","_devices","_devices2","obj","__esModule","MASK_EVENT_NAMESPACE","FORWARD","BACKWARD","DateBoxMask","default","inherit","_supportedKeys","e","_this","originalHandlers","callBase","callOriginalHandler","originalHandler","normalizeKeyName","apply","applyHandler","maskHandler","_shouldUseOriginalHandler","extend","del","event","_revertPart","_isAllSelected","preventDefault","backspace","home","_selectFirstPart","end","_selectLastPart","escape","_revertChanges","enter","_enterHandler","leftArrow","_selectNextPart","rightArrow","upArrow","_upDownArrowHandler","downArrow","keysToHandleByMask","isNotDeletingInCalendar","option","indexOf","_useMaskBehavior","altKey","step","_setNewDateIfEmpty","originalValue","_getActivePartValue","_initialMaskValue","currentValue","delta","_loadMaskValue","_partIncrease","_getDefaultOptions","useMaskBehavior","emptyDateValue","Date","advanceCaret","_isSingleCharKey","key","originalEvent","data","length","ctrl","alt","_useBeforeInputEvent","device","real","android","version","_keyboardHandler","result","_processInputKey","_maskBeforeInputHandler","_this2","_maskInputHandler","inputType","_renderDisplayText","_getDisplayedText","_maskValue","isBackwardDeletion","isForwardDeletion","direction","_keyPressHandler","_activePartIndex","isNaN","parseInt","_searchString","_searchNumber","caret","_caret","start","_getFormatPattern","_formatPattern","format","_strategy","getDisplayFormat","isLDMLPattern","isString","_getPatternByFormat","getFormat","value","_renderDateParts","char","_this$_getActivePartL","_getActivePartLimits","max","maxLimitLength","String","formatLength","_getActivePartProp","_searchValue","substr","_setActivePartValue","isShortFormat","maxSearchLength","Math","min","isLengthExceeded","isValueOverflowed","limits","startString","toLowerCase","endLimit","i","_clearSearchValue","actual","_prepareRegExpInfo","_regExpInfo","getRegExpInfo","regExp","regexp","flags","convertedRegExp","convertDigits","source","RegExp","_initMaskState","_renderMask","_detachMaskEvents","_clearMaskState","_attachMaskEvents","text","_dateParts","renderDateParts","off","_input","_this3","on","addNamespace","_maskClickHandler","bind","_maskPasteHandler","_onMouseWheel","arguments","_disposed","index","fitIntoRange","isStub","isBoundaryIndex","_getRealLimitsPattern","lockOtherParts","limitFunction","dateValue","getter","isFunction","_addLeadingZeroes","zeroes","match","setter","inRange","property","dateOption","_saveMaskValue","_this$_getActivePartL2","limitDelta","newValue","_applyLimits","limitBase","limitClosest","_ref","sign","getDatePartIndexByPosition","newText","_replaceSelectedText","clipboardText","date","parse","_isValueDirty","getTime","_fireChangeEvent","trigger","_focusOutHandler","isDefaultPrevented","_valueChangeEventHandler","_saveValueChangeEvent","_optionChanged","args","name","reset","_clean","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/date_box/ui.date_box.mask.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _utils = require(\"../../events/utils\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _events_engine = require(\"../../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _uiDate_boxMask = require(\"./ui.date_box.mask.parts\");\r\nvar _date = require(\"../../localization/date\");\r\nvar _date2 = _interopRequireDefault(_date);\r\nvar _date3 = require(\"../../localization/ldml/date.parser\");\r\nvar _date4 = require(\"../../localization/ldml/date.format\");\r\nvar _uiDate_box = require(\"./ui.date_box.base\");\r\nvar _uiDate_box2 = _interopRequireDefault(_uiDate_box);\r\nvar _number = require(\"../../localization/number\");\r\nvar _number2 = _interopRequireDefault(_number);\r\nvar _devices = require(\"../../core/devices\");\r\nvar _devices2 = _interopRequireDefault(_devices);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar MASK_EVENT_NAMESPACE = \"dateBoxMask\";\r\nvar FORWARD = 1;\r\nvar BACKWARD = -1;\r\nvar DateBoxMask = _uiDate_box2.default.inherit({\r\n    _supportedKeys: function(e) {\r\n        var _this = this;\r\n        var originalHandlers = this.callBase(e);\r\n        var callOriginalHandler = function(e) {\r\n            var originalHandler = originalHandlers[(0, _utils.normalizeKeyName)(e)];\r\n            return originalHandler && originalHandler.apply(_this, [e])\r\n        };\r\n        var applyHandler = function(e, maskHandler) {\r\n            if (_this._shouldUseOriginalHandler(e)) {\r\n                return callOriginalHandler.apply(_this, [e])\r\n            } else {\r\n                return maskHandler.apply(_this, [e])\r\n            }\r\n        };\r\n        return (0, _extend.extend)({}, originalHandlers, {\r\n            del: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._revertPart(FORWARD);\r\n                    _this._isAllSelected() || event.preventDefault()\r\n                })\r\n            },\r\n            backspace: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._revertPart(BACKWARD);\r\n                    _this._isAllSelected() || event.preventDefault()\r\n                })\r\n            },\r\n            home: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._selectFirstPart();\r\n                    event.preventDefault()\r\n                })\r\n            },\r\n            end: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._selectLastPart();\r\n                    event.preventDefault()\r\n                })\r\n            },\r\n            escape: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._revertChanges(event)\r\n                })\r\n            },\r\n            enter: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._enterHandler(event)\r\n                })\r\n            },\r\n            leftArrow: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._selectNextPart(BACKWARD);\r\n                    event.preventDefault()\r\n                })\r\n            },\r\n            rightArrow: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._selectNextPart(FORWARD);\r\n                    event.preventDefault()\r\n                })\r\n            },\r\n            upArrow: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._upDownArrowHandler(FORWARD);\r\n                    event.preventDefault()\r\n                })\r\n            },\r\n            downArrow: function(e) {\r\n                return applyHandler(e, function(event) {\r\n                    _this._upDownArrowHandler(BACKWARD);\r\n                    event.preventDefault()\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _shouldUseOriginalHandler: function(e) {\r\n        var keysToHandleByMask = [\"backspace\", \"del\"];\r\n        var isNotDeletingInCalendar = this.option(\"opened\") && e && keysToHandleByMask.indexOf((0, _utils.normalizeKeyName)(e)) === -1;\r\n        return !this._useMaskBehavior() || isNotDeletingInCalendar || e && e.altKey\r\n    },\r\n    _upDownArrowHandler: function(step) {\r\n        this._setNewDateIfEmpty();\r\n        var originalValue = this._getActivePartValue(this._initialMaskValue);\r\n        var currentValue = this._getActivePartValue();\r\n        var delta = currentValue - originalValue;\r\n        this._loadMaskValue(this._initialMaskValue);\r\n        this._partIncrease(delta + step, true)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            useMaskBehavior: false,\r\n            emptyDateValue: new Date(2e3, 0, 1, 0, 0, 0),\r\n            advanceCaret: true\r\n        })\r\n    },\r\n    _isSingleCharKey: function(e) {\r\n        var key = e.originalEvent.data || e.originalEvent.key;\r\n        return \"string\" === typeof key && 1 === key.length && !e.ctrl && !e.alt\r\n    },\r\n    _useBeforeInputEvent: function() {\r\n        var device = _devices2.default.real();\r\n        return device.android && device.version[0] > 4\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        var key = e.originalEvent.key;\r\n        var result = this.callBase(e);\r\n        if (!this._useMaskBehavior() || this._useBeforeInputEvent() || !this._isSingleCharKey(e)) {\r\n            return result\r\n        }\r\n        this._processInputKey(key);\r\n        e.originalEvent.preventDefault();\r\n        return result\r\n    },\r\n    _maskBeforeInputHandler: function(e) {\r\n        var _this2 = this;\r\n        this._maskInputHandler = null;\r\n        var inputType = e.originalEvent.inputType;\r\n        if (\"insertCompositionText\" === inputType) {\r\n            this._maskInputHandler = function() {\r\n                _this2._renderDisplayText(_this2._getDisplayedText(_this2._maskValue));\r\n                _this2._selectNextPart()\r\n            }\r\n        }\r\n        var isBackwardDeletion = \"deleteContentBackward\" === inputType;\r\n        var isForwardDeletion = \"deleteContentForward\" === inputType;\r\n        if (isBackwardDeletion || isForwardDeletion) {\r\n            var direction = isBackwardDeletion ? BACKWARD : FORWARD;\r\n            this._maskInputHandler = function() {\r\n                _this2._revertPart();\r\n                _this2._selectNextPart(direction)\r\n            }\r\n        }\r\n        if (!this._useMaskBehavior() || !this._isSingleCharKey(e)) {\r\n            return\r\n        }\r\n        var key = e.originalEvent.data;\r\n        this._processInputKey(key);\r\n        e.preventDefault();\r\n        return true\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        this.callBase(e);\r\n        if (this._maskInputHandler) {\r\n            this._maskInputHandler();\r\n            this._maskInputHandler = null\r\n        }\r\n    },\r\n    _processInputKey: function(key) {\r\n        if (this._isAllSelected()) {\r\n            this._activePartIndex = 0\r\n        }\r\n        this._setNewDateIfEmpty();\r\n        if (isNaN(parseInt(key))) {\r\n            this._searchString(key)\r\n        } else {\r\n            this._searchNumber(key)\r\n        }\r\n    },\r\n    _isAllSelected: function() {\r\n        var caret = this._caret();\r\n        return caret.end - caret.start === this.option(\"text\").length\r\n    },\r\n    _getFormatPattern: function() {\r\n        if (this._formatPattern) {\r\n            return this._formatPattern\r\n        }\r\n        var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var isLDMLPattern = (0, _type.isString)(format) && !_date2.default._getPatternByFormat(format);\r\n        if (isLDMLPattern) {\r\n            this._formatPattern = format\r\n        } else {\r\n            this._formatPattern = (0, _date4.getFormat)(function(value) {\r\n                return _date2.default.format(value, format)\r\n            })\r\n        }\r\n        return this._formatPattern\r\n    },\r\n    _setNewDateIfEmpty: function() {\r\n        if (!this._maskValue) {\r\n            var value = \"time\" === this.option(\"type\") ? new Date(null) : new Date;\r\n            this._maskValue = value;\r\n            this._initialMaskValue = value;\r\n            this._renderDateParts()\r\n        }\r\n    },\r\n    _searchNumber: function(char) {\r\n        var _this$_getActivePartL = this._getActivePartLimits(),\r\n            max = _this$_getActivePartL.max;\r\n        var maxLimitLength = String(max).length;\r\n        var formatLength = this._getActivePartProp(\"pattern\").length;\r\n        this._searchValue = (this._searchValue + char).substr(-maxLimitLength);\r\n        if (isNaN(this._searchValue)) {\r\n            this._searchValue = char\r\n        }\r\n        this._setActivePartValue(this._searchValue);\r\n        if (this.option(\"advanceCaret\")) {\r\n            var isShortFormat = 1 === formatLength;\r\n            var maxSearchLength = isShortFormat ? maxLimitLength : Math.min(formatLength, maxLimitLength);\r\n            var isLengthExceeded = this._searchValue.length === maxSearchLength;\r\n            var isValueOverflowed = parseInt(this._searchValue + \"0\") > max;\r\n            if (isLengthExceeded || isValueOverflowed) {\r\n                this._selectNextPart(FORWARD)\r\n            }\r\n        }\r\n    },\r\n    _searchString: function(char) {\r\n        if (!isNaN(parseInt(this._getActivePartProp(\"text\")))) {\r\n            return\r\n        }\r\n        var limits = this._getActivePartProp(\"limits\")(this._maskValue);\r\n        var startString = this._searchValue + char.toLowerCase();\r\n        var endLimit = limits.max - limits.min;\r\n        for (var i = 0; i <= endLimit; i++) {\r\n            this._loadMaskValue(this._initialMaskValue);\r\n            this._partIncrease(i + 1);\r\n            if (0 === this._getActivePartProp(\"text\").toLowerCase().indexOf(startString)) {\r\n                this._searchValue = startString;\r\n                return\r\n            }\r\n        }\r\n        this._setNewDateIfEmpty();\r\n        if (this._searchValue) {\r\n            this._clearSearchValue();\r\n            this._searchString(char)\r\n        }\r\n    },\r\n    _clearSearchValue: function() {\r\n        this._searchValue = \"\"\r\n    },\r\n    _revertPart: function(direction) {\r\n        if (!this._isAllSelected()) {\r\n            var actual = this._getActivePartValue(this.option(\"emptyDateValue\"));\r\n            this._setActivePartValue(actual);\r\n            this._selectNextPart(direction)\r\n        }\r\n        this._clearSearchValue()\r\n    },\r\n    _useMaskBehavior: function() {\r\n        return this.option(\"useMaskBehavior\") && \"text\" === this.option(\"mode\")\r\n    },\r\n    _prepareRegExpInfo: function() {\r\n        this._regExpInfo = (0, _date3.getRegExpInfo)(this._getFormatPattern(), _date2.default);\r\n        var regExp = this._regExpInfo.regexp;\r\n        var flags = regExp.flags;\r\n        var convertedRegExp = _number2.default.convertDigits(this._regExpInfo.regexp.source, false);\r\n        this._regExpInfo.regexp = RegExp(convertedRegExp, flags)\r\n    },\r\n    _initMaskState: function() {\r\n        this._activePartIndex = 0;\r\n        this._formatPattern = null;\r\n        this._prepareRegExpInfo();\r\n        this._loadMaskValue()\r\n    },\r\n    _renderMask: function() {\r\n        this.callBase();\r\n        this._detachMaskEvents();\r\n        this._clearMaskState();\r\n        if (this._useMaskBehavior()) {\r\n            this._attachMaskEvents();\r\n            this._initMaskState();\r\n            this._renderDateParts()\r\n        }\r\n    },\r\n    _renderDateParts: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var text = this.option(\"text\") || this._getDisplayedText(this._maskValue);\r\n        if (text) {\r\n            this._dateParts = (0, _uiDate_boxMask.renderDateParts)(text, this._regExpInfo);\r\n            this._selectNextPart()\r\n        }\r\n    },\r\n    _detachMaskEvents: function() {\r\n        _events_engine2.default.off(this._input(), \".\" + MASK_EVENT_NAMESPACE)\r\n    },\r\n    _attachMaskEvents: function() {\r\n        var _this3 = this;\r\n        _events_engine2.default.on(this._input(), (0, _utils.addNamespace)(\"dxclick\", MASK_EVENT_NAMESPACE), this._maskClickHandler.bind(this));\r\n        _events_engine2.default.on(this._input(), (0, _utils.addNamespace)(\"paste\", MASK_EVENT_NAMESPACE), this._maskPasteHandler.bind(this));\r\n        _events_engine2.default.on(this._input(), (0, _utils.addNamespace)(\"drop\", MASK_EVENT_NAMESPACE), function() {\r\n            _this3._renderDisplayText(_this3._getDisplayedText(_this3._maskValue));\r\n            _this3._selectNextPart()\r\n        });\r\n        if (this._useBeforeInputEvent()) {\r\n            _events_engine2.default.on(this._input(), (0, _utils.addNamespace)(\"beforeinput\", MASK_EVENT_NAMESPACE), this._maskBeforeInputHandler.bind(this))\r\n        }\r\n    },\r\n    _selectLastPart: function() {\r\n        if (this.option(\"text\")) {\r\n            this._activePartIndex = this._dateParts.length;\r\n            this._selectNextPart(BACKWARD)\r\n        }\r\n    },\r\n    _selectFirstPart: function() {\r\n        if (this.option(\"text\")) {\r\n            this._activePartIndex = -1;\r\n            this._selectNextPart(FORWARD)\r\n        }\r\n    },\r\n    _onMouseWheel: function(e) {\r\n        if (this._useMaskBehavior()) {\r\n            this._partIncrease(e.delta > 0 ? FORWARD : BACKWARD, e)\r\n        }\r\n    },\r\n    _selectNextPart: function() {\r\n        var step = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;\r\n        if (!this.option(\"text\") || this._disposed) {\r\n            return\r\n        }\r\n        if (step) {\r\n            this._initialMaskValue = new Date(this._maskValue)\r\n        }\r\n        var index = (0, _math.fitIntoRange)(this._activePartIndex + step, 0, this._dateParts.length - 1);\r\n        if (this._dateParts[index].isStub) {\r\n            var isBoundaryIndex = 0 === index && step < 0 || index === this._dateParts.length - 1 && step > 0;\r\n            if (!isBoundaryIndex) {\r\n                this._selectNextPart(step >= 0 ? step + 1 : step - 1);\r\n                return\r\n            } else {\r\n                index = this._activePartIndex\r\n            }\r\n        }\r\n        if (this._activePartIndex !== index) {\r\n            this._clearSearchValue()\r\n        }\r\n        this._activePartIndex = index;\r\n        this._caret(this._getActivePartProp(\"caret\"))\r\n    },\r\n    _getRealLimitsPattern: function() {\r\n        if (\"d\" === this._getActivePartProp(\"pattern\")[0]) {\r\n            return \"dM\"\r\n        }\r\n    },\r\n    _getActivePartLimits: function(lockOtherParts) {\r\n        var limitFunction = this._getActivePartProp(\"limits\");\r\n        return limitFunction(this._maskValue, lockOtherParts && this._getRealLimitsPattern())\r\n    },\r\n    _getActivePartValue: function(dateValue) {\r\n        dateValue = dateValue || this._maskValue;\r\n        var getter = this._getActivePartProp(\"getter\");\r\n        return (0, _type.isFunction)(getter) ? getter(dateValue) : dateValue[getter]()\r\n    },\r\n    _addLeadingZeroes: function(value) {\r\n        var zeroes = this._searchValue.match(/^0+/);\r\n        var limits = this._getActivePartLimits();\r\n        var maxLimitLength = String(limits.max).length;\r\n        return ((zeroes && zeroes[0] || \"\") + String(value)).substr(-maxLimitLength)\r\n    },\r\n    _setActivePartValue: function(value, dateValue) {\r\n        dateValue = dateValue || this._maskValue;\r\n        var setter = this._getActivePartProp(\"setter\");\r\n        var limits = this._getActivePartLimits();\r\n        value = (0, _math.inRange)(value, limits.min, limits.max) ? value : value % 10;\r\n        value = this._addLeadingZeroes((0, _math.fitIntoRange)(value, limits.min, limits.max));\r\n        (0, _type.isFunction)(setter) ? setter(dateValue, value): dateValue[setter](value);\r\n        this._renderDisplayText(this._getDisplayedText(dateValue));\r\n        this._renderDateParts()\r\n    },\r\n    _getActivePartProp: function(property) {\r\n        if (!this._dateParts || !this._dateParts[this._activePartIndex]) {\r\n            return\r\n        }\r\n        return this._dateParts[this._activePartIndex][property]\r\n    },\r\n    _loadMaskValue: function() {\r\n        var value = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.dateOption(\"value\");\r\n        this._maskValue = value && new Date(value);\r\n        this._initialMaskValue = value && new Date(value)\r\n    },\r\n    _saveMaskValue: function() {\r\n        var value = this._maskValue && new Date(this._maskValue);\r\n        this._initialMaskValue = new Date(value);\r\n        this.dateOption(\"value\", value)\r\n    },\r\n    _revertChanges: function() {\r\n        this._loadMaskValue();\r\n        this._renderDisplayText(this._getDisplayedText(this._maskValue));\r\n        this._renderDateParts()\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        this.callBase(text);\r\n        if (this._useMaskBehavior()) {\r\n            this.option(\"text\", text)\r\n        }\r\n    },\r\n    _partIncrease: function(step, lockOtherParts) {\r\n        this._setNewDateIfEmpty();\r\n        var _this$_getActivePartL2 = this._getActivePartLimits(lockOtherParts),\r\n            max = _this$_getActivePartL2.max,\r\n            min = _this$_getActivePartL2.min;\r\n        var limitDelta = max - min;\r\n        if (1 === limitDelta) {\r\n            limitDelta++\r\n        }\r\n        var newValue = step + this._getActivePartValue();\r\n        if (newValue > max) {\r\n            newValue = this._applyLimits(newValue, {\r\n                limitBase: min,\r\n                limitClosest: max,\r\n                limitDelta: limitDelta\r\n            })\r\n        } else {\r\n            if (newValue < min) {\r\n                newValue = this._applyLimits(newValue, {\r\n                    limitBase: max,\r\n                    limitClosest: min,\r\n                    limitDelta: limitDelta\r\n                })\r\n            }\r\n        }\r\n        this._setActivePartValue(newValue)\r\n    },\r\n    _applyLimits: function(newValue, _ref) {\r\n        var limitBase = _ref.limitBase,\r\n            limitClosest = _ref.limitClosest,\r\n            limitDelta = _ref.limitDelta;\r\n        var delta = (newValue - limitClosest) % limitDelta;\r\n        return delta ? limitBase + delta - 1 * (0, _math.sign)(delta) : limitClosest\r\n    },\r\n    _maskClickHandler: function() {\r\n        if (this.option(\"text\")) {\r\n            this._activePartIndex = (0, _uiDate_boxMask.getDatePartIndexByPosition)(this._dateParts, this._caret().start);\r\n            this._caret(this._getActivePartProp(\"caret\"))\r\n        }\r\n    },\r\n    _maskPasteHandler: function(e) {\r\n        var newText = this._replaceSelectedText(this.option(\"text\"), this._caret(), (0, _dom.clipboardText)(e));\r\n        var date = _date2.default.parse(newText, this._getFormatPattern());\r\n        if (date) {\r\n            this._maskValue = date;\r\n            this._renderDisplayText(this._getDisplayedText(this._maskValue));\r\n            this._renderDateParts();\r\n            this._selectNextPart()\r\n        }\r\n        e.preventDefault()\r\n    },\r\n    _isValueDirty: function() {\r\n        var value = this.dateOption(\"value\");\r\n        return (this._maskValue && this._maskValue.getTime()) !== (value && value.getTime())\r\n    },\r\n    _fireChangeEvent: function() {\r\n        this._clearSearchValue();\r\n        if (this._isValueDirty()) {\r\n            _events_engine2.default.trigger(this._input(), \"change\")\r\n        }\r\n    },\r\n    _enterHandler: function(e) {\r\n        this._fireChangeEvent();\r\n        this._selectNextPart(FORWARD);\r\n        e.preventDefault()\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        this.callBase(e);\r\n        if (this._useMaskBehavior() && !e.isDefaultPrevented()) {\r\n            this._fireChangeEvent();\r\n            this._selectFirstPart(e)\r\n        }\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        if (this._useMaskBehavior()) {\r\n            this._saveValueChangeEvent(e);\r\n            if (!this.option(\"text\")) {\r\n                this._maskValue = null\r\n            }\r\n            this._saveMaskValue()\r\n        } else {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"useMaskBehavior\":\r\n                this._renderMask();\r\n                break;\r\n            case \"displayFormat\":\r\n            case \"mode\":\r\n                this.callBase(args);\r\n                this._renderMask();\r\n                break;\r\n            case \"value\":\r\n                this._loadMaskValue();\r\n                this.callBase(args);\r\n                this._renderDateParts();\r\n                break;\r\n            case \"advanceCaret\":\r\n            case \"emptyDateValue\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clearMaskState: function() {\r\n        this._clearSearchValue();\r\n        delete this._dateParts;\r\n        delete this._activePartIndex;\r\n        delete this._maskValue\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this._clearMaskState();\r\n        this._activePartIndex = 0\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._detachMaskEvents();\r\n        this._clearMaskState()\r\n    }\r\n});\r\nmodule.exports = DateBoxMask;\r\n"]},"metadata":{},"sourceType":"script"}