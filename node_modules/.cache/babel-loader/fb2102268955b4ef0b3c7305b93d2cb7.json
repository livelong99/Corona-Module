{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/stacked_series.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _noop = require(\"../../core/utils/common\").noop;\n\nvar _extend = require(\"../../core/utils/extend\").extend;\n\nvar each = require(\"../../core/utils/iterator\").each;\n\nvar areaSeries = require(\"./area_series\").chart;\n\nvar chartAreaSeries = areaSeries.area;\n\nvar barSeries = require(\"./bar_series\");\n\nvar chartBarSeries = barSeries.chart.bar;\n\nvar lineSeries = require(\"./line_series\").chart;\n\nvar vizUtils = require(\"../core/utils\");\n\nvar objectUtils = require(\"../../core/utils/object\");\n\nvar baseStackedSeries = {\n  _calculateErrorBars: _noop,\n  _updateOptions: function _updateOptions(options) {\n    this._stackName = \"axis_\" + (options.axis || \"default\");\n  }\n};\nexports.chart = {};\nexports.polar = {};\nexports.chart.stackedline = _extend({}, lineSeries.line, baseStackedSeries, {});\nexports.chart.stackedspline = _extend({}, lineSeries.spline, baseStackedSeries, {});\nexports.chart.fullstackedline = _extend({}, lineSeries.line, baseStackedSeries, {\n  getValueRangeInitialValue: areaSeries.area.getValueRangeInitialValue\n});\nexports.chart.fullstackedspline = _extend({}, lineSeries.spline, baseStackedSeries, {\n  getValueRangeInitialValue: areaSeries.area.getValueRangeInitialValue\n});\n\nvar stackedBar = exports.chart.stackedbar = _extend({}, chartBarSeries, baseStackedSeries, {\n  _updateOptions: function _updateOptions(options) {\n    baseStackedSeries._updateOptions.call(this, options);\n\n    this._stackName = this._stackName + \"_stack_\" + (options.stack || \"default\");\n  }\n});\n\nexports.chart.fullstackedbar = _extend({}, chartBarSeries, baseStackedSeries, {\n  _updateOptions: stackedBar._updateOptions\n});\n\nfunction clonePoint(point, value, minValue, position) {\n  point = objectUtils.clone(point);\n  point.value = value;\n  point.minValue = minValue;\n  point.translate();\n  point.argument = point.argument + position;\n  return point;\n}\n\nfunction preparePointsForStackedAreaSegment(points) {\n  var i = 0;\n  var p;\n  var result = [];\n  var array;\n  var len = points.length;\n\n  while (i < len) {\n    p = points[i];\n    array = [p];\n\n    if (p.leftHole) {\n      array = [clonePoint(p, p.leftHole, p.minLeftHole, \"left\"), p];\n    }\n\n    if (p.rightHole) {\n      array.push(clonePoint(p, p.rightHole, p.minRightHole, \"right\"));\n    }\n\n    result.push(array);\n    i++;\n  }\n\n  return [].concat.apply([], result);\n}\n\nexports.chart.stackedarea = _extend({}, chartAreaSeries, baseStackedSeries, {\n  _prepareSegment: function _prepareSegment(points, rotated) {\n    return chartAreaSeries._prepareSegment.call(this, preparePointsForStackedAreaSegment(points), rotated);\n  },\n  _appendInGroup: function _appendInGroup() {\n    this._group.append(this._extGroups.seriesGroup).toBackground();\n  }\n});\n\nfunction getPointsByArgFromPrevSeries(prevSeries, argument) {\n  var result;\n\n  while (!result && prevSeries) {\n    result = prevSeries._segmentByArg && prevSeries._segmentByArg[argument];\n    prevSeries = prevSeries._prevSeries;\n  }\n\n  return result;\n}\n\nexports.chart.stackedsplinearea = _extend({}, areaSeries.splinearea, baseStackedSeries, {\n  _prepareSegment: function _prepareSegment(points, rotated) {\n    var that = this;\n    var areaSegment;\n    points = preparePointsForStackedAreaSegment(points);\n\n    if (!this._prevSeries || 1 === points.length) {\n      areaSegment = areaSeries.splinearea._prepareSegment.call(this, points, rotated);\n    } else {\n      var forwardPoints = lineSeries.spline._calculateBezierPoints(points, rotated);\n\n      var backwardPoints = vizUtils.map(points, function (p) {\n        var point = p.getCoords(true);\n        point.argument = p.argument;\n        return point;\n      });\n      var prevSeriesForwardPoints = [];\n      var pointByArg = {};\n      var i = 0;\n      var len = that._prevSeries._segments.length;\n\n      while (i < len) {\n        prevSeriesForwardPoints = prevSeriesForwardPoints.concat(that._prevSeries._segments[i].line);\n        i++;\n      }\n\n      each(prevSeriesForwardPoints, function (_, p) {\n        if (null !== p.argument) {\n          var argument = p.argument.valueOf();\n\n          if (!pointByArg[argument]) {\n            pointByArg[argument] = [p];\n          } else {\n            pointByArg[argument].push(p);\n          }\n        }\n      });\n      that._prevSeries._segmentByArg = pointByArg;\n      backwardPoints = lineSeries.spline._calculateBezierPoints(backwardPoints, rotated);\n      each(backwardPoints, function (i, p) {\n        var argument = p.argument.valueOf();\n        var prevSeriesPoints;\n\n        if (i % 3 === 0) {\n          prevSeriesPoints = pointByArg[argument] || getPointsByArgFromPrevSeries(that._prevSeries, argument);\n\n          if (prevSeriesPoints) {\n            backwardPoints[i - 1] && prevSeriesPoints[0] && (backwardPoints[i - 1] = prevSeriesPoints[0]);\n            backwardPoints[i + 1] && (backwardPoints[i + 1] = prevSeriesPoints[2] || p);\n          }\n        }\n      });\n      areaSegment = {\n        line: forwardPoints,\n        area: forwardPoints.concat(backwardPoints.reverse())\n      };\n\n      that._areaPointsToSplineAreaPoints(areaSegment.area);\n    }\n\n    return areaSegment;\n  },\n  _appendInGroup: exports.chart.stackedarea._appendInGroup\n});\nexports.chart.fullstackedarea = _extend({}, chartAreaSeries, baseStackedSeries, {\n  _prepareSegment: exports.chart.stackedarea._prepareSegment,\n  _appendInGroup: exports.chart.stackedarea._appendInGroup\n});\nexports.chart.fullstackedsplinearea = _extend({}, areaSeries.splinearea, baseStackedSeries, {\n  _prepareSegment: exports.chart.stackedsplinearea._prepareSegment,\n  _appendInGroup: exports.chart.stackedarea._appendInGroup\n});\nexports.polar.stackedbar = _extend({}, barSeries.polar.bar, baseStackedSeries, {});","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/series/stacked_series.js"],"names":["_noop","require","noop","_extend","extend","each","areaSeries","chart","chartAreaSeries","area","barSeries","chartBarSeries","bar","lineSeries","vizUtils","objectUtils","baseStackedSeries","_calculateErrorBars","_updateOptions","options","_stackName","axis","exports","polar","stackedline","line","stackedspline","spline","fullstackedline","getValueRangeInitialValue","fullstackedspline","stackedBar","stackedbar","call","stack","fullstackedbar","clonePoint","point","value","minValue","position","clone","translate","argument","preparePointsForStackedAreaSegment","points","i","p","result","array","len","length","leftHole","minLeftHole","rightHole","push","minRightHole","concat","apply","stackedarea","_prepareSegment","rotated","_appendInGroup","_group","append","_extGroups","seriesGroup","toBackground","getPointsByArgFromPrevSeries","prevSeries","_segmentByArg","_prevSeries","stackedsplinearea","splinearea","that","areaSegment","forwardPoints","_calculateBezierPoints","backwardPoints","map","getCoords","prevSeriesForwardPoints","pointByArg","_segments","_","valueOf","prevSeriesPoints","reverse","_areaPointsToSplineAreaPoints","fullstackedarea","fullstackedsplinearea"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/stacked_series.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _noop = require(\"../../core/utils/common\").noop;\r\nvar _extend = require(\"../../core/utils/extend\").extend;\r\nvar each = require(\"../../core/utils/iterator\").each;\r\nvar areaSeries = require(\"./area_series\").chart;\r\nvar chartAreaSeries = areaSeries.area;\r\nvar barSeries = require(\"./bar_series\");\r\nvar chartBarSeries = barSeries.chart.bar;\r\nvar lineSeries = require(\"./line_series\").chart;\r\nvar vizUtils = require(\"../core/utils\");\r\nvar objectUtils = require(\"../../core/utils/object\");\r\nvar baseStackedSeries = {\r\n    _calculateErrorBars: _noop,\r\n    _updateOptions: function(options) {\r\n        this._stackName = \"axis_\" + (options.axis || \"default\")\r\n    }\r\n};\r\nexports.chart = {};\r\nexports.polar = {};\r\nexports.chart.stackedline = _extend({}, lineSeries.line, baseStackedSeries, {});\r\nexports.chart.stackedspline = _extend({}, lineSeries.spline, baseStackedSeries, {});\r\nexports.chart.fullstackedline = _extend({}, lineSeries.line, baseStackedSeries, {\r\n    getValueRangeInitialValue: areaSeries.area.getValueRangeInitialValue\r\n});\r\nexports.chart.fullstackedspline = _extend({}, lineSeries.spline, baseStackedSeries, {\r\n    getValueRangeInitialValue: areaSeries.area.getValueRangeInitialValue\r\n});\r\nvar stackedBar = exports.chart.stackedbar = _extend({}, chartBarSeries, baseStackedSeries, {\r\n    _updateOptions: function(options) {\r\n        baseStackedSeries._updateOptions.call(this, options);\r\n        this._stackName = this._stackName + \"_stack_\" + (options.stack || \"default\")\r\n    }\r\n});\r\nexports.chart.fullstackedbar = _extend({}, chartBarSeries, baseStackedSeries, {\r\n    _updateOptions: stackedBar._updateOptions\r\n});\r\n\r\nfunction clonePoint(point, value, minValue, position) {\r\n    point = objectUtils.clone(point);\r\n    point.value = value;\r\n    point.minValue = minValue;\r\n    point.translate();\r\n    point.argument = point.argument + position;\r\n    return point\r\n}\r\n\r\nfunction preparePointsForStackedAreaSegment(points) {\r\n    var i = 0;\r\n    var p;\r\n    var result = [];\r\n    var array;\r\n    var len = points.length;\r\n    while (i < len) {\r\n        p = points[i];\r\n        array = [p];\r\n        if (p.leftHole) {\r\n            array = [clonePoint(p, p.leftHole, p.minLeftHole, \"left\"), p]\r\n        }\r\n        if (p.rightHole) {\r\n            array.push(clonePoint(p, p.rightHole, p.minRightHole, \"right\"))\r\n        }\r\n        result.push(array);\r\n        i++\r\n    }\r\n    return [].concat.apply([], result)\r\n}\r\nexports.chart.stackedarea = _extend({}, chartAreaSeries, baseStackedSeries, {\r\n    _prepareSegment: function(points, rotated) {\r\n        return chartAreaSeries._prepareSegment.call(this, preparePointsForStackedAreaSegment(points), rotated)\r\n    },\r\n    _appendInGroup: function() {\r\n        this._group.append(this._extGroups.seriesGroup).toBackground()\r\n    }\r\n});\r\n\r\nfunction getPointsByArgFromPrevSeries(prevSeries, argument) {\r\n    var result;\r\n    while (!result && prevSeries) {\r\n        result = prevSeries._segmentByArg && prevSeries._segmentByArg[argument];\r\n        prevSeries = prevSeries._prevSeries\r\n    }\r\n    return result\r\n}\r\nexports.chart.stackedsplinearea = _extend({}, areaSeries.splinearea, baseStackedSeries, {\r\n    _prepareSegment: function(points, rotated) {\r\n        var that = this;\r\n        var areaSegment;\r\n        points = preparePointsForStackedAreaSegment(points);\r\n        if (!this._prevSeries || 1 === points.length) {\r\n            areaSegment = areaSeries.splinearea._prepareSegment.call(this, points, rotated)\r\n        } else {\r\n            var forwardPoints = lineSeries.spline._calculateBezierPoints(points, rotated);\r\n            var backwardPoints = vizUtils.map(points, function(p) {\r\n                var point = p.getCoords(true);\r\n                point.argument = p.argument;\r\n                return point\r\n            });\r\n            var prevSeriesForwardPoints = [];\r\n            var pointByArg = {};\r\n            var i = 0;\r\n            var len = that._prevSeries._segments.length;\r\n            while (i < len) {\r\n                prevSeriesForwardPoints = prevSeriesForwardPoints.concat(that._prevSeries._segments[i].line);\r\n                i++\r\n            }\r\n            each(prevSeriesForwardPoints, function(_, p) {\r\n                if (null !== p.argument) {\r\n                    var argument = p.argument.valueOf();\r\n                    if (!pointByArg[argument]) {\r\n                        pointByArg[argument] = [p]\r\n                    } else {\r\n                        pointByArg[argument].push(p)\r\n                    }\r\n                }\r\n            });\r\n            that._prevSeries._segmentByArg = pointByArg;\r\n            backwardPoints = lineSeries.spline._calculateBezierPoints(backwardPoints, rotated);\r\n            each(backwardPoints, function(i, p) {\r\n                var argument = p.argument.valueOf();\r\n                var prevSeriesPoints;\r\n                if (i % 3 === 0) {\r\n                    prevSeriesPoints = pointByArg[argument] || getPointsByArgFromPrevSeries(that._prevSeries, argument);\r\n                    if (prevSeriesPoints) {\r\n                        backwardPoints[i - 1] && prevSeriesPoints[0] && (backwardPoints[i - 1] = prevSeriesPoints[0]);\r\n                        backwardPoints[i + 1] && (backwardPoints[i + 1] = prevSeriesPoints[2] || p)\r\n                    }\r\n                }\r\n            });\r\n            areaSegment = {\r\n                line: forwardPoints,\r\n                area: forwardPoints.concat(backwardPoints.reverse())\r\n            };\r\n            that._areaPointsToSplineAreaPoints(areaSegment.area)\r\n        }\r\n        return areaSegment\r\n    },\r\n    _appendInGroup: exports.chart.stackedarea._appendInGroup\r\n});\r\nexports.chart.fullstackedarea = _extend({}, chartAreaSeries, baseStackedSeries, {\r\n    _prepareSegment: exports.chart.stackedarea._prepareSegment,\r\n    _appendInGroup: exports.chart.stackedarea._appendInGroup\r\n});\r\nexports.chart.fullstackedsplinearea = _extend({}, areaSeries.splinearea, baseStackedSeries, {\r\n    _prepareSegment: exports.chart.stackedsplinearea._prepareSegment,\r\n    _appendInGroup: exports.chart.stackedarea._appendInGroup\r\n});\r\nexports.polar.stackedbar = _extend({}, barSeries.polar.bar, baseStackedSeries, {});\r\n"]},"metadata":{},"sourceType":"script"}