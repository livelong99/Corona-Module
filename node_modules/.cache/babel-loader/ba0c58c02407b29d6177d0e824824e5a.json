{"ast":null,"code":"/**\r\n * DevExtreme (viz/chart_components/base_chart.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar commonUtils = require(\"../../core/utils/common\");\n\nvar noop = commonUtils.noop;\n\nvar eventsEngine = require(\"../../events/core/events_engine\");\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar iteratorModule = require(\"../../core/utils/iterator\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar inArray = require(\"../../core/utils/array\").inArray;\n\nvar eventUtils = require(\"../../events/utils\");\n\nvar BaseWidget = require(\"../core/base_widget\");\n\nvar coreDataUtils = require(\"../../core/utils/data\");\n\nvar legendModule = require(\"../components/legend\");\n\nvar dataValidatorModule = require(\"../components/data_validator\");\n\nvar seriesModule = require(\"../series/base_series\");\n\nvar chartThemeManagerModule = require(\"../components/chart_theme_manager\");\n\nvar LayoutManagerModule = require(\"./layout_manager\");\n\nvar trackerModule = require(\"./tracker\");\n\nvar REINIT_REFRESH_ACTION = \"_reinit\";\nvar REINIT_DATA_SOURCE_REFRESH_ACTION = \"_updateDataSource\";\nvar DATA_INIT_REFRESH_ACTION = \"_dataInit\";\nvar FORCE_RENDER_REFRESH_ACTION = \"_forceRender\";\nvar RESIZE_REFRESH_ACTION = \"_resize\";\nvar ACTIONS_BY_PRIORITY = [REINIT_REFRESH_ACTION, REINIT_DATA_SOURCE_REFRESH_ACTION, DATA_INIT_REFRESH_ACTION, FORCE_RENDER_REFRESH_ACTION, RESIZE_REFRESH_ACTION];\n\nvar vizUtils = require(\"../core/utils\");\n\nvar _map = vizUtils.map;\nvar _each = iteratorModule.each;\nvar _reverseEach = iteratorModule.reverseEach;\nvar _isArray = Array.isArray;\nvar _isDefined = typeUtils.isDefined;\nvar _setCanvasValues = vizUtils.setCanvasValues;\nvar DEFAULT_OPACITY = .3;\nvar REFRESH_SERIES_DATA_INIT_ACTION_OPTIONS = [\"series\", \"commonSeriesSettings\", \"dataPrepareSettings\", \"seriesSelectionMode\", \"pointSelectionMode\", \"synchronizeMultiAxes\", \"resolveLabelsOverlapping\"];\nvar REFRESH_SERIES_FAMILIES_ACTION_OPTIONS = [\"equalBarWidth\", \"minBubbleSize\", \"maxBubbleSize\", \"barWidth\", \"barGroupPadding\", \"barGroupWidth\", \"negativesAsZeroes\", \"negativesAsZeros\"];\nvar FORCE_RENDER_REFRESH_ACTION_OPTIONS = [\"adaptiveLayout\", \"crosshair\", \"resolveLabelOverlapping\", \"adjustOnZoom\", \"zoomingMode\", \"scrollingMode\", \"stickyHovering\"];\nvar FONT = \"font\";\n\nfunction checkHeightRollingStock(rollingStocks, stubCanvas) {\n  var canvasSize = stubCanvas.end - stubCanvas.start;\n  var size = 0;\n  rollingStocks.forEach(function (rollingStock) {\n    size += rollingStock.getBoundingRect().width;\n  });\n\n  while (canvasSize < size) {\n    size -= findAndKillSmallValue(rollingStocks);\n  }\n}\n\nfunction findAndKillSmallValue(rollingStocks) {\n  var smallestObject;\n  var width;\n  smallestObject = rollingStocks.reduce(function (prev, rollingStock, index) {\n    if (!rollingStock) {\n      return prev;\n    }\n\n    var value = rollingStock.value();\n    return value < prev.value ? {\n      value: value,\n      rollingStock: rollingStock,\n      index: index\n    } : prev;\n  }, {\n    rollingStock: void 0,\n    value: 1 / 0,\n    index: void 0\n  });\n  smallestObject.rollingStock.getLabels()[0].draw(false);\n  width = smallestObject.rollingStock.getBoundingRect().width;\n  rollingStocks[smallestObject.index] = null;\n  return width;\n}\n\nfunction checkStackOverlap(rollingStocks) {\n  var i;\n  var j;\n  var iLength;\n  var jLength;\n  var overlap = false;\n\n  for (i = 0, iLength = rollingStocks.length - 1; i < iLength; i++) {\n    for (j = i + 1, jLength = rollingStocks.length; j < jLength; j++) {\n      if (i !== j && checkStacksOverlapping(rollingStocks[i], rollingStocks[j], true)) {\n        overlap = true;\n        break;\n      }\n    }\n\n    if (overlap) {\n      break;\n    }\n  }\n\n  return overlap;\n}\n\nfunction resolveLabelOverlappingInOneDirection(points, canvas, isRotated, shiftFunction) {\n  var customSorting = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : function () {\n    return 0;\n  };\n  var rollingStocks = [];\n  var stubCanvas = {\n    start: isRotated ? canvas.left : canvas.top,\n    end: isRotated ? canvas.width - canvas.right : canvas.height - canvas.bottom\n  };\n  var hasStackedSeries = false;\n  points.forEach(function (p) {\n    if (!p) {\n      return;\n    }\n\n    hasStackedSeries = hasStackedSeries || p.series.isStackedSeries() || p.series.isFullStackedSeries();\n    p.getLabels().forEach(function (l) {\n      l.isVisible() && rollingStocks.push(new RollingStock(l, isRotated, shiftFunction));\n    });\n  });\n\n  if (hasStackedSeries) {\n    !isRotated && rollingStocks.reverse();\n  } else {\n    var rollingStocksTmp = rollingStocks.slice();\n    rollingStocks.sort(function (a, b) {\n      return customSorting(a, b) || a.getInitialPosition() - b.getInitialPosition() || rollingStocksTmp.indexOf(a) - rollingStocksTmp.indexOf(b);\n    });\n  }\n\n  if (!checkStackOverlap(rollingStocks)) {\n    return false;\n  }\n\n  checkHeightRollingStock(rollingStocks, stubCanvas);\n  prepareOverlapStacks(rollingStocks);\n  rollingStocks.reverse();\n  moveRollingStock(rollingStocks, stubCanvas);\n  return true;\n}\n\nfunction checkStacksOverlapping(firstRolling, secondRolling, inTwoSides) {\n  if (!firstRolling || !secondRolling) {\n    return;\n  }\n\n  var firstRect = firstRolling.getBoundingRect();\n  var secondRect = secondRolling.getBoundingRect();\n  var oppositeOverlapping = inTwoSides ? firstRect.oppositeStart <= secondRect.oppositeStart && firstRect.oppositeEnd > secondRect.oppositeStart || secondRect.oppositeStart <= firstRect.oppositeStart && secondRect.oppositeEnd > firstRect.oppositeStart : true;\n  return firstRect.end > secondRect.start && oppositeOverlapping;\n}\n\nfunction prepareOverlapStacks(rollingStocks) {\n  var i;\n  var currentRollingStock;\n  var root;\n\n  for (i = 0; i < rollingStocks.length - 1; i++) {\n    currentRollingStock = root || rollingStocks[i];\n\n    if (checkStacksOverlapping(currentRollingStock, rollingStocks[i + 1])) {\n      currentRollingStock.toChain(rollingStocks[i + 1]);\n      rollingStocks[i + 1] = null;\n      root = currentRollingStock;\n    } else {\n      root = rollingStocks[i + 1] || currentRollingStock;\n    }\n  }\n}\n\nfunction moveRollingStock(rollingStocks, canvas) {\n  var i;\n  var j;\n  var currentRollingStock;\n  var nextRollingStock;\n  var currentBBox;\n  var nextBBox;\n\n  for (i = 0; i < rollingStocks.length; i++) {\n    currentRollingStock = rollingStocks[i];\n\n    if (rollingStocksIsOut(currentRollingStock, canvas)) {\n      currentBBox = currentRollingStock.getBoundingRect();\n\n      for (j = i + 1; j < rollingStocks.length; j++) {\n        nextRollingStock = rollingStocks[j];\n\n        if (!nextRollingStock) {\n          continue;\n        }\n\n        nextBBox = nextRollingStock.getBoundingRect();\n\n        if (nextBBox.end > currentBBox.start - (currentBBox.end - canvas.end)) {\n          nextRollingStock.toChain(currentRollingStock);\n          rollingStocks[i] = currentRollingStock = null;\n          break;\n        }\n      }\n    }\n\n    currentRollingStock && currentRollingStock.setRollingStockInCanvas(canvas);\n  }\n}\n\nfunction rollingStocksIsOut(rollingStock, canvas) {\n  return rollingStock && rollingStock.getBoundingRect().end > canvas.end;\n}\n\nfunction RollingStock(label, isRotated, shiftFunction) {\n  var bBox = label.getBoundingRect();\n  var x = bBox.x;\n  var y = bBox.y;\n  var endX = bBox.x + bBox.width;\n  var endY = bBox.y + bBox.height;\n  this.labels = [label];\n  this.shiftFunction = shiftFunction;\n  this._bBox = {\n    start: isRotated ? x : y,\n    width: isRotated ? bBox.width : bBox.height,\n    end: isRotated ? endX : endY,\n    oppositeStart: isRotated ? y : x,\n    oppositeEnd: isRotated ? endY : endX\n  };\n  this._initialPosition = isRotated ? bBox.x : bBox.y;\n  return this;\n}\n\nRollingStock.prototype = {\n  toChain: function toChain(nextRollingStock) {\n    var nextRollingStockBBox = nextRollingStock.getBoundingRect();\n    nextRollingStock.shift(nextRollingStockBBox.start - this._bBox.end);\n\n    this._changeBoxWidth(nextRollingStockBBox.width);\n\n    this.labels = this.labels.concat(nextRollingStock.labels);\n  },\n  getBoundingRect: function getBoundingRect() {\n    return this._bBox;\n  },\n  shift: function shift(shiftLength) {\n    var shiftFunction = this.shiftFunction;\n\n    _each(this.labels, function (index, label) {\n      var bBox = label.getBoundingRect();\n      var coords = shiftFunction(bBox, shiftLength);\n\n      if (!label.hideInsideLabel(coords)) {\n        label.shift(coords.x, coords.y);\n      }\n    });\n\n    this._bBox.end -= shiftLength;\n    this._bBox.start -= shiftLength;\n  },\n  setRollingStockInCanvas: function setRollingStockInCanvas(canvas) {\n    if (this._bBox.end > canvas.end) {\n      this.shift(this._bBox.end - canvas.end);\n    }\n  },\n  getLabels: function getLabels() {\n    return this.labels;\n  },\n  value: function value() {\n    return this.labels[0].getData().value;\n  },\n  getInitialPosition: function getInitialPosition() {\n    return this._initialPosition;\n  },\n  _changeBoxWidth: function _changeBoxWidth(width) {\n    this._bBox.end += width;\n    this._bBox.width += width;\n  }\n};\n\nfunction getLegendFields(name) {\n  return {\n    nameField: name + \"Name\",\n    colorField: name + \"Color\",\n    indexField: name + \"Index\"\n  };\n}\n\nfunction getLegendSettings(legendDataField) {\n  var formatObjectFields = getLegendFields(legendDataField);\n  return {\n    getFormatObject: function getFormatObject(data) {\n      var res = {};\n      res[formatObjectFields.indexField] = data.id;\n      res[formatObjectFields.colorField] = data.states.normal.fill;\n      res[formatObjectFields.nameField] = data.text;\n      return res;\n    },\n    textField: formatObjectFields.nameField\n  };\n}\n\nfunction checkOverlapping(firstRect, secondRect) {\n  return (firstRect.x <= secondRect.x && secondRect.x <= firstRect.x + firstRect.width || firstRect.x >= secondRect.x && firstRect.x <= secondRect.x + secondRect.width) && (firstRect.y <= secondRect.y && secondRect.y <= firstRect.y + firstRect.height || firstRect.y >= secondRect.y && firstRect.y <= secondRect.y + secondRect.height);\n}\n\nvar overlapping = {\n  resolveLabelOverlappingInOneDirection: resolveLabelOverlappingInOneDirection\n};\nvar BaseChart = BaseWidget.inherit({\n  _eventsMap: {\n    onSeriesClick: {\n      name: \"seriesClick\"\n    },\n    onPointClick: {\n      name: \"pointClick\"\n    },\n    onArgumentAxisClick: {\n      name: \"argumentAxisClick\"\n    },\n    onLegendClick: {\n      name: \"legendClick\"\n    },\n    onSeriesSelectionChanged: {\n      name: \"seriesSelectionChanged\"\n    },\n    onPointSelectionChanged: {\n      name: \"pointSelectionChanged\"\n    },\n    onSeriesHoverChanged: {\n      name: \"seriesHoverChanged\"\n    },\n    onPointHoverChanged: {\n      name: \"pointHoverChanged\"\n    },\n    onDone: {\n      name: \"done\"\n    },\n    onZoomStart: {\n      name: \"zoomStart\"\n    },\n    onZoomEnd: {\n      name: \"zoomEnd\"\n    }\n  },\n  _fontFields: [\"legend.\" + FONT, \"legend.title.\" + FONT, \"legend.title.subtitle.\" + FONT, \"commonSeriesSettings.label.\" + FONT],\n  _rootClassPrefix: \"dxc\",\n  _rootClass: \"dxc-chart\",\n  _initialChanges: [\"INIT\"],\n  _themeDependentChanges: [\"REFRESH_SERIES_REINIT\"],\n  _getThemeManagerOptions: function _getThemeManagerOptions() {\n    var themeOptions = this.callBase.apply(this, arguments);\n    themeOptions.options = this.option();\n    return themeOptions;\n  },\n  _createThemeManager: function _createThemeManager() {\n    var chartOption = this.option();\n    var themeManager = new chartThemeManagerModule.ThemeManager(this._getThemeManagerOptions());\n    themeManager.setTheme(chartOption.theme, chartOption.rtlEnabled);\n    return themeManager;\n  },\n  _initCore: function _initCore() {\n    var that = this;\n    that._canvasClipRect = that._renderer.clipRect();\n\n    that._createHtmlStructure();\n\n    that._createLegend();\n\n    that._createTracker();\n\n    that._needHandleRenderComplete = true;\n    that.layoutManager = new LayoutManagerModule.LayoutManager();\n\n    that._createScrollBar();\n\n    eventsEngine.on(that._$element, \"contextmenu\", function (event) {\n      if (eventUtils.isTouchEvent(event) || eventUtils.isPointerEvent(event)) {\n        event.preventDefault();\n      }\n    });\n    eventsEngine.on(that._$element, \"MSHoldVisual\", function (event) {\n      event.preventDefault();\n    });\n  },\n  _getLayoutItems: noop,\n  _layoutManagerOptions: function _layoutManagerOptions() {\n    return this._themeManager.getOptions(\"adaptiveLayout\");\n  },\n  _reinit: function _reinit() {\n    var that = this;\n\n    _setCanvasValues(that._canvas);\n\n    that._reinitAxes();\n\n    that._requestChange([\"DATA_SOURCE\", \"DATA_INIT\", \"CORRECT_AXIS\", \"FULL_RENDER\"]);\n  },\n  _correctAxes: noop,\n  _createHtmlStructure: function _createHtmlStructure() {\n    var that = this;\n    var renderer = that._renderer;\n    var root = renderer.root;\n\n    var createConstantLinesGroup = function createConstantLinesGroup() {\n      return renderer.g().attr({\n        \"class\": \"dxc-constant-lines-group\"\n      }).linkOn(root, \"constant-lines\");\n    };\n\n    that._constantLinesGroup = {\n      dispose: function dispose() {\n        this.under.dispose();\n        this.above.dispose();\n      },\n      linkOff: function linkOff() {\n        this.under.linkOff();\n        this.above.linkOff();\n      },\n      clear: function clear() {\n        this.under.linkRemove().clear();\n        this.above.linkRemove().clear();\n      },\n      linkAppend: function linkAppend() {\n        this.under.linkAppend();\n        this.above.linkAppend();\n      }\n    };\n    that._backgroundRect = renderer.rect().attr({\n      fill: \"gray\",\n      opacity: 1e-4\n    }).append(root);\n    that._panesBackgroundGroup = renderer.g().attr({\n      \"class\": \"dxc-background\"\n    }).append(root);\n    that._stripsGroup = renderer.g().attr({\n      \"class\": \"dxc-strips-group\"\n    }).linkOn(root, \"strips\");\n    that._gridGroup = renderer.g().attr({\n      \"class\": \"dxc-grids-group\"\n    }).linkOn(root, \"grids\");\n    that._panesBorderGroup = renderer.g().attr({\n      \"class\": \"dxc-border\"\n    }).linkOn(root, \"border\");\n    that._axesGroup = renderer.g().attr({\n      \"class\": \"dxc-axes-group\"\n    }).linkOn(root, \"axes\");\n    that._labelAxesGroup = renderer.g().attr({\n      \"class\": \"dxc-strips-labels-group\"\n    }).linkOn(root, \"strips-labels\");\n    that._constantLinesGroup.under = createConstantLinesGroup();\n    that._seriesGroup = renderer.g().attr({\n      \"class\": \"dxc-series-group\"\n    }).linkOn(root, \"series\");\n    that._constantLinesGroup.above = createConstantLinesGroup();\n    that._scaleBreaksGroup = renderer.g().attr({\n      \"class\": \"dxc-scale-breaks\"\n    }).linkOn(root, \"scale-breaks\");\n    that._labelsGroup = renderer.g().attr({\n      \"class\": \"dxc-labels-group\"\n    }).linkOn(root, \"labels\");\n    that._crosshairCursorGroup = renderer.g().attr({\n      \"class\": \"dxc-crosshair-cursor\"\n    }).linkOn(root, \"crosshair\");\n    that._legendGroup = renderer.g().attr({\n      \"class\": \"dxc-legend\",\n      \"clip-path\": that._getCanvasClipRectID()\n    }).linkOn(root, \"legend\").linkAppend(root).enableLinks();\n    that._scrollBarGroup = renderer.g().attr({\n      \"class\": \"dxc-scroll-bar\"\n    }).linkOn(root, \"scroll-bar\");\n  },\n  _disposeObjectsInArray: function _disposeObjectsInArray(propName, fieldNames) {\n    _each(this[propName] || [], function (_, item) {\n      if (fieldNames && item) {\n        _each(fieldNames, function (_, field) {\n          item[field] && item[field].dispose();\n        });\n      } else {\n        item && item.dispose();\n      }\n    });\n\n    this[propName] = null;\n  },\n  _disposeCore: function _disposeCore() {\n    var that = this;\n\n    var disposeObject = function disposeObject(propName) {\n      if (that[propName]) {\n        that[propName].dispose();\n        that[propName] = null;\n      }\n    };\n\n    var unlinkGroup = function unlinkGroup(name) {\n      that[name].linkOff();\n    };\n\n    var disposeObjectsInArray = this._disposeObjectsInArray;\n\n    that._renderer.stopAllAnimations();\n\n    disposeObjectsInArray.call(that, \"series\");\n    disposeObject(\"_tracker\");\n    disposeObject(\"_crosshair\");\n    that.layoutManager = that._userOptions = that._canvas = that._groupsData = null;\n    unlinkGroup(\"_stripsGroup\");\n    unlinkGroup(\"_gridGroup\");\n    unlinkGroup(\"_axesGroup\");\n    unlinkGroup(\"_constantLinesGroup\");\n    unlinkGroup(\"_labelAxesGroup\");\n    unlinkGroup(\"_panesBorderGroup\");\n    unlinkGroup(\"_seriesGroup\");\n    unlinkGroup(\"_labelsGroup\");\n    unlinkGroup(\"_crosshairCursorGroup\");\n    unlinkGroup(\"_legendGroup\");\n    unlinkGroup(\"_scrollBarGroup\");\n    unlinkGroup(\"_scaleBreaksGroup\");\n    disposeObject(\"_canvasClipRect\");\n    disposeObject(\"_panesBackgroundGroup\");\n    disposeObject(\"_backgroundRect\");\n    disposeObject(\"_stripsGroup\");\n    disposeObject(\"_gridGroup\");\n    disposeObject(\"_axesGroup\");\n    disposeObject(\"_constantLinesGroup\");\n    disposeObject(\"_labelAxesGroup\");\n    disposeObject(\"_panesBorderGroup\");\n    disposeObject(\"_seriesGroup\");\n    disposeObject(\"_labelsGroup\");\n    disposeObject(\"_crosshairCursorGroup\");\n    disposeObject(\"_legendGroup\");\n    disposeObject(\"_scrollBarGroup\");\n    disposeObject(\"_scaleBreaksGroup\");\n  },\n  _getAnimationOptions: function _getAnimationOptions() {\n    return this._themeManager.getOptions(\"animation\");\n  },\n  _getDefaultSize: function _getDefaultSize() {\n    return {\n      width: 400,\n      height: 400\n    };\n  },\n  _getOption: function _getOption(name) {\n    return this._themeManager.getOptions(name);\n  },\n  _applySize: function _applySize(rect) {\n    this._rect = rect.slice();\n\n    if (!this._changes.has(\"FULL_RENDER\")) {\n      this._processRefreshData(RESIZE_REFRESH_ACTION);\n    }\n  },\n  _resize: function _resize() {\n    this._doRender(this.__renderOptions || {\n      animate: false,\n      isResize: true\n    });\n  },\n  _trackerType: \"ChartTracker\",\n  _createTracker: function _createTracker() {\n    var that = this;\n    that._tracker = new trackerModule[that._trackerType]({\n      seriesGroup: that._seriesGroup,\n      renderer: that._renderer,\n      tooltip: that._tooltip,\n      legend: that._legend,\n      eventTrigger: that._eventTrigger\n    });\n  },\n  _getTrackerSettings: function _getTrackerSettings() {\n    return extend({\n      chart: this\n    }, this._getSelectionModes());\n  },\n  _getSelectionModes: function _getSelectionModes() {\n    var themeManager = this._themeManager;\n    return {\n      seriesSelectionMode: themeManager.getOptions(\"seriesSelectionMode\"),\n      pointSelectionMode: themeManager.getOptions(\"pointSelectionMode\")\n    };\n  },\n  _updateTracker: function _updateTracker(trackerCanvases) {\n    var that = this;\n\n    that._tracker.update(that._getTrackerSettings());\n\n    that._tracker.setCanvases({\n      left: 0,\n      right: that._canvas.width,\n      top: 0,\n      bottom: that._canvas.height\n    }, trackerCanvases);\n  },\n  _createCanvasFromRect: function _createCanvasFromRect(rect) {\n    var currentCanvas = this._canvas;\n    return _setCanvasValues({\n      left: rect[0],\n      top: rect[1],\n      right: currentCanvas.width - rect[2],\n      bottom: currentCanvas.height - rect[3],\n      width: currentCanvas.width,\n      height: currentCanvas.height\n    });\n  },\n  _doRender: function _doRender(_options) {\n    var that = this;\n    var drawOptions;\n    var recreateCanvas;\n\n    if (0 === that._canvas.width && 0 === that._canvas.height) {\n      return;\n    }\n\n    that._resetIsReady();\n\n    drawOptions = that._prepareDrawOptions(_options);\n    recreateCanvas = drawOptions.recreateCanvas;\n\n    that._preserveOriginalCanvas();\n\n    if (recreateCanvas) {\n      that.__currentCanvas = that._canvas;\n    } else {\n      that._canvas = that.__currentCanvas;\n    }\n\n    recreateCanvas && that._updateCanvasClipRect(that._canvas);\n    this._canvas = this._createCanvasFromRect(this._rect);\n\n    that._renderer.stopAllAnimations(true);\n\n    that._cleanGroups();\n\n    var startTime = new Date();\n\n    that._renderElements(drawOptions);\n\n    that._lastRenderingTime = new Date() - startTime;\n  },\n  _preserveOriginalCanvas: function _preserveOriginalCanvas() {\n    this.__originalCanvas = this._canvas;\n    this._canvas = extend({}, this._canvas);\n  },\n  _layoutAxes: noop,\n  _renderElements: function _renderElements(drawOptions) {\n    var that = this;\n\n    var preparedOptions = that._prepareToRender(drawOptions);\n\n    var isRotated = that._isRotated();\n\n    var isLegendInside = that._isLegendInside();\n\n    var trackerCanvases = [];\n    extend({}, that._canvas);\n    var argBusinessRange;\n    var zoomMinArg;\n    var zoomMaxArg;\n\n    that._renderer.lock();\n\n    if (drawOptions.drawLegend && that._legend) {\n      that._legendGroup.linkAppend();\n    }\n\n    that.layoutManager.setOptions(that._layoutManagerOptions());\n\n    var layoutTargets = that._getLayoutTargets();\n\n    this._layoutAxes(function (needSpace) {\n      var axisDrawOptions = needSpace ? extend({}, drawOptions, {\n        animate: false\n      }) : drawOptions;\n\n      var canvas = that._renderAxes(axisDrawOptions, preparedOptions);\n\n      that._shrinkAxes(needSpace, canvas);\n    });\n\n    that._applyClipRects(preparedOptions);\n\n    that._appendSeriesGroups();\n\n    that._createCrosshairCursor();\n\n    layoutTargets.forEach(function (_ref) {\n      var canvas = _ref.canvas;\n      trackerCanvases.push({\n        left: canvas.left,\n        right: canvas.width - canvas.right,\n        top: canvas.top,\n        bottom: canvas.height - canvas.bottom\n      });\n    });\n\n    if (that._scrollBar) {\n      argBusinessRange = that._argumentAxes[0].getTranslator().getBusinessRange();\n\n      if (\"discrete\" === argBusinessRange.axisType && argBusinessRange.categories && argBusinessRange.categories.length <= 1 || \"discrete\" !== argBusinessRange.axisType && argBusinessRange.min === argBusinessRange.max) {\n        zoomMinArg = zoomMaxArg = void 0;\n      } else {\n        zoomMinArg = argBusinessRange.minVisible;\n        zoomMaxArg = argBusinessRange.maxVisible;\n      }\n\n      that._scrollBar.init(argBusinessRange, !that._argumentAxes[0].getOptions().valueMarginsEnabled).setPosition(zoomMinArg, zoomMaxArg);\n    }\n\n    that._updateTracker(trackerCanvases);\n\n    that._updateLegendPosition(drawOptions, isLegendInside);\n\n    that._applyPointMarkersAutoHiding();\n\n    that._renderSeries(drawOptions, isRotated, isLegendInside);\n\n    that._renderer.unlock();\n  },\n  _createCrosshairCursor: noop,\n  _appendSeriesGroups: function _appendSeriesGroups() {\n    this._seriesGroup.linkAppend();\n\n    this._labelsGroup.linkAppend();\n\n    this._appendAdditionalSeriesGroups();\n  },\n  _renderSeries: function _renderSeries(drawOptions, isRotated, isLegendInside) {\n    this._calculateSeriesLayout(drawOptions, isRotated);\n\n    this._renderSeriesElements(drawOptions, isRotated, isLegendInside);\n  },\n  _calculateSeriesLayout: function _calculateSeriesLayout(drawOptions, isRotated) {\n    drawOptions.hideLayoutLabels = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), isRotated) && !this._themeManager.getOptions(\"adaptiveLayout\").keepLabels;\n\n    this._updateSeriesDimensions(drawOptions);\n  },\n  _getArgFilter: function _getArgFilter() {\n    return function () {\n      return true;\n    };\n  },\n  _getValFilter: function _getValFilter(series) {\n    return function () {\n      return true;\n    };\n  },\n  _getPointsToAnimation: function _getPointsToAnimation(series) {\n    var _this = this;\n\n    var argViewPortFilter = this._getArgFilter();\n\n    return series.map(function (s) {\n      var valViewPortFilter = _this._getValFilter(s);\n\n      return s.getPoints().filter(function (p) {\n        return p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)));\n      }).length;\n    });\n  },\n  _renderSeriesElements: function _renderSeriesElements(drawOptions, isRotated, isLegendInside) {\n    var that = this;\n    var i;\n    var series = that.series;\n    var singleSeries;\n    var seriesLength = series.length;\n\n    var resolveLabelOverlapping = that._themeManager.getOptions(\"resolveLabelOverlapping\");\n\n    var pointsToAnimation = that._getPointsToAnimation(series);\n\n    for (i = 0; i < seriesLength; i++) {\n      singleSeries = series[i];\n\n      that._applyExtraSettings(singleSeries, drawOptions);\n\n      singleSeries.draw(drawOptions.animate && pointsToAnimation[i] <= drawOptions.animationPointsLimit && that._renderer.animationEnabled(), drawOptions.hideLayoutLabels, that._getLegendCallBack(singleSeries));\n    }\n\n    if (\"none\" === resolveLabelOverlapping) {\n      that._adjustSeriesLabels(false);\n    } else {\n      that._locateLabels(resolveLabelOverlapping);\n    }\n\n    that._renderTrackers(isLegendInside);\n\n    that._tracker.repairTooltip();\n\n    that._clearCanvas();\n\n    that._renderExtraElements();\n\n    that._drawn();\n\n    that._renderCompleteHandler();\n  },\n  _locateLabels: function _locateLabels(resolveLabelOverlapping) {\n    this._resolveLabelOverlapping(resolveLabelOverlapping);\n  },\n  _renderExtraElements: function _renderExtraElements() {},\n  _clearCanvas: function _clearCanvas() {\n    this._canvas = this.__originalCanvas;\n  },\n  _resolveLabelOverlapping: function _resolveLabelOverlapping(resolveLabelOverlapping) {\n    var func;\n\n    switch (resolveLabelOverlapping) {\n      case \"stack\":\n        func = this._resolveLabelOverlappingStack;\n        break;\n\n      case \"hide\":\n        func = this._resolveLabelOverlappingHide;\n        break;\n\n      case \"shift\":\n        func = this._resolveLabelOverlappingShift;\n    }\n\n    return typeUtils.isFunction(func) && func.call(this);\n  },\n  _getVisibleSeries: function _getVisibleSeries() {\n    return commonUtils.grep(this.getAllSeries(), function (series) {\n      return series.isVisible();\n    });\n  },\n  _resolveLabelOverlappingHide: function _resolveLabelOverlappingHide() {\n    var labels = [];\n    var currentLabel;\n    var nextLabel;\n    var currentLabelRect;\n    var nextLabelRect;\n    var i;\n    var j;\n    var points;\n\n    var series = this._getVisibleSeries();\n\n    for (i = 0; i < series.length; i++) {\n      points = series[i].getVisiblePoints();\n\n      for (j = 0; j < points.length; j++) {\n        labels.push.apply(labels, points[j].getLabels());\n      }\n    }\n\n    for (i = 0; i < labels.length; i++) {\n      currentLabel = labels[i];\n\n      if (!currentLabel.isVisible()) {\n        continue;\n      }\n\n      currentLabelRect = currentLabel.getBoundingRect();\n\n      for (j = i + 1; j < labels.length; j++) {\n        nextLabel = labels[j];\n        nextLabelRect = nextLabel.getBoundingRect();\n\n        if (checkOverlapping(currentLabelRect, nextLabelRect)) {\n          nextLabel.draw(false);\n        }\n      }\n    }\n  },\n  _cleanGroups: function _cleanGroups() {\n    var that = this;\n\n    that._stripsGroup.linkRemove().clear();\n\n    that._gridGroup.linkRemove().clear();\n\n    that._axesGroup.linkRemove().clear();\n\n    that._constantLinesGroup.above.clear();\n\n    that._labelAxesGroup.linkRemove().clear();\n\n    that._labelsGroup.linkRemove().clear();\n\n    that._crosshairCursorGroup.linkRemove().clear();\n\n    that._scaleBreaksGroup.linkRemove().clear();\n  },\n  _allowLegendInsidePosition: function _allowLegendInsidePosition() {\n    return false;\n  },\n  _updateLegendPosition: noop,\n  _createLegend: function _createLegend() {\n    var that = this;\n    var legendSettings = getLegendSettings(that._legendDataField);\n    that._legend = new legendModule.Legend({\n      renderer: that._renderer,\n      widget: that,\n      group: that._legendGroup,\n      backgroundClass: \"dxc-border\",\n      itemGroupClass: \"dxc-item\",\n      titleGroupClass: \"dxc-title\",\n      textField: legendSettings.textField,\n      getFormatObject: legendSettings.getFormatObject,\n      allowInsidePosition: that._allowLegendInsidePosition()\n    });\n\n    that._updateLegend();\n\n    that._layout.add(that._legend);\n  },\n  _updateLegend: function _updateLegend() {\n    var that = this;\n    var themeManager = that._themeManager;\n    var legendOptions = themeManager.getOptions(\"legend\");\n\n    var legendData = that._getLegendData();\n\n    legendOptions.containerBackgroundColor = themeManager.getOptions(\"containerBackgroundColor\");\n    legendOptions._incidentOccurred = that._incidentOccurred;\n\n    that._legend.update(legendData, legendOptions, themeManager.theme(\"legend\").title);\n\n    this._change([\"LAYOUT\"]);\n  },\n  _prepareDrawOptions: function _prepareDrawOptions(drawOptions) {\n    var animationOptions = this._getAnimationOptions();\n\n    var options;\n    options = extend({}, {\n      force: false,\n      adjustAxes: true,\n      drawLegend: true,\n      drawTitle: true,\n      animate: animationOptions.enabled,\n      animationPointsLimit: animationOptions.maxPointCountSupported\n    }, drawOptions, this.__renderOptions);\n\n    if (!_isDefined(options.recreateCanvas)) {\n      options.recreateCanvas = options.adjustAxes && options.drawLegend && options.drawTitle;\n    }\n\n    return options;\n  },\n  _processRefreshData: function _processRefreshData(newRefreshAction) {\n    var currentRefreshActionPosition = inArray(this._currentRefreshData, ACTIONS_BY_PRIORITY);\n    var newRefreshActionPosition = inArray(newRefreshAction, ACTIONS_BY_PRIORITY);\n\n    if (!this._currentRefreshData || currentRefreshActionPosition >= 0 && newRefreshActionPosition < currentRefreshActionPosition) {\n      this._currentRefreshData = newRefreshAction;\n    }\n\n    this._requestChange([\"REFRESH\"]);\n  },\n  _getLegendData: function _getLegendData() {\n    return _map(this._getLegendTargets(), function (item) {\n      var legendData = item.legendData;\n      var style = item.getLegendStyles;\n      var opacity = style.normal.opacity;\n\n      if (!item.visible) {\n        if (!_isDefined(opacity) || opacity > DEFAULT_OPACITY) {\n          opacity = DEFAULT_OPACITY;\n        }\n\n        legendData.textOpacity = DEFAULT_OPACITY;\n      }\n\n      var opacityStyle = {\n        opacity: opacity\n      };\n      legendData.states = {\n        hover: extend({}, style.hover, opacityStyle),\n        selection: extend({}, style.selection, opacityStyle),\n        normal: extend({}, style.normal, opacityStyle)\n      };\n      return legendData;\n    });\n  },\n  _getLegendOptions: function _getLegendOptions(item) {\n    return {\n      legendData: {\n        text: item[this._legendItemTextField],\n        id: item.index,\n        visible: true\n      },\n      getLegendStyles: item.getLegendStyles(),\n      visible: item.isVisible()\n    };\n  },\n  _disposeSeries: function _disposeSeries(seriesIndex) {\n    var that = this;\n\n    if (that.series) {\n      if (_isDefined(seriesIndex)) {\n        that.series[seriesIndex].dispose();\n        that.series.splice(seriesIndex, 1);\n      } else {\n        _each(that.series, function (_, s) {\n          return s.dispose();\n        });\n\n        that.series.length = 0;\n      }\n    }\n\n    if (!that.series || !that.series.length) {\n      that.series = [];\n    }\n  },\n  _disposeSeriesFamilies: function _disposeSeriesFamilies() {\n    var that = this;\n\n    _each(that.seriesFamilies || [], function (_, family) {\n      family.dispose();\n    });\n\n    that.seriesFamilies = null;\n    that._needHandleRenderComplete = true;\n  },\n  _simulateOptionChange: function _simulateOptionChange(fullName, value, previousValue) {\n    var that = this;\n    var optionSetter = coreDataUtils.compileSetter(fullName);\n    optionSetter(that._options, value, {\n      functionsAsIs: true,\n      merge: !that._getOptionsByReference()[fullName]\n    });\n\n    that._notifyOptionChanged(fullName, value, previousValue);\n\n    that._changes.reset();\n  },\n  _optionChanged: function _optionChanged(arg) {\n    this._themeManager.resetOptions(arg.name);\n\n    this.callBase.apply(this, arguments);\n  },\n  _applyChanges: function _applyChanges() {\n    var that = this;\n\n    that._themeManager.update(that._options);\n\n    that.callBase.apply(that, arguments);\n  },\n  _optionChangesMap: {\n    animation: \"ANIMATION\",\n    dataSource: \"DATA_SOURCE\",\n    palette: \"PALETTE\",\n    paletteExtensionMode: \"PALETTE\",\n    legend: \"FORCE_DATA_INIT\",\n    seriesTemplate: \"FORCE_DATA_INIT\",\n    \"export\": \"FORCE_RENDER\",\n    valueAxis: \"AXES_AND_PANES\",\n    argumentAxis: \"AXES_AND_PANES\",\n    commonAxisSettings: \"AXES_AND_PANES\",\n    panes: \"AXES_AND_PANES\",\n    defaultPane: \"AXES_AND_PANES\",\n    useAggregation: \"AXES_AND_PANES\",\n    containerBackgroundColor: \"AXES_AND_PANES\",\n    rotated: \"ROTATED\",\n    autoHidePointMarkers: \"REFRESH_SERIES_REINIT\",\n    customizePoint: \"REFRESH_SERIES_REINIT\",\n    customizeLabel: \"REFRESH_SERIES_REINIT\",\n    scrollBar: \"SCROLL_BAR\"\n  },\n  _optionChangesOrder: [\"ROTATED\", \"PALETTE\", \"REFRESH_SERIES_REINIT\", \"AXES_AND_PANES\", \"INIT\", \"REINIT\", \"DATA_SOURCE\", \"REFRESH_SERIES_DATA_INIT\", \"DATA_INIT\", \"FORCE_DATA_INIT\", \"REFRESH_AXES\", \"CORRECT_AXIS\"],\n  _customChangesOrder: [\"ANIMATION\", \"REFRESH_SERIES_FAMILIES\", \"FORCE_RENDER\", \"VISUAL_RANGE\", \"SCROLL_BAR\", \"REINIT\", \"REFRESH\", \"FULL_RENDER\"],\n  _change_ANIMATION: function _change_ANIMATION() {\n    this._renderer.updateAnimationOptions(this._getAnimationOptions());\n  },\n  _change_DATA_SOURCE: function _change_DATA_SOURCE() {\n    this._needHandleRenderComplete = true;\n\n    this._updateDataSource();\n  },\n  _change_PALETTE: function _change_PALETTE() {\n    this._themeManager.updatePalette();\n\n    this._refreshSeries(\"DATA_INIT\");\n  },\n  _change_REFRESH_SERIES_DATA_INIT: function _change_REFRESH_SERIES_DATA_INIT() {\n    this._refreshSeries(\"DATA_INIT\");\n  },\n  _change_DATA_INIT: function _change_DATA_INIT() {\n    if ((!this.series || this.needToPopulateSeries) && !this._changes.has(\"FORCE_DATA_INIT\")) {\n      this._dataInit();\n    }\n  },\n  _change_FORCE_DATA_INIT: function _change_FORCE_DATA_INIT() {\n    this._dataInit();\n  },\n  _change_REFRESH_SERIES_FAMILIES: function _change_REFRESH_SERIES_FAMILIES() {\n    this._processSeriesFamilies();\n\n    this._populateBusinessRange();\n\n    this._processRefreshData(FORCE_RENDER_REFRESH_ACTION);\n  },\n  _change_FORCE_RENDER: function _change_FORCE_RENDER() {\n    this._processRefreshData(FORCE_RENDER_REFRESH_ACTION);\n  },\n  _change_AXES_AND_PANES: function _change_AXES_AND_PANES() {\n    this._refreshSeries(\"INIT\");\n  },\n  _change_ROTATED: function _change_ROTATED() {\n    this._createScrollBar();\n\n    this._refreshSeries(\"INIT\");\n  },\n  _change_REFRESH_SERIES_REINIT: function _change_REFRESH_SERIES_REINIT() {\n    this._refreshSeries(\"INIT\");\n  },\n  _change_REFRESH_AXES: function _change_REFRESH_AXES() {\n    var that = this;\n\n    _setCanvasValues(that._canvas);\n\n    that._reinitAxes();\n\n    that._requestChange([\"CORRECT_AXIS\", \"FULL_RENDER\"]);\n  },\n  _change_SCROLL_BAR: function _change_SCROLL_BAR() {\n    this._createScrollBar();\n\n    this._processRefreshData(FORCE_RENDER_REFRESH_ACTION);\n  },\n  _change_REINIT: function _change_REINIT() {\n    this._processRefreshData(REINIT_REFRESH_ACTION);\n  },\n  _refreshSeries: function _refreshSeries(actionName) {\n    this.needToPopulateSeries = true;\n\n    this._requestChange([actionName]);\n  },\n  _change_CORRECT_AXIS: function _change_CORRECT_AXIS() {\n    this._correctAxes();\n  },\n  _doRefresh: function _doRefresh() {\n    var methodName = this._currentRefreshData;\n\n    if (methodName) {\n      this._currentRefreshData = null;\n\n      this._renderer.stopAllAnimations(true);\n\n      this[methodName]();\n    }\n  },\n  _updateCanvasClipRect: function _updateCanvasClipRect(canvas) {\n    var that = this;\n    var width;\n    var height;\n    width = Math.max(canvas.width - canvas.left - canvas.right, 0);\n    height = Math.max(canvas.height - canvas.top - canvas.bottom, 0);\n\n    that._canvasClipRect.attr({\n      x: canvas.left,\n      y: canvas.top,\n      width: width,\n      height: height\n    });\n\n    that._backgroundRect.attr({\n      x: canvas.left,\n      y: canvas.top,\n      width: width,\n      height: height\n    });\n  },\n  _getCanvasClipRectID: function _getCanvasClipRectID() {\n    return this._canvasClipRect.id;\n  },\n  _dataSourceChangedHandler: function _dataSourceChangedHandler() {\n    if (this._changes.has(\"INIT\")) {\n      this._requestChange([\"DATA_INIT\"]);\n    } else {\n      this._requestChange([\"FORCE_DATA_INIT\"]);\n    }\n  },\n  _dataInit: function _dataInit() {\n    this._dataSpecificInit(true);\n  },\n  _processSingleSeries: function _processSingleSeries(singleSeries) {\n    singleSeries.createPoints(false);\n  },\n  _handleSeriesDataUpdated: function _handleSeriesDataUpdated() {\n    var _this2 = this;\n\n    if (this._getVisibleSeries().some(function (s) {\n      return s.useAggregation();\n    })) {\n      this._populateMarginOptions();\n    }\n\n    this.series.forEach(function (s) {\n      return _this2._processSingleSeries(s);\n    }, this);\n  },\n  _dataSpecificInit: function _dataSpecificInit(needRedraw) {\n    var that = this;\n\n    if (!that.series || that.needToPopulateSeries) {\n      that.series = that._populateSeries();\n    }\n\n    that._repopulateSeries();\n\n    that._seriesPopulatedHandlerCore();\n\n    that._populateBusinessRange();\n\n    that._tracker.updateSeries(that.series, this._changes.has(\"INIT\"));\n\n    that._updateLegend();\n\n    if (needRedraw) {\n      this._requestChange([\"FULL_RENDER\"]);\n    }\n  },\n  _forceRender: function _forceRender() {\n    this._doRender({\n      force: true\n    });\n  },\n  _repopulateSeries: function _repopulateSeries() {\n    var that = this;\n    var parsedData;\n    var themeManager = that._themeManager;\n\n    var data = that._dataSourceItems();\n\n    var dataValidatorOptions = themeManager.getOptions(\"dataPrepareSettings\");\n    var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\n\n    if (seriesTemplate) {\n      that._populateSeries(data);\n    }\n\n    that._groupSeries();\n\n    parsedData = dataValidatorModule.validateData(data, that._groupsData, that._incidentOccurred, dataValidatorOptions);\n    themeManager.resetPalette();\n    that.series.forEach(function (singleSeries) {\n      singleSeries.updateData(parsedData[singleSeries.getArgumentField()]);\n    });\n\n    that._handleSeriesDataUpdated();\n  },\n  _renderCompleteHandler: function _renderCompleteHandler() {\n    var that = this;\n    var allSeriesInited = true;\n\n    if (that._needHandleRenderComplete) {\n      _each(that.series, function (_, s) {\n        allSeriesInited = allSeriesInited && s.canRenderCompleteHandle();\n      });\n\n      if (allSeriesInited) {\n        that._needHandleRenderComplete = false;\n\n        that._eventTrigger(\"done\", {\n          target: that\n        });\n      }\n    }\n  },\n  _dataIsReady: function _dataIsReady() {\n    return _isDefined(this.option(\"dataSource\")) && this._dataIsLoaded();\n  },\n  _populateSeriesOptions: function _populateSeriesOptions(data) {\n    var that = this;\n    var themeManager = that._themeManager;\n    var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\n    var seriesOptions = seriesTemplate ? vizUtils.processSeriesTemplate(seriesTemplate, data || []) : that.option(\"series\");\n    var allSeriesOptions = _isArray(seriesOptions) ? seriesOptions : seriesOptions ? [seriesOptions] : [];\n\n    var extraOptions = that._getExtraOptions();\n\n    var particularSeriesOptions;\n    var seriesTheme;\n    var seriesThemes = [];\n\n    var seriesVisibilityChanged = function seriesVisibilityChanged(target) {\n      that._specialProcessSeries();\n\n      that._populateBusinessRange(target && target.getValueAxis(), true);\n\n      that._renderer.stopAllAnimations(true);\n\n      that._updateLegend();\n\n      that._requestChange([\"FULL_RENDER\"]);\n    };\n\n    for (var i = 0; i < allSeriesOptions.length; i++) {\n      particularSeriesOptions = extend(true, {}, allSeriesOptions[i], extraOptions);\n\n      if (!particularSeriesOptions.name) {\n        particularSeriesOptions.name = \"Series \" + (i + 1).toString();\n      }\n\n      particularSeriesOptions.rotated = that._isRotated();\n      particularSeriesOptions.customizePoint = themeManager.getOptions(\"customizePoint\");\n      particularSeriesOptions.customizeLabel = themeManager.getOptions(\"customizeLabel\");\n      particularSeriesOptions.visibilityChanged = seriesVisibilityChanged;\n      particularSeriesOptions.incidentOccurred = that._incidentOccurred;\n      seriesTheme = themeManager.getOptions(\"series\", particularSeriesOptions, allSeriesOptions.length);\n\n      if (that._checkPaneName(seriesTheme)) {\n        seriesThemes.push(seriesTheme);\n      }\n    }\n\n    return seriesThemes;\n  },\n  _populateSeries: function _populateSeries(data) {\n    var that = this;\n    var seriesBasis = [];\n    var incidentOccurred = that._incidentOccurred;\n\n    var seriesThemes = that._populateSeriesOptions(data);\n\n    var particularSeries;\n    var disposeSeriesFamilies = false;\n    that.needToPopulateSeries = false;\n\n    _each(seriesThemes, function (_, theme) {\n      var curSeries = that.series && that.series.filter(function (s) {\n        return s.name === theme.name && seriesBasis.map(function (sb) {\n          return sb.series;\n        }).indexOf(s) === -1;\n      })[0];\n\n      if (curSeries && curSeries.type === theme.type) {\n        seriesBasis.push({\n          series: curSeries,\n          options: theme\n        });\n      } else {\n        seriesBasis.push({\n          options: theme\n        });\n        disposeSeriesFamilies = true;\n      }\n    });\n\n    that._tracker.clearHover();\n\n    _reverseEach(that.series, function (index, series) {\n      if (!seriesBasis.some(function (s) {\n        return series === s.series;\n      })) {\n        that._disposeSeries(index);\n\n        disposeSeriesFamilies = true;\n      }\n    });\n\n    !disposeSeriesFamilies && (disposeSeriesFamilies = seriesBasis.some(function (sb) {\n      return sb.series.name !== seriesThemes[sb.series.index].name;\n    }));\n    that.series = [];\n    disposeSeriesFamilies && that._disposeSeriesFamilies();\n\n    that._themeManager.resetPalette();\n\n    var eventPipe = function eventPipe(data) {\n      that.series.forEach(function (currentSeries) {\n        currentSeries.notify(data);\n      });\n    };\n\n    _each(seriesBasis, function (_, basis) {\n      var seriesTheme = basis.options;\n      var renderSettings = {\n        commonSeriesModes: that._getSelectionModes(),\n        argumentAxis: that.getArgumentAxis(),\n        valueAxis: that._getValueAxis(seriesTheme.pane, seriesTheme.axis)\n      };\n\n      if (basis.series) {\n        particularSeries = basis.series;\n        particularSeries.updateOptions(seriesTheme, renderSettings);\n      } else {\n        particularSeries = new seriesModule.Series(extend({\n          renderer: that._renderer,\n          seriesGroup: that._seriesGroup,\n          labelsGroup: that._labelsGroup,\n          eventTrigger: that._eventTrigger,\n          eventPipe: eventPipe,\n          incidentOccurred: incidentOccurred\n        }, renderSettings), seriesTheme);\n      }\n\n      if (!particularSeries.isUpdated) {\n        incidentOccurred(\"E2101\", [seriesTheme.type]);\n      } else {\n        particularSeries.index = that.series.length;\n        that.series.push(particularSeries);\n      }\n    });\n\n    return that.series;\n  },\n  getStackedPoints: function getStackedPoints(point) {\n    var stackName = point.series.getStackName();\n    return this._getVisibleSeries().reduce(function (stackPoints, series) {\n      if (!_isDefined(series.getStackName()) && !_isDefined(stackName) || stackName === series.getStackName()) {\n        stackPoints = stackPoints.concat(series.getPointsByArg(point.argument));\n      }\n\n      return stackPoints;\n    }, []);\n  },\n  getAllSeries: function getAllSeries() {\n    return (this.series || []).slice();\n  },\n  getSeriesByName: function getSeriesByName(name) {\n    var found = null;\n\n    _each(this.series, function (i, singleSeries) {\n      if (singleSeries.name === name) {\n        found = singleSeries;\n        return false;\n      }\n    });\n\n    return found;\n  },\n  getSeriesByPos: function getSeriesByPos(pos) {\n    return (this.series || [])[pos];\n  },\n  clearSelection: function clearSelection() {\n    this._tracker.clearSelection();\n  },\n  hideTooltip: function hideTooltip() {\n    this._tracker._hideTooltip();\n  },\n  clearHover: function clearHover() {\n    this._tracker.clearHover();\n  },\n  render: function render(renderOptions) {\n    var that = this;\n    that.__renderOptions = renderOptions;\n    that.__forceRender = renderOptions && renderOptions.force;\n    that.callBase.apply(that, arguments);\n    that.__renderOptions = that.__forceRender = null;\n    return that;\n  },\n  refresh: function refresh() {\n    this._disposeSeries();\n\n    this._disposeSeriesFamilies();\n\n    this._requestChange([\"CONTAINER_SIZE\", \"REFRESH_SERIES_REINIT\"]);\n  },\n  _getMinSize: function _getMinSize() {\n    var adaptiveLayout = this._layoutManagerOptions();\n\n    return [adaptiveLayout.width, adaptiveLayout.height];\n  },\n  _change_REFRESH: function _change_REFRESH() {\n    if (!this._changes.has(\"INIT\")) {\n      this._doRefresh();\n    } else {\n      this._currentRefreshData = null;\n    }\n  },\n  _change_FULL_RENDER: function _change_FULL_RENDER() {\n    this._forceRender();\n  },\n  _change_INIT: function _change_INIT() {\n    this._reinit();\n  },\n  _stopCurrentHandling: function _stopCurrentHandling() {\n    this._tracker.stopCurrentHandling();\n  }\n});\nREFRESH_SERIES_DATA_INIT_ACTION_OPTIONS.forEach(function (name) {\n  BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_DATA_INIT\";\n});\nFORCE_RENDER_REFRESH_ACTION_OPTIONS.forEach(function (name) {\n  BaseChart.prototype._optionChangesMap[name] = \"FORCE_RENDER\";\n});\nREFRESH_SERIES_FAMILIES_ACTION_OPTIONS.forEach(function (name) {\n  BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_FAMILIES\";\n});\nexports.overlapping = overlapping;\nexports.BaseChart = BaseChart;\nBaseChart.addPlugin(require(\"../core/export\").plugin);\nBaseChart.addPlugin(require(\"../core/title\").plugin);\nBaseChart.addPlugin(require(\"../core/tooltip\").plugin);\nBaseChart.addPlugin(require(\"../core/loading_indicator\").plugin);\nBaseChart.addPlugin(require(\"../core/data_source\").plugin);\nvar _change_TITLE = BaseChart.prototype._change_TITLE;\n\nBaseChart.prototype._change_TITLE = function () {\n  _change_TITLE.apply(this, arguments);\n\n  this._change([\"FORCE_RENDER\"]);\n};","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/chart_components/base_chart.js"],"names":["commonUtils","require","noop","eventsEngine","typeUtils","iteratorModule","extend","inArray","eventUtils","BaseWidget","coreDataUtils","legendModule","dataValidatorModule","seriesModule","chartThemeManagerModule","LayoutManagerModule","trackerModule","REINIT_REFRESH_ACTION","REINIT_DATA_SOURCE_REFRESH_ACTION","DATA_INIT_REFRESH_ACTION","FORCE_RENDER_REFRESH_ACTION","RESIZE_REFRESH_ACTION","ACTIONS_BY_PRIORITY","vizUtils","_map","map","_each","each","_reverseEach","reverseEach","_isArray","Array","isArray","_isDefined","isDefined","_setCanvasValues","setCanvasValues","DEFAULT_OPACITY","REFRESH_SERIES_DATA_INIT_ACTION_OPTIONS","REFRESH_SERIES_FAMILIES_ACTION_OPTIONS","FORCE_RENDER_REFRESH_ACTION_OPTIONS","FONT","checkHeightRollingStock","rollingStocks","stubCanvas","canvasSize","end","start","size","forEach","rollingStock","getBoundingRect","width","findAndKillSmallValue","smallestObject","reduce","prev","index","value","getLabels","draw","checkStackOverlap","i","j","iLength","jLength","overlap","length","checkStacksOverlapping","resolveLabelOverlappingInOneDirection","points","canvas","isRotated","shiftFunction","customSorting","arguments","left","top","right","height","bottom","hasStackedSeries","p","series","isStackedSeries","isFullStackedSeries","l","isVisible","push","RollingStock","reverse","rollingStocksTmp","slice","sort","a","b","getInitialPosition","indexOf","prepareOverlapStacks","moveRollingStock","firstRolling","secondRolling","inTwoSides","firstRect","secondRect","oppositeOverlapping","oppositeStart","oppositeEnd","currentRollingStock","root","toChain","nextRollingStock","currentBBox","nextBBox","rollingStocksIsOut","setRollingStockInCanvas","label","bBox","x","y","endX","endY","labels","_bBox","_initialPosition","prototype","nextRollingStockBBox","shift","_changeBoxWidth","concat","shiftLength","coords","hideInsideLabel","getData","getLegendFields","name","nameField","colorField","indexField","getLegendSettings","legendDataField","formatObjectFields","getFormatObject","data","res","id","states","normal","fill","text","textField","checkOverlapping","overlapping","BaseChart","inherit","_eventsMap","onSeriesClick","onPointClick","onArgumentAxisClick","onLegendClick","onSeriesSelectionChanged","onPointSelectionChanged","onSeriesHoverChanged","onPointHoverChanged","onDone","onZoomStart","onZoomEnd","_fontFields","_rootClassPrefix","_rootClass","_initialChanges","_themeDependentChanges","_getThemeManagerOptions","themeOptions","callBase","apply","options","option","_createThemeManager","chartOption","themeManager","ThemeManager","setTheme","theme","rtlEnabled","_initCore","that","_canvasClipRect","_renderer","clipRect","_createHtmlStructure","_createLegend","_createTracker","_needHandleRenderComplete","layoutManager","LayoutManager","_createScrollBar","on","_$element","event","isTouchEvent","isPointerEvent","preventDefault","_getLayoutItems","_layoutManagerOptions","_themeManager","getOptions","_reinit","_canvas","_reinitAxes","_requestChange","_correctAxes","renderer","createConstantLinesGroup","g","attr","linkOn","_constantLinesGroup","dispose","under","above","linkOff","clear","linkRemove","linkAppend","_backgroundRect","rect","opacity","append","_panesBackgroundGroup","_stripsGroup","_gridGroup","_panesBorderGroup","_axesGroup","_labelAxesGroup","_seriesGroup","_scaleBreaksGroup","_labelsGroup","_crosshairCursorGroup","_legendGroup","_getCanvasClipRectID","enableLinks","_scrollBarGroup","_disposeObjectsInArray","propName","fieldNames","_","item","field","_disposeCore","disposeObject","unlinkGroup","disposeObjectsInArray","stopAllAnimations","call","_userOptions","_groupsData","_getAnimationOptions","_getDefaultSize","_getOption","_applySize","_rect","_changes","has","_processRefreshData","_resize","_doRender","__renderOptions","animate","isResize","_trackerType","_tracker","seriesGroup","tooltip","_tooltip","legend","_legend","eventTrigger","_eventTrigger","_getTrackerSettings","chart","_getSelectionModes","seriesSelectionMode","pointSelectionMode","_updateTracker","trackerCanvases","update","setCanvases","_createCanvasFromRect","currentCanvas","_options","drawOptions","recreateCanvas","_resetIsReady","_prepareDrawOptions","_preserveOriginalCanvas","__currentCanvas","_updateCanvasClipRect","_cleanGroups","startTime","Date","_renderElements","_lastRenderingTime","__originalCanvas","_layoutAxes","preparedOptions","_prepareToRender","_isRotated","isLegendInside","_isLegendInside","argBusinessRange","zoomMinArg","zoomMaxArg","lock","drawLegend","setOptions","layoutTargets","_getLayoutTargets","needSpace","axisDrawOptions","_renderAxes","_shrinkAxes","_applyClipRects","_appendSeriesGroups","_createCrosshairCursor","_ref","_scrollBar","_argumentAxes","getTranslator","getBusinessRange","axisType","categories","min","max","minVisible","maxVisible","init","valueMarginsEnabled","setPosition","_updateLegendPosition","_applyPointMarkersAutoHiding","_renderSeries","unlock","_appendAdditionalSeriesGroups","_calculateSeriesLayout","_renderSeriesElements","hideLayoutLabels","needMoreSpaceForPanesCanvas","keepLabels","_updateSeriesDimensions","_getArgFilter","_getValFilter","_getPointsToAnimation","_this","argViewPortFilter","s","valViewPortFilter","getPoints","filter","visible","argument","getMinValue","getMaxValue","singleSeries","seriesLength","resolveLabelOverlapping","pointsToAnimation","_applyExtraSettings","animationPointsLimit","animationEnabled","_getLegendCallBack","_adjustSeriesLabels","_locateLabels","_renderTrackers","repairTooltip","_clearCanvas","_renderExtraElements","_drawn","_renderCompleteHandler","_resolveLabelOverlapping","func","_resolveLabelOverlappingStack","_resolveLabelOverlappingHide","_resolveLabelOverlappingShift","isFunction","_getVisibleSeries","grep","getAllSeries","currentLabel","nextLabel","currentLabelRect","nextLabelRect","getVisiblePoints","_allowLegendInsidePosition","legendSettings","_legendDataField","Legend","widget","group","backgroundClass","itemGroupClass","titleGroupClass","allowInsidePosition","_updateLegend","_layout","add","legendOptions","legendData","_getLegendData","containerBackgroundColor","_incidentOccurred","title","_change","animationOptions","force","adjustAxes","drawTitle","enabled","maxPointCountSupported","newRefreshAction","currentRefreshActionPosition","_currentRefreshData","newRefreshActionPosition","_getLegendTargets","style","getLegendStyles","textOpacity","opacityStyle","hover","selection","_getLegendOptions","_legendItemTextField","_disposeSeries","seriesIndex","splice","_disposeSeriesFamilies","seriesFamilies","family","_simulateOptionChange","fullName","previousValue","optionSetter","compileSetter","functionsAsIs","merge","_getOptionsByReference","_notifyOptionChanged","reset","_optionChanged","arg","resetOptions","_applyChanges","_optionChangesMap","animation","dataSource","palette","paletteExtensionMode","seriesTemplate","valueAxis","argumentAxis","commonAxisSettings","panes","defaultPane","useAggregation","rotated","autoHidePointMarkers","customizePoint","customizeLabel","scrollBar","_optionChangesOrder","_customChangesOrder","_change_ANIMATION","updateAnimationOptions","_change_DATA_SOURCE","_updateDataSource","_change_PALETTE","updatePalette","_refreshSeries","_change_REFRESH_SERIES_DATA_INIT","_change_DATA_INIT","needToPopulateSeries","_dataInit","_change_FORCE_DATA_INIT","_change_REFRESH_SERIES_FAMILIES","_processSeriesFamilies","_populateBusinessRange","_change_FORCE_RENDER","_change_AXES_AND_PANES","_change_ROTATED","_change_REFRESH_SERIES_REINIT","_change_REFRESH_AXES","_change_SCROLL_BAR","_change_REINIT","actionName","_change_CORRECT_AXIS","_doRefresh","methodName","Math","_dataSourceChangedHandler","_dataSpecificInit","_processSingleSeries","createPoints","_handleSeriesDataUpdated","_this2","some","_populateMarginOptions","needRedraw","_populateSeries","_repopulateSeries","_seriesPopulatedHandlerCore","updateSeries","_forceRender","parsedData","_dataSourceItems","dataValidatorOptions","_groupSeries","validateData","resetPalette","updateData","getArgumentField","allSeriesInited","canRenderCompleteHandle","target","_dataIsReady","_dataIsLoaded","_populateSeriesOptions","seriesOptions","processSeriesTemplate","allSeriesOptions","extraOptions","_getExtraOptions","particularSeriesOptions","seriesTheme","seriesThemes","seriesVisibilityChanged","_specialProcessSeries","getValueAxis","toString","visibilityChanged","incidentOccurred","_checkPaneName","seriesBasis","particularSeries","disposeSeriesFamilies","curSeries","sb","type","clearHover","eventPipe","currentSeries","notify","basis","renderSettings","commonSeriesModes","getArgumentAxis","_getValueAxis","pane","axis","updateOptions","Series","labelsGroup","isUpdated","getStackedPoints","point","stackName","getStackName","stackPoints","getPointsByArg","getSeriesByName","found","getSeriesByPos","pos","clearSelection","hideTooltip","_hideTooltip","render","renderOptions","__forceRender","refresh","_getMinSize","adaptiveLayout","_change_REFRESH","_change_FULL_RENDER","_change_INIT","_stopCurrentHandling","stopCurrentHandling","exports","addPlugin","plugin","_change_TITLE"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/chart_components/base_chart.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar commonUtils = require(\"../../core/utils/common\");\r\nvar noop = commonUtils.noop;\r\nvar eventsEngine = require(\"../../events/core/events_engine\");\r\nvar typeUtils = require(\"../../core/utils/type\");\r\nvar iteratorModule = require(\"../../core/utils/iterator\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar inArray = require(\"../../core/utils/array\").inArray;\r\nvar eventUtils = require(\"../../events/utils\");\r\nvar BaseWidget = require(\"../core/base_widget\");\r\nvar coreDataUtils = require(\"../../core/utils/data\");\r\nvar legendModule = require(\"../components/legend\");\r\nvar dataValidatorModule = require(\"../components/data_validator\");\r\nvar seriesModule = require(\"../series/base_series\");\r\nvar chartThemeManagerModule = require(\"../components/chart_theme_manager\");\r\nvar LayoutManagerModule = require(\"./layout_manager\");\r\nvar trackerModule = require(\"./tracker\");\r\nvar REINIT_REFRESH_ACTION = \"_reinit\";\r\nvar REINIT_DATA_SOURCE_REFRESH_ACTION = \"_updateDataSource\";\r\nvar DATA_INIT_REFRESH_ACTION = \"_dataInit\";\r\nvar FORCE_RENDER_REFRESH_ACTION = \"_forceRender\";\r\nvar RESIZE_REFRESH_ACTION = \"_resize\";\r\nvar ACTIONS_BY_PRIORITY = [REINIT_REFRESH_ACTION, REINIT_DATA_SOURCE_REFRESH_ACTION, DATA_INIT_REFRESH_ACTION, FORCE_RENDER_REFRESH_ACTION, RESIZE_REFRESH_ACTION];\r\nvar vizUtils = require(\"../core/utils\");\r\nvar _map = vizUtils.map;\r\nvar _each = iteratorModule.each;\r\nvar _reverseEach = iteratorModule.reverseEach;\r\nvar _isArray = Array.isArray;\r\nvar _isDefined = typeUtils.isDefined;\r\nvar _setCanvasValues = vizUtils.setCanvasValues;\r\nvar DEFAULT_OPACITY = .3;\r\nvar REFRESH_SERIES_DATA_INIT_ACTION_OPTIONS = [\"series\", \"commonSeriesSettings\", \"dataPrepareSettings\", \"seriesSelectionMode\", \"pointSelectionMode\", \"synchronizeMultiAxes\", \"resolveLabelsOverlapping\"];\r\nvar REFRESH_SERIES_FAMILIES_ACTION_OPTIONS = [\"equalBarWidth\", \"minBubbleSize\", \"maxBubbleSize\", \"barWidth\", \"barGroupPadding\", \"barGroupWidth\", \"negativesAsZeroes\", \"negativesAsZeros\"];\r\nvar FORCE_RENDER_REFRESH_ACTION_OPTIONS = [\"adaptiveLayout\", \"crosshair\", \"resolveLabelOverlapping\", \"adjustOnZoom\", \"zoomingMode\", \"scrollingMode\", \"stickyHovering\"];\r\nvar FONT = \"font\";\r\n\r\nfunction checkHeightRollingStock(rollingStocks, stubCanvas) {\r\n    var canvasSize = stubCanvas.end - stubCanvas.start;\r\n    var size = 0;\r\n    rollingStocks.forEach(function(rollingStock) {\r\n        size += rollingStock.getBoundingRect().width\r\n    });\r\n    while (canvasSize < size) {\r\n        size -= findAndKillSmallValue(rollingStocks)\r\n    }\r\n}\r\n\r\nfunction findAndKillSmallValue(rollingStocks) {\r\n    var smallestObject;\r\n    var width;\r\n    smallestObject = rollingStocks.reduce(function(prev, rollingStock, index) {\r\n        if (!rollingStock) {\r\n            return prev\r\n        }\r\n        var value = rollingStock.value();\r\n        return value < prev.value ? {\r\n            value: value,\r\n            rollingStock: rollingStock,\r\n            index: index\r\n        } : prev\r\n    }, {\r\n        rollingStock: void 0,\r\n        value: 1 / 0,\r\n        index: void 0\r\n    });\r\n    smallestObject.rollingStock.getLabels()[0].draw(false);\r\n    width = smallestObject.rollingStock.getBoundingRect().width;\r\n    rollingStocks[smallestObject.index] = null;\r\n    return width\r\n}\r\n\r\nfunction checkStackOverlap(rollingStocks) {\r\n    var i;\r\n    var j;\r\n    var iLength;\r\n    var jLength;\r\n    var overlap = false;\r\n    for (i = 0, iLength = rollingStocks.length - 1; i < iLength; i++) {\r\n        for (j = i + 1, jLength = rollingStocks.length; j < jLength; j++) {\r\n            if (i !== j && checkStacksOverlapping(rollingStocks[i], rollingStocks[j], true)) {\r\n                overlap = true;\r\n                break\r\n            }\r\n        }\r\n        if (overlap) {\r\n            break\r\n        }\r\n    }\r\n    return overlap\r\n}\r\n\r\nfunction resolveLabelOverlappingInOneDirection(points, canvas, isRotated, shiftFunction) {\r\n    var customSorting = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : function() {\r\n        return 0\r\n    };\r\n    var rollingStocks = [];\r\n    var stubCanvas = {\r\n        start: isRotated ? canvas.left : canvas.top,\r\n        end: isRotated ? canvas.width - canvas.right : canvas.height - canvas.bottom\r\n    };\r\n    var hasStackedSeries = false;\r\n    points.forEach(function(p) {\r\n        if (!p) {\r\n            return\r\n        }\r\n        hasStackedSeries = hasStackedSeries || p.series.isStackedSeries() || p.series.isFullStackedSeries();\r\n        p.getLabels().forEach(function(l) {\r\n            l.isVisible() && rollingStocks.push(new RollingStock(l, isRotated, shiftFunction))\r\n        })\r\n    });\r\n    if (hasStackedSeries) {\r\n        !isRotated && rollingStocks.reverse()\r\n    } else {\r\n        var rollingStocksTmp = rollingStocks.slice();\r\n        rollingStocks.sort(function(a, b) {\r\n            return customSorting(a, b) || a.getInitialPosition() - b.getInitialPosition() || rollingStocksTmp.indexOf(a) - rollingStocksTmp.indexOf(b)\r\n        })\r\n    }\r\n    if (!checkStackOverlap(rollingStocks)) {\r\n        return false\r\n    }\r\n    checkHeightRollingStock(rollingStocks, stubCanvas);\r\n    prepareOverlapStacks(rollingStocks);\r\n    rollingStocks.reverse();\r\n    moveRollingStock(rollingStocks, stubCanvas);\r\n    return true\r\n}\r\n\r\nfunction checkStacksOverlapping(firstRolling, secondRolling, inTwoSides) {\r\n    if (!firstRolling || !secondRolling) {\r\n        return\r\n    }\r\n    var firstRect = firstRolling.getBoundingRect();\r\n    var secondRect = secondRolling.getBoundingRect();\r\n    var oppositeOverlapping = inTwoSides ? firstRect.oppositeStart <= secondRect.oppositeStart && firstRect.oppositeEnd > secondRect.oppositeStart || secondRect.oppositeStart <= firstRect.oppositeStart && secondRect.oppositeEnd > firstRect.oppositeStart : true;\r\n    return firstRect.end > secondRect.start && oppositeOverlapping\r\n}\r\n\r\nfunction prepareOverlapStacks(rollingStocks) {\r\n    var i;\r\n    var currentRollingStock;\r\n    var root;\r\n    for (i = 0; i < rollingStocks.length - 1; i++) {\r\n        currentRollingStock = root || rollingStocks[i];\r\n        if (checkStacksOverlapping(currentRollingStock, rollingStocks[i + 1])) {\r\n            currentRollingStock.toChain(rollingStocks[i + 1]);\r\n            rollingStocks[i + 1] = null;\r\n            root = currentRollingStock\r\n        } else {\r\n            root = rollingStocks[i + 1] || currentRollingStock\r\n        }\r\n    }\r\n}\r\n\r\nfunction moveRollingStock(rollingStocks, canvas) {\r\n    var i;\r\n    var j;\r\n    var currentRollingStock;\r\n    var nextRollingStock;\r\n    var currentBBox;\r\n    var nextBBox;\r\n    for (i = 0; i < rollingStocks.length; i++) {\r\n        currentRollingStock = rollingStocks[i];\r\n        if (rollingStocksIsOut(currentRollingStock, canvas)) {\r\n            currentBBox = currentRollingStock.getBoundingRect();\r\n            for (j = i + 1; j < rollingStocks.length; j++) {\r\n                nextRollingStock = rollingStocks[j];\r\n                if (!nextRollingStock) {\r\n                    continue\r\n                }\r\n                nextBBox = nextRollingStock.getBoundingRect();\r\n                if (nextBBox.end > currentBBox.start - (currentBBox.end - canvas.end)) {\r\n                    nextRollingStock.toChain(currentRollingStock);\r\n                    rollingStocks[i] = currentRollingStock = null;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        currentRollingStock && currentRollingStock.setRollingStockInCanvas(canvas)\r\n    }\r\n}\r\n\r\nfunction rollingStocksIsOut(rollingStock, canvas) {\r\n    return rollingStock && rollingStock.getBoundingRect().end > canvas.end\r\n}\r\n\r\nfunction RollingStock(label, isRotated, shiftFunction) {\r\n    var bBox = label.getBoundingRect();\r\n    var x = bBox.x;\r\n    var y = bBox.y;\r\n    var endX = bBox.x + bBox.width;\r\n    var endY = bBox.y + bBox.height;\r\n    this.labels = [label];\r\n    this.shiftFunction = shiftFunction;\r\n    this._bBox = {\r\n        start: isRotated ? x : y,\r\n        width: isRotated ? bBox.width : bBox.height,\r\n        end: isRotated ? endX : endY,\r\n        oppositeStart: isRotated ? y : x,\r\n        oppositeEnd: isRotated ? endY : endX\r\n    };\r\n    this._initialPosition = isRotated ? bBox.x : bBox.y;\r\n    return this\r\n}\r\nRollingStock.prototype = {\r\n    toChain: function(nextRollingStock) {\r\n        var nextRollingStockBBox = nextRollingStock.getBoundingRect();\r\n        nextRollingStock.shift(nextRollingStockBBox.start - this._bBox.end);\r\n        this._changeBoxWidth(nextRollingStockBBox.width);\r\n        this.labels = this.labels.concat(nextRollingStock.labels)\r\n    },\r\n    getBoundingRect: function() {\r\n        return this._bBox\r\n    },\r\n    shift: function(shiftLength) {\r\n        var shiftFunction = this.shiftFunction;\r\n        _each(this.labels, function(index, label) {\r\n            var bBox = label.getBoundingRect();\r\n            var coords = shiftFunction(bBox, shiftLength);\r\n            if (!label.hideInsideLabel(coords)) {\r\n                label.shift(coords.x, coords.y)\r\n            }\r\n        });\r\n        this._bBox.end -= shiftLength;\r\n        this._bBox.start -= shiftLength\r\n    },\r\n    setRollingStockInCanvas: function(canvas) {\r\n        if (this._bBox.end > canvas.end) {\r\n            this.shift(this._bBox.end - canvas.end)\r\n        }\r\n    },\r\n    getLabels: function() {\r\n        return this.labels\r\n    },\r\n    value: function() {\r\n        return this.labels[0].getData().value\r\n    },\r\n    getInitialPosition: function() {\r\n        return this._initialPosition\r\n    },\r\n    _changeBoxWidth: function(width) {\r\n        this._bBox.end += width;\r\n        this._bBox.width += width\r\n    }\r\n};\r\n\r\nfunction getLegendFields(name) {\r\n    return {\r\n        nameField: name + \"Name\",\r\n        colorField: name + \"Color\",\r\n        indexField: name + \"Index\"\r\n    }\r\n}\r\n\r\nfunction getLegendSettings(legendDataField) {\r\n    var formatObjectFields = getLegendFields(legendDataField);\r\n    return {\r\n        getFormatObject: function(data) {\r\n            var res = {};\r\n            res[formatObjectFields.indexField] = data.id;\r\n            res[formatObjectFields.colorField] = data.states.normal.fill;\r\n            res[formatObjectFields.nameField] = data.text;\r\n            return res\r\n        },\r\n        textField: formatObjectFields.nameField\r\n    }\r\n}\r\n\r\nfunction checkOverlapping(firstRect, secondRect) {\r\n    return (firstRect.x <= secondRect.x && secondRect.x <= firstRect.x + firstRect.width || firstRect.x >= secondRect.x && firstRect.x <= secondRect.x + secondRect.width) && (firstRect.y <= secondRect.y && secondRect.y <= firstRect.y + firstRect.height || firstRect.y >= secondRect.y && firstRect.y <= secondRect.y + secondRect.height)\r\n}\r\nvar overlapping = {\r\n    resolveLabelOverlappingInOneDirection: resolveLabelOverlappingInOneDirection\r\n};\r\nvar BaseChart = BaseWidget.inherit({\r\n    _eventsMap: {\r\n        onSeriesClick: {\r\n            name: \"seriesClick\"\r\n        },\r\n        onPointClick: {\r\n            name: \"pointClick\"\r\n        },\r\n        onArgumentAxisClick: {\r\n            name: \"argumentAxisClick\"\r\n        },\r\n        onLegendClick: {\r\n            name: \"legendClick\"\r\n        },\r\n        onSeriesSelectionChanged: {\r\n            name: \"seriesSelectionChanged\"\r\n        },\r\n        onPointSelectionChanged: {\r\n            name: \"pointSelectionChanged\"\r\n        },\r\n        onSeriesHoverChanged: {\r\n            name: \"seriesHoverChanged\"\r\n        },\r\n        onPointHoverChanged: {\r\n            name: \"pointHoverChanged\"\r\n        },\r\n        onDone: {\r\n            name: \"done\"\r\n        },\r\n        onZoomStart: {\r\n            name: \"zoomStart\"\r\n        },\r\n        onZoomEnd: {\r\n            name: \"zoomEnd\"\r\n        }\r\n    },\r\n    _fontFields: [\"legend.\" + FONT, \"legend.title.\" + FONT, \"legend.title.subtitle.\" + FONT, \"commonSeriesSettings.label.\" + FONT],\r\n    _rootClassPrefix: \"dxc\",\r\n    _rootClass: \"dxc-chart\",\r\n    _initialChanges: [\"INIT\"],\r\n    _themeDependentChanges: [\"REFRESH_SERIES_REINIT\"],\r\n    _getThemeManagerOptions: function() {\r\n        var themeOptions = this.callBase.apply(this, arguments);\r\n        themeOptions.options = this.option();\r\n        return themeOptions\r\n    },\r\n    _createThemeManager: function() {\r\n        var chartOption = this.option();\r\n        var themeManager = new chartThemeManagerModule.ThemeManager(this._getThemeManagerOptions());\r\n        themeManager.setTheme(chartOption.theme, chartOption.rtlEnabled);\r\n        return themeManager\r\n    },\r\n    _initCore: function() {\r\n        var that = this;\r\n        that._canvasClipRect = that._renderer.clipRect();\r\n        that._createHtmlStructure();\r\n        that._createLegend();\r\n        that._createTracker();\r\n        that._needHandleRenderComplete = true;\r\n        that.layoutManager = new LayoutManagerModule.LayoutManager;\r\n        that._createScrollBar();\r\n        eventsEngine.on(that._$element, \"contextmenu\", function(event) {\r\n            if (eventUtils.isTouchEvent(event) || eventUtils.isPointerEvent(event)) {\r\n                event.preventDefault()\r\n            }\r\n        });\r\n        eventsEngine.on(that._$element, \"MSHoldVisual\", function(event) {\r\n            event.preventDefault()\r\n        })\r\n    },\r\n    _getLayoutItems: noop,\r\n    _layoutManagerOptions: function() {\r\n        return this._themeManager.getOptions(\"adaptiveLayout\")\r\n    },\r\n    _reinit: function() {\r\n        var that = this;\r\n        _setCanvasValues(that._canvas);\r\n        that._reinitAxes();\r\n        that._requestChange([\"DATA_SOURCE\", \"DATA_INIT\", \"CORRECT_AXIS\", \"FULL_RENDER\"])\r\n    },\r\n    _correctAxes: noop,\r\n    _createHtmlStructure: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var root = renderer.root;\r\n        var createConstantLinesGroup = function() {\r\n            return renderer.g().attr({\r\n                \"class\": \"dxc-constant-lines-group\"\r\n            }).linkOn(root, \"constant-lines\")\r\n        };\r\n        that._constantLinesGroup = {\r\n            dispose: function() {\r\n                this.under.dispose();\r\n                this.above.dispose()\r\n            },\r\n            linkOff: function() {\r\n                this.under.linkOff();\r\n                this.above.linkOff()\r\n            },\r\n            clear: function() {\r\n                this.under.linkRemove().clear();\r\n                this.above.linkRemove().clear()\r\n            },\r\n            linkAppend: function() {\r\n                this.under.linkAppend();\r\n                this.above.linkAppend()\r\n            }\r\n        };\r\n        that._backgroundRect = renderer.rect().attr({\r\n            fill: \"gray\",\r\n            opacity: 1e-4\r\n        }).append(root);\r\n        that._panesBackgroundGroup = renderer.g().attr({\r\n            \"class\": \"dxc-background\"\r\n        }).append(root);\r\n        that._stripsGroup = renderer.g().attr({\r\n            \"class\": \"dxc-strips-group\"\r\n        }).linkOn(root, \"strips\");\r\n        that._gridGroup = renderer.g().attr({\r\n            \"class\": \"dxc-grids-group\"\r\n        }).linkOn(root, \"grids\");\r\n        that._panesBorderGroup = renderer.g().attr({\r\n            \"class\": \"dxc-border\"\r\n        }).linkOn(root, \"border\");\r\n        that._axesGroup = renderer.g().attr({\r\n            \"class\": \"dxc-axes-group\"\r\n        }).linkOn(root, \"axes\");\r\n        that._labelAxesGroup = renderer.g().attr({\r\n            \"class\": \"dxc-strips-labels-group\"\r\n        }).linkOn(root, \"strips-labels\");\r\n        that._constantLinesGroup.under = createConstantLinesGroup();\r\n        that._seriesGroup = renderer.g().attr({\r\n            \"class\": \"dxc-series-group\"\r\n        }).linkOn(root, \"series\");\r\n        that._constantLinesGroup.above = createConstantLinesGroup();\r\n        that._scaleBreaksGroup = renderer.g().attr({\r\n            \"class\": \"dxc-scale-breaks\"\r\n        }).linkOn(root, \"scale-breaks\");\r\n        that._labelsGroup = renderer.g().attr({\r\n            \"class\": \"dxc-labels-group\"\r\n        }).linkOn(root, \"labels\");\r\n        that._crosshairCursorGroup = renderer.g().attr({\r\n            \"class\": \"dxc-crosshair-cursor\"\r\n        }).linkOn(root, \"crosshair\");\r\n        that._legendGroup = renderer.g().attr({\r\n            \"class\": \"dxc-legend\",\r\n            \"clip-path\": that._getCanvasClipRectID()\r\n        }).linkOn(root, \"legend\").linkAppend(root).enableLinks();\r\n        that._scrollBarGroup = renderer.g().attr({\r\n            \"class\": \"dxc-scroll-bar\"\r\n        }).linkOn(root, \"scroll-bar\")\r\n    },\r\n    _disposeObjectsInArray: function(propName, fieldNames) {\r\n        _each(this[propName] || [], function(_, item) {\r\n            if (fieldNames && item) {\r\n                _each(fieldNames, function(_, field) {\r\n                    item[field] && item[field].dispose()\r\n                })\r\n            } else {\r\n                item && item.dispose()\r\n            }\r\n        });\r\n        this[propName] = null\r\n    },\r\n    _disposeCore: function() {\r\n        var that = this;\r\n        var disposeObject = function(propName) {\r\n            if (that[propName]) {\r\n                that[propName].dispose();\r\n                that[propName] = null\r\n            }\r\n        };\r\n        var unlinkGroup = function(name) {\r\n            that[name].linkOff()\r\n        };\r\n        var disposeObjectsInArray = this._disposeObjectsInArray;\r\n        that._renderer.stopAllAnimations();\r\n        disposeObjectsInArray.call(that, \"series\");\r\n        disposeObject(\"_tracker\");\r\n        disposeObject(\"_crosshair\");\r\n        that.layoutManager = that._userOptions = that._canvas = that._groupsData = null;\r\n        unlinkGroup(\"_stripsGroup\");\r\n        unlinkGroup(\"_gridGroup\");\r\n        unlinkGroup(\"_axesGroup\");\r\n        unlinkGroup(\"_constantLinesGroup\");\r\n        unlinkGroup(\"_labelAxesGroup\");\r\n        unlinkGroup(\"_panesBorderGroup\");\r\n        unlinkGroup(\"_seriesGroup\");\r\n        unlinkGroup(\"_labelsGroup\");\r\n        unlinkGroup(\"_crosshairCursorGroup\");\r\n        unlinkGroup(\"_legendGroup\");\r\n        unlinkGroup(\"_scrollBarGroup\");\r\n        unlinkGroup(\"_scaleBreaksGroup\");\r\n        disposeObject(\"_canvasClipRect\");\r\n        disposeObject(\"_panesBackgroundGroup\");\r\n        disposeObject(\"_backgroundRect\");\r\n        disposeObject(\"_stripsGroup\");\r\n        disposeObject(\"_gridGroup\");\r\n        disposeObject(\"_axesGroup\");\r\n        disposeObject(\"_constantLinesGroup\");\r\n        disposeObject(\"_labelAxesGroup\");\r\n        disposeObject(\"_panesBorderGroup\");\r\n        disposeObject(\"_seriesGroup\");\r\n        disposeObject(\"_labelsGroup\");\r\n        disposeObject(\"_crosshairCursorGroup\");\r\n        disposeObject(\"_legendGroup\");\r\n        disposeObject(\"_scrollBarGroup\");\r\n        disposeObject(\"_scaleBreaksGroup\")\r\n    },\r\n    _getAnimationOptions: function() {\r\n        return this._themeManager.getOptions(\"animation\")\r\n    },\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 400,\r\n            height: 400\r\n        }\r\n    },\r\n    _getOption: function(name) {\r\n        return this._themeManager.getOptions(name)\r\n    },\r\n    _applySize: function(rect) {\r\n        this._rect = rect.slice();\r\n        if (!this._changes.has(\"FULL_RENDER\")) {\r\n            this._processRefreshData(RESIZE_REFRESH_ACTION)\r\n        }\r\n    },\r\n    _resize: function() {\r\n        this._doRender(this.__renderOptions || {\r\n            animate: false,\r\n            isResize: true\r\n        })\r\n    },\r\n    _trackerType: \"ChartTracker\",\r\n    _createTracker: function() {\r\n        var that = this;\r\n        that._tracker = new trackerModule[that._trackerType]({\r\n            seriesGroup: that._seriesGroup,\r\n            renderer: that._renderer,\r\n            tooltip: that._tooltip,\r\n            legend: that._legend,\r\n            eventTrigger: that._eventTrigger\r\n        })\r\n    },\r\n    _getTrackerSettings: function() {\r\n        return extend({\r\n            chart: this\r\n        }, this._getSelectionModes())\r\n    },\r\n    _getSelectionModes: function() {\r\n        var themeManager = this._themeManager;\r\n        return {\r\n            seriesSelectionMode: themeManager.getOptions(\"seriesSelectionMode\"),\r\n            pointSelectionMode: themeManager.getOptions(\"pointSelectionMode\")\r\n        }\r\n    },\r\n    _updateTracker: function(trackerCanvases) {\r\n        var that = this;\r\n        that._tracker.update(that._getTrackerSettings());\r\n        that._tracker.setCanvases({\r\n            left: 0,\r\n            right: that._canvas.width,\r\n            top: 0,\r\n            bottom: that._canvas.height\r\n        }, trackerCanvases)\r\n    },\r\n    _createCanvasFromRect: function(rect) {\r\n        var currentCanvas = this._canvas;\r\n        return _setCanvasValues({\r\n            left: rect[0],\r\n            top: rect[1],\r\n            right: currentCanvas.width - rect[2],\r\n            bottom: currentCanvas.height - rect[3],\r\n            width: currentCanvas.width,\r\n            height: currentCanvas.height\r\n        })\r\n    },\r\n    _doRender: function(_options) {\r\n        var that = this;\r\n        var drawOptions;\r\n        var recreateCanvas;\r\n        if (0 === that._canvas.width && 0 === that._canvas.height) {\r\n            return\r\n        }\r\n        that._resetIsReady();\r\n        drawOptions = that._prepareDrawOptions(_options);\r\n        recreateCanvas = drawOptions.recreateCanvas;\r\n        that._preserveOriginalCanvas();\r\n        if (recreateCanvas) {\r\n            that.__currentCanvas = that._canvas\r\n        } else {\r\n            that._canvas = that.__currentCanvas\r\n        }\r\n        recreateCanvas && that._updateCanvasClipRect(that._canvas);\r\n        this._canvas = this._createCanvasFromRect(this._rect);\r\n        that._renderer.stopAllAnimations(true);\r\n        that._cleanGroups();\r\n        var startTime = new Date;\r\n        that._renderElements(drawOptions);\r\n        that._lastRenderingTime = new Date - startTime\r\n    },\r\n    _preserveOriginalCanvas: function() {\r\n        this.__originalCanvas = this._canvas;\r\n        this._canvas = extend({}, this._canvas)\r\n    },\r\n    _layoutAxes: noop,\r\n    _renderElements: function(drawOptions) {\r\n        var that = this;\r\n        var preparedOptions = that._prepareToRender(drawOptions);\r\n        var isRotated = that._isRotated();\r\n        var isLegendInside = that._isLegendInside();\r\n        var trackerCanvases = [];\r\n        extend({}, that._canvas);\r\n        var argBusinessRange;\r\n        var zoomMinArg;\r\n        var zoomMaxArg;\r\n        that._renderer.lock();\r\n        if (drawOptions.drawLegend && that._legend) {\r\n            that._legendGroup.linkAppend()\r\n        }\r\n        that.layoutManager.setOptions(that._layoutManagerOptions());\r\n        var layoutTargets = that._getLayoutTargets();\r\n        this._layoutAxes(function(needSpace) {\r\n            var axisDrawOptions = needSpace ? extend({}, drawOptions, {\r\n                animate: false\r\n            }) : drawOptions;\r\n            var canvas = that._renderAxes(axisDrawOptions, preparedOptions);\r\n            that._shrinkAxes(needSpace, canvas)\r\n        });\r\n        that._applyClipRects(preparedOptions);\r\n        that._appendSeriesGroups();\r\n        that._createCrosshairCursor();\r\n        layoutTargets.forEach(function(_ref) {\r\n            var canvas = _ref.canvas;\r\n            trackerCanvases.push({\r\n                left: canvas.left,\r\n                right: canvas.width - canvas.right,\r\n                top: canvas.top,\r\n                bottom: canvas.height - canvas.bottom\r\n            })\r\n        });\r\n        if (that._scrollBar) {\r\n            argBusinessRange = that._argumentAxes[0].getTranslator().getBusinessRange();\r\n            if (\"discrete\" === argBusinessRange.axisType && argBusinessRange.categories && argBusinessRange.categories.length <= 1 || \"discrete\" !== argBusinessRange.axisType && argBusinessRange.min === argBusinessRange.max) {\r\n                zoomMinArg = zoomMaxArg = void 0\r\n            } else {\r\n                zoomMinArg = argBusinessRange.minVisible;\r\n                zoomMaxArg = argBusinessRange.maxVisible\r\n            }\r\n            that._scrollBar.init(argBusinessRange, !that._argumentAxes[0].getOptions().valueMarginsEnabled).setPosition(zoomMinArg, zoomMaxArg)\r\n        }\r\n        that._updateTracker(trackerCanvases);\r\n        that._updateLegendPosition(drawOptions, isLegendInside);\r\n        that._applyPointMarkersAutoHiding();\r\n        that._renderSeries(drawOptions, isRotated, isLegendInside);\r\n        that._renderer.unlock()\r\n    },\r\n    _createCrosshairCursor: noop,\r\n    _appendSeriesGroups: function() {\r\n        this._seriesGroup.linkAppend();\r\n        this._labelsGroup.linkAppend();\r\n        this._appendAdditionalSeriesGroups()\r\n    },\r\n    _renderSeries: function(drawOptions, isRotated, isLegendInside) {\r\n        this._calculateSeriesLayout(drawOptions, isRotated);\r\n        this._renderSeriesElements(drawOptions, isRotated, isLegendInside)\r\n    },\r\n    _calculateSeriesLayout: function(drawOptions, isRotated) {\r\n        drawOptions.hideLayoutLabels = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), isRotated) && !this._themeManager.getOptions(\"adaptiveLayout\").keepLabels;\r\n        this._updateSeriesDimensions(drawOptions)\r\n    },\r\n    _getArgFilter: function() {\r\n        return function() {\r\n            return true\r\n        }\r\n    },\r\n    _getValFilter: function(series) {\r\n        return function() {\r\n            return true\r\n        }\r\n    },\r\n    _getPointsToAnimation: function(series) {\r\n        var _this = this;\r\n        var argViewPortFilter = this._getArgFilter();\r\n        return series.map(function(s) {\r\n            var valViewPortFilter = _this._getValFilter(s);\r\n            return s.getPoints().filter(function(p) {\r\n                return p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)))\r\n            }).length\r\n        })\r\n    },\r\n    _renderSeriesElements: function(drawOptions, isRotated, isLegendInside) {\r\n        var that = this;\r\n        var i;\r\n        var series = that.series;\r\n        var singleSeries;\r\n        var seriesLength = series.length;\r\n        var resolveLabelOverlapping = that._themeManager.getOptions(\"resolveLabelOverlapping\");\r\n        var pointsToAnimation = that._getPointsToAnimation(series);\r\n        for (i = 0; i < seriesLength; i++) {\r\n            singleSeries = series[i];\r\n            that._applyExtraSettings(singleSeries, drawOptions);\r\n            singleSeries.draw(drawOptions.animate && pointsToAnimation[i] <= drawOptions.animationPointsLimit && that._renderer.animationEnabled(), drawOptions.hideLayoutLabels, that._getLegendCallBack(singleSeries))\r\n        }\r\n        if (\"none\" === resolveLabelOverlapping) {\r\n            that._adjustSeriesLabels(false)\r\n        } else {\r\n            that._locateLabels(resolveLabelOverlapping)\r\n        }\r\n        that._renderTrackers(isLegendInside);\r\n        that._tracker.repairTooltip();\r\n        that._clearCanvas();\r\n        that._renderExtraElements();\r\n        that._drawn();\r\n        that._renderCompleteHandler()\r\n    },\r\n    _locateLabels: function(resolveLabelOverlapping) {\r\n        this._resolveLabelOverlapping(resolveLabelOverlapping)\r\n    },\r\n    _renderExtraElements: function() {},\r\n    _clearCanvas: function() {\r\n        this._canvas = this.__originalCanvas\r\n    },\r\n    _resolveLabelOverlapping: function(resolveLabelOverlapping) {\r\n        var func;\r\n        switch (resolveLabelOverlapping) {\r\n            case \"stack\":\r\n                func = this._resolveLabelOverlappingStack;\r\n                break;\r\n            case \"hide\":\r\n                func = this._resolveLabelOverlappingHide;\r\n                break;\r\n            case \"shift\":\r\n                func = this._resolveLabelOverlappingShift\r\n        }\r\n        return typeUtils.isFunction(func) && func.call(this)\r\n    },\r\n    _getVisibleSeries: function() {\r\n        return commonUtils.grep(this.getAllSeries(), function(series) {\r\n            return series.isVisible()\r\n        })\r\n    },\r\n    _resolveLabelOverlappingHide: function() {\r\n        var labels = [];\r\n        var currentLabel;\r\n        var nextLabel;\r\n        var currentLabelRect;\r\n        var nextLabelRect;\r\n        var i;\r\n        var j;\r\n        var points;\r\n        var series = this._getVisibleSeries();\r\n        for (i = 0; i < series.length; i++) {\r\n            points = series[i].getVisiblePoints();\r\n            for (j = 0; j < points.length; j++) {\r\n                labels.push.apply(labels, points[j].getLabels())\r\n            }\r\n        }\r\n        for (i = 0; i < labels.length; i++) {\r\n            currentLabel = labels[i];\r\n            if (!currentLabel.isVisible()) {\r\n                continue\r\n            }\r\n            currentLabelRect = currentLabel.getBoundingRect();\r\n            for (j = i + 1; j < labels.length; j++) {\r\n                nextLabel = labels[j];\r\n                nextLabelRect = nextLabel.getBoundingRect();\r\n                if (checkOverlapping(currentLabelRect, nextLabelRect)) {\r\n                    nextLabel.draw(false)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _cleanGroups: function() {\r\n        var that = this;\r\n        that._stripsGroup.linkRemove().clear();\r\n        that._gridGroup.linkRemove().clear();\r\n        that._axesGroup.linkRemove().clear();\r\n        that._constantLinesGroup.above.clear();\r\n        that._labelAxesGroup.linkRemove().clear();\r\n        that._labelsGroup.linkRemove().clear();\r\n        that._crosshairCursorGroup.linkRemove().clear();\r\n        that._scaleBreaksGroup.linkRemove().clear()\r\n    },\r\n    _allowLegendInsidePosition: function() {\r\n        return false\r\n    },\r\n    _updateLegendPosition: noop,\r\n    _createLegend: function() {\r\n        var that = this;\r\n        var legendSettings = getLegendSettings(that._legendDataField);\r\n        that._legend = new legendModule.Legend({\r\n            renderer: that._renderer,\r\n            widget: that,\r\n            group: that._legendGroup,\r\n            backgroundClass: \"dxc-border\",\r\n            itemGroupClass: \"dxc-item\",\r\n            titleGroupClass: \"dxc-title\",\r\n            textField: legendSettings.textField,\r\n            getFormatObject: legendSettings.getFormatObject,\r\n            allowInsidePosition: that._allowLegendInsidePosition()\r\n        });\r\n        that._updateLegend();\r\n        that._layout.add(that._legend)\r\n    },\r\n    _updateLegend: function() {\r\n        var that = this;\r\n        var themeManager = that._themeManager;\r\n        var legendOptions = themeManager.getOptions(\"legend\");\r\n        var legendData = that._getLegendData();\r\n        legendOptions.containerBackgroundColor = themeManager.getOptions(\"containerBackgroundColor\");\r\n        legendOptions._incidentOccurred = that._incidentOccurred;\r\n        that._legend.update(legendData, legendOptions, themeManager.theme(\"legend\").title);\r\n        this._change([\"LAYOUT\"])\r\n    },\r\n    _prepareDrawOptions: function(drawOptions) {\r\n        var animationOptions = this._getAnimationOptions();\r\n        var options;\r\n        options = extend({}, {\r\n            force: false,\r\n            adjustAxes: true,\r\n            drawLegend: true,\r\n            drawTitle: true,\r\n            animate: animationOptions.enabled,\r\n            animationPointsLimit: animationOptions.maxPointCountSupported\r\n        }, drawOptions, this.__renderOptions);\r\n        if (!_isDefined(options.recreateCanvas)) {\r\n            options.recreateCanvas = options.adjustAxes && options.drawLegend && options.drawTitle\r\n        }\r\n        return options\r\n    },\r\n    _processRefreshData: function(newRefreshAction) {\r\n        var currentRefreshActionPosition = inArray(this._currentRefreshData, ACTIONS_BY_PRIORITY);\r\n        var newRefreshActionPosition = inArray(newRefreshAction, ACTIONS_BY_PRIORITY);\r\n        if (!this._currentRefreshData || currentRefreshActionPosition >= 0 && newRefreshActionPosition < currentRefreshActionPosition) {\r\n            this._currentRefreshData = newRefreshAction\r\n        }\r\n        this._requestChange([\"REFRESH\"])\r\n    },\r\n    _getLegendData: function() {\r\n        return _map(this._getLegendTargets(), function(item) {\r\n            var legendData = item.legendData;\r\n            var style = item.getLegendStyles;\r\n            var opacity = style.normal.opacity;\r\n            if (!item.visible) {\r\n                if (!_isDefined(opacity) || opacity > DEFAULT_OPACITY) {\r\n                    opacity = DEFAULT_OPACITY\r\n                }\r\n                legendData.textOpacity = DEFAULT_OPACITY\r\n            }\r\n            var opacityStyle = {\r\n                opacity: opacity\r\n            };\r\n            legendData.states = {\r\n                hover: extend({}, style.hover, opacityStyle),\r\n                selection: extend({}, style.selection, opacityStyle),\r\n                normal: extend({}, style.normal, opacityStyle)\r\n            };\r\n            return legendData\r\n        })\r\n    },\r\n    _getLegendOptions: function(item) {\r\n        return {\r\n            legendData: {\r\n                text: item[this._legendItemTextField],\r\n                id: item.index,\r\n                visible: true\r\n            },\r\n            getLegendStyles: item.getLegendStyles(),\r\n            visible: item.isVisible()\r\n        }\r\n    },\r\n    _disposeSeries: function(seriesIndex) {\r\n        var that = this;\r\n        if (that.series) {\r\n            if (_isDefined(seriesIndex)) {\r\n                that.series[seriesIndex].dispose();\r\n                that.series.splice(seriesIndex, 1)\r\n            } else {\r\n                _each(that.series, function(_, s) {\r\n                    return s.dispose()\r\n                });\r\n                that.series.length = 0\r\n            }\r\n        }\r\n        if (!that.series || !that.series.length) {\r\n            that.series = []\r\n        }\r\n    },\r\n    _disposeSeriesFamilies: function() {\r\n        var that = this;\r\n        _each(that.seriesFamilies || [], function(_, family) {\r\n            family.dispose()\r\n        });\r\n        that.seriesFamilies = null;\r\n        that._needHandleRenderComplete = true\r\n    },\r\n    _simulateOptionChange: function(fullName, value, previousValue) {\r\n        var that = this;\r\n        var optionSetter = coreDataUtils.compileSetter(fullName);\r\n        optionSetter(that._options, value, {\r\n            functionsAsIs: true,\r\n            merge: !that._getOptionsByReference()[fullName]\r\n        });\r\n        that._notifyOptionChanged(fullName, value, previousValue);\r\n        that._changes.reset()\r\n    },\r\n    _optionChanged: function(arg) {\r\n        this._themeManager.resetOptions(arg.name);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _applyChanges: function() {\r\n        var that = this;\r\n        that._themeManager.update(that._options);\r\n        that.callBase.apply(that, arguments)\r\n    },\r\n    _optionChangesMap: {\r\n        animation: \"ANIMATION\",\r\n        dataSource: \"DATA_SOURCE\",\r\n        palette: \"PALETTE\",\r\n        paletteExtensionMode: \"PALETTE\",\r\n        legend: \"FORCE_DATA_INIT\",\r\n        seriesTemplate: \"FORCE_DATA_INIT\",\r\n        \"export\": \"FORCE_RENDER\",\r\n        valueAxis: \"AXES_AND_PANES\",\r\n        argumentAxis: \"AXES_AND_PANES\",\r\n        commonAxisSettings: \"AXES_AND_PANES\",\r\n        panes: \"AXES_AND_PANES\",\r\n        defaultPane: \"AXES_AND_PANES\",\r\n        useAggregation: \"AXES_AND_PANES\",\r\n        containerBackgroundColor: \"AXES_AND_PANES\",\r\n        rotated: \"ROTATED\",\r\n        autoHidePointMarkers: \"REFRESH_SERIES_REINIT\",\r\n        customizePoint: \"REFRESH_SERIES_REINIT\",\r\n        customizeLabel: \"REFRESH_SERIES_REINIT\",\r\n        scrollBar: \"SCROLL_BAR\"\r\n    },\r\n    _optionChangesOrder: [\"ROTATED\", \"PALETTE\", \"REFRESH_SERIES_REINIT\", \"AXES_AND_PANES\", \"INIT\", \"REINIT\", \"DATA_SOURCE\", \"REFRESH_SERIES_DATA_INIT\", \"DATA_INIT\", \"FORCE_DATA_INIT\", \"REFRESH_AXES\", \"CORRECT_AXIS\"],\r\n    _customChangesOrder: [\"ANIMATION\", \"REFRESH_SERIES_FAMILIES\", \"FORCE_RENDER\", \"VISUAL_RANGE\", \"SCROLL_BAR\", \"REINIT\", \"REFRESH\", \"FULL_RENDER\"],\r\n    _change_ANIMATION: function() {\r\n        this._renderer.updateAnimationOptions(this._getAnimationOptions())\r\n    },\r\n    _change_DATA_SOURCE: function() {\r\n        this._needHandleRenderComplete = true;\r\n        this._updateDataSource()\r\n    },\r\n    _change_PALETTE: function() {\r\n        this._themeManager.updatePalette();\r\n        this._refreshSeries(\"DATA_INIT\")\r\n    },\r\n    _change_REFRESH_SERIES_DATA_INIT: function() {\r\n        this._refreshSeries(\"DATA_INIT\")\r\n    },\r\n    _change_DATA_INIT: function() {\r\n        if ((!this.series || this.needToPopulateSeries) && !this._changes.has(\"FORCE_DATA_INIT\")) {\r\n            this._dataInit()\r\n        }\r\n    },\r\n    _change_FORCE_DATA_INIT: function() {\r\n        this._dataInit()\r\n    },\r\n    _change_REFRESH_SERIES_FAMILIES: function() {\r\n        this._processSeriesFamilies();\r\n        this._populateBusinessRange();\r\n        this._processRefreshData(FORCE_RENDER_REFRESH_ACTION)\r\n    },\r\n    _change_FORCE_RENDER: function() {\r\n        this._processRefreshData(FORCE_RENDER_REFRESH_ACTION)\r\n    },\r\n    _change_AXES_AND_PANES: function() {\r\n        this._refreshSeries(\"INIT\")\r\n    },\r\n    _change_ROTATED: function() {\r\n        this._createScrollBar();\r\n        this._refreshSeries(\"INIT\")\r\n    },\r\n    _change_REFRESH_SERIES_REINIT: function() {\r\n        this._refreshSeries(\"INIT\")\r\n    },\r\n    _change_REFRESH_AXES: function() {\r\n        var that = this;\r\n        _setCanvasValues(that._canvas);\r\n        that._reinitAxes();\r\n        that._requestChange([\"CORRECT_AXIS\", \"FULL_RENDER\"])\r\n    },\r\n    _change_SCROLL_BAR: function() {\r\n        this._createScrollBar();\r\n        this._processRefreshData(FORCE_RENDER_REFRESH_ACTION)\r\n    },\r\n    _change_REINIT: function() {\r\n        this._processRefreshData(REINIT_REFRESH_ACTION)\r\n    },\r\n    _refreshSeries: function(actionName) {\r\n        this.needToPopulateSeries = true;\r\n        this._requestChange([actionName])\r\n    },\r\n    _change_CORRECT_AXIS: function() {\r\n        this._correctAxes()\r\n    },\r\n    _doRefresh: function() {\r\n        var methodName = this._currentRefreshData;\r\n        if (methodName) {\r\n            this._currentRefreshData = null;\r\n            this._renderer.stopAllAnimations(true);\r\n            this[methodName]()\r\n        }\r\n    },\r\n    _updateCanvasClipRect: function(canvas) {\r\n        var that = this;\r\n        var width;\r\n        var height;\r\n        width = Math.max(canvas.width - canvas.left - canvas.right, 0);\r\n        height = Math.max(canvas.height - canvas.top - canvas.bottom, 0);\r\n        that._canvasClipRect.attr({\r\n            x: canvas.left,\r\n            y: canvas.top,\r\n            width: width,\r\n            height: height\r\n        });\r\n        that._backgroundRect.attr({\r\n            x: canvas.left,\r\n            y: canvas.top,\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _getCanvasClipRectID: function() {\r\n        return this._canvasClipRect.id\r\n    },\r\n    _dataSourceChangedHandler: function() {\r\n        if (this._changes.has(\"INIT\")) {\r\n            this._requestChange([\"DATA_INIT\"])\r\n        } else {\r\n            this._requestChange([\"FORCE_DATA_INIT\"])\r\n        }\r\n    },\r\n    _dataInit: function() {\r\n        this._dataSpecificInit(true)\r\n    },\r\n    _processSingleSeries: function(singleSeries) {\r\n        singleSeries.createPoints(false)\r\n    },\r\n    _handleSeriesDataUpdated: function() {\r\n        var _this2 = this;\r\n        if (this._getVisibleSeries().some(function(s) {\r\n                return s.useAggregation()\r\n            })) {\r\n            this._populateMarginOptions()\r\n        }\r\n        this.series.forEach(function(s) {\r\n            return _this2._processSingleSeries(s)\r\n        }, this)\r\n    },\r\n    _dataSpecificInit: function(needRedraw) {\r\n        var that = this;\r\n        if (!that.series || that.needToPopulateSeries) {\r\n            that.series = that._populateSeries()\r\n        }\r\n        that._repopulateSeries();\r\n        that._seriesPopulatedHandlerCore();\r\n        that._populateBusinessRange();\r\n        that._tracker.updateSeries(that.series, this._changes.has(\"INIT\"));\r\n        that._updateLegend();\r\n        if (needRedraw) {\r\n            this._requestChange([\"FULL_RENDER\"])\r\n        }\r\n    },\r\n    _forceRender: function() {\r\n        this._doRender({\r\n            force: true\r\n        })\r\n    },\r\n    _repopulateSeries: function() {\r\n        var that = this;\r\n        var parsedData;\r\n        var themeManager = that._themeManager;\r\n        var data = that._dataSourceItems();\r\n        var dataValidatorOptions = themeManager.getOptions(\"dataPrepareSettings\");\r\n        var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\r\n        if (seriesTemplate) {\r\n            that._populateSeries(data)\r\n        }\r\n        that._groupSeries();\r\n        parsedData = dataValidatorModule.validateData(data, that._groupsData, that._incidentOccurred, dataValidatorOptions);\r\n        themeManager.resetPalette();\r\n        that.series.forEach(function(singleSeries) {\r\n            singleSeries.updateData(parsedData[singleSeries.getArgumentField()])\r\n        });\r\n        that._handleSeriesDataUpdated()\r\n    },\r\n    _renderCompleteHandler: function() {\r\n        var that = this;\r\n        var allSeriesInited = true;\r\n        if (that._needHandleRenderComplete) {\r\n            _each(that.series, function(_, s) {\r\n                allSeriesInited = allSeriesInited && s.canRenderCompleteHandle()\r\n            });\r\n            if (allSeriesInited) {\r\n                that._needHandleRenderComplete = false;\r\n                that._eventTrigger(\"done\", {\r\n                    target: that\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _dataIsReady: function() {\r\n        return _isDefined(this.option(\"dataSource\")) && this._dataIsLoaded()\r\n    },\r\n    _populateSeriesOptions: function(data) {\r\n        var that = this;\r\n        var themeManager = that._themeManager;\r\n        var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\r\n        var seriesOptions = seriesTemplate ? vizUtils.processSeriesTemplate(seriesTemplate, data || []) : that.option(\"series\");\r\n        var allSeriesOptions = _isArray(seriesOptions) ? seriesOptions : seriesOptions ? [seriesOptions] : [];\r\n        var extraOptions = that._getExtraOptions();\r\n        var particularSeriesOptions;\r\n        var seriesTheme;\r\n        var seriesThemes = [];\r\n        var seriesVisibilityChanged = function(target) {\r\n            that._specialProcessSeries();\r\n            that._populateBusinessRange(target && target.getValueAxis(), true);\r\n            that._renderer.stopAllAnimations(true);\r\n            that._updateLegend();\r\n            that._requestChange([\"FULL_RENDER\"])\r\n        };\r\n        for (var i = 0; i < allSeriesOptions.length; i++) {\r\n            particularSeriesOptions = extend(true, {}, allSeriesOptions[i], extraOptions);\r\n            if (!particularSeriesOptions.name) {\r\n                particularSeriesOptions.name = \"Series \" + (i + 1).toString()\r\n            }\r\n            particularSeriesOptions.rotated = that._isRotated();\r\n            particularSeriesOptions.customizePoint = themeManager.getOptions(\"customizePoint\");\r\n            particularSeriesOptions.customizeLabel = themeManager.getOptions(\"customizeLabel\");\r\n            particularSeriesOptions.visibilityChanged = seriesVisibilityChanged;\r\n            particularSeriesOptions.incidentOccurred = that._incidentOccurred;\r\n            seriesTheme = themeManager.getOptions(\"series\", particularSeriesOptions, allSeriesOptions.length);\r\n            if (that._checkPaneName(seriesTheme)) {\r\n                seriesThemes.push(seriesTheme)\r\n            }\r\n        }\r\n        return seriesThemes\r\n    },\r\n    _populateSeries: function(data) {\r\n        var that = this;\r\n        var seriesBasis = [];\r\n        var incidentOccurred = that._incidentOccurred;\r\n        var seriesThemes = that._populateSeriesOptions(data);\r\n        var particularSeries;\r\n        var disposeSeriesFamilies = false;\r\n        that.needToPopulateSeries = false;\r\n        _each(seriesThemes, function(_, theme) {\r\n            var curSeries = that.series && that.series.filter(function(s) {\r\n                return s.name === theme.name && seriesBasis.map(function(sb) {\r\n                    return sb.series\r\n                }).indexOf(s) === -1\r\n            })[0];\r\n            if (curSeries && curSeries.type === theme.type) {\r\n                seriesBasis.push({\r\n                    series: curSeries,\r\n                    options: theme\r\n                })\r\n            } else {\r\n                seriesBasis.push({\r\n                    options: theme\r\n                });\r\n                disposeSeriesFamilies = true\r\n            }\r\n        });\r\n        that._tracker.clearHover();\r\n        _reverseEach(that.series, function(index, series) {\r\n            if (!seriesBasis.some(function(s) {\r\n                    return series === s.series\r\n                })) {\r\n                that._disposeSeries(index);\r\n                disposeSeriesFamilies = true\r\n            }\r\n        });\r\n        !disposeSeriesFamilies && (disposeSeriesFamilies = seriesBasis.some(function(sb) {\r\n            return sb.series.name !== seriesThemes[sb.series.index].name\r\n        }));\r\n        that.series = [];\r\n        disposeSeriesFamilies && that._disposeSeriesFamilies();\r\n        that._themeManager.resetPalette();\r\n        var eventPipe = function(data) {\r\n            that.series.forEach(function(currentSeries) {\r\n                currentSeries.notify(data)\r\n            })\r\n        };\r\n        _each(seriesBasis, function(_, basis) {\r\n            var seriesTheme = basis.options;\r\n            var renderSettings = {\r\n                commonSeriesModes: that._getSelectionModes(),\r\n                argumentAxis: that.getArgumentAxis(),\r\n                valueAxis: that._getValueAxis(seriesTheme.pane, seriesTheme.axis)\r\n            };\r\n            if (basis.series) {\r\n                particularSeries = basis.series;\r\n                particularSeries.updateOptions(seriesTheme, renderSettings)\r\n            } else {\r\n                particularSeries = new seriesModule.Series(extend({\r\n                    renderer: that._renderer,\r\n                    seriesGroup: that._seriesGroup,\r\n                    labelsGroup: that._labelsGroup,\r\n                    eventTrigger: that._eventTrigger,\r\n                    eventPipe: eventPipe,\r\n                    incidentOccurred: incidentOccurred\r\n                }, renderSettings), seriesTheme)\r\n            }\r\n            if (!particularSeries.isUpdated) {\r\n                incidentOccurred(\"E2101\", [seriesTheme.type])\r\n            } else {\r\n                particularSeries.index = that.series.length;\r\n                that.series.push(particularSeries)\r\n            }\r\n        });\r\n        return that.series\r\n    },\r\n    getStackedPoints: function(point) {\r\n        var stackName = point.series.getStackName();\r\n        return this._getVisibleSeries().reduce(function(stackPoints, series) {\r\n            if (!_isDefined(series.getStackName()) && !_isDefined(stackName) || stackName === series.getStackName()) {\r\n                stackPoints = stackPoints.concat(series.getPointsByArg(point.argument))\r\n            }\r\n            return stackPoints\r\n        }, [])\r\n    },\r\n    getAllSeries: function() {\r\n        return (this.series || []).slice()\r\n    },\r\n    getSeriesByName: function(name) {\r\n        var found = null;\r\n        _each(this.series, function(i, singleSeries) {\r\n            if (singleSeries.name === name) {\r\n                found = singleSeries;\r\n                return false\r\n            }\r\n        });\r\n        return found\r\n    },\r\n    getSeriesByPos: function(pos) {\r\n        return (this.series || [])[pos]\r\n    },\r\n    clearSelection: function() {\r\n        this._tracker.clearSelection()\r\n    },\r\n    hideTooltip: function() {\r\n        this._tracker._hideTooltip()\r\n    },\r\n    clearHover: function() {\r\n        this._tracker.clearHover()\r\n    },\r\n    render: function(renderOptions) {\r\n        var that = this;\r\n        that.__renderOptions = renderOptions;\r\n        that.__forceRender = renderOptions && renderOptions.force;\r\n        that.callBase.apply(that, arguments);\r\n        that.__renderOptions = that.__forceRender = null;\r\n        return that\r\n    },\r\n    refresh: function() {\r\n        this._disposeSeries();\r\n        this._disposeSeriesFamilies();\r\n        this._requestChange([\"CONTAINER_SIZE\", \"REFRESH_SERIES_REINIT\"])\r\n    },\r\n    _getMinSize: function() {\r\n        var adaptiveLayout = this._layoutManagerOptions();\r\n        return [adaptiveLayout.width, adaptiveLayout.height]\r\n    },\r\n    _change_REFRESH: function() {\r\n        if (!this._changes.has(\"INIT\")) {\r\n            this._doRefresh()\r\n        } else {\r\n            this._currentRefreshData = null\r\n        }\r\n    },\r\n    _change_FULL_RENDER: function() {\r\n        this._forceRender()\r\n    },\r\n    _change_INIT: function() {\r\n        this._reinit()\r\n    },\r\n    _stopCurrentHandling: function() {\r\n        this._tracker.stopCurrentHandling()\r\n    }\r\n});\r\nREFRESH_SERIES_DATA_INIT_ACTION_OPTIONS.forEach(function(name) {\r\n    BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_DATA_INIT\"\r\n});\r\nFORCE_RENDER_REFRESH_ACTION_OPTIONS.forEach(function(name) {\r\n    BaseChart.prototype._optionChangesMap[name] = \"FORCE_RENDER\"\r\n});\r\nREFRESH_SERIES_FAMILIES_ACTION_OPTIONS.forEach(function(name) {\r\n    BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_FAMILIES\"\r\n});\r\nexports.overlapping = overlapping;\r\nexports.BaseChart = BaseChart;\r\nBaseChart.addPlugin(require(\"../core/export\").plugin);\r\nBaseChart.addPlugin(require(\"../core/title\").plugin);\r\nBaseChart.addPlugin(require(\"../core/tooltip\").plugin);\r\nBaseChart.addPlugin(require(\"../core/loading_indicator\").plugin);\r\nBaseChart.addPlugin(require(\"../core/data_source\").plugin);\r\nvar _change_TITLE = BaseChart.prototype._change_TITLE;\r\nBaseChart.prototype._change_TITLE = function() {\r\n    _change_TITLE.apply(this, arguments);\r\n    this._change([\"FORCE_RENDER\"])\r\n};\r\n"]},"metadata":{},"sourceType":"script"}