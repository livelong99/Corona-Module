{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // const Total = () => {\n//     const rec = await axios({\n//         \"method\":\"GET\",\n//         \"url\":\"https://corona.lmao.ninja/all\"\n//         })\n//     .then((response)=>{\n//         const Timeline = response.data;\n//         return Timeline;\n//     })\n//     .catch((error)=>{\n//         console.log(error)\n// });\n// return rec;\n// }\n\nfunction Tt() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        a = _useState2[0],\n        seta = _useState2[1];\n\n  const Total = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var rec;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              \"method\": \"GET\",\n              \"url\": \"https://corona.lmao.ninja/all\"\n            }).then(response => {\n              const Timeline = response.data;\n              return Timeline;\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 2:\n            rec = _context.sent;\n            seta(rec);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function Total() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  Total();\n  return a;\n}\n\nexport default Tt;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/src/Reducer/worldTotal.js"],"names":["React","useState","axios","Tt","a","seta","Total","then","response","Timeline","data","catch","error","console","log","rec"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,EAAT,GAAc;AAAA,oBACQF,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACHG,CADG;AAAA,QACAC,IADA;;AAEV,QAAMC,KAAK;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQJ,KAAK,CAAC;AACpB,wBAAS,KADW;AAEpB,qBAAM;AAFc,aAAD,CAAL,CAIjBK,IAJiB,CAIXC,QAAD,IAAY;AACd,oBAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAA1B;AACA,qBAAOD,QAAP;AACH,aAPiB,EAQjBE,KARiB,CAQVC,KAAD,IAAS;AACZC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACP,aAVqB,CADR;;AAAA;AACJG,YAAAA,GADI;AAYdV,YAAAA,IAAI,CAACU,GAAD,CAAJ;;AAZc;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAALT,KAAK;AAAA;AAAA;AAAA,KAAX;;AAeAA,EAAAA,KAAK;AAEL,SAAOF,CAAP;AAEH;;AAID,eAAeD,EAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// const Total = () => {\r\n//     const rec = await axios({\r\n//         \"method\":\"GET\",\r\n//         \"url\":\"https://corona.lmao.ninja/all\"\r\n//         })\r\n//     .then((response)=>{\r\n//         const Timeline = response.data;\r\n//         return Timeline;\r\n//     })\r\n//     .catch((error)=>{\r\n//         console.log(error)\r\n// });\r\n// return rec;\r\n// }\r\n\r\nfunction Tt() {\r\n    const [a, seta] = useState([]);\r\n    const Total = async () => {\r\n        const rec = await axios({\r\n            \"method\":\"GET\",\r\n            \"url\":\"https://corona.lmao.ninja/all\"\r\n            })\r\n        .then((response)=>{\r\n            const Timeline = response.data;\r\n            return Timeline;\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n    });\r\n    seta(rec);\r\n    }\r\n\r\n    Total();\r\n\r\n    return a;\r\n\r\n}\r\n\r\n\r\n\r\nexport default Tt;"]},"metadata":{},"sourceType":"module"}