{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/array.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar isDefined = require(\"./type\").isDefined;\n\nvar each = require(\"./iterator\").each;\n\nvar objectUtils = require(\"./object\");\n\nvar config = require(\"../config\");\n\nvar isEmpty = function isEmpty(entity) {\n  return Array.isArray(entity) && !entity.length;\n};\n\nvar wrapToArray = function wrapToArray(entity) {\n  return Array.isArray(entity) ? entity : [entity];\n};\n\nvar intersection = function intersection(a, b) {\n  if (!Array.isArray(a) || 0 === a.length || !Array.isArray(b) || 0 === b.length) {\n    return [];\n  }\n\n  var result = [];\n  each(a, function (_, value) {\n    var index = inArray(value, b);\n\n    if (index !== -1) {\n      result.push(value);\n    }\n  });\n  return result;\n};\n\nvar removeDuplicates = function removeDuplicates(from, what) {\n  if (!Array.isArray(from) || 0 === from.length) {\n    return [];\n  }\n\n  if (!Array.isArray(what) || 0 === what.length) {\n    return from.slice();\n  }\n\n  var result = [];\n  each(from, function (_, value) {\n    var index = inArray(value, what);\n\n    if (index === -1) {\n      result.push(value);\n    }\n  });\n  return result;\n};\n\nvar normalizeIndexes = function normalizeIndexes(items, indexParameterName, currentItem, needIndexCallback) {\n  var indexedItems = {};\n  var parameterIndex = 0;\n  var useLegacyVisibleIndex = config().useLegacyVisibleIndex;\n  each(items, function (index, item) {\n    index = item[indexParameterName];\n\n    if (index >= 0) {\n      indexedItems[index] = indexedItems[index] || [];\n\n      if (item === currentItem) {\n        indexedItems[index].unshift(item);\n      } else {\n        indexedItems[index].push(item);\n      }\n    } else {\n      item[indexParameterName] = void 0;\n    }\n  });\n\n  if (!useLegacyVisibleIndex) {\n    each(items, function () {\n      if (!isDefined(this[indexParameterName]) && (!needIndexCallback || needIndexCallback(this))) {\n        while (indexedItems[parameterIndex]) {\n          parameterIndex++;\n        }\n\n        indexedItems[parameterIndex] = [this];\n        parameterIndex++;\n      }\n    });\n  }\n\n  parameterIndex = 0;\n  objectUtils.orderEach(indexedItems, function (index, items) {\n    each(items, function () {\n      if (index >= 0) {\n        this[indexParameterName] = parameterIndex++;\n      }\n    });\n  });\n\n  if (useLegacyVisibleIndex) {\n    each(items, function () {\n      if (!isDefined(this[indexParameterName]) && (!needIndexCallback || needIndexCallback(this))) {\n        this[indexParameterName] = parameterIndex++;\n      }\n    });\n  }\n\n  return parameterIndex;\n};\n\nvar inArray = function inArray(value, object) {\n  if (!object) {\n    return -1;\n  }\n\n  var array = Array.isArray(object) ? object : object.toArray();\n  return array.indexOf(value);\n};\n\nvar merge = function merge(array1, array2) {\n  for (var i = 0; i < array2.length; i++) {\n    array1[array1.length] = array2[i];\n  }\n\n  return array1;\n};\n\nvar find = function find(array, condition) {\n  for (var i = 0; i < array.length; i++) {\n    if (condition(array[i])) {\n      return array[i];\n    }\n  }\n};\n\nexports.isEmpty = isEmpty;\nexports.wrapToArray = wrapToArray;\nexports.intersection = intersection;\nexports.removeDuplicates = removeDuplicates;\nexports.normalizeIndexes = normalizeIndexes;\nexports.inArray = inArray;\nexports.merge = merge;\nexports.find = find;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/core/utils/array.js"],"names":["isDefined","require","each","objectUtils","config","isEmpty","entity","Array","isArray","length","wrapToArray","intersection","a","b","result","_","value","index","inArray","push","removeDuplicates","from","what","slice","normalizeIndexes","items","indexParameterName","currentItem","needIndexCallback","indexedItems","parameterIndex","useLegacyVisibleIndex","item","unshift","orderEach","object","array","toArray","indexOf","merge","array1","array2","i","find","condition","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,SAAlC;;AACA,IAAIE,IAAI,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,IAAjC;;AACA,IAAIC,WAAW,GAAGF,OAAO,CAAC,UAAD,CAAzB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,WAAD,CAApB;;AACA,IAAII,OAAO,GAAG,SAAVA,OAAU,CAASC,MAAT,EAAiB;AAC3B,SAAOC,KAAK,CAACC,OAAN,CAAcF,MAAd,KAAyB,CAACA,MAAM,CAACG,MAAxC;AACH,CAFD;;AAGA,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAASJ,MAAT,EAAiB;AAC/B,SAAOC,KAAK,CAACC,OAAN,CAAcF,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,CAAxC;AACH,CAFD;;AAGA,IAAIK,YAAY,GAAG,SAAfA,YAAe,CAASC,CAAT,EAAYC,CAAZ,EAAe;AAC9B,MAAI,CAACN,KAAK,CAACC,OAAN,CAAcI,CAAd,CAAD,IAAqB,MAAMA,CAAC,CAACH,MAA7B,IAAuC,CAACF,KAAK,CAACC,OAAN,CAAcK,CAAd,CAAxC,IAA4D,MAAMA,CAAC,CAACJ,MAAxE,EAAgF;AAC5E,WAAO,EAAP;AACH;;AACD,MAAIK,MAAM,GAAG,EAAb;AACAZ,EAAAA,IAAI,CAACU,CAAD,EAAI,UAASG,CAAT,EAAYC,KAAZ,EAAmB;AACvB,QAAIC,KAAK,GAAGC,OAAO,CAACF,KAAD,EAAQH,CAAR,CAAnB;;AACA,QAAII,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdH,MAAAA,MAAM,CAACK,IAAP,CAAYH,KAAZ;AACH;AACJ,GALG,CAAJ;AAMA,SAAOF,MAAP;AACH,CAZD;;AAaA,IAAIM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAASC,IAAT,EAAeC,IAAf,EAAqB;AACxC,MAAI,CAACf,KAAK,CAACC,OAAN,CAAca,IAAd,CAAD,IAAwB,MAAMA,IAAI,CAACZ,MAAvC,EAA+C;AAC3C,WAAO,EAAP;AACH;;AACD,MAAI,CAACF,KAAK,CAACC,OAAN,CAAcc,IAAd,CAAD,IAAwB,MAAMA,IAAI,CAACb,MAAvC,EAA+C;AAC3C,WAAOY,IAAI,CAACE,KAAL,EAAP;AACH;;AACD,MAAIT,MAAM,GAAG,EAAb;AACAZ,EAAAA,IAAI,CAACmB,IAAD,EAAO,UAASN,CAAT,EAAYC,KAAZ,EAAmB;AAC1B,QAAIC,KAAK,GAAGC,OAAO,CAACF,KAAD,EAAQM,IAAR,CAAnB;;AACA,QAAIL,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdH,MAAAA,MAAM,CAACK,IAAP,CAAYH,KAAZ;AACH;AACJ,GALG,CAAJ;AAMA,SAAOF,MAAP;AACH,CAfD;;AAgBA,IAAIU,gBAAgB,GAAG,SAAnBA,gBAAmB,CAASC,KAAT,EAAgBC,kBAAhB,EAAoCC,WAApC,EAAiDC,iBAAjD,EAAoE;AACvF,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,cAAc,GAAG,CAArB;AACA,MAAIC,qBAAqB,GAAG3B,MAAM,GAAG2B,qBAArC;AACA7B,EAAAA,IAAI,CAACuB,KAAD,EAAQ,UAASR,KAAT,EAAgBe,IAAhB,EAAsB;AAC9Bf,IAAAA,KAAK,GAAGe,IAAI,CAACN,kBAAD,CAAZ;;AACA,QAAIT,KAAK,IAAI,CAAb,EAAgB;AACZY,MAAAA,YAAY,CAACZ,KAAD,CAAZ,GAAsBY,YAAY,CAACZ,KAAD,CAAZ,IAAuB,EAA7C;;AACA,UAAIe,IAAI,KAAKL,WAAb,EAA0B;AACtBE,QAAAA,YAAY,CAACZ,KAAD,CAAZ,CAAoBgB,OAApB,CAA4BD,IAA5B;AACH,OAFD,MAEO;AACHH,QAAAA,YAAY,CAACZ,KAAD,CAAZ,CAAoBE,IAApB,CAAyBa,IAAzB;AACH;AACJ,KAPD,MAOO;AACHA,MAAAA,IAAI,CAACN,kBAAD,CAAJ,GAA2B,KAAK,CAAhC;AACH;AACJ,GAZG,CAAJ;;AAaA,MAAI,CAACK,qBAAL,EAA4B;AACxB7B,IAAAA,IAAI,CAACuB,KAAD,EAAQ,YAAW;AACnB,UAAI,CAACzB,SAAS,CAAC,KAAK0B,kBAAL,CAAD,CAAV,KAAyC,CAACE,iBAAD,IAAsBA,iBAAiB,CAAC,IAAD,CAAhF,CAAJ,EAA6F;AACzF,eAAOC,YAAY,CAACC,cAAD,CAAnB,EAAqC;AACjCA,UAAAA,cAAc;AACjB;;AACDD,QAAAA,YAAY,CAACC,cAAD,CAAZ,GAA+B,CAAC,IAAD,CAA/B;AACAA,QAAAA,cAAc;AACjB;AACJ,KARG,CAAJ;AASH;;AACDA,EAAAA,cAAc,GAAG,CAAjB;AACA3B,EAAAA,WAAW,CAAC+B,SAAZ,CAAsBL,YAAtB,EAAoC,UAASZ,KAAT,EAAgBQ,KAAhB,EAAuB;AACvDvB,IAAAA,IAAI,CAACuB,KAAD,EAAQ,YAAW;AACnB,UAAIR,KAAK,IAAI,CAAb,EAAgB;AACZ,aAAKS,kBAAL,IAA2BI,cAAc,EAAzC;AACH;AACJ,KAJG,CAAJ;AAKH,GAND;;AAOA,MAAIC,qBAAJ,EAA2B;AACvB7B,IAAAA,IAAI,CAACuB,KAAD,EAAQ,YAAW;AACnB,UAAI,CAACzB,SAAS,CAAC,KAAK0B,kBAAL,CAAD,CAAV,KAAyC,CAACE,iBAAD,IAAsBA,iBAAiB,CAAC,IAAD,CAAhF,CAAJ,EAA6F;AACzF,aAAKF,kBAAL,IAA2BI,cAAc,EAAzC;AACH;AACJ,KAJG,CAAJ;AAKH;;AACD,SAAOA,cAAP;AACH,CA5CD;;AA6CA,IAAIZ,OAAO,GAAG,SAAVA,OAAU,CAASF,KAAT,EAAgBmB,MAAhB,EAAwB;AAClC,MAAI,CAACA,MAAL,EAAa;AACT,WAAO,CAAC,CAAR;AACH;;AACD,MAAIC,KAAK,GAAG7B,KAAK,CAACC,OAAN,CAAc2B,MAAd,IAAwBA,MAAxB,GAAiCA,MAAM,CAACE,OAAP,EAA7C;AACA,SAAOD,KAAK,CAACE,OAAN,CAActB,KAAd,CAAP;AACH,CAND;;AAOA,IAAIuB,KAAK,GAAG,SAARA,KAAQ,CAASC,MAAT,EAAiBC,MAAjB,EAAyB;AACjC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAAChC,MAA3B,EAAmCiC,CAAC,EAApC,EAAwC;AACpCF,IAAAA,MAAM,CAACA,MAAM,CAAC/B,MAAR,CAAN,GAAwBgC,MAAM,CAACC,CAAD,CAA9B;AACH;;AACD,SAAOF,MAAP;AACH,CALD;;AAMA,IAAIG,IAAI,GAAG,SAAPA,IAAO,CAASP,KAAT,EAAgBQ,SAAhB,EAA2B;AAClC,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAAC3B,MAA1B,EAAkCiC,CAAC,EAAnC,EAAuC;AACnC,QAAIE,SAAS,CAACR,KAAK,CAACM,CAAD,CAAN,CAAb,EAAyB;AACrB,aAAON,KAAK,CAACM,CAAD,CAAZ;AACH;AACJ;AACJ,CAND;;AAOAG,OAAO,CAACxC,OAAR,GAAkBA,OAAlB;AACAwC,OAAO,CAACnC,WAAR,GAAsBA,WAAtB;AACAmC,OAAO,CAAClC,YAAR,GAAuBA,YAAvB;AACAkC,OAAO,CAACzB,gBAAR,GAA2BA,gBAA3B;AACAyB,OAAO,CAACrB,gBAAR,GAA2BA,gBAA3B;AACAqB,OAAO,CAAC3B,OAAR,GAAkBA,OAAlB;AACA2B,OAAO,CAACN,KAAR,GAAgBA,KAAhB;AACAM,OAAO,CAACF,IAAR,GAAeA,IAAf","sourcesContent":["/**\r\n * DevExtreme (core/utils/array.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar isDefined = require(\"./type\").isDefined;\r\nvar each = require(\"./iterator\").each;\r\nvar objectUtils = require(\"./object\");\r\nvar config = require(\"../config\");\r\nvar isEmpty = function(entity) {\r\n    return Array.isArray(entity) && !entity.length\r\n};\r\nvar wrapToArray = function(entity) {\r\n    return Array.isArray(entity) ? entity : [entity]\r\n};\r\nvar intersection = function(a, b) {\r\n    if (!Array.isArray(a) || 0 === a.length || !Array.isArray(b) || 0 === b.length) {\r\n        return []\r\n    }\r\n    var result = [];\r\n    each(a, function(_, value) {\r\n        var index = inArray(value, b);\r\n        if (index !== -1) {\r\n            result.push(value)\r\n        }\r\n    });\r\n    return result\r\n};\r\nvar removeDuplicates = function(from, what) {\r\n    if (!Array.isArray(from) || 0 === from.length) {\r\n        return []\r\n    }\r\n    if (!Array.isArray(what) || 0 === what.length) {\r\n        return from.slice()\r\n    }\r\n    var result = [];\r\n    each(from, function(_, value) {\r\n        var index = inArray(value, what);\r\n        if (index === -1) {\r\n            result.push(value)\r\n        }\r\n    });\r\n    return result\r\n};\r\nvar normalizeIndexes = function(items, indexParameterName, currentItem, needIndexCallback) {\r\n    var indexedItems = {};\r\n    var parameterIndex = 0;\r\n    var useLegacyVisibleIndex = config().useLegacyVisibleIndex;\r\n    each(items, function(index, item) {\r\n        index = item[indexParameterName];\r\n        if (index >= 0) {\r\n            indexedItems[index] = indexedItems[index] || [];\r\n            if (item === currentItem) {\r\n                indexedItems[index].unshift(item)\r\n            } else {\r\n                indexedItems[index].push(item)\r\n            }\r\n        } else {\r\n            item[indexParameterName] = void 0\r\n        }\r\n    });\r\n    if (!useLegacyVisibleIndex) {\r\n        each(items, function() {\r\n            if (!isDefined(this[indexParameterName]) && (!needIndexCallback || needIndexCallback(this))) {\r\n                while (indexedItems[parameterIndex]) {\r\n                    parameterIndex++\r\n                }\r\n                indexedItems[parameterIndex] = [this];\r\n                parameterIndex++\r\n            }\r\n        })\r\n    }\r\n    parameterIndex = 0;\r\n    objectUtils.orderEach(indexedItems, function(index, items) {\r\n        each(items, function() {\r\n            if (index >= 0) {\r\n                this[indexParameterName] = parameterIndex++\r\n            }\r\n        })\r\n    });\r\n    if (useLegacyVisibleIndex) {\r\n        each(items, function() {\r\n            if (!isDefined(this[indexParameterName]) && (!needIndexCallback || needIndexCallback(this))) {\r\n                this[indexParameterName] = parameterIndex++\r\n            }\r\n        })\r\n    }\r\n    return parameterIndex\r\n};\r\nvar inArray = function(value, object) {\r\n    if (!object) {\r\n        return -1\r\n    }\r\n    var array = Array.isArray(object) ? object : object.toArray();\r\n    return array.indexOf(value)\r\n};\r\nvar merge = function(array1, array2) {\r\n    for (var i = 0; i < array2.length; i++) {\r\n        array1[array1.length] = array2[i]\r\n    }\r\n    return array1\r\n};\r\nvar find = function(array, condition) {\r\n    for (var i = 0; i < array.length; i++) {\r\n        if (condition(array[i])) {\r\n            return array[i]\r\n        }\r\n    }\r\n};\r\nexports.isEmpty = isEmpty;\r\nexports.wrapToArray = wrapToArray;\r\nexports.intersection = intersection;\r\nexports.removeDuplicates = removeDuplicates;\r\nexports.normalizeIndexes = normalizeIndexes;\r\nexports.inArray = inArray;\r\nexports.merge = merge;\r\nexports.find = find;\r\n"]},"metadata":{},"sourceType":"script"}