{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/date.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar typeUtils = require(\"./type\");\n\nvar adjust = require(\"./math\").adjust;\n\nvar each = require(\"./iterator\").each;\n\nvar camelize = require(\"./inflector\").camelize;\n\nvar isObject = typeUtils.isObject;\nvar isString = typeUtils.isString;\nvar isDate = typeUtils.isDate;\nvar isDefined = typeUtils.isDefined;\nvar dateUnitIntervals = [\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\"];\n\nvar toMilliseconds = function toMilliseconds(value) {\n  switch (value) {\n    case \"millisecond\":\n      return 1;\n\n    case \"second\":\n      return 1e3 * toMilliseconds(\"millisecond\");\n\n    case \"minute\":\n      return 60 * toMilliseconds(\"second\");\n\n    case \"hour\":\n      return 60 * toMilliseconds(\"minute\");\n\n    case \"day\":\n      return 24 * toMilliseconds(\"hour\");\n\n    case \"week\":\n      return 7 * toMilliseconds(\"day\");\n\n    case \"month\":\n      return 30 * toMilliseconds(\"day\");\n\n    case \"quarter\":\n      return 3 * toMilliseconds(\"month\");\n\n    case \"year\":\n      return 365 * toMilliseconds(\"day\");\n\n    default:\n      return 0;\n  }\n};\n\nvar getDatesInterval = function getDatesInterval(startDate, endDate, intervalUnit) {\n  var delta = endDate.getTime() - startDate.getTime();\n  var millisecondCount = toMilliseconds(intervalUnit) || 1;\n  return Math.floor(delta / millisecondCount);\n};\n\nvar getNextDateUnit = function getNextDateUnit(unit, withWeeks) {\n  var interval = getDateUnitInterval(unit);\n\n  switch (interval) {\n    case \"millisecond\":\n      return \"second\";\n\n    case \"second\":\n      return \"minute\";\n\n    case \"minute\":\n      return \"hour\";\n\n    case \"hour\":\n      return \"day\";\n\n    case \"day\":\n      return withWeeks ? \"week\" : \"month\";\n\n    case \"week\":\n      return \"month\";\n\n    case \"month\":\n      return \"quarter\";\n\n    case \"quarter\":\n      return \"year\";\n\n    case \"year\":\n      return \"year\";\n\n    default:\n      return 0;\n  }\n};\n\nvar convertMillisecondsToDateUnits = function convertMillisecondsToDateUnits(value) {\n  var i;\n  var dateUnitCount;\n  var dateUnitInterval;\n  var dateUnitIntervals = [\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"month\", \"year\"];\n  var result = {};\n\n  for (i = dateUnitIntervals.length - 1; i >= 0; i--) {\n    dateUnitInterval = dateUnitIntervals[i];\n    dateUnitCount = Math.floor(value / toMilliseconds(dateUnitInterval));\n\n    if (dateUnitCount > 0) {\n      result[dateUnitInterval + \"s\"] = dateUnitCount;\n      value -= convertDateUnitToMilliseconds(dateUnitInterval, dateUnitCount);\n    }\n  }\n\n  return result;\n};\n\nvar dateToMilliseconds = function dateToMilliseconds(tickInterval) {\n  var milliseconds = 0;\n\n  if (isObject(tickInterval)) {\n    each(tickInterval, function (key, value) {\n      milliseconds += convertDateUnitToMilliseconds(key.substr(0, key.length - 1), value);\n    });\n  }\n\n  if (isString(tickInterval)) {\n    milliseconds = convertDateUnitToMilliseconds(tickInterval, 1);\n  }\n\n  return milliseconds;\n};\n\nvar convertDateUnitToMilliseconds = function convertDateUnitToMilliseconds(dateUnit, count) {\n  return toMilliseconds(dateUnit) * count;\n};\n\nvar getDateUnitInterval = function getDateUnitInterval(tickInterval) {\n  var maxInterval = -1;\n  var i;\n\n  if (isString(tickInterval)) {\n    return tickInterval;\n  }\n\n  if (isObject(tickInterval)) {\n    each(tickInterval, function (key, value) {\n      for (i = 0; i < dateUnitIntervals.length; i++) {\n        if (value && (key === dateUnitIntervals[i] + \"s\" || key === dateUnitIntervals[i]) && maxInterval < i) {\n          maxInterval = i;\n        }\n      }\n    });\n    return dateUnitIntervals[maxInterval];\n  }\n\n  return \"\";\n};\n\nvar tickIntervalToFormatMap = {\n  millisecond: \"millisecond\",\n  second: \"longtime\",\n  minute: \"shorttime\",\n  hour: \"shorttime\",\n  day: \"day\",\n  week: \"day\",\n  month: \"month\",\n  quarter: \"quarter\",\n  year: \"year\"\n};\n\nfunction getDateFormatByTickInterval(tickInterval) {\n  return tickIntervalToFormatMap[getDateUnitInterval(tickInterval)] || \"\";\n}\n\nvar getQuarter = function getQuarter(month) {\n  return Math.floor(month / 3);\n};\n\nvar getFirstQuarterMonth = function getFirstQuarterMonth(month) {\n  return 3 * getQuarter(month);\n};\n\nvar correctDateWithUnitBeginning = function correctDateWithUnitBeginning(date, dateInterval, withCorrection, firstDayOfWeek) {\n  date = new Date(date.getTime());\n  var oldDate = new Date(date.getTime());\n  var firstQuarterMonth;\n  var month;\n  var dateUnitInterval = getDateUnitInterval(dateInterval);\n\n  switch (dateUnitInterval) {\n    case \"second\":\n      date = new Date(1e3 * Math.floor(oldDate.getTime() / 1e3));\n      break;\n\n    case \"minute\":\n      date = new Date(6e4 * Math.floor(oldDate.getTime() / 6e4));\n      break;\n\n    case \"hour\":\n      date = new Date(36e5 * Math.floor(oldDate.getTime() / 36e5));\n      break;\n\n    case \"year\":\n      date.setMonth(0);\n\n    case \"month\":\n      date.setDate(1);\n\n    case \"day\":\n      date.setHours(0, 0, 0, 0);\n      break;\n\n    case \"week\":\n      date = getFirstWeekDate(date, firstDayOfWeek || 0);\n      date.setHours(0, 0, 0, 0);\n      break;\n\n    case \"quarter\":\n      firstQuarterMonth = getFirstQuarterMonth(date.getMonth());\n      month = date.getMonth();\n      date.setDate(1);\n      date.setHours(0, 0, 0, 0);\n\n      if (month !== firstQuarterMonth) {\n        date.setMonth(firstQuarterMonth);\n      }\n\n  }\n\n  if (withCorrection && \"hour\" !== dateUnitInterval && \"minute\" !== dateUnitInterval && \"second\" !== dateUnitInterval) {\n    fixTimezoneGap(oldDate, date);\n  }\n\n  return date;\n};\n\nvar trimTime = function trimTime(date) {\n  return dateUtils.correctDateWithUnitBeginning(date, \"day\");\n};\n\nvar setToDayEnd = function setToDayEnd(date) {\n  var result = dateUtils.trimTime(date);\n  result.setDate(result.getDate() + 1);\n  return new Date(result.getTime() - 1);\n};\n\nvar getDatesDifferences = function getDatesDifferences(date1, date2) {\n  var differences;\n  var counter = 0;\n  differences = {\n    year: date1.getFullYear() !== date2.getFullYear(),\n    month: date1.getMonth() !== date2.getMonth(),\n    day: date1.getDate() !== date2.getDate(),\n    hour: date1.getHours() !== date2.getHours(),\n    minute: date1.getMinutes() !== date2.getMinutes(),\n    second: date1.getSeconds() !== date2.getSeconds(),\n    millisecond: date1.getMilliseconds() !== date2.getMilliseconds()\n  };\n  each(differences, function (key, value) {\n    if (value) {\n      counter++;\n    }\n  });\n\n  if (0 === counter && 0 !== getTimezonesDifference(date1, date2)) {\n    differences.hour = true;\n    counter++;\n  }\n\n  differences.count = counter;\n  return differences;\n};\n\nfunction addDateInterval(value, interval, dir) {\n  var result = new Date(value.getTime());\n  var intervalObject = isString(interval) ? getDateIntervalByString(interval.toLowerCase()) : typeUtils.isNumeric(interval) ? convertMillisecondsToDateUnits(interval) : interval;\n\n  if (intervalObject.years) {\n    result.setFullYear(result.getFullYear() + intervalObject.years * dir);\n  }\n\n  if (intervalObject.quarters) {\n    result.setMonth(result.getMonth() + 3 * intervalObject.quarters * dir);\n  }\n\n  if (intervalObject.months) {\n    result.setMonth(result.getMonth() + intervalObject.months * dir);\n  }\n\n  if (intervalObject.weeks) {\n    result.setDate(result.getDate() + 7 * intervalObject.weeks * dir);\n  }\n\n  if (intervalObject.days) {\n    result.setDate(result.getDate() + intervalObject.days * dir);\n  }\n\n  if (intervalObject.hours) {\n    result.setTime(result.getTime() + 36e5 * intervalObject.hours * dir);\n  }\n\n  if (intervalObject.minutes) {\n    result.setTime(result.getTime() + 6e4 * intervalObject.minutes * dir);\n  }\n\n  if (intervalObject.seconds) {\n    result.setTime(result.getTime() + 1e3 * intervalObject.seconds * dir);\n  }\n\n  if (intervalObject.milliseconds) {\n    result.setTime(result.getTime() + intervalObject.milliseconds * dir);\n  }\n\n  return result;\n}\n\nvar addInterval = function addInterval(value, interval, isNegative) {\n  var dir = isNegative ? -1 : 1;\n  return isDate(value) ? addDateInterval(value, interval, dir) : adjust(value + interval * dir, interval);\n};\n\nvar getSequenceByInterval = function getSequenceByInterval(min, max, interval) {\n  var intervals = [];\n  var cur;\n  intervals.push(isDate(min) ? new Date(min.getTime()) : min);\n  cur = min;\n\n  while (cur < max) {\n    cur = addInterval(cur, interval);\n    intervals.push(cur);\n  }\n\n  return intervals;\n};\n\nvar getViewFirstCellDate = function getViewFirstCellDate(viewType, date) {\n  if (\"month\" === viewType) {\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  if (\"year\" === viewType) {\n    return new Date(date.getFullYear(), 0, date.getDate());\n  }\n\n  if (\"decade\" === viewType) {\n    return new Date(getFirstYearInDecade(date), date.getMonth(), date.getDate());\n  }\n\n  if (\"century\" === viewType) {\n    return new Date(getFirstDecadeInCentury(date), date.getMonth(), date.getDate());\n  }\n};\n\nvar getViewLastCellDate = function getViewLastCellDate(viewType, date) {\n  if (\"month\" === viewType) {\n    return new Date(date.getFullYear(), date.getMonth(), getLastMonthDay(date));\n  }\n\n  if (\"year\" === viewType) {\n    return new Date(date.getFullYear(), 11, date.getDate());\n  }\n\n  if (\"decade\" === viewType) {\n    return new Date(getFirstYearInDecade(date) + 9, date.getMonth(), date.getDate());\n  }\n\n  if (\"century\" === viewType) {\n    return new Date(getFirstDecadeInCentury(date) + 90, date.getMonth(), date.getDate());\n  }\n};\n\nvar getViewMinBoundaryDate = function getViewMinBoundaryDate(viewType, date) {\n  var resultDate = new Date(date.getFullYear(), date.getMonth(), 1);\n\n  if (\"month\" === viewType) {\n    return resultDate;\n  }\n\n  resultDate.setMonth(0);\n\n  if (\"year\" === viewType) {\n    return resultDate;\n  }\n\n  if (\"decade\" === viewType) {\n    resultDate.setFullYear(getFirstYearInDecade(date));\n  }\n\n  if (\"century\" === viewType) {\n    resultDate.setFullYear(getFirstDecadeInCentury(date));\n  }\n\n  return resultDate;\n};\n\nvar getViewMaxBoundaryDate = function getViewMaxBoundaryDate(viewType, date) {\n  var resultDate = new Date(date);\n  resultDate.setDate(getLastMonthDay(date));\n\n  if (\"month\" === viewType) {\n    return resultDate;\n  }\n\n  resultDate.setMonth(11);\n  resultDate.setDate(getLastMonthDay(resultDate));\n\n  if (\"year\" === viewType) {\n    return resultDate;\n  }\n\n  if (\"decade\" === viewType) {\n    resultDate.setFullYear(getFirstYearInDecade(date) + 9);\n  }\n\n  if (\"century\" === viewType) {\n    resultDate.setFullYear(getFirstDecadeInCentury(date) + 99);\n  }\n\n  return resultDate;\n};\n\nvar getLastMonthDay = function getLastMonthDay(date) {\n  var resultDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  return resultDate.getDate();\n};\n\nvar sameView = function sameView(view, date1, date2) {\n  return dateUtils[camelize(\"same \" + view)](date1, date2);\n};\n\nvar getViewUp = function getViewUp(typeView) {\n  switch (typeView) {\n    case \"month\":\n      return \"year\";\n\n    case \"year\":\n      return \"decade\";\n\n    case \"decade\":\n      return \"century\";\n  }\n};\n\nvar getViewDown = function getViewDown(typeView) {\n  switch (typeView) {\n    case \"century\":\n      return \"decade\";\n\n    case \"decade\":\n      return \"year\";\n\n    case \"year\":\n      return \"month\";\n  }\n};\n\nvar getDifferenceInMonth = function getDifferenceInMonth(typeView) {\n  var difference = 1;\n\n  if (\"year\" === typeView) {\n    difference = 12;\n  }\n\n  if (\"decade\" === typeView) {\n    difference = 120;\n  }\n\n  if (\"century\" === typeView) {\n    difference = 1200;\n  }\n\n  return difference;\n};\n\nvar getDifferenceInMonthForCells = function getDifferenceInMonthForCells(typeView) {\n  var difference = 1;\n\n  if (\"decade\" === typeView) {\n    difference = 12;\n  }\n\n  if (\"century\" === typeView) {\n    difference = 120;\n  }\n\n  return difference;\n};\n\nvar getDateIntervalByString = function getDateIntervalByString(intervalString) {\n  var result = {};\n\n  switch (intervalString) {\n    case \"year\":\n      result.years = 1;\n      break;\n\n    case \"month\":\n      result.months = 1;\n      break;\n\n    case \"quarter\":\n      result.months = 3;\n      break;\n\n    case \"week\":\n      result.weeks = 1;\n      break;\n\n    case \"day\":\n      result.days = 1;\n      break;\n\n    case \"hour\":\n      result.hours = 1;\n      break;\n\n    case \"minute\":\n      result.minutes = 1;\n      break;\n\n    case \"second\":\n      result.seconds = 1;\n      break;\n\n    case \"millisecond\":\n      result.milliseconds = 1;\n  }\n\n  return result;\n};\n\nvar sameDate = function sameDate(date1, date2) {\n  return sameMonthAndYear(date1, date2) && date1.getDate() === date2.getDate();\n};\n\nvar sameMonthAndYear = function sameMonthAndYear(date1, date2) {\n  return sameYear(date1, date2) && date1.getMonth() === date2.getMonth();\n};\n\nvar sameYear = function sameYear(date1, date2) {\n  return date1 && date2 && date1.getFullYear() === date2.getFullYear();\n};\n\nvar sameDecade = function sameDecade(date1, date2) {\n  if (!isDefined(date1) || !isDefined(date2)) {\n    return;\n  }\n\n  var startDecadeDate1 = date1.getFullYear() - date1.getFullYear() % 10;\n  var startDecadeDate2 = date2.getFullYear() - date2.getFullYear() % 10;\n  return date1 && date2 && startDecadeDate1 === startDecadeDate2;\n};\n\nvar sameCentury = function sameCentury(date1, date2) {\n  if (!isDefined(date1) || !isDefined(date2)) {\n    return;\n  }\n\n  var startCenturyDate1 = date1.getFullYear() - date1.getFullYear() % 100;\n  var startCenturyDate2 = date2.getFullYear() - date2.getFullYear() % 100;\n  return date1 && date2 && startCenturyDate1 === startCenturyDate2;\n};\n\nvar getFirstDecadeInCentury = function getFirstDecadeInCentury(date) {\n  return date && date.getFullYear() - date.getFullYear() % 100;\n};\n\nvar getFirstYearInDecade = function getFirstYearInDecade(date) {\n  return date && date.getFullYear() - date.getFullYear() % 10;\n};\n\nvar getShortDateFormat = function getShortDateFormat() {\n  return \"yyyy/MM/dd\";\n};\n\nvar getFirstMonthDate = function getFirstMonthDate(date) {\n  if (!isDefined(date)) {\n    return;\n  }\n\n  var newDate = new Date(date.getFullYear(), date.getMonth(), 1);\n  return newDate;\n};\n\nvar getLastMonthDate = function getLastMonthDate(date) {\n  if (!isDefined(date)) {\n    return;\n  }\n\n  var newDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  return newDate;\n};\n\nvar getFirstWeekDate = function getFirstWeekDate(date, firstDayOfWeek) {\n  var delta = (date.getDay() - firstDayOfWeek + 7) % 7;\n  var result = new Date(date);\n  result.setDate(date.getDate() - delta);\n  return result;\n};\n\nvar normalizeDateByWeek = function normalizeDateByWeek(date, currentDate) {\n  var differenceInDays = dateUtils.getDatesInterval(date, currentDate, \"day\");\n  var resultDate = new Date(date);\n\n  if (differenceInDays >= 6) {\n    resultDate = new Date(resultDate.setDate(resultDate.getDate() + 7));\n  }\n\n  return resultDate;\n};\n\nvar dateInRange = function dateInRange(date, min, max, format) {\n  if (\"date\" === format) {\n    min = min && dateUtils.correctDateWithUnitBeginning(min, \"day\");\n    max = max && dateUtils.correctDateWithUnitBeginning(max, \"day\");\n    date = date && dateUtils.correctDateWithUnitBeginning(date, \"day\");\n  }\n\n  return normalizeDate(date, min, max) === date;\n};\n\nvar dateTimeFromDecimal = function dateTimeFromDecimal(number) {\n  var hours = Math.floor(number);\n  var minutes = number % 1 * 60;\n  return {\n    hours: hours,\n    minutes: minutes\n  };\n};\n\nvar roundDateByStartDayHour = function roundDateByStartDayHour(date, startDayHour) {\n  var startTime = this.dateTimeFromDecimal(startDayHour);\n  var result = new Date(date);\n\n  if (date.getHours() === startTime.hours && date.getMinutes() < startTime.minutes || date.getHours() < startTime.hours) {\n    result.setHours(startTime.hours, startTime.minutes, 0, 0);\n  }\n\n  return result;\n};\n\nvar normalizeDate = function normalizeDate(date, min, max) {\n  var normalizedDate = date;\n\n  if (!isDefined(date)) {\n    return date;\n  }\n\n  if (isDefined(min) && date < min) {\n    normalizedDate = min;\n  }\n\n  if (isDefined(max) && date > max) {\n    normalizedDate = max;\n  }\n\n  return normalizedDate;\n};\n\nvar fixTimezoneGap = function fixTimezoneGap(oldDate, newDate) {\n  if (!isDefined(oldDate)) {\n    return;\n  }\n\n  var diff = newDate.getHours() - oldDate.getHours();\n  var sign;\n  var trial;\n\n  if (0 === diff) {\n    return;\n  }\n\n  sign = 1 === diff || diff === -23 ? -1 : 1;\n  trial = new Date(newDate.getTime() + 36e5 * sign);\n\n  if (sign > 0 || trial.getDate() === newDate.getDate()) {\n    newDate.setTime(trial.getTime());\n  }\n};\n\nvar roundToHour = function roundToHour(date) {\n  date.setHours(date.getHours() + 1);\n  date.setMinutes(0);\n  return date;\n};\n\nvar getTimezonesDifference = function getTimezonesDifference(min, max) {\n  return 60 * (max.getTimezoneOffset() - min.getTimezoneOffset()) * 1e3;\n};\n\nvar makeDate = function makeDate(date) {\n  return new Date(date);\n};\n\nvar getDatesOfInterval = function getDatesOfInterval(startDate, endDate, step) {\n  var result = [];\n  var currentDate = new Date(startDate.getTime());\n\n  if (startDate.getTime() === endDate.getTime()) {\n    result.push(new Date(startDate.getTime()));\n  }\n\n  while (currentDate < endDate) {\n    result.push(new Date(currentDate.getTime()));\n    currentDate = this.addInterval(currentDate, step);\n  }\n\n  return result;\n};\n\nvar dateUtils = {\n  dateUnitIntervals: dateUnitIntervals,\n  convertMillisecondsToDateUnits: convertMillisecondsToDateUnits,\n  dateToMilliseconds: dateToMilliseconds,\n  getNextDateUnit: getNextDateUnit,\n  convertDateUnitToMilliseconds: convertDateUnitToMilliseconds,\n  getDateUnitInterval: getDateUnitInterval,\n  getDateFormatByTickInterval: getDateFormatByTickInterval,\n  getDatesDifferences: getDatesDifferences,\n  correctDateWithUnitBeginning: correctDateWithUnitBeginning,\n  trimTime: trimTime,\n  setToDayEnd: setToDayEnd,\n  roundDateByStartDayHour: roundDateByStartDayHour,\n  dateTimeFromDecimal: dateTimeFromDecimal,\n  addDateInterval: addDateInterval,\n  addInterval: addInterval,\n  getSequenceByInterval: getSequenceByInterval,\n  getDateIntervalByString: getDateIntervalByString,\n  sameDate: sameDate,\n  sameMonthAndYear: sameMonthAndYear,\n  sameMonth: sameMonthAndYear,\n  sameYear: sameYear,\n  sameDecade: sameDecade,\n  sameCentury: sameCentury,\n  sameView: sameView,\n  getDifferenceInMonth: getDifferenceInMonth,\n  getDifferenceInMonthForCells: getDifferenceInMonthForCells,\n  getFirstYearInDecade: getFirstYearInDecade,\n  getFirstDecadeInCentury: getFirstDecadeInCentury,\n  getShortDateFormat: getShortDateFormat,\n  getViewFirstCellDate: getViewFirstCellDate,\n  getViewLastCellDate: getViewLastCellDate,\n  getViewDown: getViewDown,\n  getViewUp: getViewUp,\n  getLastMonthDay: getLastMonthDay,\n  getLastMonthDate: getLastMonthDate,\n  getFirstMonthDate: getFirstMonthDate,\n  getFirstWeekDate: getFirstWeekDate,\n  normalizeDateByWeek: normalizeDateByWeek,\n  getQuarter: getQuarter,\n  getFirstQuarterMonth: getFirstQuarterMonth,\n  dateInRange: dateInRange,\n  roundToHour: roundToHour,\n  normalizeDate: normalizeDate,\n  getViewMinBoundaryDate: getViewMinBoundaryDate,\n  getViewMaxBoundaryDate: getViewMaxBoundaryDate,\n  fixTimezoneGap: fixTimezoneGap,\n  getTimezonesDifference: getTimezonesDifference,\n  makeDate: makeDate,\n  getDatesInterval: getDatesInterval,\n  getDatesOfInterval: getDatesOfInterval\n};\nmodule.exports = dateUtils;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/core/utils/date.js"],"names":["typeUtils","require","adjust","each","camelize","isObject","isString","isDate","isDefined","dateUnitIntervals","toMilliseconds","value","getDatesInterval","startDate","endDate","intervalUnit","delta","getTime","millisecondCount","Math","floor","getNextDateUnit","unit","withWeeks","interval","getDateUnitInterval","convertMillisecondsToDateUnits","i","dateUnitCount","dateUnitInterval","result","length","convertDateUnitToMilliseconds","dateToMilliseconds","tickInterval","milliseconds","key","substr","dateUnit","count","maxInterval","tickIntervalToFormatMap","millisecond","second","minute","hour","day","week","month","quarter","year","getDateFormatByTickInterval","getQuarter","getFirstQuarterMonth","correctDateWithUnitBeginning","date","dateInterval","withCorrection","firstDayOfWeek","Date","oldDate","firstQuarterMonth","setMonth","setDate","setHours","getFirstWeekDate","getMonth","fixTimezoneGap","trimTime","dateUtils","setToDayEnd","getDate","getDatesDifferences","date1","date2","differences","counter","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds","getTimezonesDifference","addDateInterval","dir","intervalObject","getDateIntervalByString","toLowerCase","isNumeric","years","setFullYear","quarters","months","weeks","days","hours","setTime","minutes","seconds","addInterval","isNegative","getSequenceByInterval","min","max","intervals","cur","push","getViewFirstCellDate","viewType","getFirstYearInDecade","getFirstDecadeInCentury","getViewLastCellDate","getLastMonthDay","getViewMinBoundaryDate","resultDate","getViewMaxBoundaryDate","sameView","view","getViewUp","typeView","getViewDown","getDifferenceInMonth","difference","getDifferenceInMonthForCells","intervalString","sameDate","sameMonthAndYear","sameYear","sameDecade","startDecadeDate1","startDecadeDate2","sameCentury","startCenturyDate1","startCenturyDate2","getShortDateFormat","getFirstMonthDate","newDate","getLastMonthDate","getDay","normalizeDateByWeek","currentDate","differenceInDays","dateInRange","format","normalizeDate","dateTimeFromDecimal","number","roundDateByStartDayHour","startDayHour","startTime","normalizedDate","diff","sign","trial","roundToHour","setMinutes","getTimezoneOffset","makeDate","getDatesOfInterval","step","sameMonth","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (core/utils/date.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar typeUtils = require(\"./type\");\r\nvar adjust = require(\"./math\").adjust;\r\nvar each = require(\"./iterator\").each;\r\nvar camelize = require(\"./inflector\").camelize;\r\nvar isObject = typeUtils.isObject;\r\nvar isString = typeUtils.isString;\r\nvar isDate = typeUtils.isDate;\r\nvar isDefined = typeUtils.isDefined;\r\nvar dateUnitIntervals = [\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\"];\r\nvar toMilliseconds = function toMilliseconds(value) {\r\n    switch (value) {\r\n        case \"millisecond\":\r\n            return 1;\r\n        case \"second\":\r\n            return 1e3 * toMilliseconds(\"millisecond\");\r\n        case \"minute\":\r\n            return 60 * toMilliseconds(\"second\");\r\n        case \"hour\":\r\n            return 60 * toMilliseconds(\"minute\");\r\n        case \"day\":\r\n            return 24 * toMilliseconds(\"hour\");\r\n        case \"week\":\r\n            return 7 * toMilliseconds(\"day\");\r\n        case \"month\":\r\n            return 30 * toMilliseconds(\"day\");\r\n        case \"quarter\":\r\n            return 3 * toMilliseconds(\"month\");\r\n        case \"year\":\r\n            return 365 * toMilliseconds(\"day\");\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar getDatesInterval = function(startDate, endDate, intervalUnit) {\r\n    var delta = endDate.getTime() - startDate.getTime();\r\n    var millisecondCount = toMilliseconds(intervalUnit) || 1;\r\n    return Math.floor(delta / millisecondCount)\r\n};\r\nvar getNextDateUnit = function(unit, withWeeks) {\r\n    var interval = getDateUnitInterval(unit);\r\n    switch (interval) {\r\n        case \"millisecond\":\r\n            return \"second\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"day\":\r\n            return withWeeks ? \"week\" : \"month\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"month\":\r\n            return \"quarter\";\r\n        case \"quarter\":\r\n            return \"year\";\r\n        case \"year\":\r\n            return \"year\";\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar convertMillisecondsToDateUnits = function(value) {\r\n    var i;\r\n    var dateUnitCount;\r\n    var dateUnitInterval;\r\n    var dateUnitIntervals = [\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"month\", \"year\"];\r\n    var result = {};\r\n    for (i = dateUnitIntervals.length - 1; i >= 0; i--) {\r\n        dateUnitInterval = dateUnitIntervals[i];\r\n        dateUnitCount = Math.floor(value / toMilliseconds(dateUnitInterval));\r\n        if (dateUnitCount > 0) {\r\n            result[dateUnitInterval + \"s\"] = dateUnitCount;\r\n            value -= convertDateUnitToMilliseconds(dateUnitInterval, dateUnitCount)\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar dateToMilliseconds = function(tickInterval) {\r\n    var milliseconds = 0;\r\n    if (isObject(tickInterval)) {\r\n        each(tickInterval, function(key, value) {\r\n            milliseconds += convertDateUnitToMilliseconds(key.substr(0, key.length - 1), value)\r\n        })\r\n    }\r\n    if (isString(tickInterval)) {\r\n        milliseconds = convertDateUnitToMilliseconds(tickInterval, 1)\r\n    }\r\n    return milliseconds\r\n};\r\nvar convertDateUnitToMilliseconds = function(dateUnit, count) {\r\n    return toMilliseconds(dateUnit) * count\r\n};\r\nvar getDateUnitInterval = function(tickInterval) {\r\n    var maxInterval = -1;\r\n    var i;\r\n    if (isString(tickInterval)) {\r\n        return tickInterval\r\n    }\r\n    if (isObject(tickInterval)) {\r\n        each(tickInterval, function(key, value) {\r\n            for (i = 0; i < dateUnitIntervals.length; i++) {\r\n                if (value && (key === dateUnitIntervals[i] + \"s\" || key === dateUnitIntervals[i]) && maxInterval < i) {\r\n                    maxInterval = i\r\n                }\r\n            }\r\n        });\r\n        return dateUnitIntervals[maxInterval]\r\n    }\r\n    return \"\"\r\n};\r\nvar tickIntervalToFormatMap = {\r\n    millisecond: \"millisecond\",\r\n    second: \"longtime\",\r\n    minute: \"shorttime\",\r\n    hour: \"shorttime\",\r\n    day: \"day\",\r\n    week: \"day\",\r\n    month: \"month\",\r\n    quarter: \"quarter\",\r\n    year: \"year\"\r\n};\r\n\r\nfunction getDateFormatByTickInterval(tickInterval) {\r\n    return tickIntervalToFormatMap[getDateUnitInterval(tickInterval)] || \"\"\r\n}\r\nvar getQuarter = function(month) {\r\n    return Math.floor(month / 3)\r\n};\r\nvar getFirstQuarterMonth = function(month) {\r\n    return 3 * getQuarter(month)\r\n};\r\nvar correctDateWithUnitBeginning = function(date, dateInterval, withCorrection, firstDayOfWeek) {\r\n    date = new Date(date.getTime());\r\n    var oldDate = new Date(date.getTime());\r\n    var firstQuarterMonth;\r\n    var month;\r\n    var dateUnitInterval = getDateUnitInterval(dateInterval);\r\n    switch (dateUnitInterval) {\r\n        case \"second\":\r\n            date = new Date(1e3 * Math.floor(oldDate.getTime() / 1e3));\r\n            break;\r\n        case \"minute\":\r\n            date = new Date(6e4 * Math.floor(oldDate.getTime() / 6e4));\r\n            break;\r\n        case \"hour\":\r\n            date = new Date(36e5 * Math.floor(oldDate.getTime() / 36e5));\r\n            break;\r\n        case \"year\":\r\n            date.setMonth(0);\r\n        case \"month\":\r\n            date.setDate(1);\r\n        case \"day\":\r\n            date.setHours(0, 0, 0, 0);\r\n            break;\r\n        case \"week\":\r\n            date = getFirstWeekDate(date, firstDayOfWeek || 0);\r\n            date.setHours(0, 0, 0, 0);\r\n            break;\r\n        case \"quarter\":\r\n            firstQuarterMonth = getFirstQuarterMonth(date.getMonth());\r\n            month = date.getMonth();\r\n            date.setDate(1);\r\n            date.setHours(0, 0, 0, 0);\r\n            if (month !== firstQuarterMonth) {\r\n                date.setMonth(firstQuarterMonth)\r\n            }\r\n    }\r\n    if (withCorrection && \"hour\" !== dateUnitInterval && \"minute\" !== dateUnitInterval && \"second\" !== dateUnitInterval) {\r\n        fixTimezoneGap(oldDate, date)\r\n    }\r\n    return date\r\n};\r\nvar trimTime = function(date) {\r\n    return dateUtils.correctDateWithUnitBeginning(date, \"day\")\r\n};\r\nvar setToDayEnd = function(date) {\r\n    var result = dateUtils.trimTime(date);\r\n    result.setDate(result.getDate() + 1);\r\n    return new Date(result.getTime() - 1)\r\n};\r\nvar getDatesDifferences = function(date1, date2) {\r\n    var differences;\r\n    var counter = 0;\r\n    differences = {\r\n        year: date1.getFullYear() !== date2.getFullYear(),\r\n        month: date1.getMonth() !== date2.getMonth(),\r\n        day: date1.getDate() !== date2.getDate(),\r\n        hour: date1.getHours() !== date2.getHours(),\r\n        minute: date1.getMinutes() !== date2.getMinutes(),\r\n        second: date1.getSeconds() !== date2.getSeconds(),\r\n        millisecond: date1.getMilliseconds() !== date2.getMilliseconds()\r\n    };\r\n    each(differences, function(key, value) {\r\n        if (value) {\r\n            counter++\r\n        }\r\n    });\r\n    if (0 === counter && 0 !== getTimezonesDifference(date1, date2)) {\r\n        differences.hour = true;\r\n        counter++\r\n    }\r\n    differences.count = counter;\r\n    return differences\r\n};\r\n\r\nfunction addDateInterval(value, interval, dir) {\r\n    var result = new Date(value.getTime());\r\n    var intervalObject = isString(interval) ? getDateIntervalByString(interval.toLowerCase()) : typeUtils.isNumeric(interval) ? convertMillisecondsToDateUnits(interval) : interval;\r\n    if (intervalObject.years) {\r\n        result.setFullYear(result.getFullYear() + intervalObject.years * dir)\r\n    }\r\n    if (intervalObject.quarters) {\r\n        result.setMonth(result.getMonth() + 3 * intervalObject.quarters * dir)\r\n    }\r\n    if (intervalObject.months) {\r\n        result.setMonth(result.getMonth() + intervalObject.months * dir)\r\n    }\r\n    if (intervalObject.weeks) {\r\n        result.setDate(result.getDate() + 7 * intervalObject.weeks * dir)\r\n    }\r\n    if (intervalObject.days) {\r\n        result.setDate(result.getDate() + intervalObject.days * dir)\r\n    }\r\n    if (intervalObject.hours) {\r\n        result.setTime(result.getTime() + 36e5 * intervalObject.hours * dir)\r\n    }\r\n    if (intervalObject.minutes) {\r\n        result.setTime(result.getTime() + 6e4 * intervalObject.minutes * dir)\r\n    }\r\n    if (intervalObject.seconds) {\r\n        result.setTime(result.getTime() + 1e3 * intervalObject.seconds * dir)\r\n    }\r\n    if (intervalObject.milliseconds) {\r\n        result.setTime(result.getTime() + intervalObject.milliseconds * dir)\r\n    }\r\n    return result\r\n}\r\nvar addInterval = function(value, interval, isNegative) {\r\n    var dir = isNegative ? -1 : 1;\r\n    return isDate(value) ? addDateInterval(value, interval, dir) : adjust(value + interval * dir, interval)\r\n};\r\nvar getSequenceByInterval = function(min, max, interval) {\r\n    var intervals = [];\r\n    var cur;\r\n    intervals.push(isDate(min) ? new Date(min.getTime()) : min);\r\n    cur = min;\r\n    while (cur < max) {\r\n        cur = addInterval(cur, interval);\r\n        intervals.push(cur)\r\n    }\r\n    return intervals\r\n};\r\nvar getViewFirstCellDate = function(viewType, date) {\r\n    if (\"month\" === viewType) {\r\n        return new Date(date.getFullYear(), date.getMonth(), 1)\r\n    }\r\n    if (\"year\" === viewType) {\r\n        return new Date(date.getFullYear(), 0, date.getDate())\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        return new Date(getFirstYearInDecade(date), date.getMonth(), date.getDate())\r\n    }\r\n    if (\"century\" === viewType) {\r\n        return new Date(getFirstDecadeInCentury(date), date.getMonth(), date.getDate())\r\n    }\r\n};\r\nvar getViewLastCellDate = function(viewType, date) {\r\n    if (\"month\" === viewType) {\r\n        return new Date(date.getFullYear(), date.getMonth(), getLastMonthDay(date))\r\n    }\r\n    if (\"year\" === viewType) {\r\n        return new Date(date.getFullYear(), 11, date.getDate())\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        return new Date(getFirstYearInDecade(date) + 9, date.getMonth(), date.getDate())\r\n    }\r\n    if (\"century\" === viewType) {\r\n        return new Date(getFirstDecadeInCentury(date) + 90, date.getMonth(), date.getDate())\r\n    }\r\n};\r\nvar getViewMinBoundaryDate = function(viewType, date) {\r\n    var resultDate = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    if (\"month\" === viewType) {\r\n        return resultDate\r\n    }\r\n    resultDate.setMonth(0);\r\n    if (\"year\" === viewType) {\r\n        return resultDate\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        resultDate.setFullYear(getFirstYearInDecade(date))\r\n    }\r\n    if (\"century\" === viewType) {\r\n        resultDate.setFullYear(getFirstDecadeInCentury(date))\r\n    }\r\n    return resultDate\r\n};\r\nvar getViewMaxBoundaryDate = function(viewType, date) {\r\n    var resultDate = new Date(date);\r\n    resultDate.setDate(getLastMonthDay(date));\r\n    if (\"month\" === viewType) {\r\n        return resultDate\r\n    }\r\n    resultDate.setMonth(11);\r\n    resultDate.setDate(getLastMonthDay(resultDate));\r\n    if (\"year\" === viewType) {\r\n        return resultDate\r\n    }\r\n    if (\"decade\" === viewType) {\r\n        resultDate.setFullYear(getFirstYearInDecade(date) + 9)\r\n    }\r\n    if (\"century\" === viewType) {\r\n        resultDate.setFullYear(getFirstDecadeInCentury(date) + 99)\r\n    }\r\n    return resultDate\r\n};\r\nvar getLastMonthDay = function(date) {\r\n    var resultDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return resultDate.getDate()\r\n};\r\nvar sameView = function(view, date1, date2) {\r\n    return dateUtils[camelize(\"same \" + view)](date1, date2)\r\n};\r\nvar getViewUp = function(typeView) {\r\n    switch (typeView) {\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"year\":\r\n            return \"decade\";\r\n        case \"decade\":\r\n            return \"century\"\r\n    }\r\n};\r\nvar getViewDown = function(typeView) {\r\n    switch (typeView) {\r\n        case \"century\":\r\n            return \"decade\";\r\n        case \"decade\":\r\n            return \"year\";\r\n        case \"year\":\r\n            return \"month\"\r\n    }\r\n};\r\nvar getDifferenceInMonth = function(typeView) {\r\n    var difference = 1;\r\n    if (\"year\" === typeView) {\r\n        difference = 12\r\n    }\r\n    if (\"decade\" === typeView) {\r\n        difference = 120\r\n    }\r\n    if (\"century\" === typeView) {\r\n        difference = 1200\r\n    }\r\n    return difference\r\n};\r\nvar getDifferenceInMonthForCells = function(typeView) {\r\n    var difference = 1;\r\n    if (\"decade\" === typeView) {\r\n        difference = 12\r\n    }\r\n    if (\"century\" === typeView) {\r\n        difference = 120\r\n    }\r\n    return difference\r\n};\r\nvar getDateIntervalByString = function(intervalString) {\r\n    var result = {};\r\n    switch (intervalString) {\r\n        case \"year\":\r\n            result.years = 1;\r\n            break;\r\n        case \"month\":\r\n            result.months = 1;\r\n            break;\r\n        case \"quarter\":\r\n            result.months = 3;\r\n            break;\r\n        case \"week\":\r\n            result.weeks = 1;\r\n            break;\r\n        case \"day\":\r\n            result.days = 1;\r\n            break;\r\n        case \"hour\":\r\n            result.hours = 1;\r\n            break;\r\n        case \"minute\":\r\n            result.minutes = 1;\r\n            break;\r\n        case \"second\":\r\n            result.seconds = 1;\r\n            break;\r\n        case \"millisecond\":\r\n            result.milliseconds = 1\r\n    }\r\n    return result\r\n};\r\nvar sameDate = function(date1, date2) {\r\n    return sameMonthAndYear(date1, date2) && date1.getDate() === date2.getDate()\r\n};\r\nvar sameMonthAndYear = function(date1, date2) {\r\n    return sameYear(date1, date2) && date1.getMonth() === date2.getMonth()\r\n};\r\nvar sameYear = function(date1, date2) {\r\n    return date1 && date2 && date1.getFullYear() === date2.getFullYear()\r\n};\r\nvar sameDecade = function(date1, date2) {\r\n    if (!isDefined(date1) || !isDefined(date2)) {\r\n        return\r\n    }\r\n    var startDecadeDate1 = date1.getFullYear() - date1.getFullYear() % 10;\r\n    var startDecadeDate2 = date2.getFullYear() - date2.getFullYear() % 10;\r\n    return date1 && date2 && startDecadeDate1 === startDecadeDate2\r\n};\r\nvar sameCentury = function(date1, date2) {\r\n    if (!isDefined(date1) || !isDefined(date2)) {\r\n        return\r\n    }\r\n    var startCenturyDate1 = date1.getFullYear() - date1.getFullYear() % 100;\r\n    var startCenturyDate2 = date2.getFullYear() - date2.getFullYear() % 100;\r\n    return date1 && date2 && startCenturyDate1 === startCenturyDate2\r\n};\r\nvar getFirstDecadeInCentury = function(date) {\r\n    return date && date.getFullYear() - date.getFullYear() % 100\r\n};\r\nvar getFirstYearInDecade = function(date) {\r\n    return date && date.getFullYear() - date.getFullYear() % 10\r\n};\r\nvar getShortDateFormat = function() {\r\n    return \"yyyy/MM/dd\"\r\n};\r\nvar getFirstMonthDate = function(date) {\r\n    if (!isDefined(date)) {\r\n        return\r\n    }\r\n    var newDate = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    return newDate\r\n};\r\nvar getLastMonthDate = function(date) {\r\n    if (!isDefined(date)) {\r\n        return\r\n    }\r\n    var newDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return newDate\r\n};\r\nvar getFirstWeekDate = function(date, firstDayOfWeek) {\r\n    var delta = (date.getDay() - firstDayOfWeek + 7) % 7;\r\n    var result = new Date(date);\r\n    result.setDate(date.getDate() - delta);\r\n    return result\r\n};\r\nvar normalizeDateByWeek = function(date, currentDate) {\r\n    var differenceInDays = dateUtils.getDatesInterval(date, currentDate, \"day\");\r\n    var resultDate = new Date(date);\r\n    if (differenceInDays >= 6) {\r\n        resultDate = new Date(resultDate.setDate(resultDate.getDate() + 7))\r\n    }\r\n    return resultDate\r\n};\r\nvar dateInRange = function(date, min, max, format) {\r\n    if (\"date\" === format) {\r\n        min = min && dateUtils.correctDateWithUnitBeginning(min, \"day\");\r\n        max = max && dateUtils.correctDateWithUnitBeginning(max, \"day\");\r\n        date = date && dateUtils.correctDateWithUnitBeginning(date, \"day\")\r\n    }\r\n    return normalizeDate(date, min, max) === date\r\n};\r\nvar dateTimeFromDecimal = function(number) {\r\n    var hours = Math.floor(number);\r\n    var minutes = number % 1 * 60;\r\n    return {\r\n        hours: hours,\r\n        minutes: minutes\r\n    }\r\n};\r\nvar roundDateByStartDayHour = function(date, startDayHour) {\r\n    var startTime = this.dateTimeFromDecimal(startDayHour);\r\n    var result = new Date(date);\r\n    if (date.getHours() === startTime.hours && date.getMinutes() < startTime.minutes || date.getHours() < startTime.hours) {\r\n        result.setHours(startTime.hours, startTime.minutes, 0, 0)\r\n    }\r\n    return result\r\n};\r\nvar normalizeDate = function(date, min, max) {\r\n    var normalizedDate = date;\r\n    if (!isDefined(date)) {\r\n        return date\r\n    }\r\n    if (isDefined(min) && date < min) {\r\n        normalizedDate = min\r\n    }\r\n    if (isDefined(max) && date > max) {\r\n        normalizedDate = max\r\n    }\r\n    return normalizedDate\r\n};\r\nvar fixTimezoneGap = function(oldDate, newDate) {\r\n    if (!isDefined(oldDate)) {\r\n        return\r\n    }\r\n    var diff = newDate.getHours() - oldDate.getHours();\r\n    var sign;\r\n    var trial;\r\n    if (0 === diff) {\r\n        return\r\n    }\r\n    sign = 1 === diff || diff === -23 ? -1 : 1;\r\n    trial = new Date(newDate.getTime() + 36e5 * sign);\r\n    if (sign > 0 || trial.getDate() === newDate.getDate()) {\r\n        newDate.setTime(trial.getTime())\r\n    }\r\n};\r\nvar roundToHour = function(date) {\r\n    date.setHours(date.getHours() + 1);\r\n    date.setMinutes(0);\r\n    return date\r\n};\r\nvar getTimezonesDifference = function(min, max) {\r\n    return 60 * (max.getTimezoneOffset() - min.getTimezoneOffset()) * 1e3\r\n};\r\nvar makeDate = function(date) {\r\n    return new Date(date)\r\n};\r\nvar getDatesOfInterval = function(startDate, endDate, step) {\r\n    var result = [];\r\n    var currentDate = new Date(startDate.getTime());\r\n    if (startDate.getTime() === endDate.getTime()) {\r\n        result.push(new Date(startDate.getTime()))\r\n    }\r\n    while (currentDate < endDate) {\r\n        result.push(new Date(currentDate.getTime()));\r\n        currentDate = this.addInterval(currentDate, step)\r\n    }\r\n    return result\r\n};\r\nvar dateUtils = {\r\n    dateUnitIntervals: dateUnitIntervals,\r\n    convertMillisecondsToDateUnits: convertMillisecondsToDateUnits,\r\n    dateToMilliseconds: dateToMilliseconds,\r\n    getNextDateUnit: getNextDateUnit,\r\n    convertDateUnitToMilliseconds: convertDateUnitToMilliseconds,\r\n    getDateUnitInterval: getDateUnitInterval,\r\n    getDateFormatByTickInterval: getDateFormatByTickInterval,\r\n    getDatesDifferences: getDatesDifferences,\r\n    correctDateWithUnitBeginning: correctDateWithUnitBeginning,\r\n    trimTime: trimTime,\r\n    setToDayEnd: setToDayEnd,\r\n    roundDateByStartDayHour: roundDateByStartDayHour,\r\n    dateTimeFromDecimal: dateTimeFromDecimal,\r\n    addDateInterval: addDateInterval,\r\n    addInterval: addInterval,\r\n    getSequenceByInterval: getSequenceByInterval,\r\n    getDateIntervalByString: getDateIntervalByString,\r\n    sameDate: sameDate,\r\n    sameMonthAndYear: sameMonthAndYear,\r\n    sameMonth: sameMonthAndYear,\r\n    sameYear: sameYear,\r\n    sameDecade: sameDecade,\r\n    sameCentury: sameCentury,\r\n    sameView: sameView,\r\n    getDifferenceInMonth: getDifferenceInMonth,\r\n    getDifferenceInMonthForCells: getDifferenceInMonthForCells,\r\n    getFirstYearInDecade: getFirstYearInDecade,\r\n    getFirstDecadeInCentury: getFirstDecadeInCentury,\r\n    getShortDateFormat: getShortDateFormat,\r\n    getViewFirstCellDate: getViewFirstCellDate,\r\n    getViewLastCellDate: getViewLastCellDate,\r\n    getViewDown: getViewDown,\r\n    getViewUp: getViewUp,\r\n    getLastMonthDay: getLastMonthDay,\r\n    getLastMonthDate: getLastMonthDate,\r\n    getFirstMonthDate: getFirstMonthDate,\r\n    getFirstWeekDate: getFirstWeekDate,\r\n    normalizeDateByWeek: normalizeDateByWeek,\r\n    getQuarter: getQuarter,\r\n    getFirstQuarterMonth: getFirstQuarterMonth,\r\n    dateInRange: dateInRange,\r\n    roundToHour: roundToHour,\r\n    normalizeDate: normalizeDate,\r\n    getViewMinBoundaryDate: getViewMinBoundaryDate,\r\n    getViewMaxBoundaryDate: getViewMaxBoundaryDate,\r\n    fixTimezoneGap: fixTimezoneGap,\r\n    getTimezonesDifference: getTimezonesDifference,\r\n    makeDate: makeDate,\r\n    getDatesInterval: getDatesInterval,\r\n    getDatesOfInterval: getDatesOfInterval\r\n};\r\nmodule.exports = dateUtils;\r\n"]},"metadata":{},"sourceType":"script"}