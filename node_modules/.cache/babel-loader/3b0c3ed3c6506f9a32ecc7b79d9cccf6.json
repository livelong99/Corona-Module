{"ast":null,"code":"/**\r\n * DevExtreme (exporter/excel/excel.file.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _excel = require(\"./excel.tag_helper\");\n\nvar _excel2 = _interopRequireDefault(_excel);\n\nvar _excel3 = require(\"./excel.cell_format_helper\");\n\nvar _excel4 = _interopRequireDefault(_excel3);\n\nvar _excel5 = require(\"./excel.fill_helper\");\n\nvar _excel6 = _interopRequireDefault(_excel5);\n\nvar _excel7 = require(\"./excel.font_helper\");\n\nvar _excel8 = _interopRequireDefault(_excel7);\n\nvar _excel9 = require(\"./excel.number_format_helper\");\n\nvar _excel10 = _interopRequireDefault(_excel9);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar ExcelFile = function () {\n  function ExcelFile() {\n    _classCallCheck(this, ExcelFile);\n\n    this._cellFormatTags = [];\n    this._fillTags = [];\n    this._fontTags = [];\n    this._numberFormatTags = [];\n\n    this._fillTags.push(_excel6.default.tryCreateTag({\n      patternFill: {\n        patternType: \"none\"\n      }\n    }));\n  }\n\n  _createClass(ExcelFile, [{\n    key: \"registerCellFormat\",\n    value: function value(cellFormat) {\n      var result;\n\n      var cellFormatTag = _excel4.default.tryCreateTag(cellFormat, {\n        registerFill: this.registerFill.bind(this),\n        registerFont: this.registerFont.bind(this),\n        registerNumberFormat: this.registerNumberFormat.bind(this)\n      });\n\n      if ((0, _type.isDefined)(cellFormatTag)) {\n        for (var i = 0; i < this._cellFormatTags.length; i++) {\n          if (_excel4.default.areEqual(this._cellFormatTags[i], cellFormatTag)) {\n            result = i;\n            break;\n          }\n        }\n\n        if (void 0 === result) {\n          result = this._cellFormatTags.push(cellFormatTag) - 1;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"generateCellFormatsXml\",\n    value: function value() {\n      var cellFormatTagsAsXmlStringsArray = this._cellFormatTags.map(function (tag) {\n        return _excel4.default.toXml(tag);\n      });\n\n      return _excel2.default.toXml(\"cellXfs\", {\n        count: cellFormatTagsAsXmlStringsArray.length\n      }, cellFormatTagsAsXmlStringsArray.join(\"\"));\n    }\n  }, {\n    key: \"registerFill\",\n    value: function value(fill) {\n      var result;\n\n      var fillTag = _excel6.default.tryCreateTag(fill);\n\n      if ((0, _type.isDefined)(fillTag)) {\n        for (var i = 0; i < this._fillTags.length; i++) {\n          if (_excel6.default.areEqual(this._fillTags[i], fillTag)) {\n            result = i;\n            break;\n          }\n        }\n\n        if (void 0 === result) {\n          if (this._fillTags.length < 2) {\n            this._fillTags.push(_excel6.default.tryCreateTag({\n              patternFill: {\n                patternType: \"Gray125\"\n              }\n            }));\n          }\n\n          result = this._fillTags.push(fillTag) - 1;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"generateFillsXml\",\n    value: function value() {\n      var tagsAsXmlStringsArray = this._fillTags.map(function (tag) {\n        return _excel6.default.toXml(tag);\n      });\n\n      return _excel2.default.toXml(\"fills\", {\n        count: tagsAsXmlStringsArray.length\n      }, tagsAsXmlStringsArray.join(\"\"));\n    }\n  }, {\n    key: \"registerFont\",\n    value: function value(font) {\n      var result;\n\n      var fontTag = _excel8.default.tryCreateTag(font);\n\n      if ((0, _type.isDefined)(fontTag)) {\n        for (var i = 0; i < this._fontTags.length; i++) {\n          if (_excel8.default.areEqual(this._fontTags[i], fontTag)) {\n            result = i;\n            break;\n          }\n        }\n\n        if (void 0 === result) {\n          result = this._fontTags.push(fontTag) - 1;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"generateFontsXml\",\n    value: function value() {\n      var xmlStringsArray = this._fontTags.map(function (tag) {\n        return _excel8.default.toXml(tag);\n      });\n\n      return _excel2.default.toXml(\"fonts\", {\n        count: xmlStringsArray.length\n      }, xmlStringsArray.join(\"\"));\n    }\n  }, {\n    key: \"_convertNumberFormatIndexToId\",\n    value: function value(index) {\n      var CUSTOM_FORMAT_ID_START_VALUE = 165;\n      return CUSTOM_FORMAT_ID_START_VALUE + index;\n    }\n  }, {\n    key: \"registerNumberFormat\",\n    value: function value(numberFormat) {\n      var result;\n\n      var tag = _excel10.default.tryCreateTag(numberFormat);\n\n      if ((0, _type.isDefined)(tag)) {\n        for (var i = 0; i < this._numberFormatTags.length; i++) {\n          if (_excel10.default.areEqual(this._numberFormatTags[i], tag)) {\n            result = this._numberFormatTags[i][_excel10.default.ID_PROPERTY_NAME];\n            break;\n          }\n        }\n\n        if (void 0 === result) {\n          tag[_excel10.default.ID_PROPERTY_NAME] = this._convertNumberFormatIndexToId(this._numberFormatTags.length);\n          result = tag[_excel10.default.ID_PROPERTY_NAME];\n\n          this._numberFormatTags.push(tag);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"generateNumberFormatsXml\",\n    value: function value() {\n      if (this._numberFormatTags.length > 0) {\n        var xmlStringsArray = this._numberFormatTags.map(function (tag) {\n          return _excel10.default.toXml(tag);\n        });\n\n        return _excel2.default.toXml(\"numFmts\", {\n          count: xmlStringsArray.length\n        }, xmlStringsArray.join(\"\"));\n      } else {\n        return \"\";\n      }\n    }\n  }], [{\n    key: \"copyCellFormat\",\n    value: function value(source) {\n      return _excel4.default.copy(source);\n    }\n  }]);\n\n  return ExcelFile;\n}();\n\nexports.default = ExcelFile;\nmodule.exports = ExcelFile;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/exporter/excel/excel.file.js"],"names":["Object","defineProperty","exports","value","default","_type","require","_excel","_excel2","_interopRequireDefault","_excel3","_excel4","_excel5","_excel6","_excel7","_excel8","_excel9","_excel10","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","ExcelFile","_cellFormatTags","_fillTags","_fontTags","_numberFormatTags","push","tryCreateTag","patternFill","patternType","cellFormat","result","cellFormatTag","registerFill","bind","registerFont","registerNumberFormat","isDefined","areEqual","cellFormatTagsAsXmlStringsArray","map","tag","toXml","count","join","fill","fillTag","tagsAsXmlStringsArray","font","fontTag","xmlStringsArray","index","CUSTOM_FORMAT_ID_START_VALUE","numberFormat","ID_PROPERTY_NAME","_convertNumberFormatIndexToId","source","copy","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (exporter/excel/excel.file.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _excel = require(\"./excel.tag_helper\");\r\nvar _excel2 = _interopRequireDefault(_excel);\r\nvar _excel3 = require(\"./excel.cell_format_helper\");\r\nvar _excel4 = _interopRequireDefault(_excel3);\r\nvar _excel5 = require(\"./excel.fill_helper\");\r\nvar _excel6 = _interopRequireDefault(_excel5);\r\nvar _excel7 = require(\"./excel.font_helper\");\r\nvar _excel8 = _interopRequireDefault(_excel7);\r\nvar _excel9 = require(\"./excel.number_format_helper\");\r\nvar _excel10 = _interopRequireDefault(_excel9);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar ExcelFile = function() {\r\n    function ExcelFile() {\r\n        _classCallCheck(this, ExcelFile);\r\n        this._cellFormatTags = [];\r\n        this._fillTags = [];\r\n        this._fontTags = [];\r\n        this._numberFormatTags = [];\r\n        this._fillTags.push(_excel6.default.tryCreateTag({\r\n            patternFill: {\r\n                patternType: \"none\"\r\n            }\r\n        }))\r\n    }\r\n    _createClass(ExcelFile, [{\r\n        key: \"registerCellFormat\",\r\n        value: function(cellFormat) {\r\n            var result;\r\n            var cellFormatTag = _excel4.default.tryCreateTag(cellFormat, {\r\n                registerFill: this.registerFill.bind(this),\r\n                registerFont: this.registerFont.bind(this),\r\n                registerNumberFormat: this.registerNumberFormat.bind(this)\r\n            });\r\n            if ((0, _type.isDefined)(cellFormatTag)) {\r\n                for (var i = 0; i < this._cellFormatTags.length; i++) {\r\n                    if (_excel4.default.areEqual(this._cellFormatTags[i], cellFormatTag)) {\r\n                        result = i;\r\n                        break\r\n                    }\r\n                }\r\n                if (void 0 === result) {\r\n                    result = this._cellFormatTags.push(cellFormatTag) - 1\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"generateCellFormatsXml\",\r\n        value: function() {\r\n            var cellFormatTagsAsXmlStringsArray = this._cellFormatTags.map(function(tag) {\r\n                return _excel4.default.toXml(tag)\r\n            });\r\n            return _excel2.default.toXml(\"cellXfs\", {\r\n                count: cellFormatTagsAsXmlStringsArray.length\r\n            }, cellFormatTagsAsXmlStringsArray.join(\"\"))\r\n        }\r\n    }, {\r\n        key: \"registerFill\",\r\n        value: function(fill) {\r\n            var result;\r\n            var fillTag = _excel6.default.tryCreateTag(fill);\r\n            if ((0, _type.isDefined)(fillTag)) {\r\n                for (var i = 0; i < this._fillTags.length; i++) {\r\n                    if (_excel6.default.areEqual(this._fillTags[i], fillTag)) {\r\n                        result = i;\r\n                        break\r\n                    }\r\n                }\r\n                if (void 0 === result) {\r\n                    if (this._fillTags.length < 2) {\r\n                        this._fillTags.push(_excel6.default.tryCreateTag({\r\n                            patternFill: {\r\n                                patternType: \"Gray125\"\r\n                            }\r\n                        }))\r\n                    }\r\n                    result = this._fillTags.push(fillTag) - 1\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"generateFillsXml\",\r\n        value: function() {\r\n            var tagsAsXmlStringsArray = this._fillTags.map(function(tag) {\r\n                return _excel6.default.toXml(tag)\r\n            });\r\n            return _excel2.default.toXml(\"fills\", {\r\n                count: tagsAsXmlStringsArray.length\r\n            }, tagsAsXmlStringsArray.join(\"\"))\r\n        }\r\n    }, {\r\n        key: \"registerFont\",\r\n        value: function(font) {\r\n            var result;\r\n            var fontTag = _excel8.default.tryCreateTag(font);\r\n            if ((0, _type.isDefined)(fontTag)) {\r\n                for (var i = 0; i < this._fontTags.length; i++) {\r\n                    if (_excel8.default.areEqual(this._fontTags[i], fontTag)) {\r\n                        result = i;\r\n                        break\r\n                    }\r\n                }\r\n                if (void 0 === result) {\r\n                    result = this._fontTags.push(fontTag) - 1\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"generateFontsXml\",\r\n        value: function() {\r\n            var xmlStringsArray = this._fontTags.map(function(tag) {\r\n                return _excel8.default.toXml(tag)\r\n            });\r\n            return _excel2.default.toXml(\"fonts\", {\r\n                count: xmlStringsArray.length\r\n            }, xmlStringsArray.join(\"\"))\r\n        }\r\n    }, {\r\n        key: \"_convertNumberFormatIndexToId\",\r\n        value: function(index) {\r\n            var CUSTOM_FORMAT_ID_START_VALUE = 165;\r\n            return CUSTOM_FORMAT_ID_START_VALUE + index\r\n        }\r\n    }, {\r\n        key: \"registerNumberFormat\",\r\n        value: function(numberFormat) {\r\n            var result;\r\n            var tag = _excel10.default.tryCreateTag(numberFormat);\r\n            if ((0, _type.isDefined)(tag)) {\r\n                for (var i = 0; i < this._numberFormatTags.length; i++) {\r\n                    if (_excel10.default.areEqual(this._numberFormatTags[i], tag)) {\r\n                        result = this._numberFormatTags[i][_excel10.default.ID_PROPERTY_NAME];\r\n                        break\r\n                    }\r\n                }\r\n                if (void 0 === result) {\r\n                    tag[_excel10.default.ID_PROPERTY_NAME] = this._convertNumberFormatIndexToId(this._numberFormatTags.length);\r\n                    result = tag[_excel10.default.ID_PROPERTY_NAME];\r\n                    this._numberFormatTags.push(tag)\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"generateNumberFormatsXml\",\r\n        value: function() {\r\n            if (this._numberFormatTags.length > 0) {\r\n                var xmlStringsArray = this._numberFormatTags.map(function(tag) {\r\n                    return _excel10.default.toXml(tag)\r\n                });\r\n                return _excel2.default.toXml(\"numFmts\", {\r\n                    count: xmlStringsArray.length\r\n                }, xmlStringsArray.join(\"\"))\r\n            } else {\r\n                return \"\"\r\n            }\r\n        }\r\n    }], [{\r\n        key: \"copyCellFormat\",\r\n        value: function(source) {\r\n            return _excel4.default.copy(source)\r\n        }\r\n    }]);\r\n    return ExcelFile\r\n}();\r\nexports.default = ExcelFile;\r\nmodule.exports = ExcelFile;\r\n"]},"metadata":{},"sourceType":"script"}