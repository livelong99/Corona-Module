{"ast":null,"code":"/**\r\n * DevExtreme (ui/diagram/ui.diagram.dialogmanager.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _diagram_importer = require(\"./diagram_importer\");\n\nvar _message = require(\"../../localization/message\");\n\nvar _message2 = _interopRequireDefault(_message);\n\nvar _window = require(\"../../core/utils/window\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar FileUploader = require(\"../file_uploader\");\n\nvar DiagramDialogManager = {\n  getConfigurations: function getConfigurations() {\n    var _getDiagram = (0, _diagram_importer.getDiagram)(),\n        DiagramCommand = _getDiagram.DiagramCommand;\n\n    return this.dialogList || (this.dialogList = [{\n      command: DiagramCommand.InsertShapeImage,\n      title: _message2.default.format(\"dxDiagram-dialogInsertShapeImageTitle\"),\n      onGetContent: this.getChangeImageDialogContent\n    }, {\n      command: DiagramCommand.EditShapeImage,\n      title: _message2.default.format(\"dxDiagram-dialogEditShapeImageTitle\"),\n      onGetContent: this.getChangeImageDialogContent\n    }]);\n  },\n  getChangeImageDialogContent: function getChangeImageDialogContent(args) {\n    var $uploader = (0, _renderer2.default)(\"<div>\");\n\n    args.component._createComponent($uploader, FileUploader, {\n      selectButtonText: _message2.default.format(\"dxDiagram-dialogEditShapeImageSelectButton\"),\n      accept: \"image/*\",\n      uploadMode: \"useForm\",\n      onValueChanged: function onValueChanged(e) {\n        var window = (0, _window.getWindow)();\n        var reader = new window.FileReader();\n\n        reader.onload = function (e) {\n          args.component._commandParameter = e.target.result;\n        };\n\n        reader.readAsDataURL(e.value[0]);\n      }\n    });\n\n    return $uploader;\n  },\n  getDialogParameters: function getDialogParameters(command) {\n    var commandIndex = this.getConfigurations().map(function (c) {\n      return c.command;\n    }).indexOf(command);\n\n    if (commandIndex >= 0) {\n      return this.getConfigurations()[commandIndex];\n    } else {\n      return null;\n    }\n  }\n};\nmodule.exports = DiagramDialogManager;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/diagram/ui.diagram.dialogmanager.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_diagram_importer","_message","_message2","_window","obj","__esModule","FileUploader","DiagramDialogManager","getConfigurations","_getDiagram","getDiagram","DiagramCommand","dialogList","command","InsertShapeImage","title","default","format","onGetContent","getChangeImageDialogContent","EditShapeImage","args","$uploader","component","_createComponent","selectButtonText","accept","uploadMode","onValueChanged","e","window","getWindow","reader","FileReader","onload","_commandParameter","target","result","readAsDataURL","value","getDialogParameters","commandIndex","map","c","indexOf","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/diagram/ui.diagram.dialogmanager.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _diagram_importer = require(\"./diagram_importer\");\r\nvar _message = require(\"../../localization/message\");\r\nvar _message2 = _interopRequireDefault(_message);\r\nvar _window = require(\"../../core/utils/window\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar FileUploader = require(\"../file_uploader\");\r\nvar DiagramDialogManager = {\r\n    getConfigurations: function() {\r\n        var _getDiagram = (0, _diagram_importer.getDiagram)(),\r\n            DiagramCommand = _getDiagram.DiagramCommand;\r\n        return this.dialogList || (this.dialogList = [{\r\n            command: DiagramCommand.InsertShapeImage,\r\n            title: _message2.default.format(\"dxDiagram-dialogInsertShapeImageTitle\"),\r\n            onGetContent: this.getChangeImageDialogContent\r\n        }, {\r\n            command: DiagramCommand.EditShapeImage,\r\n            title: _message2.default.format(\"dxDiagram-dialogEditShapeImageTitle\"),\r\n            onGetContent: this.getChangeImageDialogContent\r\n        }])\r\n    },\r\n    getChangeImageDialogContent: function(args) {\r\n        var $uploader = (0, _renderer2.default)(\"<div>\");\r\n        args.component._createComponent($uploader, FileUploader, {\r\n            selectButtonText: _message2.default.format(\"dxDiagram-dialogEditShapeImageSelectButton\"),\r\n            accept: \"image/*\",\r\n            uploadMode: \"useForm\",\r\n            onValueChanged: function(e) {\r\n                var window = (0, _window.getWindow)();\r\n                var reader = new window.FileReader;\r\n                reader.onload = function(e) {\r\n                    args.component._commandParameter = e.target.result\r\n                };\r\n                reader.readAsDataURL(e.value[0])\r\n            }\r\n        });\r\n        return $uploader\r\n    },\r\n    getDialogParameters: function(command) {\r\n        var commandIndex = this.getConfigurations().map(function(c) {\r\n            return c.command\r\n        }).indexOf(command);\r\n        if (commandIndex >= 0) {\r\n            return this.getConfigurations()[commandIndex]\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n};\r\nmodule.exports = DiagramDialogManager;\r\n"]},"metadata":{},"sourceType":"script"}