{"ast":null,"code":"/**\r\n * DevExtreme (viz/chart_components/advanced_chart.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar inArray = require(\"../../core/utils/array\").inArray;\n\nvar iteratorModule = require(\"../../core/utils/iterator\");\n\nvar rangeModule = require(\"../translators/range\");\n\nvar DEFAULT_AXIS_NAME = \"defaultAxisName\";\n\nvar axisModule = require(\"../axes/base_axis\");\n\nvar seriesFamilyModule = require(\"../core/series_family\");\n\nvar BaseChart = require(\"./base_chart\").BaseChart;\n\nvar crosshairModule = require(\"./crosshair\");\n\nvar getViewPortFilter = require(\"../series/helpers/range_data_calculator\").getViewPortFilter;\n\nvar _isArray = Array.isArray;\n\nvar _isDefined = require(\"../../core/utils/type\").isDefined;\n\nvar _each = iteratorModule.each;\nvar _reverseEach = iteratorModule.reverseEach;\n\nvar _noop = require(\"../../core/utils/common\").noop;\n\nvar _extend = extend;\n\nvar vizUtils = require(\"../core/utils\");\n\nvar type = require(\"../../core/utils/type\").type;\n\nvar convertVisualRangeObject = vizUtils.convertVisualRangeObject;\nvar rangesAreEqual = vizUtils.rangesAreEqual;\nvar _map = vizUtils.map;\nvar mergeMarginOptions = vizUtils.mergeMarginOptions;\nvar FONT = \"font\";\nvar COMMON_AXIS_SETTINGS = \"commonAxisSettings\";\nvar DEFAULT_PANE_NAME = \"default\";\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\n\nfunction prepareAxis(axisOptions) {\n  return _isArray(axisOptions) ? 0 === axisOptions.length ? [{}] : axisOptions : [axisOptions];\n}\n\nfunction processBubbleMargin(opt, bubbleSize) {\n  if (opt.processBubbleSize) {\n    opt.size = bubbleSize;\n  }\n\n  return opt;\n}\n\nfunction estimateBubbleSize(size, panesCount, maxSize, rotated) {\n  var width = rotated ? size.width / panesCount : size.width;\n  var height = rotated ? size.height : size.height / panesCount;\n  return Math.min(width, height) * maxSize;\n}\n\nfunction setAxisVisualRangeByOption(arg, axis, isDirectOption, index) {\n  var options;\n  var visualRange;\n\n  if (isDirectOption) {\n    visualRange = arg.value;\n    options = {\n      skipEventRising: true\n    };\n    var pathElements = arg.fullName.split(\".\");\n    var destElem = pathElements[pathElements.length - 1];\n\n    if (\"endValue\" === destElem || \"startValue\" === destElem) {\n      options = {\n        allowPartialUpdate: true\n      };\n      visualRange = _defineProperty({}, destElem, arg.value);\n    }\n  } else {\n    visualRange = (_isDefined(index) ? arg.value[index] : arg.value).visualRange;\n  }\n\n  axis.visualRange(visualRange, options);\n}\n\nvar AdvancedChart = BaseChart.inherit({\n  _setDeprecatedOptions: function _setDeprecatedOptions() {\n    this.callBase.apply(this, arguments);\n\n    _extend(this._deprecatedOptions, {\n      barWidth: {\n        since: \"18.1\",\n        message: \"Use the 'commonSeriesSettings.barPadding' or 'series.barPadding' option instead\"\n      },\n      equalBarWidth: {\n        since: \"18.1\",\n        message: \"Use the 'commonSeriesSettings.ignoreEmptyPoints' or 'series.ignoreEmptyPoints' option instead\"\n      }\n    });\n  },\n  _fontFields: [COMMON_AXIS_SETTINGS + \".label.\" + FONT, COMMON_AXIS_SETTINGS + \".title.\" + FONT],\n  _partialOptionChangesMap: {\n    visualRange: VISUAL_RANGE,\n    _customVisualRange: VISUAL_RANGE,\n    strips: \"REFRESH_AXES\",\n    constantLines: \"REFRESH_AXES\"\n  },\n  _partialOptionChangesPath: {\n    argumentAxis: [\"strips\", \"constantLines\", \"visualRange\", \"_customVisualRange\"],\n    valueAxis: [\"strips\", \"constantLines\", \"visualRange\", \"_customVisualRange\"]\n  },\n  _initCore: function _initCore() {\n    this._panesClipRects = {};\n    this.callBase();\n  },\n  _disposeCore: function _disposeCore() {\n    var disposeObjectsInArray = this._disposeObjectsInArray;\n    var panesClipRects = this._panesClipRects;\n    this.callBase();\n    disposeObjectsInArray.call(panesClipRects, \"fixed\");\n    disposeObjectsInArray.call(panesClipRects, \"base\");\n    disposeObjectsInArray.call(panesClipRects, \"wide\");\n    this._panesClipRects = null;\n  },\n  _dispose: function _dispose() {\n    var that = this;\n    var disposeObjectsInArray = this._disposeObjectsInArray;\n    that.callBase();\n    that.panes = null;\n\n    if (that._legend) {\n      that._legend.dispose();\n\n      that._legend = null;\n    }\n\n    disposeObjectsInArray.call(that, \"panesBackground\");\n    disposeObjectsInArray.call(that, \"seriesFamilies\");\n\n    that._disposeAxes();\n  },\n  _createPanes: function _createPanes() {\n    this._cleanPanesClipRects(\"fixed\");\n\n    this._cleanPanesClipRects(\"base\");\n\n    this._cleanPanesClipRects(\"wide\");\n  },\n  _cleanPanesClipRects: function _cleanPanesClipRects(clipArrayName) {\n    var clipArray = this._panesClipRects[clipArrayName];\n    (clipArray || []).forEach(function (clipRect) {\n      return clipRect && clipRect.dispose();\n    });\n    this._panesClipRects[clipArrayName] = [];\n  },\n  _getElementsClipRectID: function _getElementsClipRectID(paneName) {\n    var clipShape = this._panesClipRects.fixed[this._getPaneIndex(paneName)];\n\n    return clipShape && clipShape.id;\n  },\n  _getPaneIndex: function _getPaneIndex(paneName) {\n    var paneIndex;\n    var name = paneName || DEFAULT_PANE_NAME;\n\n    _each(this.panes, function (index, pane) {\n      if (pane.name === name) {\n        paneIndex = index;\n        return false;\n      }\n    });\n\n    return paneIndex;\n  },\n  _reinitAxes: function _reinitAxes() {\n    this.panes = this._createPanes();\n\n    this._populateAxes();\n\n    this._axesReinitialized = true;\n  },\n  _getCrosshairMargins: function _getCrosshairMargins() {\n    var crosshairOptions = this._getCrosshairOptions() || {};\n    var crosshairEnabled = crosshairOptions.enabled;\n    var margins = crosshairModule.getMargins();\n    return {\n      x: crosshairEnabled && crosshairOptions.horizontalLine.visible ? margins.x : 0,\n      y: crosshairEnabled && crosshairOptions.verticalLine.visible ? margins.y : 0\n    };\n  },\n  _populateAxes: function _populateAxes() {\n    var that = this;\n    var panes = that.panes;\n\n    var rotated = that._isRotated();\n\n    var argumentAxesOptions = prepareAxis(that.option(\"argumentAxis\") || {})[0];\n    var valueAxisOption = that.option(\"valueAxis\");\n    var valueAxesOptions = prepareAxis(valueAxisOption || {});\n    var argumentAxesPopulatedOptions = [];\n    var valueAxesPopulatedOptions = [];\n    var axisNames = [];\n    var valueAxesCounter = 0;\n    var paneWithNonVirtualAxis;\n\n    var crosshairMargins = that._getCrosshairMargins();\n\n    function getNextAxisName() {\n      return DEFAULT_AXIS_NAME + valueAxesCounter++;\n    }\n\n    if (rotated) {\n      paneWithNonVirtualAxis = \"right\" === argumentAxesOptions.position ? panes[panes.length - 1].name : panes[0].name;\n    } else {\n      paneWithNonVirtualAxis = \"top\" === argumentAxesOptions.position ? panes[0].name : panes[panes.length - 1].name;\n    }\n\n    argumentAxesPopulatedOptions = _map(panes, function (pane) {\n      var virtual = pane.name !== paneWithNonVirtualAxis;\n      return that._populateAxesOptions(\"argumentAxis\", argumentAxesOptions, {\n        pane: pane.name,\n        name: null,\n        optionPath: \"argumentAxis\",\n        crosshairMargin: rotated ? crosshairMargins.x : crosshairMargins.y\n      }, rotated, virtual);\n    });\n\n    _each(valueAxesOptions, function (priority, axisOptions) {\n      var axisPanes = [];\n      var name = axisOptions.name;\n\n      if (name && inArray(name, axisNames) !== -1) {\n        that._incidentOccurred(\"E2102\");\n\n        return;\n      }\n\n      name && axisNames.push(name);\n\n      if (axisOptions.pane) {\n        axisPanes.push(axisOptions.pane);\n      }\n\n      if (axisOptions.panes && axisOptions.panes.length) {\n        axisPanes = axisPanes.concat(axisOptions.panes.slice(0));\n      }\n\n      axisPanes = vizUtils.unique(axisPanes);\n\n      if (!axisPanes.length) {\n        axisPanes.push(void 0);\n      }\n\n      _each(axisPanes, function (_, pane) {\n        var optionPath = _isArray(valueAxisOption) ? \"valueAxis[\".concat(priority, \"]\") : \"valueAxis\";\n        valueAxesPopulatedOptions.push(that._populateAxesOptions(\"valueAxis\", axisOptions, {\n          name: name || getNextAxisName(),\n          pane: pane,\n          priority: priority,\n          optionPath: optionPath,\n          crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\n        }, rotated));\n      });\n    });\n\n    that._redesignAxes(argumentAxesPopulatedOptions, true, paneWithNonVirtualAxis);\n\n    that._redesignAxes(valueAxesPopulatedOptions, false);\n  },\n  _redesignAxes: function _redesignAxes(options, isArgumentAxes, paneWithNonVirtualAxis) {\n    var that = this;\n    var axesBasis = [];\n    var axes = isArgumentAxes ? that._argumentAxes : that._valueAxes;\n\n    _each(options, function (_, opt) {\n      var curAxes = axes && axes.filter(function (a) {\n        return a.name === opt.name && (!_isDefined(opt.pane) && that.panes.some(function (p) {\n          return p.name === a.pane;\n        }) || a.pane === opt.pane);\n      });\n\n      if (curAxes && curAxes.length > 0) {\n        _each(curAxes, function (_, axis) {\n          axis.updateOptions(opt);\n          axis.validate();\n          axesBasis.push({\n            axis: axis\n          });\n        });\n      } else {\n        axesBasis.push({\n          options: opt\n        });\n      }\n    });\n\n    if (axes) {\n      _reverseEach(axes, function (index, axis) {\n        if (!axesBasis.some(function (basis) {\n          return basis.axis && basis.axis === axis;\n        })) {\n          that._disposeAxis(index, isArgumentAxes);\n        }\n      });\n    } else {\n      if (isArgumentAxes) {\n        axes = that._argumentAxes = [];\n      } else {\n        axes = that._valueAxes = [];\n      }\n    }\n\n    _each(axesBasis, function (index, basis) {\n      var axis = basis.axis;\n\n      if (basis.axis && isArgumentAxes) {\n        basis.axis.isVirtual = basis.axis.pane !== paneWithNonVirtualAxis;\n      } else {\n        if (basis.options) {\n          axis = that._createAxis(isArgumentAxes, basis.options, isArgumentAxes ? basis.options.pane !== paneWithNonVirtualAxis : void 0, isArgumentAxes ? index : void 0);\n          axes.push(axis);\n        }\n      }\n\n      axis.applyVisualRangeSetter(that._getVisualRangeSetter());\n    });\n  },\n  _disposeAxis: function _disposeAxis(index, isArgumentAxis) {\n    var axes = isArgumentAxis ? this._argumentAxes : this._valueAxes;\n    var axis = axes[index];\n\n    if (!axis) {\n      return;\n    }\n\n    axis.dispose();\n    axes.splice(index, 1);\n  },\n  _disposeAxes: function _disposeAxes() {\n    var that = this;\n    var disposeObjectsInArray = that._disposeObjectsInArray;\n    disposeObjectsInArray.call(that, \"_argumentAxes\");\n    disposeObjectsInArray.call(that, \"_valueAxes\");\n  },\n  _appendAdditionalSeriesGroups: function _appendAdditionalSeriesGroups() {\n    this._crosshairCursorGroup.linkAppend();\n\n    this._scrollBar && this._scrollBarGroup.linkAppend();\n  },\n  _getLegendTargets: function _getLegendTargets() {\n    var _this = this;\n\n    return (this.series || []).map(function (s) {\n      var item = _this._getLegendOptions(s);\n\n      item.legendData.series = s;\n\n      if (!s.getOptions().showInLegend) {\n        item.legendData.visible = false;\n      }\n\n      return item;\n    });\n  },\n  _legendItemTextField: \"name\",\n  _seriesPopulatedHandlerCore: function _seriesPopulatedHandlerCore() {\n    this._processSeriesFamilies();\n\n    this._processValueAxisFormat();\n  },\n  _renderTrackers: function _renderTrackers() {\n    var that = this;\n    var i;\n\n    for (i = 0; i < that.series.length; ++i) {\n      that.series[i].drawTrackers();\n    }\n  },\n  _specialProcessSeries: function _specialProcessSeries() {\n    this._processSeriesFamilies();\n  },\n  _processSeriesFamilies: function _processSeriesFamilies() {\n    var that = this;\n    var types = [];\n    var families = [];\n    var paneSeries;\n    var themeManager = that._themeManager;\n    var negativesAsZeroes = themeManager.getOptions(\"negativesAsZeroes\");\n    var negativesAsZeros = themeManager.getOptions(\"negativesAsZeros\");\n    var familyOptions = {\n      equalBarWidth: themeManager.getOptions(\"equalBarWidth\"),\n      minBubbleSize: themeManager.getOptions(\"minBubbleSize\"),\n      maxBubbleSize: themeManager.getOptions(\"maxBubbleSize\"),\n      barWidth: themeManager.getOptions(\"barWidth\"),\n      barGroupPadding: themeManager.getOptions(\"barGroupPadding\"),\n      barGroupWidth: themeManager.getOptions(\"barGroupWidth\"),\n      negativesAsZeroes: _isDefined(negativesAsZeroes) ? negativesAsZeroes : negativesAsZeros\n    };\n\n    if (that.seriesFamilies && that.seriesFamilies.length) {\n      _each(that.seriesFamilies, function (_, family) {\n        family.updateOptions(familyOptions);\n        family.adjustSeriesValues();\n      });\n\n      return;\n    }\n\n    _each(that.series, function (_, item) {\n      if (inArray(item.type, types) === -1) {\n        types.push(item.type);\n      }\n    });\n\n    _each(that._getLayoutTargets(), function (_, pane) {\n      paneSeries = that._getSeriesForPane(pane.name);\n\n      _each(types, function (_, type) {\n        var family = new seriesFamilyModule.SeriesFamily({\n          type: type,\n          pane: pane.name,\n          equalBarWidth: familyOptions.equalBarWidth,\n          minBubbleSize: familyOptions.minBubbleSize,\n          maxBubbleSize: familyOptions.maxBubbleSize,\n          barWidth: familyOptions.barWidth,\n          barGroupPadding: familyOptions.barGroupPadding,\n          barGroupWidth: familyOptions.barGroupWidth,\n          negativesAsZeroes: familyOptions.negativesAsZeroes,\n          rotated: that._isRotated()\n        });\n        family.add(paneSeries);\n        family.adjustSeriesValues();\n        families.push(family);\n      });\n    });\n\n    that.seriesFamilies = families;\n  },\n  _updateSeriesDimensions: function _updateSeriesDimensions() {\n    var that = this;\n    var i;\n    var seriesFamilies = that.seriesFamilies || [];\n\n    for (i = 0; i < seriesFamilies.length; i++) {\n      var family = seriesFamilies[i];\n      family.updateSeriesValues();\n      family.adjustSeriesDimensions();\n    }\n  },\n  _getLegendCallBack: function _getLegendCallBack(series) {\n    return this._legend && this._legend.getActionCallback(series);\n  },\n  _appendAxesGroups: function _appendAxesGroups() {\n    var that = this;\n\n    that._stripsGroup.linkAppend();\n\n    that._gridGroup.linkAppend();\n\n    that._axesGroup.linkAppend();\n\n    that._constantLinesGroup.linkAppend();\n\n    that._labelAxesGroup.linkAppend();\n\n    that._scaleBreaksGroup.linkAppend();\n  },\n  _populateMarginOptions: function _populateMarginOptions() {\n    var that = this;\n    var bubbleSize = estimateBubbleSize(that.getSize(), that.panes.length, that._themeManager.getOptions(\"maxBubbleSize\"), that._isRotated());\n    var argumentMarginOptions = {};\n\n    that._valueAxes.forEach(function (valueAxis) {\n      var groupSeries = that.series.filter(function (series) {\n        return series.getValueAxis() === valueAxis;\n      });\n      var marginOptions = {};\n      groupSeries.forEach(function (series) {\n        if (series.isVisible()) {\n          var seriesMarginOptions = processBubbleMargin(series.getMarginOptions(), bubbleSize);\n          marginOptions = mergeMarginOptions(marginOptions, seriesMarginOptions);\n          argumentMarginOptions = mergeMarginOptions(argumentMarginOptions, seriesMarginOptions);\n        }\n      });\n      valueAxis.setMarginOptions(marginOptions);\n    });\n\n    that._argumentAxes.forEach(function (a) {\n      return a.setMarginOptions(argumentMarginOptions);\n    });\n  },\n  _populateBusinessRange: function _populateBusinessRange(updatedAxis, keepRange) {\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    var argRange = new rangeModule.Range({\n      rotated: !!rotated\n    });\n\n    var series = that._getVisibleSeries();\n\n    that._valueAxes.forEach(function (valueAxis) {\n      var groupRange = new rangeModule.Range({\n        rotated: !!rotated,\n        pane: valueAxis.pane,\n        axis: valueAxis.name\n      });\n      var groupSeries = series.filter(function (series) {\n        return series.getValueAxis() === valueAxis;\n      });\n      groupSeries.forEach(function (series) {\n        var seriesRange = series.getRangeData();\n        groupRange.addRange(seriesRange.val);\n        argRange.addRange(seriesRange.arg);\n      });\n\n      if (!updatedAxis || updatedAxis && groupSeries.length && valueAxis === updatedAxis) {\n        valueAxis.setGroupSeries(groupSeries);\n        valueAxis.setBusinessRange(groupRange, that._axesReinitialized || keepRange, that._argumentAxes[0]._lastVisualRangeUpdateMode);\n      }\n    });\n\n    if (!updatedAxis || updatedAxis && series.length) {\n      that._argumentAxes.forEach(function (a) {\n        return a.setBusinessRange(argRange, that._axesReinitialized, void 0, that._groupsData.categories);\n      });\n    }\n\n    that._populateMarginOptions();\n  },\n  getArgumentAxis: function getArgumentAxis() {\n    return (this._argumentAxes || []).filter(function (a) {\n      return !a.isVirtual;\n    })[0];\n  },\n  getValueAxis: function getValueAxis(name) {\n    var _this2 = this;\n\n    return (this._valueAxes || []).filter(_isDefined(name) ? function (a) {\n      return a.name === name;\n    } : function (a) {\n      return a.pane === _this2.defaultPane;\n    })[0];\n  },\n  _getGroupsData: function _getGroupsData() {\n    var that = this;\n    var groups = [];\n\n    that._valueAxes.forEach(function (axis) {\n      groups.push({\n        series: that.series.filter(function (series) {\n          return series.getValueAxis() === axis;\n        }),\n        valueAxis: axis,\n        valueOptions: axis.getOptions()\n      });\n    });\n\n    return {\n      groups: groups,\n      argumentAxes: that._argumentAxes,\n      argumentOptions: that._argumentAxes[0].getOptions()\n    };\n  },\n  _groupSeries: function _groupSeries() {\n    var that = this;\n\n    that._correctValueAxes(false);\n\n    that._groupsData = that._getGroupsData();\n  },\n  _processValueAxisFormat: function _processValueAxisFormat() {\n    var axesWithFullStackedFormat = [];\n    this.series.forEach(function (series) {\n      var axis = series.getValueAxis();\n\n      if (series.isFullStackedSeries()) {\n        axis.setPercentLabelFormat();\n        axesWithFullStackedFormat.push(axis);\n      }\n    });\n\n    this._valueAxes.forEach(function (axis) {\n      if (axesWithFullStackedFormat.indexOf(axis) === -1) {\n        axis.resetAutoLabelFormat();\n      }\n    });\n  },\n  _populateAxesOptions: function _populateAxesOptions(typeSelector, userOptions, axisOptions, rotated, virtual) {\n    var that = this;\n\n    var preparedUserOptions = that._prepareStripsAndConstantLines(typeSelector, userOptions, rotated);\n\n    var options = _extend(true, {}, preparedUserOptions, axisOptions, that._prepareAxisOptions(typeSelector, preparedUserOptions, rotated));\n\n    if (virtual) {\n      options.visible = options.tick.visible = options.minorTick.visible = options.label.visible = false;\n      options.title = {};\n    }\n\n    return options;\n  },\n  _getValFilter: function _getValFilter(series) {\n    return getViewPortFilter(series.getValueAxis().visualRange() || {});\n  },\n  _createAxis: function _createAxis(isArgumentAxes, options, virtual, index) {\n    var that = this;\n    var typeSelector = isArgumentAxes ? \"argumentAxis\" : \"valueAxis\";\n\n    var renderingSettings = _extend({\n      renderer: that._renderer,\n      incidentOccurred: that._incidentOccurred,\n      eventTrigger: that._eventTrigger,\n      axisClass: isArgumentAxes ? \"arg\" : \"val\",\n      widgetClass: \"dxc\",\n      stripsGroup: that._stripsGroup,\n      labelAxesGroup: that._labelAxesGroup,\n      constantLinesGroup: that._constantLinesGroup,\n      scaleBreaksGroup: that._scaleBreaksGroup,\n      axesContainerGroup: that._axesGroup,\n      gridGroup: that._gridGroup,\n      isArgumentAxis: isArgumentAxes\n    }, that._getAxisRenderingOptions(typeSelector));\n\n    var axis = new axisModule.Axis(renderingSettings);\n    axis.updateOptions(options);\n    axis.isVirtual = virtual;\n    return axis;\n  },\n  _applyVisualRangeByVirtualAxes: function _applyVisualRangeByVirtualAxes(axis, range) {\n    return false;\n  },\n  _applyCustomVisualRangeOption: function _applyCustomVisualRangeOption(axis, range) {\n    var that = this;\n\n    if (axis.getOptions().optionPath) {\n      that._parseVisualRangeOption(\"\".concat(axis.getOptions().optionPath, \".visualRange\"), range);\n    }\n  },\n  _getVisualRangeSetter: function _getVisualRangeSetter() {\n    var chart = this;\n    return function (axis, _ref) {\n      var skipEventRising = _ref.skipEventRising,\n          range = _ref.range;\n\n      chart._applyCustomVisualRangeOption(axis, range);\n\n      axis.setCustomVisualRange(range);\n      axis.skipEventRising = skipEventRising;\n\n      if (!chart._applyVisualRangeByVirtualAxes(axis, range)) {\n        if (chart._applyingChanges) {\n          chart._change_VISUAL_RANGE();\n        } else {\n          chart._requestChange([VISUAL_RANGE]);\n        }\n      }\n    };\n  },\n  _getTrackerSettings: function _getTrackerSettings() {\n    return _extend(this.callBase(), {\n      argumentAxis: this.getArgumentAxis()\n    });\n  },\n  _prepareStripsAndConstantLines: function _prepareStripsAndConstantLines(typeSelector, userOptions, rotated) {\n    userOptions = this._themeManager.getOptions(typeSelector, userOptions, rotated);\n\n    if (userOptions.strips) {\n      _each(userOptions.strips, function (i) {\n        userOptions.strips[i] = _extend(true, {}, userOptions.stripStyle, userOptions.strips[i]);\n      });\n    }\n\n    if (userOptions.constantLines) {\n      _each(userOptions.constantLines, function (i, line) {\n        userOptions.constantLines[i] = _extend(true, {}, userOptions.constantLineStyle, line);\n      });\n    }\n\n    return userOptions;\n  },\n  refresh: function refresh() {\n    this._disposeAxes();\n\n    this.callBase();\n  },\n  _layoutAxes: function _layoutAxes(drawAxes) {\n    var that = this;\n    var cleanPanesCanvases = drawAxes();\n    var needSpace = that.checkForMoreSpaceForPanesCanvas();\n\n    if (needSpace) {\n      var size = this._layout.backward(this._rect, this._rect, [needSpace.width, needSpace.height]);\n\n      needSpace.width = Math.max(0, size[0]);\n      needSpace.height = Math.max(0, size[1]);\n      this._canvas = this._createCanvasFromRect(this._rect);\n      drawAxes(needSpace, cleanPanesCanvases);\n    }\n  },\n  checkForMoreSpaceForPanesCanvas: function checkForMoreSpaceForPanesCanvas() {\n    return this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), this._isRotated());\n  },\n  _parseVisualRangeOption: function _parseVisualRangeOption(fullName, value) {\n    var that = this;\n    var name = fullName.split(/[.[]/)[0];\n    var index = fullName.match(/\\d+/g);\n    index = _isDefined(index) ? parseInt(index[0]) : index;\n\n    if (fullName.indexOf(\"visualRange\") > 0) {\n      that._setCustomVisualRange(name, index, value);\n    } else {\n      if ((\"object\" === type(value) || _isArray(value)) && name.indexOf(\"Axis\") > 0 && JSON.stringify(value).indexOf(\"visualRange\") > 0) {\n        if (_isDefined(value.visualRange)) {\n          that._setCustomVisualRange(name, index, value.visualRange);\n        } else {\n          if (_isArray(value)) {\n            value.forEach(function (a, i) {\n              return _isDefined(a.visualRange) && that._setCustomVisualRange(name, i, a.visualRange);\n            });\n          }\n        }\n      }\n    }\n  },\n  _setCustomVisualRange: function _setCustomVisualRange(axesName, index, value) {\n    var that = this;\n    var options = that._options[axesName];\n\n    if (!options) {\n      return;\n    }\n\n    if (!_isDefined(index)) {\n      options._customVisualRange = value;\n    } else {\n      options[index]._customVisualRange = value;\n    }\n\n    that._axesReinitialized = true;\n  },\n  _raiseZoomEndHandlers: function _raiseZoomEndHandlers() {\n    this._valueAxes.forEach(function (axis) {\n      return axis.handleZoomEnd();\n    });\n  },\n  _setOptionsByReference: function _setOptionsByReference() {\n    this.callBase();\n\n    _extend(this._optionsByReference, {\n      \"valueAxis.visualRange\": true\n    });\n  },\n  _notifyOptionChanged: function _notifyOptionChanged(option, value, previousValue) {\n    this.callBase.apply(this, arguments);\n\n    if (!this._optionChangedLocker) {\n      this._parseVisualRangeOption(option, value);\n    }\n  },\n  _notifyVisualRange: function _notifyVisualRange() {\n    var that = this;\n\n    that._valueAxes.forEach(function (axis) {\n      if (axis.getOptions().optionPath) {\n        var path = \"\".concat(axis.getOptions().optionPath, \".visualRange\");\n        var visualRange = convertVisualRangeObject(axis.visualRange(), !_isArray(that.option(path)));\n\n        if (!axis.skipEventRising || !rangesAreEqual(visualRange, that.option(path))) {\n          that.option(path, visualRange);\n        } else {\n          axis.skipEventRising = null;\n        }\n      }\n    });\n  },\n  _notify: function _notify() {\n    this.callBase();\n    this._axesReinitialized = false;\n\n    if (true !== this.option(\"disableTwoWayBinding\")) {\n      this._notifyVisualRange();\n    }\n  },\n  _getAxesForScaling: function _getAxesForScaling() {\n    return this._valueAxes;\n  },\n  _getAxesByOptionPath: function _getAxesByOptionPath(arg, isDirectOption, optionName) {\n    var that = this;\n\n    var sourceAxes = that._getAxesForScaling();\n\n    var axes = [];\n\n    if (isDirectOption) {\n      var axisPath;\n\n      if (arg.fullName) {\n        axisPath = arg.fullName.slice(0, arg.fullName.indexOf(\".\"));\n      }\n\n      axes = sourceAxes.filter(function (a) {\n        return a.getOptions().optionPath === axisPath;\n      });\n    } else {\n      if (\"object\" === type(arg.value)) {\n        axes = sourceAxes.filter(function (a) {\n          return a.getOptions().optionPath === arg.name;\n        });\n      } else {\n        if (_isArray(arg.value)) {\n          arg.value.forEach(function (v, index) {\n            var axis = sourceAxes.filter(function (a) {\n              return a.getOptions().optionPath === \"\".concat(arg.name, \"[\").concat(index, \"]\");\n            })[0];\n            _isDefined(v[optionName]) && _isDefined(axis) && (axes[index] = axis);\n          });\n        }\n      }\n    }\n\n    return axes;\n  },\n  _optionChanged: function _optionChanged(arg) {\n    var that = this;\n\n    if (!that._optionChangedLocker) {\n      var optionName = \"visualRange\";\n      var axes;\n      var isDirectOption = arg.fullName.indexOf(optionName) > 0 ? true : that.getPartialChangeOptionsName(arg).indexOf(optionName) > -1 ? false : void 0;\n\n      if (_isDefined(isDirectOption)) {\n        axes = that._getAxesByOptionPath(arg, isDirectOption, optionName);\n\n        if (axes) {\n          if (axes.length > 1 || _isArray(arg.value)) {\n            axes.forEach(function (a, index) {\n              return setAxisVisualRangeByOption(arg, a, isDirectOption, index);\n            });\n          } else {\n            if (1 === axes.length) {\n              setAxisVisualRangeByOption(arg, axes[0], isDirectOption);\n            }\n          }\n        }\n      }\n    }\n\n    that.callBase(arg);\n  },\n  _change_VISUAL_RANGE: function _change_VISUAL_RANGE() {\n    var that = this;\n\n    that._recreateSizeDependentObjects(false);\n\n    if (!that._changes.has(\"FULL_RENDER\")) {\n      var resizePanesOnZoom = this.option(\"resizePanesOnZoom\");\n\n      that._doRender({\n        force: true,\n        drawTitle: false,\n        drawLegend: false,\n        adjustAxes: _isDefined(resizePanesOnZoom) ? resizePanesOnZoom : this.option(\"adjustAxesOnZoom\") || false,\n        animate: false\n      });\n\n      that._raiseZoomEndHandlers();\n    }\n  },\n  resetVisualRange: function resetVisualRange() {\n    var that = this;\n\n    that._valueAxes.forEach(function (axis) {\n      axis.resetVisualRange(false);\n\n      that._applyCustomVisualRangeOption(axis);\n    });\n\n    that._requestChange([VISUAL_RANGE]);\n  },\n  _legendDataField: \"series\",\n  _adjustSeriesLabels: _noop,\n  _correctValueAxes: _noop\n});\nexports.AdvancedChart = AdvancedChart;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/chart_components/advanced_chart.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","extend","require","inArray","iteratorModule","rangeModule","DEFAULT_AXIS_NAME","axisModule","seriesFamilyModule","BaseChart","crosshairModule","getViewPortFilter","_isArray","Array","isArray","_isDefined","isDefined","_each","each","_reverseEach","reverseEach","_noop","noop","_extend","vizUtils","type","convertVisualRangeObject","rangesAreEqual","_map","map","mergeMarginOptions","FONT","COMMON_AXIS_SETTINGS","DEFAULT_PANE_NAME","VISUAL_RANGE","prepareAxis","axisOptions","length","processBubbleMargin","opt","bubbleSize","processBubbleSize","size","estimateBubbleSize","panesCount","maxSize","rotated","width","height","Math","min","setAxisVisualRangeByOption","arg","axis","isDirectOption","index","options","visualRange","skipEventRising","pathElements","fullName","split","destElem","allowPartialUpdate","AdvancedChart","inherit","_setDeprecatedOptions","callBase","apply","arguments","_deprecatedOptions","barWidth","since","message","equalBarWidth","_fontFields","_partialOptionChangesMap","_customVisualRange","strips","constantLines","_partialOptionChangesPath","argumentAxis","valueAxis","_initCore","_panesClipRects","_disposeCore","disposeObjectsInArray","_disposeObjectsInArray","panesClipRects","call","_dispose","that","panes","_legend","dispose","_disposeAxes","_createPanes","_cleanPanesClipRects","clipArrayName","clipArray","forEach","clipRect","_getElementsClipRectID","paneName","clipShape","fixed","_getPaneIndex","id","paneIndex","name","pane","_reinitAxes","_populateAxes","_axesReinitialized","_getCrosshairMargins","crosshairOptions","_getCrosshairOptions","crosshairEnabled","enabled","margins","getMargins","x","horizontalLine","visible","y","verticalLine","_isRotated","argumentAxesOptions","option","valueAxisOption","valueAxesOptions","argumentAxesPopulatedOptions","valueAxesPopulatedOptions","axisNames","valueAxesCounter","paneWithNonVirtualAxis","crosshairMargins","getNextAxisName","position","virtual","_populateAxesOptions","optionPath","crosshairMargin","priority","axisPanes","_incidentOccurred","push","concat","slice","unique","_","_redesignAxes","isArgumentAxes","axesBasis","axes","_argumentAxes","_valueAxes","curAxes","filter","a","some","p","updateOptions","validate","basis","_disposeAxis","isVirtual","_createAxis","applyVisualRangeSetter","_getVisualRangeSetter","isArgumentAxis","splice","_appendAdditionalSeriesGroups","_crosshairCursorGroup","linkAppend","_scrollBar","_scrollBarGroup","_getLegendTargets","_this","series","s","item","_getLegendOptions","legendData","getOptions","showInLegend","_legendItemTextField","_seriesPopulatedHandlerCore","_processSeriesFamilies","_processValueAxisFormat","_renderTrackers","i","drawTrackers","_specialProcessSeries","types","families","paneSeries","themeManager","_themeManager","negativesAsZeroes","negativesAsZeros","familyOptions","minBubbleSize","maxBubbleSize","barGroupPadding","barGroupWidth","seriesFamilies","family","adjustSeriesValues","_getLayoutTargets","_getSeriesForPane","SeriesFamily","add","_updateSeriesDimensions","updateSeriesValues","adjustSeriesDimensions","_getLegendCallBack","getActionCallback","_appendAxesGroups","_stripsGroup","_gridGroup","_axesGroup","_constantLinesGroup","_labelAxesGroup","_scaleBreaksGroup","_populateMarginOptions","getSize","argumentMarginOptions","groupSeries","getValueAxis","marginOptions","isVisible","seriesMarginOptions","getMarginOptions","setMarginOptions","_populateBusinessRange","updatedAxis","keepRange","argRange","Range","_getVisibleSeries","groupRange","seriesRange","getRangeData","addRange","val","setGroupSeries","setBusinessRange","_lastVisualRangeUpdateMode","_groupsData","categories","getArgumentAxis","_this2","defaultPane","_getGroupsData","groups","valueOptions","argumentAxes","argumentOptions","_groupSeries","_correctValueAxes","axesWithFullStackedFormat","isFullStackedSeries","setPercentLabelFormat","indexOf","resetAutoLabelFormat","typeSelector","userOptions","preparedUserOptions","_prepareStripsAndConstantLines","_prepareAxisOptions","tick","minorTick","label","title","_getValFilter","renderingSettings","renderer","_renderer","incidentOccurred","eventTrigger","_eventTrigger","axisClass","widgetClass","stripsGroup","labelAxesGroup","constantLinesGroup","scaleBreaksGroup","axesContainerGroup","gridGroup","_getAxisRenderingOptions","Axis","_applyVisualRangeByVirtualAxes","range","_applyCustomVisualRangeOption","_parseVisualRangeOption","chart","_ref","setCustomVisualRange","_applyingChanges","_change_VISUAL_RANGE","_requestChange","_getTrackerSettings","stripStyle","line","constantLineStyle","refresh","_layoutAxes","drawAxes","cleanPanesCanvases","needSpace","checkForMoreSpaceForPanesCanvas","_layout","backward","_rect","max","_canvas","_createCanvasFromRect","layoutManager","needMoreSpaceForPanesCanvas","match","parseInt","_setCustomVisualRange","JSON","stringify","axesName","_options","_raiseZoomEndHandlers","handleZoomEnd","_setOptionsByReference","_optionsByReference","_notifyOptionChanged","previousValue","_optionChangedLocker","_notifyVisualRange","path","_notify","_getAxesForScaling","_getAxesByOptionPath","optionName","sourceAxes","axisPath","v","_optionChanged","getPartialChangeOptionsName","_recreateSizeDependentObjects","_changes","has","resizePanesOnZoom","_doRender","force","drawTitle","drawLegend","adjustAxes","animate","resetVisualRange","_legendDataField","_adjustSeriesLabels","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AAEA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AACtC,MAAID,GAAG,IAAID,GAAX,EAAgB;AACZG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5BC,MAAAA,KAAK,EAAEA,KADqB;AAE5BG,MAAAA,UAAU,EAAE,IAFgB;AAG5BC,MAAAA,YAAY,EAAE,IAHc;AAI5BC,MAAAA,QAAQ,EAAE;AAJkB,KAAhC;AAMH,GAPD,MAOO;AACHP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AACH;;AACD,SAAOF,GAAP;AACH;;AACD,IAAIQ,MAAM,GAAGC,OAAO,CAAC,yBAAD,CAAP,CAAmCD,MAAhD;;AACA,IAAIE,OAAO,GAAGD,OAAO,CAAC,wBAAD,CAAP,CAAkCC,OAAhD;;AACA,IAAIC,cAAc,GAAGF,OAAO,CAAC,2BAAD,CAA5B;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,sBAAD,CAAzB;;AACA,IAAII,iBAAiB,GAAG,iBAAxB;;AACA,IAAIC,UAAU,GAAGL,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAIM,kBAAkB,GAAGN,OAAO,CAAC,uBAAD,CAAhC;;AACA,IAAIO,SAAS,GAAGP,OAAO,CAAC,cAAD,CAAP,CAAwBO,SAAxC;;AACA,IAAIC,eAAe,GAAGR,OAAO,CAAC,aAAD,CAA7B;;AACA,IAAIS,iBAAiB,GAAGT,OAAO,CAAC,yCAAD,CAAP,CAAmDS,iBAA3E;;AACA,IAAIC,QAAQ,GAAGC,KAAK,CAACC,OAArB;;AACA,IAAIC,UAAU,GAAGb,OAAO,CAAC,uBAAD,CAAP,CAAiCc,SAAlD;;AACA,IAAIC,KAAK,GAAGb,cAAc,CAACc,IAA3B;AACA,IAAIC,YAAY,GAAGf,cAAc,CAACgB,WAAlC;;AACA,IAAIC,KAAK,GAAGnB,OAAO,CAAC,yBAAD,CAAP,CAAmCoB,IAA/C;;AACA,IAAIC,OAAO,GAAGtB,MAAd;;AACA,IAAIuB,QAAQ,GAAGtB,OAAO,CAAC,eAAD,CAAtB;;AACA,IAAIuB,IAAI,GAAGvB,OAAO,CAAC,uBAAD,CAAP,CAAiCuB,IAA5C;;AACA,IAAIC,wBAAwB,GAAGF,QAAQ,CAACE,wBAAxC;AACA,IAAIC,cAAc,GAAGH,QAAQ,CAACG,cAA9B;AACA,IAAIC,IAAI,GAAGJ,QAAQ,CAACK,GAApB;AACA,IAAIC,kBAAkB,GAAGN,QAAQ,CAACM,kBAAlC;AACA,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,oBAAoB,GAAG,oBAA3B;AACA,IAAIC,iBAAiB,GAAG,SAAxB;AACA,IAAIC,YAAY,GAAG,cAAnB;;AAEA,SAASC,WAAT,CAAqBC,WAArB,EAAkC;AAC9B,SAAOxB,QAAQ,CAACwB,WAAD,CAAR,GAAwB,MAAMA,WAAW,CAACC,MAAlB,GAA2B,CAAC,EAAD,CAA3B,GAAkCD,WAA1D,GAAwE,CAACA,WAAD,CAA/E;AACH;;AAED,SAASE,mBAAT,CAA6BC,GAA7B,EAAkCC,UAAlC,EAA8C;AAC1C,MAAID,GAAG,CAACE,iBAAR,EAA2B;AACvBF,IAAAA,GAAG,CAACG,IAAJ,GAAWF,UAAX;AACH;;AACD,SAAOD,GAAP;AACH;;AAED,SAASI,kBAAT,CAA4BD,IAA5B,EAAkCE,UAAlC,EAA8CC,OAA9C,EAAuDC,OAAvD,EAAgE;AAC5D,MAAIC,KAAK,GAAGD,OAAO,GAAGJ,IAAI,CAACK,KAAL,GAAaH,UAAhB,GAA6BF,IAAI,CAACK,KAArD;AACA,MAAIC,MAAM,GAAGF,OAAO,GAAGJ,IAAI,CAACM,MAAR,GAAiBN,IAAI,CAACM,MAAL,GAAcJ,UAAnD;AACA,SAAOK,IAAI,CAACC,GAAL,CAASH,KAAT,EAAgBC,MAAhB,IAA0BH,OAAjC;AACH;;AAED,SAASM,0BAAT,CAAoCC,GAApC,EAAyCC,IAAzC,EAA+CC,cAA/C,EAA+DC,KAA/D,EAAsE;AAClE,MAAIC,OAAJ;AACA,MAAIC,WAAJ;;AACA,MAAIH,cAAJ,EAAoB;AAChBG,IAAAA,WAAW,GAAGL,GAAG,CAACzD,KAAlB;AACA6D,IAAAA,OAAO,GAAG;AACNE,MAAAA,eAAe,EAAE;AADX,KAAV;AAGA,QAAIC,YAAY,GAAGP,GAAG,CAACQ,QAAJ,CAAaC,KAAb,CAAmB,GAAnB,CAAnB;AACA,QAAIC,QAAQ,GAAGH,YAAY,CAACA,YAAY,CAACtB,MAAb,GAAsB,CAAvB,CAA3B;;AACA,QAAI,eAAeyB,QAAf,IAA2B,iBAAiBA,QAAhD,EAA0D;AACtDN,MAAAA,OAAO,GAAG;AACNO,QAAAA,kBAAkB,EAAE;AADd,OAAV;AAGAN,MAAAA,WAAW,GAAGjE,eAAe,CAAC,EAAD,EAAKsE,QAAL,EAAeV,GAAG,CAACzD,KAAnB,CAA7B;AACH;AACJ,GAbD,MAaO;AACH8D,IAAAA,WAAW,GAAG,CAAC1C,UAAU,CAACwC,KAAD,CAAV,GAAoBH,GAAG,CAACzD,KAAJ,CAAU4D,KAAV,CAApB,GAAuCH,GAAG,CAACzD,KAA5C,EAAmD8D,WAAjE;AACH;;AACDJ,EAAAA,IAAI,CAACI,WAAL,CAAiBA,WAAjB,EAA8BD,OAA9B;AACH;;AACD,IAAIQ,aAAa,GAAGvD,SAAS,CAACwD,OAAV,CAAkB;AAClCC,EAAAA,qBAAqB,EAAE,iCAAW;AAC9B,SAAKC,QAAL,CAAcC,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;;AACA9C,IAAAA,OAAO,CAAC,KAAK+C,kBAAN,EAA0B;AAC7BC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE,MADD;AAENC,QAAAA,OAAO,EAAE;AAFH,OADmB;AAK7BC,MAAAA,aAAa,EAAE;AACXF,QAAAA,KAAK,EAAE,MADI;AAEXC,QAAAA,OAAO,EAAE;AAFE;AALc,KAA1B,CAAP;AAUH,GAbiC;AAclCE,EAAAA,WAAW,EAAE,CAAC3C,oBAAoB,GAAG,SAAvB,GAAmCD,IAApC,EAA0CC,oBAAoB,GAAG,SAAvB,GAAmCD,IAA7E,CAdqB;AAelC6C,EAAAA,wBAAwB,EAAE;AACtBnB,IAAAA,WAAW,EAAEvB,YADS;AAEtB2C,IAAAA,kBAAkB,EAAE3C,YAFE;AAGtB4C,IAAAA,MAAM,EAAE,cAHc;AAItBC,IAAAA,aAAa,EAAE;AAJO,GAfQ;AAqBlCC,EAAAA,yBAAyB,EAAE;AACvBC,IAAAA,YAAY,EAAE,CAAC,QAAD,EAAW,eAAX,EAA4B,aAA5B,EAA2C,oBAA3C,CADS;AAEvBC,IAAAA,SAAS,EAAE,CAAC,QAAD,EAAW,eAAX,EAA4B,aAA5B,EAA2C,oBAA3C;AAFY,GArBO;AAyBlCC,EAAAA,SAAS,EAAE,qBAAW;AAClB,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKjB,QAAL;AACH,GA5BiC;AA6BlCkB,EAAAA,YAAY,EAAE,wBAAW;AACrB,QAAIC,qBAAqB,GAAG,KAAKC,sBAAjC;AACA,QAAIC,cAAc,GAAG,KAAKJ,eAA1B;AACA,SAAKjB,QAAL;AACAmB,IAAAA,qBAAqB,CAACG,IAAtB,CAA2BD,cAA3B,EAA2C,OAA3C;AACAF,IAAAA,qBAAqB,CAACG,IAAtB,CAA2BD,cAA3B,EAA2C,MAA3C;AACAF,IAAAA,qBAAqB,CAACG,IAAtB,CAA2BD,cAA3B,EAA2C,MAA3C;AACA,SAAKJ,eAAL,GAAuB,IAAvB;AACH,GArCiC;AAsClCM,EAAAA,QAAQ,EAAE,oBAAW;AACjB,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIL,qBAAqB,GAAG,KAAKC,sBAAjC;AACAI,IAAAA,IAAI,CAACxB,QAAL;AACAwB,IAAAA,IAAI,CAACC,KAAL,GAAa,IAAb;;AACA,QAAID,IAAI,CAACE,OAAT,EAAkB;AACdF,MAAAA,IAAI,CAACE,OAAL,CAAaC,OAAb;;AACAH,MAAAA,IAAI,CAACE,OAAL,GAAe,IAAf;AACH;;AACDP,IAAAA,qBAAqB,CAACG,IAAtB,CAA2BE,IAA3B,EAAiC,iBAAjC;AACAL,IAAAA,qBAAqB,CAACG,IAAtB,CAA2BE,IAA3B,EAAiC,gBAAjC;;AACAA,IAAAA,IAAI,CAACI,YAAL;AACH,GAlDiC;AAmDlCC,EAAAA,YAAY,EAAE,wBAAW;AACrB,SAAKC,oBAAL,CAA0B,OAA1B;;AACA,SAAKA,oBAAL,CAA0B,MAA1B;;AACA,SAAKA,oBAAL,CAA0B,MAA1B;AACH,GAvDiC;AAwDlCA,EAAAA,oBAAoB,EAAE,8BAASC,aAAT,EAAwB;AAC1C,QAAIC,SAAS,GAAG,KAAKf,eAAL,CAAqBc,aAArB,CAAhB;AACA,KAACC,SAAS,IAAI,EAAd,EAAkBC,OAAlB,CAA0B,UAASC,QAAT,EAAmB;AACzC,aAAOA,QAAQ,IAAIA,QAAQ,CAACP,OAAT,EAAnB;AACH,KAFD;AAGA,SAAKV,eAAL,CAAqBc,aAArB,IAAsC,EAAtC;AACH,GA9DiC;AA+DlCI,EAAAA,sBAAsB,EAAE,gCAASC,QAAT,EAAmB;AACvC,QAAIC,SAAS,GAAG,KAAKpB,eAAL,CAAqBqB,KAArB,CAA2B,KAAKC,aAAL,CAAmBH,QAAnB,CAA3B,CAAhB;;AACA,WAAOC,SAAS,IAAIA,SAAS,CAACG,EAA9B;AACH,GAlEiC;AAmElCD,EAAAA,aAAa,EAAE,uBAASH,QAAT,EAAmB;AAC9B,QAAIK,SAAJ;AACA,QAAIC,IAAI,GAAGN,QAAQ,IAAItE,iBAAvB;;AACAhB,IAAAA,KAAK,CAAC,KAAK2E,KAAN,EAAa,UAASrC,KAAT,EAAgBuD,IAAhB,EAAsB;AACpC,UAAIA,IAAI,CAACD,IAAL,KAAcA,IAAlB,EAAwB;AACpBD,QAAAA,SAAS,GAAGrD,KAAZ;AACA,eAAO,KAAP;AACH;AACJ,KALI,CAAL;;AAMA,WAAOqD,SAAP;AACH,GA7EiC;AA8ElCG,EAAAA,WAAW,EAAE,uBAAW;AACpB,SAAKnB,KAAL,GAAa,KAAKI,YAAL,EAAb;;AACA,SAAKgB,aAAL;;AACA,SAAKC,kBAAL,GAA0B,IAA1B;AACH,GAlFiC;AAmFlCC,EAAAA,oBAAoB,EAAE,gCAAW;AAC7B,QAAIC,gBAAgB,GAAG,KAAKC,oBAAL,MAA+B,EAAtD;AACA,QAAIC,gBAAgB,GAAGF,gBAAgB,CAACG,OAAxC;AACA,QAAIC,OAAO,GAAG7G,eAAe,CAAC8G,UAAhB,EAAd;AACA,WAAO;AACHC,MAAAA,CAAC,EAAEJ,gBAAgB,IAAIF,gBAAgB,CAACO,cAAjB,CAAgCC,OAApD,GAA8DJ,OAAO,CAACE,CAAtE,GAA0E,CAD1E;AAEHG,MAAAA,CAAC,EAAEP,gBAAgB,IAAIF,gBAAgB,CAACU,YAAjB,CAA8BF,OAAlD,GAA4DJ,OAAO,CAACK,CAApE,GAAwE;AAFxE,KAAP;AAIH,GA3FiC;AA4FlCZ,EAAAA,aAAa,EAAE,yBAAW;AACtB,QAAIrB,IAAI,GAAG,IAAX;AACA,QAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;;AACA,QAAI9C,OAAO,GAAG6C,IAAI,CAACmC,UAAL,EAAd;;AACA,QAAIC,mBAAmB,GAAG5F,WAAW,CAACwD,IAAI,CAACqC,MAAL,CAAY,cAAZ,KAA+B,EAAhC,CAAX,CAA+C,CAA/C,CAA1B;AACA,QAAIC,eAAe,GAAGtC,IAAI,CAACqC,MAAL,CAAY,WAAZ,CAAtB;AACA,QAAIE,gBAAgB,GAAG/F,WAAW,CAAC8F,eAAe,IAAI,EAApB,CAAlC;AACA,QAAIE,4BAA4B,GAAG,EAAnC;AACA,QAAIC,yBAAyB,GAAG,EAAhC;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,gBAAgB,GAAG,CAAvB;AACA,QAAIC,sBAAJ;;AACA,QAAIC,gBAAgB,GAAG7C,IAAI,CAACuB,oBAAL,EAAvB;;AAEA,aAASuB,eAAT,GAA2B;AACvB,aAAOnI,iBAAiB,GAAGgI,gBAAgB,EAA3C;AACH;;AACD,QAAIxF,OAAJ,EAAa;AACTyF,MAAAA,sBAAsB,GAAG,YAAYR,mBAAmB,CAACW,QAAhC,GAA2C9C,KAAK,CAACA,KAAK,CAACvD,MAAN,GAAe,CAAhB,CAAL,CAAwBwE,IAAnE,GAA0EjB,KAAK,CAAC,CAAD,CAAL,CAASiB,IAA5G;AACH,KAFD,MAEO;AACH0B,MAAAA,sBAAsB,GAAG,UAAUR,mBAAmB,CAACW,QAA9B,GAAyC9C,KAAK,CAAC,CAAD,CAAL,CAASiB,IAAlD,GAAyDjB,KAAK,CAACA,KAAK,CAACvD,MAAN,GAAe,CAAhB,CAAL,CAAwBwE,IAA1G;AACH;;AACDsB,IAAAA,4BAA4B,GAAGvG,IAAI,CAACgE,KAAD,EAAQ,UAASkB,IAAT,EAAe;AACtD,UAAI6B,OAAO,GAAG7B,IAAI,CAACD,IAAL,KAAc0B,sBAA5B;AACA,aAAO5C,IAAI,CAACiD,oBAAL,CAA0B,cAA1B,EAA0Cb,mBAA1C,EAA+D;AAClEjB,QAAAA,IAAI,EAAEA,IAAI,CAACD,IADuD;AAElEA,QAAAA,IAAI,EAAE,IAF4D;AAGlEgC,QAAAA,UAAU,EAAE,cAHsD;AAIlEC,QAAAA,eAAe,EAAEhG,OAAO,GAAG0F,gBAAgB,CAACf,CAApB,GAAwBe,gBAAgB,CAACZ;AAJC,OAA/D,EAKJ9E,OALI,EAKK6F,OALL,CAAP;AAMH,KARkC,CAAnC;;AASA1H,IAAAA,KAAK,CAACiH,gBAAD,EAAmB,UAASa,QAAT,EAAmB3G,WAAnB,EAAgC;AACpD,UAAI4G,SAAS,GAAG,EAAhB;AACA,UAAInC,IAAI,GAAGzE,WAAW,CAACyE,IAAvB;;AACA,UAAIA,IAAI,IAAI1G,OAAO,CAAC0G,IAAD,EAAOwB,SAAP,CAAP,KAA6B,CAAC,CAA1C,EAA6C;AACzC1C,QAAAA,IAAI,CAACsD,iBAAL,CAAuB,OAAvB;;AACA;AACH;;AACDpC,MAAAA,IAAI,IAAIwB,SAAS,CAACa,IAAV,CAAerC,IAAf,CAAR;;AACA,UAAIzE,WAAW,CAAC0E,IAAhB,EAAsB;AAClBkC,QAAAA,SAAS,CAACE,IAAV,CAAe9G,WAAW,CAAC0E,IAA3B;AACH;;AACD,UAAI1E,WAAW,CAACwD,KAAZ,IAAqBxD,WAAW,CAACwD,KAAZ,CAAkBvD,MAA3C,EAAmD;AAC/C2G,QAAAA,SAAS,GAAGA,SAAS,CAACG,MAAV,CAAiB/G,WAAW,CAACwD,KAAZ,CAAkBwD,KAAlB,CAAwB,CAAxB,CAAjB,CAAZ;AACH;;AACDJ,MAAAA,SAAS,GAAGxH,QAAQ,CAAC6H,MAAT,CAAgBL,SAAhB,CAAZ;;AACA,UAAI,CAACA,SAAS,CAAC3G,MAAf,EAAuB;AACnB2G,QAAAA,SAAS,CAACE,IAAV,CAAe,KAAK,CAApB;AACH;;AACDjI,MAAAA,KAAK,CAAC+H,SAAD,EAAY,UAASM,CAAT,EAAYxC,IAAZ,EAAkB;AAC/B,YAAI+B,UAAU,GAAGjI,QAAQ,CAACqH,eAAD,CAAR,GAA4B,aAAakB,MAAb,CAAoBJ,QAApB,EAA8B,GAA9B,CAA5B,GAAiE,WAAlF;AACAX,QAAAA,yBAAyB,CAACc,IAA1B,CAA+BvD,IAAI,CAACiD,oBAAL,CAA0B,WAA1B,EAAuCxG,WAAvC,EAAoD;AAC/EyE,UAAAA,IAAI,EAAEA,IAAI,IAAI4B,eAAe,EADkD;AAE/E3B,UAAAA,IAAI,EAAEA,IAFyE;AAG/EiC,UAAAA,QAAQ,EAAEA,QAHqE;AAI/EF,UAAAA,UAAU,EAAEA,UAJmE;AAK/EC,UAAAA,eAAe,EAAEhG,OAAO,GAAG0F,gBAAgB,CAACZ,CAApB,GAAwBY,gBAAgB,CAACf;AALc,SAApD,EAM5B3E,OAN4B,CAA/B;AAOH,OATI,CAAL;AAUH,KA5BI,CAAL;;AA6BA6C,IAAAA,IAAI,CAAC4D,aAAL,CAAmBpB,4BAAnB,EAAiD,IAAjD,EAAuDI,sBAAvD;;AACA5C,IAAAA,IAAI,CAAC4D,aAAL,CAAmBnB,yBAAnB,EAA8C,KAA9C;AACH,GA1JiC;AA2JlCmB,EAAAA,aAAa,EAAE,uBAAS/F,OAAT,EAAkBgG,cAAlB,EAAkCjB,sBAAlC,EAA0D;AACrE,QAAI5C,IAAI,GAAG,IAAX;AACA,QAAI8D,SAAS,GAAG,EAAhB;AACA,QAAIC,IAAI,GAAGF,cAAc,GAAG7D,IAAI,CAACgE,aAAR,GAAwBhE,IAAI,CAACiE,UAAtD;;AACA3I,IAAAA,KAAK,CAACuC,OAAD,EAAU,UAAS8F,CAAT,EAAY/G,GAAZ,EAAiB;AAC5B,UAAIsH,OAAO,GAAGH,IAAI,IAAIA,IAAI,CAACI,MAAL,CAAY,UAASC,CAAT,EAAY;AAC1C,eAAOA,CAAC,CAAClD,IAAF,KAAWtE,GAAG,CAACsE,IAAf,KAAwB,CAAC9F,UAAU,CAACwB,GAAG,CAACuE,IAAL,CAAX,IAAyBnB,IAAI,CAACC,KAAL,CAAWoE,IAAX,CAAgB,UAASC,CAAT,EAAY;AAChF,iBAAOA,CAAC,CAACpD,IAAF,KAAWkD,CAAC,CAACjD,IAApB;AACH,SAFuD,CAAzB,IAEzBiD,CAAC,CAACjD,IAAF,KAAWvE,GAAG,CAACuE,IAFd,CAAP;AAGH,OAJqB,CAAtB;;AAKA,UAAI+C,OAAO,IAAIA,OAAO,CAACxH,MAAR,GAAiB,CAAhC,EAAmC;AAC/BpB,QAAAA,KAAK,CAAC4I,OAAD,EAAU,UAASP,CAAT,EAAYjG,IAAZ,EAAkB;AAC7BA,UAAAA,IAAI,CAAC6G,aAAL,CAAmB3H,GAAnB;AACAc,UAAAA,IAAI,CAAC8G,QAAL;AACAV,UAAAA,SAAS,CAACP,IAAV,CAAe;AACX7F,YAAAA,IAAI,EAAEA;AADK,WAAf;AAGH,SANI,CAAL;AAOH,OARD,MAQO;AACHoG,QAAAA,SAAS,CAACP,IAAV,CAAe;AACX1F,UAAAA,OAAO,EAAEjB;AADE,SAAf;AAGH;AACJ,KAnBI,CAAL;;AAoBA,QAAImH,IAAJ,EAAU;AACNvI,MAAAA,YAAY,CAACuI,IAAD,EAAO,UAASnG,KAAT,EAAgBF,IAAhB,EAAsB;AACrC,YAAI,CAACoG,SAAS,CAACO,IAAV,CAAe,UAASI,KAAT,EAAgB;AAC5B,iBAAOA,KAAK,CAAC/G,IAAN,IAAc+G,KAAK,CAAC/G,IAAN,KAAeA,IAApC;AACH,SAFA,CAAL,EAEQ;AACJsC,UAAAA,IAAI,CAAC0E,YAAL,CAAkB9G,KAAlB,EAAyBiG,cAAzB;AACH;AACJ,OANW,CAAZ;AAOH,KARD,MAQO;AACH,UAAIA,cAAJ,EAAoB;AAChBE,QAAAA,IAAI,GAAG/D,IAAI,CAACgE,aAAL,GAAqB,EAA5B;AACH,OAFD,MAEO;AACHD,QAAAA,IAAI,GAAG/D,IAAI,CAACiE,UAAL,GAAkB,EAAzB;AACH;AACJ;;AACD3I,IAAAA,KAAK,CAACwI,SAAD,EAAY,UAASlG,KAAT,EAAgB6G,KAAhB,EAAuB;AACpC,UAAI/G,IAAI,GAAG+G,KAAK,CAAC/G,IAAjB;;AACA,UAAI+G,KAAK,CAAC/G,IAAN,IAAcmG,cAAlB,EAAkC;AAC9BY,QAAAA,KAAK,CAAC/G,IAAN,CAAWiH,SAAX,GAAuBF,KAAK,CAAC/G,IAAN,CAAWyD,IAAX,KAAoByB,sBAA3C;AACH,OAFD,MAEO;AACH,YAAI6B,KAAK,CAAC5G,OAAV,EAAmB;AACfH,UAAAA,IAAI,GAAGsC,IAAI,CAAC4E,WAAL,CAAiBf,cAAjB,EAAiCY,KAAK,CAAC5G,OAAvC,EAAgDgG,cAAc,GAAGY,KAAK,CAAC5G,OAAN,CAAcsD,IAAd,KAAuByB,sBAA1B,GAAmD,KAAK,CAAtH,EAAyHiB,cAAc,GAAGjG,KAAH,GAAW,KAAK,CAAvJ,CAAP;AACAmG,UAAAA,IAAI,CAACR,IAAL,CAAU7F,IAAV;AACH;AACJ;;AACDA,MAAAA,IAAI,CAACmH,sBAAL,CAA4B7E,IAAI,CAAC8E,qBAAL,EAA5B;AACH,KAXI,CAAL;AAYH,GA9MiC;AA+MlCJ,EAAAA,YAAY,EAAE,sBAAS9G,KAAT,EAAgBmH,cAAhB,EAAgC;AAC1C,QAAIhB,IAAI,GAAGgB,cAAc,GAAG,KAAKf,aAAR,GAAwB,KAAKC,UAAtD;AACA,QAAIvG,IAAI,GAAGqG,IAAI,CAACnG,KAAD,CAAf;;AACA,QAAI,CAACF,IAAL,EAAW;AACP;AACH;;AACDA,IAAAA,IAAI,CAACyC,OAAL;AACA4D,IAAAA,IAAI,CAACiB,MAAL,CAAYpH,KAAZ,EAAmB,CAAnB;AACH,GAvNiC;AAwNlCwC,EAAAA,YAAY,EAAE,wBAAW;AACrB,QAAIJ,IAAI,GAAG,IAAX;AACA,QAAIL,qBAAqB,GAAGK,IAAI,CAACJ,sBAAjC;AACAD,IAAAA,qBAAqB,CAACG,IAAtB,CAA2BE,IAA3B,EAAiC,eAAjC;AACAL,IAAAA,qBAAqB,CAACG,IAAtB,CAA2BE,IAA3B,EAAiC,YAAjC;AACH,GA7NiC;AA8NlCiF,EAAAA,6BAA6B,EAAE,yCAAW;AACtC,SAAKC,qBAAL,CAA2BC,UAA3B;;AACA,SAAKC,UAAL,IAAmB,KAAKC,eAAL,CAAqBF,UAArB,EAAnB;AACH,GAjOiC;AAkOlCG,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B,QAAIC,KAAK,GAAG,IAAZ;;AACA,WAAO,CAAC,KAAKC,MAAL,IAAe,EAAhB,EAAoBtJ,GAApB,CAAwB,UAASuJ,CAAT,EAAY;AACvC,UAAIC,IAAI,GAAGH,KAAK,CAACI,iBAAN,CAAwBF,CAAxB,CAAX;;AACAC,MAAAA,IAAI,CAACE,UAAL,CAAgBJ,MAAhB,GAAyBC,CAAzB;;AACA,UAAI,CAACA,CAAC,CAACI,UAAF,GAAeC,YAApB,EAAkC;AAC9BJ,QAAAA,IAAI,CAACE,UAAL,CAAgB5D,OAAhB,GAA0B,KAA1B;AACH;;AACD,aAAO0D,IAAP;AACH,KAPM,CAAP;AAQH,GA5OiC;AA6OlCK,EAAAA,oBAAoB,EAAE,MA7OY;AA8OlCC,EAAAA,2BAA2B,EAAE,uCAAW;AACpC,SAAKC,sBAAL;;AACA,SAAKC,uBAAL;AACH,GAjPiC;AAkPlCC,EAAAA,eAAe,EAAE,2BAAW;AACxB,QAAInG,IAAI,GAAG,IAAX;AACA,QAAIoG,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpG,IAAI,CAACwF,MAAL,CAAY9I,MAA5B,EAAoC,EAAE0J,CAAtC,EAAyC;AACrCpG,MAAAA,IAAI,CAACwF,MAAL,CAAYY,CAAZ,EAAeC,YAAf;AACH;AACJ,GAxPiC;AAyPlCC,EAAAA,qBAAqB,EAAE,iCAAW;AAC9B,SAAKL,sBAAL;AACH,GA3PiC;AA4PlCA,EAAAA,sBAAsB,EAAE,kCAAW;AAC/B,QAAIjG,IAAI,GAAG,IAAX;AACA,QAAIuG,KAAK,GAAG,EAAZ;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,UAAJ;AACA,QAAIC,YAAY,GAAG1G,IAAI,CAAC2G,aAAxB;AACA,QAAIC,iBAAiB,GAAGF,YAAY,CAACb,UAAb,CAAwB,mBAAxB,CAAxB;AACA,QAAIgB,gBAAgB,GAAGH,YAAY,CAACb,UAAb,CAAwB,kBAAxB,CAAvB;AACA,QAAIiB,aAAa,GAAG;AAChB/H,MAAAA,aAAa,EAAE2H,YAAY,CAACb,UAAb,CAAwB,eAAxB,CADC;AAEhBkB,MAAAA,aAAa,EAAEL,YAAY,CAACb,UAAb,CAAwB,eAAxB,CAFC;AAGhBmB,MAAAA,aAAa,EAAEN,YAAY,CAACb,UAAb,CAAwB,eAAxB,CAHC;AAIhBjH,MAAAA,QAAQ,EAAE8H,YAAY,CAACb,UAAb,CAAwB,UAAxB,CAJM;AAKhBoB,MAAAA,eAAe,EAAEP,YAAY,CAACb,UAAb,CAAwB,iBAAxB,CALD;AAMhBqB,MAAAA,aAAa,EAAER,YAAY,CAACb,UAAb,CAAwB,eAAxB,CANC;AAOhBe,MAAAA,iBAAiB,EAAExL,UAAU,CAACwL,iBAAD,CAAV,GAAgCA,iBAAhC,GAAoDC;AAPvD,KAApB;;AASA,QAAI7G,IAAI,CAACmH,cAAL,IAAuBnH,IAAI,CAACmH,cAAL,CAAoBzK,MAA/C,EAAuD;AACnDpB,MAAAA,KAAK,CAAC0E,IAAI,CAACmH,cAAN,EAAsB,UAASxD,CAAT,EAAYyD,MAAZ,EAAoB;AAC3CA,QAAAA,MAAM,CAAC7C,aAAP,CAAqBuC,aAArB;AACAM,QAAAA,MAAM,CAACC,kBAAP;AACH,OAHI,CAAL;;AAIA;AACH;;AACD/L,IAAAA,KAAK,CAAC0E,IAAI,CAACwF,MAAN,EAAc,UAAS7B,CAAT,EAAY+B,IAAZ,EAAkB;AACjC,UAAIlL,OAAO,CAACkL,IAAI,CAAC5J,IAAN,EAAYyK,KAAZ,CAAP,KAA8B,CAAC,CAAnC,EAAsC;AAClCA,QAAAA,KAAK,CAAChD,IAAN,CAAWmC,IAAI,CAAC5J,IAAhB;AACH;AACJ,KAJI,CAAL;;AAKAR,IAAAA,KAAK,CAAC0E,IAAI,CAACsH,iBAAL,EAAD,EAA2B,UAAS3D,CAAT,EAAYxC,IAAZ,EAAkB;AAC9CsF,MAAAA,UAAU,GAAGzG,IAAI,CAACuH,iBAAL,CAAuBpG,IAAI,CAACD,IAA5B,CAAb;;AACA5F,MAAAA,KAAK,CAACiL,KAAD,EAAQ,UAAS5C,CAAT,EAAY7H,IAAZ,EAAkB;AAC3B,YAAIsL,MAAM,GAAG,IAAIvM,kBAAkB,CAAC2M,YAAvB,CAAoC;AAC7C1L,UAAAA,IAAI,EAAEA,IADuC;AAE7CqF,UAAAA,IAAI,EAAEA,IAAI,CAACD,IAFkC;AAG7CnC,UAAAA,aAAa,EAAE+H,aAAa,CAAC/H,aAHgB;AAI7CgI,UAAAA,aAAa,EAAED,aAAa,CAACC,aAJgB;AAK7CC,UAAAA,aAAa,EAAEF,aAAa,CAACE,aALgB;AAM7CpI,UAAAA,QAAQ,EAAEkI,aAAa,CAAClI,QANqB;AAO7CqI,UAAAA,eAAe,EAAEH,aAAa,CAACG,eAPc;AAQ7CC,UAAAA,aAAa,EAAEJ,aAAa,CAACI,aARgB;AAS7CN,UAAAA,iBAAiB,EAAEE,aAAa,CAACF,iBATY;AAU7CzJ,UAAAA,OAAO,EAAE6C,IAAI,CAACmC,UAAL;AAVoC,SAApC,CAAb;AAYAiF,QAAAA,MAAM,CAACK,GAAP,CAAWhB,UAAX;AACAW,QAAAA,MAAM,CAACC,kBAAP;AACAb,QAAAA,QAAQ,CAACjD,IAAT,CAAc6D,MAAd;AACH,OAhBI,CAAL;AAiBH,KAnBI,CAAL;;AAoBApH,IAAAA,IAAI,CAACmH,cAAL,GAAsBX,QAAtB;AACH,GA9SiC;AA+SlCkB,EAAAA,uBAAuB,EAAE,mCAAW;AAChC,QAAI1H,IAAI,GAAG,IAAX;AACA,QAAIoG,CAAJ;AACA,QAAIe,cAAc,GAAGnH,IAAI,CAACmH,cAAL,IAAuB,EAA5C;;AACA,SAAKf,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGe,cAAc,CAACzK,MAA/B,EAAuC0J,CAAC,EAAxC,EAA4C;AACxC,UAAIgB,MAAM,GAAGD,cAAc,CAACf,CAAD,CAA3B;AACAgB,MAAAA,MAAM,CAACO,kBAAP;AACAP,MAAAA,MAAM,CAACQ,sBAAP;AACH;AACJ,GAxTiC;AAyTlCC,EAAAA,kBAAkB,EAAE,4BAASrC,MAAT,EAAiB;AACjC,WAAO,KAAKtF,OAAL,IAAgB,KAAKA,OAAL,CAAa4H,iBAAb,CAA+BtC,MAA/B,CAAvB;AACH,GA3TiC;AA4TlCuC,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B,QAAI/H,IAAI,GAAG,IAAX;;AACAA,IAAAA,IAAI,CAACgI,YAAL,CAAkB7C,UAAlB;;AACAnF,IAAAA,IAAI,CAACiI,UAAL,CAAgB9C,UAAhB;;AACAnF,IAAAA,IAAI,CAACkI,UAAL,CAAgB/C,UAAhB;;AACAnF,IAAAA,IAAI,CAACmI,mBAAL,CAAyBhD,UAAzB;;AACAnF,IAAAA,IAAI,CAACoI,eAAL,CAAqBjD,UAArB;;AACAnF,IAAAA,IAAI,CAACqI,iBAAL,CAAuBlD,UAAvB;AACH,GApUiC;AAqUlCmD,EAAAA,sBAAsB,EAAE,kCAAW;AAC/B,QAAItI,IAAI,GAAG,IAAX;AACA,QAAInD,UAAU,GAAGG,kBAAkB,CAACgD,IAAI,CAACuI,OAAL,EAAD,EAAiBvI,IAAI,CAACC,KAAL,CAAWvD,MAA5B,EAAoCsD,IAAI,CAAC2G,aAAL,CAAmBd,UAAnB,CAA8B,eAA9B,CAApC,EAAoF7F,IAAI,CAACmC,UAAL,EAApF,CAAnC;AACA,QAAIqG,qBAAqB,GAAG,EAA5B;;AACAxI,IAAAA,IAAI,CAACiE,UAAL,CAAgBxD,OAAhB,CAAwB,UAASlB,SAAT,EAAoB;AACxC,UAAIkJ,WAAW,GAAGzI,IAAI,CAACwF,MAAL,CAAYrB,MAAZ,CAAmB,UAASqB,MAAT,EAAiB;AAClD,eAAOA,MAAM,CAACkD,YAAP,OAA0BnJ,SAAjC;AACH,OAFiB,CAAlB;AAGA,UAAIoJ,aAAa,GAAG,EAApB;AACAF,MAAAA,WAAW,CAAChI,OAAZ,CAAoB,UAAS+E,MAAT,EAAiB;AACjC,YAAIA,MAAM,CAACoD,SAAP,EAAJ,EAAwB;AACpB,cAAIC,mBAAmB,GAAGlM,mBAAmB,CAAC6I,MAAM,CAACsD,gBAAP,EAAD,EAA4BjM,UAA5B,CAA7C;AACA8L,UAAAA,aAAa,GAAGxM,kBAAkB,CAACwM,aAAD,EAAgBE,mBAAhB,CAAlC;AACAL,UAAAA,qBAAqB,GAAGrM,kBAAkB,CAACqM,qBAAD,EAAwBK,mBAAxB,CAA1C;AACH;AACJ,OAND;AAOAtJ,MAAAA,SAAS,CAACwJ,gBAAV,CAA2BJ,aAA3B;AACH,KAbD;;AAcA3I,IAAAA,IAAI,CAACgE,aAAL,CAAmBvD,OAAnB,CAA2B,UAAS2D,CAAT,EAAY;AACnC,aAAOA,CAAC,CAAC2E,gBAAF,CAAmBP,qBAAnB,CAAP;AACH,KAFD;AAGH,GA1ViC;AA2VlCQ,EAAAA,sBAAsB,EAAE,gCAASC,WAAT,EAAsBC,SAAtB,EAAiC;AACrD,QAAIlJ,IAAI,GAAG,IAAX;;AACA,QAAI7C,OAAO,GAAG6C,IAAI,CAACmC,UAAL,EAAd;;AACA,QAAIgH,QAAQ,GAAG,IAAIzO,WAAW,CAAC0O,KAAhB,CAAsB;AACjCjM,MAAAA,OAAO,EAAE,CAAC,CAACA;AADsB,KAAtB,CAAf;;AAGA,QAAIqI,MAAM,GAAGxF,IAAI,CAACqJ,iBAAL,EAAb;;AACArJ,IAAAA,IAAI,CAACiE,UAAL,CAAgBxD,OAAhB,CAAwB,UAASlB,SAAT,EAAoB;AACxC,UAAI+J,UAAU,GAAG,IAAI5O,WAAW,CAAC0O,KAAhB,CAAsB;AACnCjM,QAAAA,OAAO,EAAE,CAAC,CAACA,OADwB;AAEnCgE,QAAAA,IAAI,EAAE5B,SAAS,CAAC4B,IAFmB;AAGnCzD,QAAAA,IAAI,EAAE6B,SAAS,CAAC2B;AAHmB,OAAtB,CAAjB;AAKA,UAAIuH,WAAW,GAAGjD,MAAM,CAACrB,MAAP,CAAc,UAASqB,MAAT,EAAiB;AAC7C,eAAOA,MAAM,CAACkD,YAAP,OAA0BnJ,SAAjC;AACH,OAFiB,CAAlB;AAGAkJ,MAAAA,WAAW,CAAChI,OAAZ,CAAoB,UAAS+E,MAAT,EAAiB;AACjC,YAAI+D,WAAW,GAAG/D,MAAM,CAACgE,YAAP,EAAlB;AACAF,QAAAA,UAAU,CAACG,QAAX,CAAoBF,WAAW,CAACG,GAAhC;AACAP,QAAAA,QAAQ,CAACM,QAAT,CAAkBF,WAAW,CAAC9L,GAA9B;AACH,OAJD;;AAKA,UAAI,CAACwL,WAAD,IAAgBA,WAAW,IAAIR,WAAW,CAAC/L,MAA3B,IAAqC6C,SAAS,KAAK0J,WAAvE,EAAoF;AAChF1J,QAAAA,SAAS,CAACoK,cAAV,CAAyBlB,WAAzB;AACAlJ,QAAAA,SAAS,CAACqK,gBAAV,CAA2BN,UAA3B,EAAuCtJ,IAAI,CAACsB,kBAAL,IAA2B4H,SAAlE,EAA6ElJ,IAAI,CAACgE,aAAL,CAAmB,CAAnB,EAAsB6F,0BAAnG;AACH;AACJ,KAlBD;;AAmBA,QAAI,CAACZ,WAAD,IAAgBA,WAAW,IAAIzD,MAAM,CAAC9I,MAA1C,EAAkD;AAC9CsD,MAAAA,IAAI,CAACgE,aAAL,CAAmBvD,OAAnB,CAA2B,UAAS2D,CAAT,EAAY;AACnC,eAAOA,CAAC,CAACwF,gBAAF,CAAmBT,QAAnB,EAA6BnJ,IAAI,CAACsB,kBAAlC,EAAsD,KAAK,CAA3D,EAA8DtB,IAAI,CAAC8J,WAAL,CAAiBC,UAA/E,CAAP;AACH,OAFD;AAGH;;AACD/J,IAAAA,IAAI,CAACsI,sBAAL;AACH,GA3XiC;AA4XlC0B,EAAAA,eAAe,EAAE,2BAAW;AACxB,WAAO,CAAC,KAAKhG,aAAL,IAAsB,EAAvB,EAA2BG,MAA3B,CAAkC,UAASC,CAAT,EAAY;AACjD,aAAO,CAACA,CAAC,CAACO,SAAV;AACH,KAFM,EAEJ,CAFI,CAAP;AAGH,GAhYiC;AAiYlC+D,EAAAA,YAAY,EAAE,sBAASxH,IAAT,EAAe;AACzB,QAAI+I,MAAM,GAAG,IAAb;;AACA,WAAO,CAAC,KAAKhG,UAAL,IAAmB,EAApB,EAAwBE,MAAxB,CAA+B/I,UAAU,CAAC8F,IAAD,CAAV,GAAmB,UAASkD,CAAT,EAAY;AACjE,aAAOA,CAAC,CAAClD,IAAF,KAAWA,IAAlB;AACH,KAFqC,GAElC,UAASkD,CAAT,EAAY;AACZ,aAAOA,CAAC,CAACjD,IAAF,KAAW8I,MAAM,CAACC,WAAzB;AACH,KAJM,EAIJ,CAJI,CAAP;AAKH,GAxYiC;AAyYlCC,EAAAA,cAAc,EAAE,0BAAW;AACvB,QAAInK,IAAI,GAAG,IAAX;AACA,QAAIoK,MAAM,GAAG,EAAb;;AACApK,IAAAA,IAAI,CAACiE,UAAL,CAAgBxD,OAAhB,CAAwB,UAAS/C,IAAT,EAAe;AACnC0M,MAAAA,MAAM,CAAC7G,IAAP,CAAY;AACRiC,QAAAA,MAAM,EAAExF,IAAI,CAACwF,MAAL,CAAYrB,MAAZ,CAAmB,UAASqB,MAAT,EAAiB;AACxC,iBAAOA,MAAM,CAACkD,YAAP,OAA0BhL,IAAjC;AACH,SAFO,CADA;AAIR6B,QAAAA,SAAS,EAAE7B,IAJH;AAKR2M,QAAAA,YAAY,EAAE3M,IAAI,CAACmI,UAAL;AALN,OAAZ;AAOH,KARD;;AASA,WAAO;AACHuE,MAAAA,MAAM,EAAEA,MADL;AAEHE,MAAAA,YAAY,EAAEtK,IAAI,CAACgE,aAFhB;AAGHuG,MAAAA,eAAe,EAAEvK,IAAI,CAACgE,aAAL,CAAmB,CAAnB,EAAsB6B,UAAtB;AAHd,KAAP;AAKH,GA1ZiC;AA2ZlC2E,EAAAA,YAAY,EAAE,wBAAW;AACrB,QAAIxK,IAAI,GAAG,IAAX;;AACAA,IAAAA,IAAI,CAACyK,iBAAL,CAAuB,KAAvB;;AACAzK,IAAAA,IAAI,CAAC8J,WAAL,GAAmB9J,IAAI,CAACmK,cAAL,EAAnB;AACH,GA/ZiC;AAgalCjE,EAAAA,uBAAuB,EAAE,mCAAW;AAChC,QAAIwE,yBAAyB,GAAG,EAAhC;AACA,SAAKlF,MAAL,CAAY/E,OAAZ,CAAoB,UAAS+E,MAAT,EAAiB;AACjC,UAAI9H,IAAI,GAAG8H,MAAM,CAACkD,YAAP,EAAX;;AACA,UAAIlD,MAAM,CAACmF,mBAAP,EAAJ,EAAkC;AAC9BjN,QAAAA,IAAI,CAACkN,qBAAL;AACAF,QAAAA,yBAAyB,CAACnH,IAA1B,CAA+B7F,IAA/B;AACH;AACJ,KAND;;AAOA,SAAKuG,UAAL,CAAgBxD,OAAhB,CAAwB,UAAS/C,IAAT,EAAe;AACnC,UAAIgN,yBAAyB,CAACG,OAA1B,CAAkCnN,IAAlC,MAA4C,CAAC,CAAjD,EAAoD;AAChDA,QAAAA,IAAI,CAACoN,oBAAL;AACH;AACJ,KAJD;AAKH,GA9aiC;AA+alC7H,EAAAA,oBAAoB,EAAE,8BAAS8H,YAAT,EAAuBC,WAAvB,EAAoCvO,WAApC,EAAiDU,OAAjD,EAA0D6F,OAA1D,EAAmE;AACrF,QAAIhD,IAAI,GAAG,IAAX;;AACA,QAAIiL,mBAAmB,GAAGjL,IAAI,CAACkL,8BAAL,CAAoCH,YAApC,EAAkDC,WAAlD,EAA+D7N,OAA/D,CAA1B;;AACA,QAAIU,OAAO,GAAGjC,OAAO,CAAC,IAAD,EAAO,EAAP,EAAWqP,mBAAX,EAAgCxO,WAAhC,EAA6CuD,IAAI,CAACmL,mBAAL,CAAyBJ,YAAzB,EAAuCE,mBAAvC,EAA4D9N,OAA5D,CAA7C,CAArB;;AACA,QAAI6F,OAAJ,EAAa;AACTnF,MAAAA,OAAO,CAACmE,OAAR,GAAkBnE,OAAO,CAACuN,IAAR,CAAapJ,OAAb,GAAuBnE,OAAO,CAACwN,SAAR,CAAkBrJ,OAAlB,GAA4BnE,OAAO,CAACyN,KAAR,CAActJ,OAAd,GAAwB,KAA7F;AACAnE,MAAAA,OAAO,CAAC0N,KAAR,GAAgB,EAAhB;AACH;;AACD,WAAO1N,OAAP;AACH,GAxbiC;AAyblC2N,EAAAA,aAAa,EAAE,uBAAShG,MAAT,EAAiB;AAC5B,WAAOxK,iBAAiB,CAACwK,MAAM,CAACkD,YAAP,GAAsB5K,WAAtB,MAAuC,EAAxC,CAAxB;AACH,GA3biC;AA4blC8G,EAAAA,WAAW,EAAE,qBAASf,cAAT,EAAyBhG,OAAzB,EAAkCmF,OAAlC,EAA2CpF,KAA3C,EAAkD;AAC3D,QAAIoC,IAAI,GAAG,IAAX;AACA,QAAI+K,YAAY,GAAGlH,cAAc,GAAG,cAAH,GAAoB,WAArD;;AACA,QAAI4H,iBAAiB,GAAG7P,OAAO,CAAC;AAC5B8P,MAAAA,QAAQ,EAAE1L,IAAI,CAAC2L,SADa;AAE5BC,MAAAA,gBAAgB,EAAE5L,IAAI,CAACsD,iBAFK;AAG5BuI,MAAAA,YAAY,EAAE7L,IAAI,CAAC8L,aAHS;AAI5BC,MAAAA,SAAS,EAAElI,cAAc,GAAG,KAAH,GAAW,KAJR;AAK5BmI,MAAAA,WAAW,EAAE,KALe;AAM5BC,MAAAA,WAAW,EAAEjM,IAAI,CAACgI,YANU;AAO5BkE,MAAAA,cAAc,EAAElM,IAAI,CAACoI,eAPO;AAQ5B+D,MAAAA,kBAAkB,EAAEnM,IAAI,CAACmI,mBARG;AAS5BiE,MAAAA,gBAAgB,EAAEpM,IAAI,CAACqI,iBATK;AAU5BgE,MAAAA,kBAAkB,EAAErM,IAAI,CAACkI,UAVG;AAW5BoE,MAAAA,SAAS,EAAEtM,IAAI,CAACiI,UAXY;AAY5BlD,MAAAA,cAAc,EAAElB;AAZY,KAAD,EAa5B7D,IAAI,CAACuM,wBAAL,CAA8BxB,YAA9B,CAb4B,CAA/B;;AAcA,QAAIrN,IAAI,GAAG,IAAI9C,UAAU,CAAC4R,IAAf,CAAoBf,iBAApB,CAAX;AACA/N,IAAAA,IAAI,CAAC6G,aAAL,CAAmB1G,OAAnB;AACAH,IAAAA,IAAI,CAACiH,SAAL,GAAiB3B,OAAjB;AACA,WAAOtF,IAAP;AACH,GAjdiC;AAkdlC+O,EAAAA,8BAA8B,EAAE,wCAAS/O,IAAT,EAAegP,KAAf,EAAsB;AAClD,WAAO,KAAP;AACH,GApdiC;AAqdlCC,EAAAA,6BAA6B,EAAE,uCAASjP,IAAT,EAAegP,KAAf,EAAsB;AACjD,QAAI1M,IAAI,GAAG,IAAX;;AACA,QAAItC,IAAI,CAACmI,UAAL,GAAkB3C,UAAtB,EAAkC;AAC9BlD,MAAAA,IAAI,CAAC4M,uBAAL,CAA6B,GAAGpJ,MAAH,CAAU9F,IAAI,CAACmI,UAAL,GAAkB3C,UAA5B,EAAwC,cAAxC,CAA7B,EAAsFwJ,KAAtF;AACH;AACJ,GA1diC;AA2dlC5H,EAAAA,qBAAqB,EAAE,iCAAW;AAC9B,QAAI+H,KAAK,GAAG,IAAZ;AACA,WAAO,UAASnP,IAAT,EAAeoP,IAAf,EAAqB;AACxB,UAAI/O,eAAe,GAAG+O,IAAI,CAAC/O,eAA3B;AAAA,UACI2O,KAAK,GAAGI,IAAI,CAACJ,KADjB;;AAEAG,MAAAA,KAAK,CAACF,6BAAN,CAAoCjP,IAApC,EAA0CgP,KAA1C;;AACAhP,MAAAA,IAAI,CAACqP,oBAAL,CAA0BL,KAA1B;AACAhP,MAAAA,IAAI,CAACK,eAAL,GAAuBA,eAAvB;;AACA,UAAI,CAAC8O,KAAK,CAACJ,8BAAN,CAAqC/O,IAArC,EAA2CgP,KAA3C,CAAL,EAAwD;AACpD,YAAIG,KAAK,CAACG,gBAAV,EAA4B;AACxBH,UAAAA,KAAK,CAACI,oBAAN;AACH,SAFD,MAEO;AACHJ,UAAAA,KAAK,CAACK,cAAN,CAAqB,CAAC3Q,YAAD,CAArB;AACH;AACJ;AACJ,KAbD;AAcH,GA3eiC;AA4elC4Q,EAAAA,mBAAmB,EAAE,+BAAW;AAC5B,WAAOvR,OAAO,CAAC,KAAK4C,QAAL,EAAD,EAAkB;AAC5Bc,MAAAA,YAAY,EAAE,KAAK0K,eAAL;AADc,KAAlB,CAAd;AAGH,GAhfiC;AAiflCkB,EAAAA,8BAA8B,EAAE,wCAASH,YAAT,EAAuBC,WAAvB,EAAoC7N,OAApC,EAA6C;AACzE6N,IAAAA,WAAW,GAAG,KAAKrE,aAAL,CAAmBd,UAAnB,CAA8BkF,YAA9B,EAA4CC,WAA5C,EAAyD7N,OAAzD,CAAd;;AACA,QAAI6N,WAAW,CAAC7L,MAAhB,EAAwB;AACpB7D,MAAAA,KAAK,CAAC0P,WAAW,CAAC7L,MAAb,EAAqB,UAASiH,CAAT,EAAY;AAClC4E,QAAAA,WAAW,CAAC7L,MAAZ,CAAmBiH,CAAnB,IAAwBxK,OAAO,CAAC,IAAD,EAAO,EAAP,EAAWoP,WAAW,CAACoC,UAAvB,EAAmCpC,WAAW,CAAC7L,MAAZ,CAAmBiH,CAAnB,CAAnC,CAA/B;AACH,OAFI,CAAL;AAGH;;AACD,QAAI4E,WAAW,CAAC5L,aAAhB,EAA+B;AAC3B9D,MAAAA,KAAK,CAAC0P,WAAW,CAAC5L,aAAb,EAA4B,UAASgH,CAAT,EAAYiH,IAAZ,EAAkB;AAC/CrC,QAAAA,WAAW,CAAC5L,aAAZ,CAA0BgH,CAA1B,IAA+BxK,OAAO,CAAC,IAAD,EAAO,EAAP,EAAWoP,WAAW,CAACsC,iBAAvB,EAA0CD,IAA1C,CAAtC;AACH,OAFI,CAAL;AAGH;;AACD,WAAOrC,WAAP;AACH,GA9fiC;AA+flCuC,EAAAA,OAAO,EAAE,mBAAW;AAChB,SAAKnN,YAAL;;AACA,SAAK5B,QAAL;AACH,GAlgBiC;AAmgBlCgP,EAAAA,WAAW,EAAE,qBAASC,QAAT,EAAmB;AAC5B,QAAIzN,IAAI,GAAG,IAAX;AACA,QAAI0N,kBAAkB,GAAGD,QAAQ,EAAjC;AACA,QAAIE,SAAS,GAAG3N,IAAI,CAAC4N,+BAAL,EAAhB;;AACA,QAAID,SAAJ,EAAe;AACX,UAAI5Q,IAAI,GAAG,KAAK8Q,OAAL,CAAaC,QAAb,CAAsB,KAAKC,KAA3B,EAAkC,KAAKA,KAAvC,EAA8C,CAACJ,SAAS,CAACvQ,KAAX,EAAkBuQ,SAAS,CAACtQ,MAA5B,CAA9C,CAAX;;AACAsQ,MAAAA,SAAS,CAACvQ,KAAV,GAAkBE,IAAI,CAAC0Q,GAAL,CAAS,CAAT,EAAYjR,IAAI,CAAC,CAAD,CAAhB,CAAlB;AACA4Q,MAAAA,SAAS,CAACtQ,MAAV,GAAmBC,IAAI,CAAC0Q,GAAL,CAAS,CAAT,EAAYjR,IAAI,CAAC,CAAD,CAAhB,CAAnB;AACA,WAAKkR,OAAL,GAAe,KAAKC,qBAAL,CAA2B,KAAKH,KAAhC,CAAf;AACAN,MAAAA,QAAQ,CAACE,SAAD,EAAYD,kBAAZ,CAAR;AACH;AACJ,GA9gBiC;AA+gBlCE,EAAAA,+BAA+B,EAAE,2CAAW;AACxC,WAAO,KAAKO,aAAL,CAAmBC,2BAAnB,CAA+C,KAAK9G,iBAAL,EAA/C,EAAyE,KAAKnF,UAAL,EAAzE,CAAP;AACH,GAjhBiC;AAkhBlCyK,EAAAA,uBAAuB,EAAE,iCAAS3O,QAAT,EAAmBjE,KAAnB,EAA0B;AAC/C,QAAIgG,IAAI,GAAG,IAAX;AACA,QAAIkB,IAAI,GAAGjD,QAAQ,CAACC,KAAT,CAAe,MAAf,EAAuB,CAAvB,CAAX;AACA,QAAIN,KAAK,GAAGK,QAAQ,CAACoQ,KAAT,CAAe,MAAf,CAAZ;AACAzQ,IAAAA,KAAK,GAAGxC,UAAU,CAACwC,KAAD,CAAV,GAAoB0Q,QAAQ,CAAC1Q,KAAK,CAAC,CAAD,CAAN,CAA5B,GAAyCA,KAAjD;;AACA,QAAIK,QAAQ,CAAC4M,OAAT,CAAiB,aAAjB,IAAkC,CAAtC,EAAyC;AACrC7K,MAAAA,IAAI,CAACuO,qBAAL,CAA2BrN,IAA3B,EAAiCtD,KAAjC,EAAwC5D,KAAxC;AACH,KAFD,MAEO;AACH,UAAI,CAAC,aAAa8B,IAAI,CAAC9B,KAAD,CAAjB,IAA4BiB,QAAQ,CAACjB,KAAD,CAArC,KAAiDkH,IAAI,CAAC2J,OAAL,CAAa,MAAb,IAAuB,CAAxE,IAA6E2D,IAAI,CAACC,SAAL,CAAezU,KAAf,EAAsB6Q,OAAtB,CAA8B,aAA9B,IAA+C,CAAhI,EAAmI;AAC/H,YAAIzP,UAAU,CAACpB,KAAK,CAAC8D,WAAP,CAAd,EAAmC;AAC/BkC,UAAAA,IAAI,CAACuO,qBAAL,CAA2BrN,IAA3B,EAAiCtD,KAAjC,EAAwC5D,KAAK,CAAC8D,WAA9C;AACH,SAFD,MAEO;AACH,cAAI7C,QAAQ,CAACjB,KAAD,CAAZ,EAAqB;AACjBA,YAAAA,KAAK,CAACyG,OAAN,CAAc,UAAS2D,CAAT,EAAYgC,CAAZ,EAAe;AACzB,qBAAOhL,UAAU,CAACgJ,CAAC,CAACtG,WAAH,CAAV,IAA6BkC,IAAI,CAACuO,qBAAL,CAA2BrN,IAA3B,EAAiCkF,CAAjC,EAAoChC,CAAC,CAACtG,WAAtC,CAApC;AACH,aAFD;AAGH;AACJ;AACJ;AACJ;AACJ,GAtiBiC;AAuiBlCyQ,EAAAA,qBAAqB,EAAE,+BAASG,QAAT,EAAmB9Q,KAAnB,EAA0B5D,KAA1B,EAAiC;AACpD,QAAIgG,IAAI,GAAG,IAAX;AACA,QAAInC,OAAO,GAAGmC,IAAI,CAAC2O,QAAL,CAAcD,QAAd,CAAd;;AACA,QAAI,CAAC7Q,OAAL,EAAc;AACV;AACH;;AACD,QAAI,CAACzC,UAAU,CAACwC,KAAD,CAAf,EAAwB;AACpBC,MAAAA,OAAO,CAACqB,kBAAR,GAA6BlF,KAA7B;AACH,KAFD,MAEO;AACH6D,MAAAA,OAAO,CAACD,KAAD,CAAP,CAAesB,kBAAf,GAAoClF,KAApC;AACH;;AACDgG,IAAAA,IAAI,CAACsB,kBAAL,GAA0B,IAA1B;AACH,GAnjBiC;AAojBlCsN,EAAAA,qBAAqB,EAAE,iCAAW;AAC9B,SAAK3K,UAAL,CAAgBxD,OAAhB,CAAwB,UAAS/C,IAAT,EAAe;AACnC,aAAOA,IAAI,CAACmR,aAAL,EAAP;AACH,KAFD;AAGH,GAxjBiC;AAyjBlCC,EAAAA,sBAAsB,EAAE,kCAAW;AAC/B,SAAKtQ,QAAL;;AACA5C,IAAAA,OAAO,CAAC,KAAKmT,mBAAN,EAA2B;AAC9B,+BAAyB;AADK,KAA3B,CAAP;AAGH,GA9jBiC;AA+jBlCC,EAAAA,oBAAoB,EAAE,8BAAS3M,MAAT,EAAiBrI,KAAjB,EAAwBiV,aAAxB,EAAuC;AACzD,SAAKzQ,QAAL,CAAcC,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;;AACA,QAAI,CAAC,KAAKwQ,oBAAV,EAAgC;AAC5B,WAAKtC,uBAAL,CAA6BvK,MAA7B,EAAqCrI,KAArC;AACH;AACJ,GApkBiC;AAqkBlCmV,EAAAA,kBAAkB,EAAE,8BAAW;AAC3B,QAAInP,IAAI,GAAG,IAAX;;AACAA,IAAAA,IAAI,CAACiE,UAAL,CAAgBxD,OAAhB,CAAwB,UAAS/C,IAAT,EAAe;AACnC,UAAIA,IAAI,CAACmI,UAAL,GAAkB3C,UAAtB,EAAkC;AAC9B,YAAIkM,IAAI,GAAG,GAAG5L,MAAH,CAAU9F,IAAI,CAACmI,UAAL,GAAkB3C,UAA5B,EAAwC,cAAxC,CAAX;AACA,YAAIpF,WAAW,GAAG/B,wBAAwB,CAAC2B,IAAI,CAACI,WAAL,EAAD,EAAqB,CAAC7C,QAAQ,CAAC+E,IAAI,CAACqC,MAAL,CAAY+M,IAAZ,CAAD,CAA9B,CAA1C;;AACA,YAAI,CAAC1R,IAAI,CAACK,eAAN,IAAyB,CAAC/B,cAAc,CAAC8B,WAAD,EAAckC,IAAI,CAACqC,MAAL,CAAY+M,IAAZ,CAAd,CAA5C,EAA8E;AAC1EpP,UAAAA,IAAI,CAACqC,MAAL,CAAY+M,IAAZ,EAAkBtR,WAAlB;AACH,SAFD,MAEO;AACHJ,UAAAA,IAAI,CAACK,eAAL,GAAuB,IAAvB;AACH;AACJ;AACJ,KAVD;AAWH,GAllBiC;AAmlBlCsR,EAAAA,OAAO,EAAE,mBAAW;AAChB,SAAK7Q,QAAL;AACA,SAAK8C,kBAAL,GAA0B,KAA1B;;AACA,QAAI,SAAS,KAAKe,MAAL,CAAY,sBAAZ,CAAb,EAAkD;AAC9C,WAAK8M,kBAAL;AACH;AACJ,GAzlBiC;AA0lBlCG,EAAAA,kBAAkB,EAAE,8BAAW;AAC3B,WAAO,KAAKrL,UAAZ;AACH,GA5lBiC;AA6lBlCsL,EAAAA,oBAAoB,EAAE,8BAAS9R,GAAT,EAAcE,cAAd,EAA8B6R,UAA9B,EAA0C;AAC5D,QAAIxP,IAAI,GAAG,IAAX;;AACA,QAAIyP,UAAU,GAAGzP,IAAI,CAACsP,kBAAL,EAAjB;;AACA,QAAIvL,IAAI,GAAG,EAAX;;AACA,QAAIpG,cAAJ,EAAoB;AAChB,UAAI+R,QAAJ;;AACA,UAAIjS,GAAG,CAACQ,QAAR,EAAkB;AACdyR,QAAAA,QAAQ,GAAGjS,GAAG,CAACQ,QAAJ,CAAawF,KAAb,CAAmB,CAAnB,EAAsBhG,GAAG,CAACQ,QAAJ,CAAa4M,OAAb,CAAqB,GAArB,CAAtB,CAAX;AACH;;AACD9G,MAAAA,IAAI,GAAG0L,UAAU,CAACtL,MAAX,CAAkB,UAASC,CAAT,EAAY;AACjC,eAAOA,CAAC,CAACyB,UAAF,GAAe3C,UAAf,KAA8BwM,QAArC;AACH,OAFM,CAAP;AAGH,KARD,MAQO;AACH,UAAI,aAAa5T,IAAI,CAAC2B,GAAG,CAACzD,KAAL,CAArB,EAAkC;AAC9B+J,QAAAA,IAAI,GAAG0L,UAAU,CAACtL,MAAX,CAAkB,UAASC,CAAT,EAAY;AACjC,iBAAOA,CAAC,CAACyB,UAAF,GAAe3C,UAAf,KAA8BzF,GAAG,CAACyD,IAAzC;AACH,SAFM,CAAP;AAGH,OAJD,MAIO;AACH,YAAIjG,QAAQ,CAACwC,GAAG,CAACzD,KAAL,CAAZ,EAAyB;AACrByD,UAAAA,GAAG,CAACzD,KAAJ,CAAUyG,OAAV,CAAkB,UAASkP,CAAT,EAAY/R,KAAZ,EAAmB;AACjC,gBAAIF,IAAI,GAAG+R,UAAU,CAACtL,MAAX,CAAkB,UAASC,CAAT,EAAY;AACrC,qBAAOA,CAAC,CAACyB,UAAF,GAAe3C,UAAf,KAA8B,GAAGM,MAAH,CAAU/F,GAAG,CAACyD,IAAd,EAAoB,GAApB,EAAyBsC,MAAzB,CAAgC5F,KAAhC,EAAuC,GAAvC,CAArC;AACH,aAFU,EAER,CAFQ,CAAX;AAGAxC,YAAAA,UAAU,CAACuU,CAAC,CAACH,UAAD,CAAF,CAAV,IAA6BpU,UAAU,CAACsC,IAAD,CAAvC,KAAkDqG,IAAI,CAACnG,KAAD,CAAJ,GAAcF,IAAhE;AACH,WALD;AAMH;AACJ;AACJ;;AACD,WAAOqG,IAAP;AACH,GA1nBiC;AA2nBlC6L,EAAAA,cAAc,EAAE,wBAASnS,GAAT,EAAc;AAC1B,QAAIuC,IAAI,GAAG,IAAX;;AACA,QAAI,CAACA,IAAI,CAACkP,oBAAV,EAAgC;AAC5B,UAAIM,UAAU,GAAG,aAAjB;AACA,UAAIzL,IAAJ;AACA,UAAIpG,cAAc,GAAGF,GAAG,CAACQ,QAAJ,CAAa4M,OAAb,CAAqB2E,UAArB,IAAmC,CAAnC,GAAuC,IAAvC,GAA8CxP,IAAI,CAAC6P,2BAAL,CAAiCpS,GAAjC,EAAsCoN,OAAtC,CAA8C2E,UAA9C,IAA4D,CAAC,CAA7D,GAAiE,KAAjE,GAAyE,KAAK,CAAjJ;;AACA,UAAIpU,UAAU,CAACuC,cAAD,CAAd,EAAgC;AAC5BoG,QAAAA,IAAI,GAAG/D,IAAI,CAACuP,oBAAL,CAA0B9R,GAA1B,EAA+BE,cAA/B,EAA+C6R,UAA/C,CAAP;;AACA,YAAIzL,IAAJ,EAAU;AACN,cAAIA,IAAI,CAACrH,MAAL,GAAc,CAAd,IAAmBzB,QAAQ,CAACwC,GAAG,CAACzD,KAAL,CAA/B,EAA4C;AACxC+J,YAAAA,IAAI,CAACtD,OAAL,CAAa,UAAS2D,CAAT,EAAYxG,KAAZ,EAAmB;AAC5B,qBAAOJ,0BAA0B,CAACC,GAAD,EAAM2G,CAAN,EAASzG,cAAT,EAAyBC,KAAzB,CAAjC;AACH,aAFD;AAGH,WAJD,MAIO;AACH,gBAAI,MAAMmG,IAAI,CAACrH,MAAf,EAAuB;AACnBc,cAAAA,0BAA0B,CAACC,GAAD,EAAMsG,IAAI,CAAC,CAAD,CAAV,EAAepG,cAAf,CAA1B;AACH;AACJ;AACJ;AACJ;AACJ;;AACDqC,IAAAA,IAAI,CAACxB,QAAL,CAAcf,GAAd;AACH,GAjpBiC;AAkpBlCwP,EAAAA,oBAAoB,EAAE,gCAAW;AAC7B,QAAIjN,IAAI,GAAG,IAAX;;AACAA,IAAAA,IAAI,CAAC8P,6BAAL,CAAmC,KAAnC;;AACA,QAAI,CAAC9P,IAAI,CAAC+P,QAAL,CAAcC,GAAd,CAAkB,aAAlB,CAAL,EAAuC;AACnC,UAAIC,iBAAiB,GAAG,KAAK5N,MAAL,CAAY,mBAAZ,CAAxB;;AACArC,MAAAA,IAAI,CAACkQ,SAAL,CAAe;AACXC,QAAAA,KAAK,EAAE,IADI;AAEXC,QAAAA,SAAS,EAAE,KAFA;AAGXC,QAAAA,UAAU,EAAE,KAHD;AAIXC,QAAAA,UAAU,EAAElV,UAAU,CAAC6U,iBAAD,CAAV,GAAgCA,iBAAhC,GAAoD,KAAK5N,MAAL,CAAY,kBAAZ,KAAmC,KAJxF;AAKXkO,QAAAA,OAAO,EAAE;AALE,OAAf;;AAOAvQ,MAAAA,IAAI,CAAC4O,qBAAL;AACH;AACJ,GAhqBiC;AAiqBlC4B,EAAAA,gBAAgB,EAAE,4BAAW;AACzB,QAAIxQ,IAAI,GAAG,IAAX;;AACAA,IAAAA,IAAI,CAACiE,UAAL,CAAgBxD,OAAhB,CAAwB,UAAS/C,IAAT,EAAe;AACnCA,MAAAA,IAAI,CAAC8S,gBAAL,CAAsB,KAAtB;;AACAxQ,MAAAA,IAAI,CAAC2M,6BAAL,CAAmCjP,IAAnC;AACH,KAHD;;AAIAsC,IAAAA,IAAI,CAACkN,cAAL,CAAoB,CAAC3Q,YAAD,CAApB;AACH,GAxqBiC;AAyqBlCkU,EAAAA,gBAAgB,EAAE,QAzqBgB;AA0qBlCC,EAAAA,mBAAmB,EAAEhV,KA1qBa;AA2qBlC+O,EAAAA,iBAAiB,EAAE/O;AA3qBe,CAAlB,CAApB;AA6qBAiV,OAAO,CAACtS,aAAR,GAAwBA,aAAxB","sourcesContent":["/**\r\n * DevExtreme (viz/chart_components/advanced_chart.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar inArray = require(\"../../core/utils/array\").inArray;\r\nvar iteratorModule = require(\"../../core/utils/iterator\");\r\nvar rangeModule = require(\"../translators/range\");\r\nvar DEFAULT_AXIS_NAME = \"defaultAxisName\";\r\nvar axisModule = require(\"../axes/base_axis\");\r\nvar seriesFamilyModule = require(\"../core/series_family\");\r\nvar BaseChart = require(\"./base_chart\").BaseChart;\r\nvar crosshairModule = require(\"./crosshair\");\r\nvar getViewPortFilter = require(\"../series/helpers/range_data_calculator\").getViewPortFilter;\r\nvar _isArray = Array.isArray;\r\nvar _isDefined = require(\"../../core/utils/type\").isDefined;\r\nvar _each = iteratorModule.each;\r\nvar _reverseEach = iteratorModule.reverseEach;\r\nvar _noop = require(\"../../core/utils/common\").noop;\r\nvar _extend = extend;\r\nvar vizUtils = require(\"../core/utils\");\r\nvar type = require(\"../../core/utils/type\").type;\r\nvar convertVisualRangeObject = vizUtils.convertVisualRangeObject;\r\nvar rangesAreEqual = vizUtils.rangesAreEqual;\r\nvar _map = vizUtils.map;\r\nvar mergeMarginOptions = vizUtils.mergeMarginOptions;\r\nvar FONT = \"font\";\r\nvar COMMON_AXIS_SETTINGS = \"commonAxisSettings\";\r\nvar DEFAULT_PANE_NAME = \"default\";\r\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\r\n\r\nfunction prepareAxis(axisOptions) {\r\n    return _isArray(axisOptions) ? 0 === axisOptions.length ? [{}] : axisOptions : [axisOptions]\r\n}\r\n\r\nfunction processBubbleMargin(opt, bubbleSize) {\r\n    if (opt.processBubbleSize) {\r\n        opt.size = bubbleSize\r\n    }\r\n    return opt\r\n}\r\n\r\nfunction estimateBubbleSize(size, panesCount, maxSize, rotated) {\r\n    var width = rotated ? size.width / panesCount : size.width;\r\n    var height = rotated ? size.height : size.height / panesCount;\r\n    return Math.min(width, height) * maxSize\r\n}\r\n\r\nfunction setAxisVisualRangeByOption(arg, axis, isDirectOption, index) {\r\n    var options;\r\n    var visualRange;\r\n    if (isDirectOption) {\r\n        visualRange = arg.value;\r\n        options = {\r\n            skipEventRising: true\r\n        };\r\n        var pathElements = arg.fullName.split(\".\");\r\n        var destElem = pathElements[pathElements.length - 1];\r\n        if (\"endValue\" === destElem || \"startValue\" === destElem) {\r\n            options = {\r\n                allowPartialUpdate: true\r\n            };\r\n            visualRange = _defineProperty({}, destElem, arg.value)\r\n        }\r\n    } else {\r\n        visualRange = (_isDefined(index) ? arg.value[index] : arg.value).visualRange\r\n    }\r\n    axis.visualRange(visualRange, options)\r\n}\r\nvar AdvancedChart = BaseChart.inherit({\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase.apply(this, arguments);\r\n        _extend(this._deprecatedOptions, {\r\n            barWidth: {\r\n                since: \"18.1\",\r\n                message: \"Use the 'commonSeriesSettings.barPadding' or 'series.barPadding' option instead\"\r\n            },\r\n            equalBarWidth: {\r\n                since: \"18.1\",\r\n                message: \"Use the 'commonSeriesSettings.ignoreEmptyPoints' or 'series.ignoreEmptyPoints' option instead\"\r\n            }\r\n        })\r\n    },\r\n    _fontFields: [COMMON_AXIS_SETTINGS + \".label.\" + FONT, COMMON_AXIS_SETTINGS + \".title.\" + FONT],\r\n    _partialOptionChangesMap: {\r\n        visualRange: VISUAL_RANGE,\r\n        _customVisualRange: VISUAL_RANGE,\r\n        strips: \"REFRESH_AXES\",\r\n        constantLines: \"REFRESH_AXES\"\r\n    },\r\n    _partialOptionChangesPath: {\r\n        argumentAxis: [\"strips\", \"constantLines\", \"visualRange\", \"_customVisualRange\"],\r\n        valueAxis: [\"strips\", \"constantLines\", \"visualRange\", \"_customVisualRange\"]\r\n    },\r\n    _initCore: function() {\r\n        this._panesClipRects = {};\r\n        this.callBase()\r\n    },\r\n    _disposeCore: function() {\r\n        var disposeObjectsInArray = this._disposeObjectsInArray;\r\n        var panesClipRects = this._panesClipRects;\r\n        this.callBase();\r\n        disposeObjectsInArray.call(panesClipRects, \"fixed\");\r\n        disposeObjectsInArray.call(panesClipRects, \"base\");\r\n        disposeObjectsInArray.call(panesClipRects, \"wide\");\r\n        this._panesClipRects = null\r\n    },\r\n    _dispose: function() {\r\n        var that = this;\r\n        var disposeObjectsInArray = this._disposeObjectsInArray;\r\n        that.callBase();\r\n        that.panes = null;\r\n        if (that._legend) {\r\n            that._legend.dispose();\r\n            that._legend = null\r\n        }\r\n        disposeObjectsInArray.call(that, \"panesBackground\");\r\n        disposeObjectsInArray.call(that, \"seriesFamilies\");\r\n        that._disposeAxes()\r\n    },\r\n    _createPanes: function() {\r\n        this._cleanPanesClipRects(\"fixed\");\r\n        this._cleanPanesClipRects(\"base\");\r\n        this._cleanPanesClipRects(\"wide\")\r\n    },\r\n    _cleanPanesClipRects: function(clipArrayName) {\r\n        var clipArray = this._panesClipRects[clipArrayName];\r\n        (clipArray || []).forEach(function(clipRect) {\r\n            return clipRect && clipRect.dispose()\r\n        });\r\n        this._panesClipRects[clipArrayName] = []\r\n    },\r\n    _getElementsClipRectID: function(paneName) {\r\n        var clipShape = this._panesClipRects.fixed[this._getPaneIndex(paneName)];\r\n        return clipShape && clipShape.id\r\n    },\r\n    _getPaneIndex: function(paneName) {\r\n        var paneIndex;\r\n        var name = paneName || DEFAULT_PANE_NAME;\r\n        _each(this.panes, function(index, pane) {\r\n            if (pane.name === name) {\r\n                paneIndex = index;\r\n                return false\r\n            }\r\n        });\r\n        return paneIndex\r\n    },\r\n    _reinitAxes: function() {\r\n        this.panes = this._createPanes();\r\n        this._populateAxes();\r\n        this._axesReinitialized = true\r\n    },\r\n    _getCrosshairMargins: function() {\r\n        var crosshairOptions = this._getCrosshairOptions() || {};\r\n        var crosshairEnabled = crosshairOptions.enabled;\r\n        var margins = crosshairModule.getMargins();\r\n        return {\r\n            x: crosshairEnabled && crosshairOptions.horizontalLine.visible ? margins.x : 0,\r\n            y: crosshairEnabled && crosshairOptions.verticalLine.visible ? margins.y : 0\r\n        }\r\n    },\r\n    _populateAxes: function() {\r\n        var that = this;\r\n        var panes = that.panes;\r\n        var rotated = that._isRotated();\r\n        var argumentAxesOptions = prepareAxis(that.option(\"argumentAxis\") || {})[0];\r\n        var valueAxisOption = that.option(\"valueAxis\");\r\n        var valueAxesOptions = prepareAxis(valueAxisOption || {});\r\n        var argumentAxesPopulatedOptions = [];\r\n        var valueAxesPopulatedOptions = [];\r\n        var axisNames = [];\r\n        var valueAxesCounter = 0;\r\n        var paneWithNonVirtualAxis;\r\n        var crosshairMargins = that._getCrosshairMargins();\r\n\r\n        function getNextAxisName() {\r\n            return DEFAULT_AXIS_NAME + valueAxesCounter++\r\n        }\r\n        if (rotated) {\r\n            paneWithNonVirtualAxis = \"right\" === argumentAxesOptions.position ? panes[panes.length - 1].name : panes[0].name\r\n        } else {\r\n            paneWithNonVirtualAxis = \"top\" === argumentAxesOptions.position ? panes[0].name : panes[panes.length - 1].name\r\n        }\r\n        argumentAxesPopulatedOptions = _map(panes, function(pane) {\r\n            var virtual = pane.name !== paneWithNonVirtualAxis;\r\n            return that._populateAxesOptions(\"argumentAxis\", argumentAxesOptions, {\r\n                pane: pane.name,\r\n                name: null,\r\n                optionPath: \"argumentAxis\",\r\n                crosshairMargin: rotated ? crosshairMargins.x : crosshairMargins.y\r\n            }, rotated, virtual)\r\n        });\r\n        _each(valueAxesOptions, function(priority, axisOptions) {\r\n            var axisPanes = [];\r\n            var name = axisOptions.name;\r\n            if (name && inArray(name, axisNames) !== -1) {\r\n                that._incidentOccurred(\"E2102\");\r\n                return\r\n            }\r\n            name && axisNames.push(name);\r\n            if (axisOptions.pane) {\r\n                axisPanes.push(axisOptions.pane)\r\n            }\r\n            if (axisOptions.panes && axisOptions.panes.length) {\r\n                axisPanes = axisPanes.concat(axisOptions.panes.slice(0))\r\n            }\r\n            axisPanes = vizUtils.unique(axisPanes);\r\n            if (!axisPanes.length) {\r\n                axisPanes.push(void 0)\r\n            }\r\n            _each(axisPanes, function(_, pane) {\r\n                var optionPath = _isArray(valueAxisOption) ? \"valueAxis[\".concat(priority, \"]\") : \"valueAxis\";\r\n                valueAxesPopulatedOptions.push(that._populateAxesOptions(\"valueAxis\", axisOptions, {\r\n                    name: name || getNextAxisName(),\r\n                    pane: pane,\r\n                    priority: priority,\r\n                    optionPath: optionPath,\r\n                    crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\r\n                }, rotated))\r\n            })\r\n        });\r\n        that._redesignAxes(argumentAxesPopulatedOptions, true, paneWithNonVirtualAxis);\r\n        that._redesignAxes(valueAxesPopulatedOptions, false)\r\n    },\r\n    _redesignAxes: function(options, isArgumentAxes, paneWithNonVirtualAxis) {\r\n        var that = this;\r\n        var axesBasis = [];\r\n        var axes = isArgumentAxes ? that._argumentAxes : that._valueAxes;\r\n        _each(options, function(_, opt) {\r\n            var curAxes = axes && axes.filter(function(a) {\r\n                return a.name === opt.name && (!_isDefined(opt.pane) && that.panes.some(function(p) {\r\n                    return p.name === a.pane\r\n                }) || a.pane === opt.pane)\r\n            });\r\n            if (curAxes && curAxes.length > 0) {\r\n                _each(curAxes, function(_, axis) {\r\n                    axis.updateOptions(opt);\r\n                    axis.validate();\r\n                    axesBasis.push({\r\n                        axis: axis\r\n                    })\r\n                })\r\n            } else {\r\n                axesBasis.push({\r\n                    options: opt\r\n                })\r\n            }\r\n        });\r\n        if (axes) {\r\n            _reverseEach(axes, function(index, axis) {\r\n                if (!axesBasis.some(function(basis) {\r\n                        return basis.axis && basis.axis === axis\r\n                    })) {\r\n                    that._disposeAxis(index, isArgumentAxes)\r\n                }\r\n            })\r\n        } else {\r\n            if (isArgumentAxes) {\r\n                axes = that._argumentAxes = []\r\n            } else {\r\n                axes = that._valueAxes = []\r\n            }\r\n        }\r\n        _each(axesBasis, function(index, basis) {\r\n            var axis = basis.axis;\r\n            if (basis.axis && isArgumentAxes) {\r\n                basis.axis.isVirtual = basis.axis.pane !== paneWithNonVirtualAxis\r\n            } else {\r\n                if (basis.options) {\r\n                    axis = that._createAxis(isArgumentAxes, basis.options, isArgumentAxes ? basis.options.pane !== paneWithNonVirtualAxis : void 0, isArgumentAxes ? index : void 0);\r\n                    axes.push(axis)\r\n                }\r\n            }\r\n            axis.applyVisualRangeSetter(that._getVisualRangeSetter())\r\n        })\r\n    },\r\n    _disposeAxis: function(index, isArgumentAxis) {\r\n        var axes = isArgumentAxis ? this._argumentAxes : this._valueAxes;\r\n        var axis = axes[index];\r\n        if (!axis) {\r\n            return\r\n        }\r\n        axis.dispose();\r\n        axes.splice(index, 1)\r\n    },\r\n    _disposeAxes: function() {\r\n        var that = this;\r\n        var disposeObjectsInArray = that._disposeObjectsInArray;\r\n        disposeObjectsInArray.call(that, \"_argumentAxes\");\r\n        disposeObjectsInArray.call(that, \"_valueAxes\")\r\n    },\r\n    _appendAdditionalSeriesGroups: function() {\r\n        this._crosshairCursorGroup.linkAppend();\r\n        this._scrollBar && this._scrollBarGroup.linkAppend()\r\n    },\r\n    _getLegendTargets: function() {\r\n        var _this = this;\r\n        return (this.series || []).map(function(s) {\r\n            var item = _this._getLegendOptions(s);\r\n            item.legendData.series = s;\r\n            if (!s.getOptions().showInLegend) {\r\n                item.legendData.visible = false\r\n            }\r\n            return item\r\n        })\r\n    },\r\n    _legendItemTextField: \"name\",\r\n    _seriesPopulatedHandlerCore: function() {\r\n        this._processSeriesFamilies();\r\n        this._processValueAxisFormat()\r\n    },\r\n    _renderTrackers: function() {\r\n        var that = this;\r\n        var i;\r\n        for (i = 0; i < that.series.length; ++i) {\r\n            that.series[i].drawTrackers()\r\n        }\r\n    },\r\n    _specialProcessSeries: function() {\r\n        this._processSeriesFamilies()\r\n    },\r\n    _processSeriesFamilies: function() {\r\n        var that = this;\r\n        var types = [];\r\n        var families = [];\r\n        var paneSeries;\r\n        var themeManager = that._themeManager;\r\n        var negativesAsZeroes = themeManager.getOptions(\"negativesAsZeroes\");\r\n        var negativesAsZeros = themeManager.getOptions(\"negativesAsZeros\");\r\n        var familyOptions = {\r\n            equalBarWidth: themeManager.getOptions(\"equalBarWidth\"),\r\n            minBubbleSize: themeManager.getOptions(\"minBubbleSize\"),\r\n            maxBubbleSize: themeManager.getOptions(\"maxBubbleSize\"),\r\n            barWidth: themeManager.getOptions(\"barWidth\"),\r\n            barGroupPadding: themeManager.getOptions(\"barGroupPadding\"),\r\n            barGroupWidth: themeManager.getOptions(\"barGroupWidth\"),\r\n            negativesAsZeroes: _isDefined(negativesAsZeroes) ? negativesAsZeroes : negativesAsZeros\r\n        };\r\n        if (that.seriesFamilies && that.seriesFamilies.length) {\r\n            _each(that.seriesFamilies, function(_, family) {\r\n                family.updateOptions(familyOptions);\r\n                family.adjustSeriesValues()\r\n            });\r\n            return\r\n        }\r\n        _each(that.series, function(_, item) {\r\n            if (inArray(item.type, types) === -1) {\r\n                types.push(item.type)\r\n            }\r\n        });\r\n        _each(that._getLayoutTargets(), function(_, pane) {\r\n            paneSeries = that._getSeriesForPane(pane.name);\r\n            _each(types, function(_, type) {\r\n                var family = new seriesFamilyModule.SeriesFamily({\r\n                    type: type,\r\n                    pane: pane.name,\r\n                    equalBarWidth: familyOptions.equalBarWidth,\r\n                    minBubbleSize: familyOptions.minBubbleSize,\r\n                    maxBubbleSize: familyOptions.maxBubbleSize,\r\n                    barWidth: familyOptions.barWidth,\r\n                    barGroupPadding: familyOptions.barGroupPadding,\r\n                    barGroupWidth: familyOptions.barGroupWidth,\r\n                    negativesAsZeroes: familyOptions.negativesAsZeroes,\r\n                    rotated: that._isRotated()\r\n                });\r\n                family.add(paneSeries);\r\n                family.adjustSeriesValues();\r\n                families.push(family)\r\n            })\r\n        });\r\n        that.seriesFamilies = families\r\n    },\r\n    _updateSeriesDimensions: function() {\r\n        var that = this;\r\n        var i;\r\n        var seriesFamilies = that.seriesFamilies || [];\r\n        for (i = 0; i < seriesFamilies.length; i++) {\r\n            var family = seriesFamilies[i];\r\n            family.updateSeriesValues();\r\n            family.adjustSeriesDimensions()\r\n        }\r\n    },\r\n    _getLegendCallBack: function(series) {\r\n        return this._legend && this._legend.getActionCallback(series)\r\n    },\r\n    _appendAxesGroups: function() {\r\n        var that = this;\r\n        that._stripsGroup.linkAppend();\r\n        that._gridGroup.linkAppend();\r\n        that._axesGroup.linkAppend();\r\n        that._constantLinesGroup.linkAppend();\r\n        that._labelAxesGroup.linkAppend();\r\n        that._scaleBreaksGroup.linkAppend()\r\n    },\r\n    _populateMarginOptions: function() {\r\n        var that = this;\r\n        var bubbleSize = estimateBubbleSize(that.getSize(), that.panes.length, that._themeManager.getOptions(\"maxBubbleSize\"), that._isRotated());\r\n        var argumentMarginOptions = {};\r\n        that._valueAxes.forEach(function(valueAxis) {\r\n            var groupSeries = that.series.filter(function(series) {\r\n                return series.getValueAxis() === valueAxis\r\n            });\r\n            var marginOptions = {};\r\n            groupSeries.forEach(function(series) {\r\n                if (series.isVisible()) {\r\n                    var seriesMarginOptions = processBubbleMargin(series.getMarginOptions(), bubbleSize);\r\n                    marginOptions = mergeMarginOptions(marginOptions, seriesMarginOptions);\r\n                    argumentMarginOptions = mergeMarginOptions(argumentMarginOptions, seriesMarginOptions)\r\n                }\r\n            });\r\n            valueAxis.setMarginOptions(marginOptions)\r\n        });\r\n        that._argumentAxes.forEach(function(a) {\r\n            return a.setMarginOptions(argumentMarginOptions)\r\n        })\r\n    },\r\n    _populateBusinessRange: function(updatedAxis, keepRange) {\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        var argRange = new rangeModule.Range({\r\n            rotated: !!rotated\r\n        });\r\n        var series = that._getVisibleSeries();\r\n        that._valueAxes.forEach(function(valueAxis) {\r\n            var groupRange = new rangeModule.Range({\r\n                rotated: !!rotated,\r\n                pane: valueAxis.pane,\r\n                axis: valueAxis.name\r\n            });\r\n            var groupSeries = series.filter(function(series) {\r\n                return series.getValueAxis() === valueAxis\r\n            });\r\n            groupSeries.forEach(function(series) {\r\n                var seriesRange = series.getRangeData();\r\n                groupRange.addRange(seriesRange.val);\r\n                argRange.addRange(seriesRange.arg)\r\n            });\r\n            if (!updatedAxis || updatedAxis && groupSeries.length && valueAxis === updatedAxis) {\r\n                valueAxis.setGroupSeries(groupSeries);\r\n                valueAxis.setBusinessRange(groupRange, that._axesReinitialized || keepRange, that._argumentAxes[0]._lastVisualRangeUpdateMode)\r\n            }\r\n        });\r\n        if (!updatedAxis || updatedAxis && series.length) {\r\n            that._argumentAxes.forEach(function(a) {\r\n                return a.setBusinessRange(argRange, that._axesReinitialized, void 0, that._groupsData.categories)\r\n            })\r\n        }\r\n        that._populateMarginOptions()\r\n    },\r\n    getArgumentAxis: function() {\r\n        return (this._argumentAxes || []).filter(function(a) {\r\n            return !a.isVirtual\r\n        })[0]\r\n    },\r\n    getValueAxis: function(name) {\r\n        var _this2 = this;\r\n        return (this._valueAxes || []).filter(_isDefined(name) ? function(a) {\r\n            return a.name === name\r\n        } : function(a) {\r\n            return a.pane === _this2.defaultPane\r\n        })[0]\r\n    },\r\n    _getGroupsData: function() {\r\n        var that = this;\r\n        var groups = [];\r\n        that._valueAxes.forEach(function(axis) {\r\n            groups.push({\r\n                series: that.series.filter(function(series) {\r\n                    return series.getValueAxis() === axis\r\n                }),\r\n                valueAxis: axis,\r\n                valueOptions: axis.getOptions()\r\n            })\r\n        });\r\n        return {\r\n            groups: groups,\r\n            argumentAxes: that._argumentAxes,\r\n            argumentOptions: that._argumentAxes[0].getOptions()\r\n        }\r\n    },\r\n    _groupSeries: function() {\r\n        var that = this;\r\n        that._correctValueAxes(false);\r\n        that._groupsData = that._getGroupsData()\r\n    },\r\n    _processValueAxisFormat: function() {\r\n        var axesWithFullStackedFormat = [];\r\n        this.series.forEach(function(series) {\r\n            var axis = series.getValueAxis();\r\n            if (series.isFullStackedSeries()) {\r\n                axis.setPercentLabelFormat();\r\n                axesWithFullStackedFormat.push(axis)\r\n            }\r\n        });\r\n        this._valueAxes.forEach(function(axis) {\r\n            if (axesWithFullStackedFormat.indexOf(axis) === -1) {\r\n                axis.resetAutoLabelFormat()\r\n            }\r\n        })\r\n    },\r\n    _populateAxesOptions: function(typeSelector, userOptions, axisOptions, rotated, virtual) {\r\n        var that = this;\r\n        var preparedUserOptions = that._prepareStripsAndConstantLines(typeSelector, userOptions, rotated);\r\n        var options = _extend(true, {}, preparedUserOptions, axisOptions, that._prepareAxisOptions(typeSelector, preparedUserOptions, rotated));\r\n        if (virtual) {\r\n            options.visible = options.tick.visible = options.minorTick.visible = options.label.visible = false;\r\n            options.title = {}\r\n        }\r\n        return options\r\n    },\r\n    _getValFilter: function(series) {\r\n        return getViewPortFilter(series.getValueAxis().visualRange() || {})\r\n    },\r\n    _createAxis: function(isArgumentAxes, options, virtual, index) {\r\n        var that = this;\r\n        var typeSelector = isArgumentAxes ? \"argumentAxis\" : \"valueAxis\";\r\n        var renderingSettings = _extend({\r\n            renderer: that._renderer,\r\n            incidentOccurred: that._incidentOccurred,\r\n            eventTrigger: that._eventTrigger,\r\n            axisClass: isArgumentAxes ? \"arg\" : \"val\",\r\n            widgetClass: \"dxc\",\r\n            stripsGroup: that._stripsGroup,\r\n            labelAxesGroup: that._labelAxesGroup,\r\n            constantLinesGroup: that._constantLinesGroup,\r\n            scaleBreaksGroup: that._scaleBreaksGroup,\r\n            axesContainerGroup: that._axesGroup,\r\n            gridGroup: that._gridGroup,\r\n            isArgumentAxis: isArgumentAxes\r\n        }, that._getAxisRenderingOptions(typeSelector));\r\n        var axis = new axisModule.Axis(renderingSettings);\r\n        axis.updateOptions(options);\r\n        axis.isVirtual = virtual;\r\n        return axis\r\n    },\r\n    _applyVisualRangeByVirtualAxes: function(axis, range) {\r\n        return false\r\n    },\r\n    _applyCustomVisualRangeOption: function(axis, range) {\r\n        var that = this;\r\n        if (axis.getOptions().optionPath) {\r\n            that._parseVisualRangeOption(\"\".concat(axis.getOptions().optionPath, \".visualRange\"), range)\r\n        }\r\n    },\r\n    _getVisualRangeSetter: function() {\r\n        var chart = this;\r\n        return function(axis, _ref) {\r\n            var skipEventRising = _ref.skipEventRising,\r\n                range = _ref.range;\r\n            chart._applyCustomVisualRangeOption(axis, range);\r\n            axis.setCustomVisualRange(range);\r\n            axis.skipEventRising = skipEventRising;\r\n            if (!chart._applyVisualRangeByVirtualAxes(axis, range)) {\r\n                if (chart._applyingChanges) {\r\n                    chart._change_VISUAL_RANGE()\r\n                } else {\r\n                    chart._requestChange([VISUAL_RANGE])\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _getTrackerSettings: function() {\r\n        return _extend(this.callBase(), {\r\n            argumentAxis: this.getArgumentAxis()\r\n        })\r\n    },\r\n    _prepareStripsAndConstantLines: function(typeSelector, userOptions, rotated) {\r\n        userOptions = this._themeManager.getOptions(typeSelector, userOptions, rotated);\r\n        if (userOptions.strips) {\r\n            _each(userOptions.strips, function(i) {\r\n                userOptions.strips[i] = _extend(true, {}, userOptions.stripStyle, userOptions.strips[i])\r\n            })\r\n        }\r\n        if (userOptions.constantLines) {\r\n            _each(userOptions.constantLines, function(i, line) {\r\n                userOptions.constantLines[i] = _extend(true, {}, userOptions.constantLineStyle, line)\r\n            })\r\n        }\r\n        return userOptions\r\n    },\r\n    refresh: function() {\r\n        this._disposeAxes();\r\n        this.callBase()\r\n    },\r\n    _layoutAxes: function(drawAxes) {\r\n        var that = this;\r\n        var cleanPanesCanvases = drawAxes();\r\n        var needSpace = that.checkForMoreSpaceForPanesCanvas();\r\n        if (needSpace) {\r\n            var size = this._layout.backward(this._rect, this._rect, [needSpace.width, needSpace.height]);\r\n            needSpace.width = Math.max(0, size[0]);\r\n            needSpace.height = Math.max(0, size[1]);\r\n            this._canvas = this._createCanvasFromRect(this._rect);\r\n            drawAxes(needSpace, cleanPanesCanvases)\r\n        }\r\n    },\r\n    checkForMoreSpaceForPanesCanvas: function() {\r\n        return this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), this._isRotated())\r\n    },\r\n    _parseVisualRangeOption: function(fullName, value) {\r\n        var that = this;\r\n        var name = fullName.split(/[.[]/)[0];\r\n        var index = fullName.match(/\\d+/g);\r\n        index = _isDefined(index) ? parseInt(index[0]) : index;\r\n        if (fullName.indexOf(\"visualRange\") > 0) {\r\n            that._setCustomVisualRange(name, index, value)\r\n        } else {\r\n            if ((\"object\" === type(value) || _isArray(value)) && name.indexOf(\"Axis\") > 0 && JSON.stringify(value).indexOf(\"visualRange\") > 0) {\r\n                if (_isDefined(value.visualRange)) {\r\n                    that._setCustomVisualRange(name, index, value.visualRange)\r\n                } else {\r\n                    if (_isArray(value)) {\r\n                        value.forEach(function(a, i) {\r\n                            return _isDefined(a.visualRange) && that._setCustomVisualRange(name, i, a.visualRange)\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _setCustomVisualRange: function(axesName, index, value) {\r\n        var that = this;\r\n        var options = that._options[axesName];\r\n        if (!options) {\r\n            return\r\n        }\r\n        if (!_isDefined(index)) {\r\n            options._customVisualRange = value\r\n        } else {\r\n            options[index]._customVisualRange = value\r\n        }\r\n        that._axesReinitialized = true\r\n    },\r\n    _raiseZoomEndHandlers: function() {\r\n        this._valueAxes.forEach(function(axis) {\r\n            return axis.handleZoomEnd()\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        _extend(this._optionsByReference, {\r\n            \"valueAxis.visualRange\": true\r\n        })\r\n    },\r\n    _notifyOptionChanged: function(option, value, previousValue) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._optionChangedLocker) {\r\n            this._parseVisualRangeOption(option, value)\r\n        }\r\n    },\r\n    _notifyVisualRange: function() {\r\n        var that = this;\r\n        that._valueAxes.forEach(function(axis) {\r\n            if (axis.getOptions().optionPath) {\r\n                var path = \"\".concat(axis.getOptions().optionPath, \".visualRange\");\r\n                var visualRange = convertVisualRangeObject(axis.visualRange(), !_isArray(that.option(path)));\r\n                if (!axis.skipEventRising || !rangesAreEqual(visualRange, that.option(path))) {\r\n                    that.option(path, visualRange)\r\n                } else {\r\n                    axis.skipEventRising = null\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _notify: function() {\r\n        this.callBase();\r\n        this._axesReinitialized = false;\r\n        if (true !== this.option(\"disableTwoWayBinding\")) {\r\n            this._notifyVisualRange()\r\n        }\r\n    },\r\n    _getAxesForScaling: function() {\r\n        return this._valueAxes\r\n    },\r\n    _getAxesByOptionPath: function(arg, isDirectOption, optionName) {\r\n        var that = this;\r\n        var sourceAxes = that._getAxesForScaling();\r\n        var axes = [];\r\n        if (isDirectOption) {\r\n            var axisPath;\r\n            if (arg.fullName) {\r\n                axisPath = arg.fullName.slice(0, arg.fullName.indexOf(\".\"))\r\n            }\r\n            axes = sourceAxes.filter(function(a) {\r\n                return a.getOptions().optionPath === axisPath\r\n            })\r\n        } else {\r\n            if (\"object\" === type(arg.value)) {\r\n                axes = sourceAxes.filter(function(a) {\r\n                    return a.getOptions().optionPath === arg.name\r\n                })\r\n            } else {\r\n                if (_isArray(arg.value)) {\r\n                    arg.value.forEach(function(v, index) {\r\n                        var axis = sourceAxes.filter(function(a) {\r\n                            return a.getOptions().optionPath === \"\".concat(arg.name, \"[\").concat(index, \"]\")\r\n                        })[0];\r\n                        _isDefined(v[optionName]) && _isDefined(axis) && (axes[index] = axis)\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return axes\r\n    },\r\n    _optionChanged: function(arg) {\r\n        var that = this;\r\n        if (!that._optionChangedLocker) {\r\n            var optionName = \"visualRange\";\r\n            var axes;\r\n            var isDirectOption = arg.fullName.indexOf(optionName) > 0 ? true : that.getPartialChangeOptionsName(arg).indexOf(optionName) > -1 ? false : void 0;\r\n            if (_isDefined(isDirectOption)) {\r\n                axes = that._getAxesByOptionPath(arg, isDirectOption, optionName);\r\n                if (axes) {\r\n                    if (axes.length > 1 || _isArray(arg.value)) {\r\n                        axes.forEach(function(a, index) {\r\n                            return setAxisVisualRangeByOption(arg, a, isDirectOption, index)\r\n                        })\r\n                    } else {\r\n                        if (1 === axes.length) {\r\n                            setAxisVisualRangeByOption(arg, axes[0], isDirectOption)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        that.callBase(arg)\r\n    },\r\n    _change_VISUAL_RANGE: function() {\r\n        var that = this;\r\n        that._recreateSizeDependentObjects(false);\r\n        if (!that._changes.has(\"FULL_RENDER\")) {\r\n            var resizePanesOnZoom = this.option(\"resizePanesOnZoom\");\r\n            that._doRender({\r\n                force: true,\r\n                drawTitle: false,\r\n                drawLegend: false,\r\n                adjustAxes: _isDefined(resizePanesOnZoom) ? resizePanesOnZoom : this.option(\"adjustAxesOnZoom\") || false,\r\n                animate: false\r\n            });\r\n            that._raiseZoomEndHandlers()\r\n        }\r\n    },\r\n    resetVisualRange: function() {\r\n        var that = this;\r\n        that._valueAxes.forEach(function(axis) {\r\n            axis.resetVisualRange(false);\r\n            that._applyCustomVisualRangeOption(axis)\r\n        });\r\n        that._requestChange([VISUAL_RANGE])\r\n    },\r\n    _legendDataField: \"series\",\r\n    _adjustSeriesLabels: _noop,\r\n    _correctValueAxes: _noop\r\n});\r\nexports.AdvancedChart = AdvancedChart;\r\n"]},"metadata":{},"sourceType":"script"}