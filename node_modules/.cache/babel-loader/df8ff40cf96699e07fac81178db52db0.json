{"ast":null,"code":"/**\r\n * DevExtreme (ui/check_box.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\");\n\nvar eventsEngine = require(\"../events/core/events_engine\");\n\nvar devices = require(\"../core/devices\");\n\nvar extend = require(\"../core/utils/extend\").extend;\n\nvar inkRipple = require(\"./widget/utils.ink_ripple\");\n\nvar Editor = require(\"./editor/editor\");\n\nvar registerComponent = require(\"../core/component_registrator\");\n\nvar eventUtils = require(\"../events/utils\");\n\nvar clickEvent = require(\"../events/click\");\n\nvar CHECKBOX_CLASS = \"dx-checkbox\";\nvar CHECKBOX_ICON_CLASS = \"dx-checkbox-icon\";\nvar CHECKBOX_CHECKED_CLASS = \"dx-checkbox-checked\";\nvar CHECKBOX_CONTAINER_CLASS = \"dx-checkbox-container\";\nvar CHECKBOX_TEXT_CLASS = \"dx-checkbox-text\";\nvar CHECKBOX_HAS_TEXT_CLASS = \"dx-checkbox-has-text\";\nvar CHECKBOX_INDETERMINATE_CLASS = \"dx-checkbox-indeterminate\";\nvar CHECKBOX_FEEDBACK_HIDE_TIMEOUT = 100;\nvar CheckBox = Editor.inherit({\n  _supportedKeys: function _supportedKeys() {\n    var click = function click(e) {\n      e.preventDefault();\n\n      this._clickAction({\n        event: e\n      });\n    };\n\n    return extend(this.callBase(), {\n      space: click\n    });\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      hoverStateEnabled: true,\n      activeStateEnabled: true,\n      value: false,\n      text: \"\",\n      useInkRipple: false\n    });\n  },\n  _defaultOptionsRules: function _defaultOptionsRules() {\n    return this.callBase().concat([{\n      device: function device() {\n        return \"desktop\" === devices.real().deviceType && !devices.isSimulator();\n      },\n      options: {\n        focusStateEnabled: true\n      }\n    }]);\n  },\n  _canValueBeChangedByClick: function _canValueBeChangedByClick() {\n    return true;\n  },\n  _feedbackHideTimeout: CHECKBOX_FEEDBACK_HIDE_TIMEOUT,\n  _initMarkup: function _initMarkup() {\n    this._renderSubmitElement();\n\n    this._$container = $(\"<div>\").addClass(CHECKBOX_CONTAINER_CLASS);\n    this.setAria(\"role\", \"checkbox\");\n    this.$element().addClass(CHECKBOX_CLASS);\n\n    this._renderValue();\n\n    this._renderIcon();\n\n    this._renderText();\n\n    this.option(\"useInkRipple\") && this._renderInkRipple();\n    this.$element().append(this._$container);\n    this.callBase();\n  },\n  _render: function _render() {\n    this._renderClick();\n\n    this.callBase();\n  },\n  _renderSubmitElement: function _renderSubmitElement() {\n    this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\n  },\n  _getSubmitElement: function _getSubmitElement() {\n    return this._$submitElement;\n  },\n  _renderInkRipple: function _renderInkRipple() {\n    this._inkRipple = inkRipple.render({\n      waveSizeCoefficient: 2.5,\n      useHoldAnimation: false,\n      wavesNumber: 2,\n      isCentered: true\n    });\n  },\n  _renderInkWave: function _renderInkWave(element, dxEvent, doRender, waveIndex) {\n    if (!this._inkRipple) {\n      return;\n    }\n\n    var config = {\n      element: element,\n      event: dxEvent,\n      wave: waveIndex\n    };\n\n    if (doRender) {\n      this._inkRipple.showWave(config);\n    } else {\n      this._inkRipple.hideWave(config);\n    }\n  },\n  _updateFocusState: function _updateFocusState(e, value) {\n    this.callBase.apply(this, arguments);\n\n    this._renderInkWave(this._$icon, e, value, 0);\n  },\n  _toggleActiveState: function _toggleActiveState($element, value, e) {\n    this.callBase.apply(this, arguments);\n\n    this._renderInkWave(this._$icon, e, value, 1);\n  },\n  _renderIcon: function _renderIcon() {\n    this._$icon = $(\"<span>\").addClass(CHECKBOX_ICON_CLASS).prependTo(this._$container);\n  },\n  _renderText: function _renderText() {\n    var textValue = this.option(\"text\");\n\n    if (!textValue) {\n      if (this._$text) {\n        this._$text.remove();\n\n        this.$element().removeClass(CHECKBOX_HAS_TEXT_CLASS);\n      }\n\n      return;\n    }\n\n    if (!this._$text) {\n      this._$text = $(\"<span>\").addClass(CHECKBOX_TEXT_CLASS);\n    }\n\n    this._$text.text(textValue);\n\n    this._$container.append(this._$text);\n\n    this.$element().addClass(CHECKBOX_HAS_TEXT_CLASS);\n  },\n  _renderClick: function _renderClick() {\n    var that = this;\n    var eventName = eventUtils.addNamespace(clickEvent.name, that.NAME);\n    that._clickAction = that._createAction(that._clickHandler);\n    eventsEngine.off(that.$element(), eventName);\n    eventsEngine.on(that.$element(), eventName, function (e) {\n      that._clickAction({\n        event: e\n      });\n    });\n  },\n  _clickHandler: function _clickHandler(args) {\n    var that = args.component;\n\n    that._saveValueChangeEvent(args.event);\n\n    that.option(\"value\", !that.option(\"value\"));\n  },\n  _renderValue: function _renderValue() {\n    var $element = this.$element();\n    var checked = this.option(\"value\");\n    var indeterminate = void 0 === checked;\n    $element.toggleClass(CHECKBOX_CHECKED_CLASS, Boolean(checked));\n    $element.toggleClass(CHECKBOX_INDETERMINATE_CLASS, indeterminate);\n\n    this._getSubmitElement().val(checked);\n\n    this.setAria(\"checked\", indeterminate ? \"mixed\" : checked || \"false\");\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"useInkRipple\":\n        this._invalidate();\n\n        break;\n\n      case \"value\":\n        this._renderValue();\n\n        this.callBase(args);\n        break;\n\n      case \"text\":\n        this._renderText();\n\n        this._renderDimensions();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _clean: function _clean() {\n    delete this._inkRipple;\n    this.callBase();\n  }\n});\nregisterComponent(\"dxCheckBox\", CheckBox);\nmodule.exports = CheckBox;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/check_box.js"],"names":["$","require","eventsEngine","devices","extend","inkRipple","Editor","registerComponent","eventUtils","clickEvent","CHECKBOX_CLASS","CHECKBOX_ICON_CLASS","CHECKBOX_CHECKED_CLASS","CHECKBOX_CONTAINER_CLASS","CHECKBOX_TEXT_CLASS","CHECKBOX_HAS_TEXT_CLASS","CHECKBOX_INDETERMINATE_CLASS","CHECKBOX_FEEDBACK_HIDE_TIMEOUT","CheckBox","inherit","_supportedKeys","click","e","preventDefault","_clickAction","event","callBase","space","_getDefaultOptions","hoverStateEnabled","activeStateEnabled","value","text","useInkRipple","_defaultOptionsRules","concat","device","real","deviceType","isSimulator","options","focusStateEnabled","_canValueBeChangedByClick","_feedbackHideTimeout","_initMarkup","_renderSubmitElement","_$container","addClass","setAria","$element","_renderValue","_renderIcon","_renderText","option","_renderInkRipple","append","_render","_renderClick","_$submitElement","attr","appendTo","_getSubmitElement","_inkRipple","render","waveSizeCoefficient","useHoldAnimation","wavesNumber","isCentered","_renderInkWave","element","dxEvent","doRender","waveIndex","config","wave","showWave","hideWave","_updateFocusState","apply","arguments","_$icon","_toggleActiveState","prependTo","textValue","_$text","remove","removeClass","that","eventName","addNamespace","name","NAME","_createAction","_clickHandler","off","on","args","component","_saveValueChangeEvent","checked","indeterminate","toggleClass","Boolean","val","_optionChanged","_invalidate","_renderDimensions","_clean","module","exports","default"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/check_box.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar eventsEngine = require(\"../events/core/events_engine\");\r\nvar devices = require(\"../core/devices\");\r\nvar extend = require(\"../core/utils/extend\").extend;\r\nvar inkRipple = require(\"./widget/utils.ink_ripple\");\r\nvar Editor = require(\"./editor/editor\");\r\nvar registerComponent = require(\"../core/component_registrator\");\r\nvar eventUtils = require(\"../events/utils\");\r\nvar clickEvent = require(\"../events/click\");\r\nvar CHECKBOX_CLASS = \"dx-checkbox\";\r\nvar CHECKBOX_ICON_CLASS = \"dx-checkbox-icon\";\r\nvar CHECKBOX_CHECKED_CLASS = \"dx-checkbox-checked\";\r\nvar CHECKBOX_CONTAINER_CLASS = \"dx-checkbox-container\";\r\nvar CHECKBOX_TEXT_CLASS = \"dx-checkbox-text\";\r\nvar CHECKBOX_HAS_TEXT_CLASS = \"dx-checkbox-has-text\";\r\nvar CHECKBOX_INDETERMINATE_CLASS = \"dx-checkbox-indeterminate\";\r\nvar CHECKBOX_FEEDBACK_HIDE_TIMEOUT = 100;\r\nvar CheckBox = Editor.inherit({\r\n    _supportedKeys: function() {\r\n        var click = function(e) {\r\n            e.preventDefault();\r\n            this._clickAction({\r\n                event: e\r\n            })\r\n        };\r\n        return extend(this.callBase(), {\r\n            space: click\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            activeStateEnabled: true,\r\n            value: false,\r\n            text: \"\",\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _canValueBeChangedByClick: function() {\r\n        return true\r\n    },\r\n    _feedbackHideTimeout: CHECKBOX_FEEDBACK_HIDE_TIMEOUT,\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this._$container = $(\"<div>\").addClass(CHECKBOX_CONTAINER_CLASS);\r\n        this.setAria(\"role\", \"checkbox\");\r\n        this.$element().addClass(CHECKBOX_CLASS);\r\n        this._renderValue();\r\n        this._renderIcon();\r\n        this._renderText();\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this.$element().append(this._$container);\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this._renderClick();\r\n        this.callBase()\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element())\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = inkRipple.render({\r\n            waveSizeCoefficient: 2.5,\r\n            useHoldAnimation: false,\r\n            wavesNumber: 2,\r\n            isCentered: true\r\n        })\r\n    },\r\n    _renderInkWave: function(element, dxEvent, doRender, waveIndex) {\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: element,\r\n            event: dxEvent,\r\n            wave: waveIndex\r\n        };\r\n        if (doRender) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _updateFocusState: function(e, value) {\r\n        this.callBase.apply(this, arguments);\r\n        this._renderInkWave(this._$icon, e, value, 0)\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        this._renderInkWave(this._$icon, e, value, 1)\r\n    },\r\n    _renderIcon: function() {\r\n        this._$icon = $(\"<span>\").addClass(CHECKBOX_ICON_CLASS).prependTo(this._$container)\r\n    },\r\n    _renderText: function() {\r\n        var textValue = this.option(\"text\");\r\n        if (!textValue) {\r\n            if (this._$text) {\r\n                this._$text.remove();\r\n                this.$element().removeClass(CHECKBOX_HAS_TEXT_CLASS)\r\n            }\r\n            return\r\n        }\r\n        if (!this._$text) {\r\n            this._$text = $(\"<span>\").addClass(CHECKBOX_TEXT_CLASS)\r\n        }\r\n        this._$text.text(textValue);\r\n        this._$container.append(this._$text);\r\n        this.$element().addClass(CHECKBOX_HAS_TEXT_CLASS)\r\n    },\r\n    _renderClick: function() {\r\n        var that = this;\r\n        var eventName = eventUtils.addNamespace(clickEvent.name, that.NAME);\r\n        that._clickAction = that._createAction(that._clickHandler);\r\n        eventsEngine.off(that.$element(), eventName);\r\n        eventsEngine.on(that.$element(), eventName, function(e) {\r\n            that._clickAction({\r\n                event: e\r\n            })\r\n        })\r\n    },\r\n    _clickHandler: function(args) {\r\n        var that = args.component;\r\n        that._saveValueChangeEvent(args.event);\r\n        that.option(\"value\", !that.option(\"value\"))\r\n    },\r\n    _renderValue: function() {\r\n        var $element = this.$element();\r\n        var checked = this.option(\"value\");\r\n        var indeterminate = void 0 === checked;\r\n        $element.toggleClass(CHECKBOX_CHECKED_CLASS, Boolean(checked));\r\n        $element.toggleClass(CHECKBOX_INDETERMINATE_CLASS, indeterminate);\r\n        this._getSubmitElement().val(checked);\r\n        this.setAria(\"checked\", indeterminate ? \"mixed\" : checked || \"false\")\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            case \"value\":\r\n                this._renderValue();\r\n                this.callBase(args);\r\n                break;\r\n            case \"text\":\r\n                this._renderText();\r\n                this._renderDimensions();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        delete this._inkRipple;\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxCheckBox\", CheckBox);\r\nmodule.exports = CheckBox;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}