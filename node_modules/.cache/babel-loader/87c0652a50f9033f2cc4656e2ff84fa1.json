{"ast":null,"code":"/**\r\n * DevExtreme (viz/axes/tick.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar isDefined = require(\"../../core/utils/type\").isDefined;\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nfunction getPathStyle(options) {\n  return {\n    stroke: options.color,\n    \"stroke-width\": options.width,\n    \"stroke-opacity\": options.opacity,\n    opacity: 1\n  };\n}\n\nfunction createTick(axis, renderer, tickOptions, gridOptions, skippedCategory, skipLabels, offset) {\n  var tickOffset = offset || axis._tickOffset;\n  var lineGroup = axis._axisLineGroup;\n  var elementsGroup = axis._axisElementsGroup;\n  var tickStyle = getPathStyle(tickOptions);\n  var gridStyle = getPathStyle(gridOptions);\n  var emptyStrRegExp = /^\\s+$/;\n  var axisOptions = axis.getOptions();\n  var labelOptions = axisOptions.label;\n  var labelStyle = axis._textOptions;\n\n  function getLabelFontStyle(tick) {\n    var fontStyle = axis._textFontStyles;\n    var customizeColor = labelOptions.customizeColor;\n\n    if (customizeColor && customizeColor.call) {\n      fontStyle = extend({}, axis._textFontStyles, {\n        fill: customizeColor.call(tick, tick)\n      });\n    }\n\n    return fontStyle;\n  }\n\n  function createLabelHint(tick, range) {\n    var labelHint = axis.formatHint(tick.value, labelOptions, range);\n\n    if (isDefined(labelHint) && \"\" !== labelHint) {\n      tick.label.setTitle(labelHint);\n    }\n  }\n\n  return function (value) {\n    var tick = {\n      value: value,\n      updateValue: function updateValue(newValue) {\n        this.value = value = newValue;\n      },\n      initCoords: function initCoords() {\n        this.coords = axis._getTranslatedValue(value, tickOffset);\n        this.labelCoords = axis._getTranslatedValue(value);\n      },\n      saveCoords: function saveCoords() {\n        this._storedCoords = this.coords;\n        this._storedLabelsCoords = this.labelCoords;\n      },\n      drawMark: function drawMark(options) {\n        if (!tickOptions.visible || skippedCategory === value) {\n          return;\n        }\n\n        if (axis.areCoordsOutsideAxis(this.coords)) {\n          return;\n        }\n\n        if (this.mark) {\n          this.mark.append(lineGroup);\n          axis.sharp(this.mark, axis.getSharpDirectionByCoords(this.coords));\n          this.updateTickPosition(options);\n        } else {\n          this.mark = axis._createPathElement([], tickStyle, axis.getSharpDirectionByCoords(this.coords)).append(lineGroup);\n          this.updateTickPosition(options);\n        }\n      },\n      setSkippedCategory: function setSkippedCategory(category) {\n        skippedCategory = category;\n      },\n      _updateLine: function _updateLine(lineElement, settings, storedSettings, animate, isGridLine) {\n        if (!lineElement) {\n          return;\n        }\n\n        if (null === settings.points || null === settings.r) {\n          lineElement.remove();\n          return;\n        }\n\n        if (animate && storedSettings && null !== storedSettings.points) {\n          settings.opacity = 1;\n          lineElement.attr(storedSettings);\n          lineElement.animate(settings);\n        } else {\n          settings.opacity = animate ? 0 : 1;\n          lineElement.attr(settings);\n          animate && lineElement.animate({\n            opacity: 1\n          }, {\n            delay: .5,\n            partitionDuration: .5\n          });\n        }\n\n        this.coords.angle && axis._rotateTick(lineElement, this.coords, isGridLine);\n      },\n      updateTickPosition: function updateTickPosition(options, animate) {\n        this._updateLine(this.mark, {\n          points: axis._getTickMarkPoints(tick.coords, tickOptions.length, options)\n        }, this._storedCoords && {\n          points: axis._getTickMarkPoints(tick._storedCoords, tickOptions.length, options)\n        }, animate, false);\n      },\n      drawLabel: function drawLabel(range) {\n        var labelIsVisible = labelOptions.visible && !skipLabels && !axis.getTranslator().getBusinessRange().isEmpty() && !axis.areCoordsOutsideAxis(this.labelCoords);\n\n        if (!labelIsVisible) {\n          if (this.label) {\n            this.label.remove();\n          }\n\n          return;\n        }\n\n        var text = axis.formatLabel(value, labelOptions, range);\n\n        if (this.label) {\n          this.label.attr({\n            text: text,\n            rotate: 0\n          }).append(elementsGroup);\n          createLabelHint(this, range);\n          this.updateLabelPosition();\n          return;\n        }\n\n        if (isDefined(text) && \"\" !== text && !emptyStrRegExp.test(text)) {\n          this.label = renderer.text(text).css(getLabelFontStyle(this)).attr(labelStyle).data(\"chart-data-argument\", this.value).append(elementsGroup);\n          this.updateLabelPosition();\n          createLabelHint(this, range);\n        }\n      },\n      fadeOutElements: function fadeOutElements() {\n        var startSettings = {\n          opacity: 1\n        };\n        var endSettings = {\n          opacity: 0\n        };\n        var animationSettings = {\n          partitionDuration: .5\n        };\n\n        if (this.label) {\n          this._fadeOutLabel();\n        }\n\n        if (this.grid) {\n          this.grid.append(axis._axisGridGroup).attr(startSettings).animate(endSettings, animationSettings);\n        }\n\n        if (this.mark) {\n          this.mark.append(axis._axisLineGroup).attr(startSettings).animate(endSettings, animationSettings);\n        }\n      },\n      _fadeInLabel: function _fadeInLabel() {\n        var group = axis._renderer.g().attr({\n          opacity: 0\n        }).append(axis._axisElementsGroup).animate({\n          opacity: 1\n        }, {\n          delay: .5,\n          partitionDuration: .5\n        });\n\n        this.label.append(group);\n      },\n      _fadeOutLabel: function _fadeOutLabel() {\n        var group = axis._renderer.g().attr({\n          opacity: 1\n        }).animate({\n          opacity: 0\n        }, {\n          partitionDuration: .5\n        }).append(axis._axisElementsGroup);\n\n        this.label.append(group);\n      },\n      updateLabelPosition: function updateLabelPosition(animate) {\n        if (!this.label) {\n          return;\n        }\n\n        if (animate && this._storedLabelsCoords) {\n          this.label.attr({\n            x: this._storedLabelsCoords.x,\n            y: this._storedLabelsCoords.y\n          });\n          this.label.animate({\n            x: this.labelCoords.x,\n            y: this.labelCoords.y\n          });\n        } else {\n          this.label.attr({\n            x: this.labelCoords.x,\n            y: this.labelCoords.y\n          });\n\n          if (animate) {\n            this._fadeInLabel();\n          }\n        }\n      },\n      updateMultilineTextAlignment: function updateMultilineTextAlignment() {\n        if (!this.label) {\n          return;\n        }\n\n        this.label.attr({\n          textsAlignment: this.labelAlignment || axis.getOptions().label.alignment\n        });\n      },\n      drawGrid: function drawGrid(drawLine) {\n        if (gridOptions.visible && skippedCategory !== this.value) {\n          if (this.grid) {\n            this.grid.append(axis._axisGridGroup);\n            axis.sharp(this.grid, axis.getSharpDirectionByCoords(this.coords));\n            this.updateGridPosition();\n          } else {\n            this.grid = drawLine(this, gridStyle);\n            this.grid && this.grid.append(axis._axisGridGroup);\n          }\n        }\n      },\n      updateGridPosition: function updateGridPosition(animate) {\n        this._updateLine(this.grid, axis._getGridPoints(tick.coords), this._storedCoords && axis._getGridPoints(this._storedCoords), animate, true);\n      },\n      removeLabel: function removeLabel() {\n        this.label.remove();\n        this.label = null;\n      }\n    };\n    return tick;\n  };\n}\n\nexports.tick = createTick;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/axes/tick.js"],"names":["isDefined","require","extend","getPathStyle","options","stroke","color","width","opacity","createTick","axis","renderer","tickOptions","gridOptions","skippedCategory","skipLabels","offset","tickOffset","_tickOffset","lineGroup","_axisLineGroup","elementsGroup","_axisElementsGroup","tickStyle","gridStyle","emptyStrRegExp","axisOptions","getOptions","labelOptions","label","labelStyle","_textOptions","getLabelFontStyle","tick","fontStyle","_textFontStyles","customizeColor","call","fill","createLabelHint","range","labelHint","formatHint","value","setTitle","updateValue","newValue","initCoords","coords","_getTranslatedValue","labelCoords","saveCoords","_storedCoords","_storedLabelsCoords","drawMark","visible","areCoordsOutsideAxis","mark","append","sharp","getSharpDirectionByCoords","updateTickPosition","_createPathElement","setSkippedCategory","category","_updateLine","lineElement","settings","storedSettings","animate","isGridLine","points","r","remove","attr","delay","partitionDuration","angle","_rotateTick","_getTickMarkPoints","length","drawLabel","labelIsVisible","getTranslator","getBusinessRange","isEmpty","text","formatLabel","rotate","updateLabelPosition","test","css","data","fadeOutElements","startSettings","endSettings","animationSettings","_fadeOutLabel","grid","_axisGridGroup","_fadeInLabel","group","_renderer","g","x","y","updateMultilineTextAlignment","textsAlignment","labelAlignment","alignment","drawGrid","drawLine","updateGridPosition","_getGridPoints","removeLabel","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/axes/tick.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar isDefined = require(\"../../core/utils/type\").isDefined;\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\n\r\nfunction getPathStyle(options) {\r\n    return {\r\n        stroke: options.color,\r\n        \"stroke-width\": options.width,\r\n        \"stroke-opacity\": options.opacity,\r\n        opacity: 1\r\n    }\r\n}\r\n\r\nfunction createTick(axis, renderer, tickOptions, gridOptions, skippedCategory, skipLabels, offset) {\r\n    var tickOffset = offset || axis._tickOffset;\r\n    var lineGroup = axis._axisLineGroup;\r\n    var elementsGroup = axis._axisElementsGroup;\r\n    var tickStyle = getPathStyle(tickOptions);\r\n    var gridStyle = getPathStyle(gridOptions);\r\n    var emptyStrRegExp = /^\\s+$/;\r\n    var axisOptions = axis.getOptions();\r\n    var labelOptions = axisOptions.label;\r\n    var labelStyle = axis._textOptions;\r\n\r\n    function getLabelFontStyle(tick) {\r\n        var fontStyle = axis._textFontStyles;\r\n        var customizeColor = labelOptions.customizeColor;\r\n        if (customizeColor && customizeColor.call) {\r\n            fontStyle = extend({}, axis._textFontStyles, {\r\n                fill: customizeColor.call(tick, tick)\r\n            })\r\n        }\r\n        return fontStyle\r\n    }\r\n\r\n    function createLabelHint(tick, range) {\r\n        var labelHint = axis.formatHint(tick.value, labelOptions, range);\r\n        if (isDefined(labelHint) && \"\" !== labelHint) {\r\n            tick.label.setTitle(labelHint)\r\n        }\r\n    }\r\n    return function(value) {\r\n        var tick = {\r\n            value: value,\r\n            updateValue: function(newValue) {\r\n                this.value = value = newValue\r\n            },\r\n            initCoords: function() {\r\n                this.coords = axis._getTranslatedValue(value, tickOffset);\r\n                this.labelCoords = axis._getTranslatedValue(value)\r\n            },\r\n            saveCoords: function() {\r\n                this._storedCoords = this.coords;\r\n                this._storedLabelsCoords = this.labelCoords\r\n            },\r\n            drawMark: function(options) {\r\n                if (!tickOptions.visible || skippedCategory === value) {\r\n                    return\r\n                }\r\n                if (axis.areCoordsOutsideAxis(this.coords)) {\r\n                    return\r\n                }\r\n                if (this.mark) {\r\n                    this.mark.append(lineGroup);\r\n                    axis.sharp(this.mark, axis.getSharpDirectionByCoords(this.coords));\r\n                    this.updateTickPosition(options)\r\n                } else {\r\n                    this.mark = axis._createPathElement([], tickStyle, axis.getSharpDirectionByCoords(this.coords)).append(lineGroup);\r\n                    this.updateTickPosition(options)\r\n                }\r\n            },\r\n            setSkippedCategory: function(category) {\r\n                skippedCategory = category\r\n            },\r\n            _updateLine: function(lineElement, settings, storedSettings, animate, isGridLine) {\r\n                if (!lineElement) {\r\n                    return\r\n                }\r\n                if (null === settings.points || null === settings.r) {\r\n                    lineElement.remove();\r\n                    return\r\n                }\r\n                if (animate && storedSettings && null !== storedSettings.points) {\r\n                    settings.opacity = 1;\r\n                    lineElement.attr(storedSettings);\r\n                    lineElement.animate(settings)\r\n                } else {\r\n                    settings.opacity = animate ? 0 : 1;\r\n                    lineElement.attr(settings);\r\n                    animate && lineElement.animate({\r\n                        opacity: 1\r\n                    }, {\r\n                        delay: .5,\r\n                        partitionDuration: .5\r\n                    })\r\n                }\r\n                this.coords.angle && axis._rotateTick(lineElement, this.coords, isGridLine)\r\n            },\r\n            updateTickPosition: function(options, animate) {\r\n                this._updateLine(this.mark, {\r\n                    points: axis._getTickMarkPoints(tick.coords, tickOptions.length, options)\r\n                }, this._storedCoords && {\r\n                    points: axis._getTickMarkPoints(tick._storedCoords, tickOptions.length, options)\r\n                }, animate, false)\r\n            },\r\n            drawLabel: function(range) {\r\n                var labelIsVisible = labelOptions.visible && !skipLabels && !axis.getTranslator().getBusinessRange().isEmpty() && !axis.areCoordsOutsideAxis(this.labelCoords);\r\n                if (!labelIsVisible) {\r\n                    if (this.label) {\r\n                        this.label.remove()\r\n                    }\r\n                    return\r\n                }\r\n                var text = axis.formatLabel(value, labelOptions, range);\r\n                if (this.label) {\r\n                    this.label.attr({\r\n                        text: text,\r\n                        rotate: 0\r\n                    }).append(elementsGroup);\r\n                    createLabelHint(this, range);\r\n                    this.updateLabelPosition();\r\n                    return\r\n                }\r\n                if (isDefined(text) && \"\" !== text && !emptyStrRegExp.test(text)) {\r\n                    this.label = renderer.text(text).css(getLabelFontStyle(this)).attr(labelStyle).data(\"chart-data-argument\", this.value).append(elementsGroup);\r\n                    this.updateLabelPosition();\r\n                    createLabelHint(this, range)\r\n                }\r\n            },\r\n            fadeOutElements: function() {\r\n                var startSettings = {\r\n                    opacity: 1\r\n                };\r\n                var endSettings = {\r\n                    opacity: 0\r\n                };\r\n                var animationSettings = {\r\n                    partitionDuration: .5\r\n                };\r\n                if (this.label) {\r\n                    this._fadeOutLabel()\r\n                }\r\n                if (this.grid) {\r\n                    this.grid.append(axis._axisGridGroup).attr(startSettings).animate(endSettings, animationSettings)\r\n                }\r\n                if (this.mark) {\r\n                    this.mark.append(axis._axisLineGroup).attr(startSettings).animate(endSettings, animationSettings)\r\n                }\r\n            },\r\n            _fadeInLabel: function() {\r\n                var group = axis._renderer.g().attr({\r\n                    opacity: 0\r\n                }).append(axis._axisElementsGroup).animate({\r\n                    opacity: 1\r\n                }, {\r\n                    delay: .5,\r\n                    partitionDuration: .5\r\n                });\r\n                this.label.append(group)\r\n            },\r\n            _fadeOutLabel: function() {\r\n                var group = axis._renderer.g().attr({\r\n                    opacity: 1\r\n                }).animate({\r\n                    opacity: 0\r\n                }, {\r\n                    partitionDuration: .5\r\n                }).append(axis._axisElementsGroup);\r\n                this.label.append(group)\r\n            },\r\n            updateLabelPosition: function(animate) {\r\n                if (!this.label) {\r\n                    return\r\n                }\r\n                if (animate && this._storedLabelsCoords) {\r\n                    this.label.attr({\r\n                        x: this._storedLabelsCoords.x,\r\n                        y: this._storedLabelsCoords.y\r\n                    });\r\n                    this.label.animate({\r\n                        x: this.labelCoords.x,\r\n                        y: this.labelCoords.y\r\n                    })\r\n                } else {\r\n                    this.label.attr({\r\n                        x: this.labelCoords.x,\r\n                        y: this.labelCoords.y\r\n                    });\r\n                    if (animate) {\r\n                        this._fadeInLabel()\r\n                    }\r\n                }\r\n            },\r\n            updateMultilineTextAlignment: function() {\r\n                if (!this.label) {\r\n                    return\r\n                }\r\n                this.label.attr({\r\n                    textsAlignment: this.labelAlignment || axis.getOptions().label.alignment\r\n                })\r\n            },\r\n            drawGrid: function(drawLine) {\r\n                if (gridOptions.visible && skippedCategory !== this.value) {\r\n                    if (this.grid) {\r\n                        this.grid.append(axis._axisGridGroup);\r\n                        axis.sharp(this.grid, axis.getSharpDirectionByCoords(this.coords));\r\n                        this.updateGridPosition()\r\n                    } else {\r\n                        this.grid = drawLine(this, gridStyle);\r\n                        this.grid && this.grid.append(axis._axisGridGroup)\r\n                    }\r\n                }\r\n            },\r\n            updateGridPosition: function(animate) {\r\n                this._updateLine(this.grid, axis._getGridPoints(tick.coords), this._storedCoords && axis._getGridPoints(this._storedCoords), animate, true)\r\n            },\r\n            removeLabel: function() {\r\n                this.label.remove();\r\n                this.label = null\r\n            }\r\n        };\r\n        return tick\r\n    }\r\n}\r\nexports.tick = createTick;\r\n"]},"metadata":{},"sourceType":"script"}