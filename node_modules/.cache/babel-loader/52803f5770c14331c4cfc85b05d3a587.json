{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\src\\\\Components\\\\WorldRecord.jsx\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction World() {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        total = _useState2[0],\n        setTotal = _useState2[1];\n\n  const SetT = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var rec;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              \"method\": \"GET\",\n              \"url\": \"https://corona.lmao.ninja/all\"\n            }).then(response => {\n              const Timeline = response.data;\n              return Timeline;\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 2:\n            rec = _context.sent;\n            setTotal(rec);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function SetT() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  SetT();\n  setInterval(SetT, 1000000);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }\n  }, \"Total Cases :\"), \" \", total.cases), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  }, \"Total Deaths :\"), \" \", total.deaths)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }\n  }, \"Total Recoveries:\"), \" \", total.recovered, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }\n  }, \"Active Cases:\"), \" \", total.active, \" \"));\n}\n\nexport default World;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/src/Components/WorldRecord.jsx"],"names":["React","useState","axios","World","total","setTotal","SetT","then","response","Timeline","data","catch","error","console","log","rec","setInterval","cases","deaths","recovered","active"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,GAAkB;AAAA,oBACYF,QAAQ,CAAC,EAAD,CADpB;AAAA;AAAA,QACPG,KADO;AAAA,QACAC,QADA;;AAGd,QAAMC,IAAI;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSJ,KAAK,CAAC;AACpB,wBAAS,KADW;AAEpB,qBAAM;AAFc,aAAD,CAAL,CAIjBK,IAJiB,CAIXC,QAAD,IAAY;AACd,oBAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAA1B;AACA,qBAAOD,QAAP;AACH,aAPiB,EAQjBE,KARiB,CAQVC,KAAD,IAAS;AACZC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACP,aAVqB,CADT;;AAAA;AACHG,YAAAA,GADG;AAYbV,YAAAA,QAAQ,CAACU,GAAD,CAAR;;AAZa;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJT,IAAI;AAAA;AAAA;AAAA,KAAV;;AAeAA,EAAAA,IAAI;AAEJU,EAAAA,WAAW,CAACV,IAAD,EAAO,OAAP,CAAX;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,OAAyBF,KAAK,CAACa,KAA/B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAH,OAA0Bb,KAAK,CAACc,MAAhC,CAAH,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAH,OAA6Bd,KAAK,CAACe,SAAnC,MAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,OAAyBf,KAAK,CAACgB,MAA/B,MAJJ,CADJ;AAQH;;AAED,eAAejB,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction World () {\r\n    const [total, setTotal] = useState({});\r\n\r\n    const SetT = async () => {\r\n        const rec = await axios({\r\n            \"method\":\"GET\",\r\n            \"url\":\"https://corona.lmao.ninja/all\"\r\n            })\r\n        .then((response)=>{\r\n            const Timeline = response.data;\r\n            return Timeline;\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n    });\r\n    setTotal(rec);\r\n   }\r\n\r\n    SetT();\r\n    \r\n    setInterval(SetT, 1000000);\r\n\r\n    return (\r\n        <div className=\"total\">\r\n            <p><b>Total Cases :</b> {total.cases}</p>\r\n            <p><p><b>Total Deaths :</b> {total.deaths}</p></p>\r\n            <p><b>Total Recoveries:</b> {total.recovered} </p>\r\n            <p><b>Active Cases:</b> {total.active} </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default World;"]},"metadata":{},"sourceType":"module"}