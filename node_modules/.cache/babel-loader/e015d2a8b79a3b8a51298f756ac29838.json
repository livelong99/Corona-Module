{"ast":null,"code":"/**\r\n * DevExtreme (ui/progress_bar.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\");\n\nvar TrackBar = require(\"./track_bar\");\n\nvar extend = require(\"../core/utils/extend\").extend;\n\nvar isFunction = require(\"../core/utils/type\").isFunction;\n\nvar registerComponent = require(\"../core/component_registrator\");\n\nvar PROGRESSBAR_CLASS = \"dx-progressbar\";\nvar PROGRESSBAR_CONTAINER_CLASS = \"dx-progressbar-container\";\nvar PROGRESSBAR_RANGE_CONTAINER_CLASS = \"dx-progressbar-range-container\";\nvar PROGRESSBAR_RANGE_CLASS = \"dx-progressbar-range\";\nvar PROGRESSBAR_WRAPPER_CLASS = \"dx-progressbar-wrapper\";\nvar PROGRESSBAR_STATUS_CLASS = \"dx-progressbar-status\";\nvar PROGRESSBAR_INDETERMINATE_SEGMENT_CONTAINER = \"dx-progressbar-animating-container\";\nvar PROGRESSBAR_INDETERMINATE_SEGMENT = \"dx-progressbar-animating-segment\";\nvar ProgressBar = TrackBar.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      value: 0,\n      statusFormat: function statusFormat(ratio) {\n        return \"Progress: \" + Math.round(100 * ratio) + \"%\";\n      },\n      showStatus: true,\n      onComplete: null,\n      activeStateEnabled: false,\n      statusPosition: \"bottom left\",\n      _animatingSegmentCount: 0\n    });\n  },\n  _defaultOptionsRules: function _defaultOptionsRules() {\n    return this.callBase().concat([{\n      device: function device(_device) {\n        return \"android\" === _device.platform;\n      },\n      options: {\n        _animatingSegmentCount: 2\n      }\n    }]);\n  },\n  _initMarkup: function _initMarkup() {\n    this._renderStatus();\n\n    this._createCompleteAction();\n\n    this.callBase();\n    this.$element().addClass(PROGRESSBAR_CLASS);\n\n    this._$wrapper.addClass(PROGRESSBAR_WRAPPER_CLASS);\n\n    this._$bar.addClass(PROGRESSBAR_CONTAINER_CLASS);\n\n    this.setAria(\"role\", \"progressbar\");\n    $(\"<div>\").addClass(PROGRESSBAR_RANGE_CONTAINER_CLASS).appendTo(this._$wrapper).append(this._$bar);\n\n    this._$range.addClass(PROGRESSBAR_RANGE_CLASS);\n\n    this._toggleStatus(this.option(\"showStatus\"));\n  },\n  _createCompleteAction: function _createCompleteAction() {\n    this._completeAction = this._createActionByOption(\"onComplete\");\n  },\n  _renderStatus: function _renderStatus() {\n    this._$status = $(\"<div>\").addClass(PROGRESSBAR_STATUS_CLASS);\n  },\n  _renderIndeterminateState: function _renderIndeterminateState() {\n    this._$segmentContainer = $(\"<div>\").addClass(PROGRESSBAR_INDETERMINATE_SEGMENT_CONTAINER);\n    var segments = this.option(\"_animatingSegmentCount\");\n\n    for (var i = 0; i < segments; i++) {\n      $(\"<div>\").addClass(PROGRESSBAR_INDETERMINATE_SEGMENT).addClass(PROGRESSBAR_INDETERMINATE_SEGMENT + \"-\" + (i + 1)).appendTo(this._$segmentContainer);\n    }\n\n    this._$segmentContainer.appendTo(this._$wrapper);\n  },\n  _toggleStatus: function _toggleStatus(value) {\n    var splitPosition = this.option(\"statusPosition\").split(\" \");\n\n    if (value) {\n      if (\"top\" === splitPosition[0] || \"left\" === splitPosition[0]) {\n        this._$status.prependTo(this._$wrapper);\n      } else {\n        this._$status.appendTo(this._$wrapper);\n      }\n    } else {\n      this._$status.detach();\n    }\n\n    this._togglePositionClass();\n  },\n  _togglePositionClass: function _togglePositionClass() {\n    var position = this.option(\"statusPosition\");\n    var splitPosition = position.split(\" \");\n\n    this._$wrapper.removeClass(\"dx-position-top-left dx-position-top-right dx-position-bottom-left dx-position-bottom-right dx-position-left dx-position-right\");\n\n    var positionClass = \"dx-position-\" + splitPosition[0];\n\n    if (splitPosition[1]) {\n      positionClass += \"-\" + splitPosition[1];\n    }\n\n    this._$wrapper.addClass(positionClass);\n  },\n  _toggleIndeterminateState: function _toggleIndeterminateState(value) {\n    if (value) {\n      this._renderIndeterminateState();\n\n      this._$bar.toggle(false);\n    } else {\n      this._$bar.toggle(true);\n\n      this._$segmentContainer.remove();\n\n      delete this._$segmentContainer;\n    }\n  },\n  _renderValue: function _renderValue() {\n    var val = this.option(\"value\");\n    var max = this.option(\"max\");\n\n    if (!val && 0 !== val) {\n      this._toggleIndeterminateState(true);\n\n      return;\n    }\n\n    if (this._$segmentContainer) {\n      this._toggleIndeterminateState(false);\n    }\n\n    if (val === max) {\n      this._completeAction();\n    }\n\n    this.callBase();\n\n    this._setStatus();\n  },\n  _setStatus: function _setStatus() {\n    var format = this.option(\"statusFormat\");\n\n    if (isFunction(format)) {\n      format = format.bind(this);\n    } else {\n      format = function format(value) {\n        return value;\n      };\n    }\n\n    var statusText = format(this._currentRatio, this.option(\"value\"));\n\n    this._$status.text(statusText);\n  },\n  _dispose: function _dispose() {\n    this._$status.remove();\n\n    this.callBase();\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"statusFormat\":\n        this._setStatus();\n\n        break;\n\n      case \"showStatus\":\n        this._toggleStatus(args.value);\n\n        break;\n\n      case \"statusPosition\":\n        this._toggleStatus(this.option(\"showStatus\"));\n\n        break;\n\n      case \"onComplete\":\n        this._createCompleteAction();\n\n        break;\n\n      case \"_animatingSegmentCount\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\nregisterComponent(\"dxProgressBar\", ProgressBar);\nmodule.exports = ProgressBar;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/progress_bar.js"],"names":["$","require","TrackBar","extend","isFunction","registerComponent","PROGRESSBAR_CLASS","PROGRESSBAR_CONTAINER_CLASS","PROGRESSBAR_RANGE_CONTAINER_CLASS","PROGRESSBAR_RANGE_CLASS","PROGRESSBAR_WRAPPER_CLASS","PROGRESSBAR_STATUS_CLASS","PROGRESSBAR_INDETERMINATE_SEGMENT_CONTAINER","PROGRESSBAR_INDETERMINATE_SEGMENT","ProgressBar","inherit","_getDefaultOptions","callBase","value","statusFormat","ratio","Math","round","showStatus","onComplete","activeStateEnabled","statusPosition","_animatingSegmentCount","_defaultOptionsRules","concat","device","_device","platform","options","_initMarkup","_renderStatus","_createCompleteAction","$element","addClass","_$wrapper","_$bar","setAria","appendTo","append","_$range","_toggleStatus","option","_completeAction","_createActionByOption","_$status","_renderIndeterminateState","_$segmentContainer","segments","i","splitPosition","split","prependTo","detach","_togglePositionClass","position","removeClass","positionClass","_toggleIndeterminateState","toggle","remove","_renderValue","val","max","_setStatus","format","bind","statusText","_currentRatio","text","_dispose","_optionChanged","args","name","module","exports","default"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/progress_bar.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar TrackBar = require(\"./track_bar\");\r\nvar extend = require(\"../core/utils/extend\").extend;\r\nvar isFunction = require(\"../core/utils/type\").isFunction;\r\nvar registerComponent = require(\"../core/component_registrator\");\r\nvar PROGRESSBAR_CLASS = \"dx-progressbar\";\r\nvar PROGRESSBAR_CONTAINER_CLASS = \"dx-progressbar-container\";\r\nvar PROGRESSBAR_RANGE_CONTAINER_CLASS = \"dx-progressbar-range-container\";\r\nvar PROGRESSBAR_RANGE_CLASS = \"dx-progressbar-range\";\r\nvar PROGRESSBAR_WRAPPER_CLASS = \"dx-progressbar-wrapper\";\r\nvar PROGRESSBAR_STATUS_CLASS = \"dx-progressbar-status\";\r\nvar PROGRESSBAR_INDETERMINATE_SEGMENT_CONTAINER = \"dx-progressbar-animating-container\";\r\nvar PROGRESSBAR_INDETERMINATE_SEGMENT = \"dx-progressbar-animating-segment\";\r\nvar ProgressBar = TrackBar.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: 0,\r\n            statusFormat: function(ratio) {\r\n                return \"Progress: \" + Math.round(100 * ratio) + \"%\"\r\n            },\r\n            showStatus: true,\r\n            onComplete: null,\r\n            activeStateEnabled: false,\r\n            statusPosition: \"bottom left\",\r\n            _animatingSegmentCount: 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                return \"android\" === _device.platform\r\n            },\r\n            options: {\r\n                _animatingSegmentCount: 2\r\n            }\r\n        }])\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderStatus();\r\n        this._createCompleteAction();\r\n        this.callBase();\r\n        this.$element().addClass(PROGRESSBAR_CLASS);\r\n        this._$wrapper.addClass(PROGRESSBAR_WRAPPER_CLASS);\r\n        this._$bar.addClass(PROGRESSBAR_CONTAINER_CLASS);\r\n        this.setAria(\"role\", \"progressbar\");\r\n        $(\"<div>\").addClass(PROGRESSBAR_RANGE_CONTAINER_CLASS).appendTo(this._$wrapper).append(this._$bar);\r\n        this._$range.addClass(PROGRESSBAR_RANGE_CLASS);\r\n        this._toggleStatus(this.option(\"showStatus\"))\r\n    },\r\n    _createCompleteAction: function() {\r\n        this._completeAction = this._createActionByOption(\"onComplete\")\r\n    },\r\n    _renderStatus: function() {\r\n        this._$status = $(\"<div>\").addClass(PROGRESSBAR_STATUS_CLASS)\r\n    },\r\n    _renderIndeterminateState: function() {\r\n        this._$segmentContainer = $(\"<div>\").addClass(PROGRESSBAR_INDETERMINATE_SEGMENT_CONTAINER);\r\n        var segments = this.option(\"_animatingSegmentCount\");\r\n        for (var i = 0; i < segments; i++) {\r\n            $(\"<div>\").addClass(PROGRESSBAR_INDETERMINATE_SEGMENT).addClass(PROGRESSBAR_INDETERMINATE_SEGMENT + \"-\" + (i + 1)).appendTo(this._$segmentContainer)\r\n        }\r\n        this._$segmentContainer.appendTo(this._$wrapper)\r\n    },\r\n    _toggleStatus: function(value) {\r\n        var splitPosition = this.option(\"statusPosition\").split(\" \");\r\n        if (value) {\r\n            if (\"top\" === splitPosition[0] || \"left\" === splitPosition[0]) {\r\n                this._$status.prependTo(this._$wrapper)\r\n            } else {\r\n                this._$status.appendTo(this._$wrapper)\r\n            }\r\n        } else {\r\n            this._$status.detach()\r\n        }\r\n        this._togglePositionClass()\r\n    },\r\n    _togglePositionClass: function() {\r\n        var position = this.option(\"statusPosition\");\r\n        var splitPosition = position.split(\" \");\r\n        this._$wrapper.removeClass(\"dx-position-top-left dx-position-top-right dx-position-bottom-left dx-position-bottom-right dx-position-left dx-position-right\");\r\n        var positionClass = \"dx-position-\" + splitPosition[0];\r\n        if (splitPosition[1]) {\r\n            positionClass += \"-\" + splitPosition[1]\r\n        }\r\n        this._$wrapper.addClass(positionClass)\r\n    },\r\n    _toggleIndeterminateState: function(value) {\r\n        if (value) {\r\n            this._renderIndeterminateState();\r\n            this._$bar.toggle(false)\r\n        } else {\r\n            this._$bar.toggle(true);\r\n            this._$segmentContainer.remove();\r\n            delete this._$segmentContainer\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        var val = this.option(\"value\");\r\n        var max = this.option(\"max\");\r\n        if (!val && 0 !== val) {\r\n            this._toggleIndeterminateState(true);\r\n            return\r\n        }\r\n        if (this._$segmentContainer) {\r\n            this._toggleIndeterminateState(false)\r\n        }\r\n        if (val === max) {\r\n            this._completeAction()\r\n        }\r\n        this.callBase();\r\n        this._setStatus()\r\n    },\r\n    _setStatus: function() {\r\n        var format = this.option(\"statusFormat\");\r\n        if (isFunction(format)) {\r\n            format = format.bind(this)\r\n        } else {\r\n            format = function(value) {\r\n                return value\r\n            }\r\n        }\r\n        var statusText = format(this._currentRatio, this.option(\"value\"));\r\n        this._$status.text(statusText)\r\n    },\r\n    _dispose: function() {\r\n        this._$status.remove();\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"statusFormat\":\r\n                this._setStatus();\r\n                break;\r\n            case \"showStatus\":\r\n                this._toggleStatus(args.value);\r\n                break;\r\n            case \"statusPosition\":\r\n                this._toggleStatus(this.option(\"showStatus\"));\r\n                break;\r\n            case \"onComplete\":\r\n                this._createCompleteAction();\r\n                break;\r\n            case \"_animatingSegmentCount\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxProgressBar\", ProgressBar);\r\nmodule.exports = ProgressBar;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}