{"ast":null,"code":"/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.calendar.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar Calendar = require(\"../calendar\");\n\nvar DateBoxStrategy = require(\"./ui.date_box.strategy\");\n\nvar dateUtils = require(\"../../core/utils/date\");\n\nvar commonUtils = require(\"../../core/utils/common\");\n\nvar isFunction = require(\"../../core/utils/type\").isFunction;\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar messageLocalization = require(\"../../localization/message\");\n\nvar CalendarStrategy = DateBoxStrategy.inherit({\n  NAME: \"Calendar\",\n  supportedKeys: function supportedKeys() {\n    var homeEndHandler = function homeEndHandler(e) {\n      if (this.option(\"opened\")) {\n        e.preventDefault();\n        return true;\n      }\n\n      return false;\n    };\n\n    return {\n      rightArrow: function rightArrow() {\n        if (this.option(\"opened\")) {\n          return true;\n        }\n      },\n      leftArrow: function leftArrow() {\n        if (this.option(\"opened\")) {\n          return true;\n        }\n      },\n      enter: function (e) {\n        if (this.dateBox.option(\"opened\")) {\n          e.preventDefault();\n\n          if (this._widget.option(\"zoomLevel\") === this._widget.option(\"maxZoomLevel\")) {\n            var contouredDate = this._widget._view.option(\"contouredDate\");\n\n            var lastActionElement = this._lastActionElement;\n\n            if (contouredDate && \"calendar\" === lastActionElement) {\n              this.dateBoxValue(contouredDate, e);\n            }\n\n            this.dateBox.close();\n\n            this.dateBox._valueChangeEventHandler(e);\n          } else {\n            return true;\n          }\n        } else {\n          this.dateBox._valueChangeEventHandler(e);\n        }\n      }.bind(this),\n      home: homeEndHandler,\n      end: homeEndHandler\n    };\n  },\n  getDisplayFormat: function getDisplayFormat(displayFormat) {\n    return displayFormat || \"shortdate\";\n  },\n  _getWidgetName: function _getWidgetName() {\n    return Calendar;\n  },\n  _getWidgetOptions: function _getWidgetOptions() {\n    var disabledDates = this.dateBox.option(\"disabledDates\");\n    return extend(this.dateBox.option(\"calendarOptions\"), {\n      value: this.dateBoxValue() || null,\n      dateSerializationFormat: null,\n      _keyboardProcessor: this._widgetKeyboardProcessor,\n      min: this.dateBox.dateOption(\"min\"),\n      max: this.dateBox.dateOption(\"max\"),\n      onValueChanged: this._valueChangedHandler.bind(this),\n      onCellClick: this._cellClickHandler.bind(this),\n      tabIndex: null,\n      disabledDates: isFunction(disabledDates) ? this._injectComponent(disabledDates.bind(this.dateBox)) : disabledDates,\n      onContouredChanged: this._refreshActiveDescendant.bind(this),\n      hasFocus: function hasFocus() {\n        return true;\n      }\n    });\n  },\n  _injectComponent: function _injectComponent(func) {\n    var that = this;\n    return function (params) {\n      extend(params, {\n        component: that.dateBox\n      });\n      return func(params);\n    };\n  },\n  _refreshActiveDescendant: function _refreshActiveDescendant(e) {\n    this._lastActionElement = \"calendar\";\n    this.dateBox.setAria(\"activedescendant\", e.actionValue);\n  },\n  popupConfig: function popupConfig(_popupConfig) {\n    var toolbarItems = _popupConfig.toolbarItems;\n    var buttonsLocation = this.dateBox.option(\"buttonsLocation\");\n    var position = [];\n\n    if (\"default\" !== buttonsLocation) {\n      position = commonUtils.splitPair(buttonsLocation);\n    } else {\n      position = [\"bottom\", \"center\"];\n    }\n\n    if (\"useButtons\" === this.dateBox.option(\"applyValueMode\")) {\n      toolbarItems.unshift({\n        widget: \"dxButton\",\n        toolbar: position[0],\n        location: \"after\" === position[1] ? \"before\" : position[1],\n        options: {\n          onInitialized: function (e) {\n            e.component.registerKeyHandler(\"escape\", this._escapeHandler.bind(this));\n          }.bind(this),\n          onClick: function () {\n            this._widget._toTodayView();\n          }.bind(this),\n          text: messageLocalization.format(\"dxCalendar-todayButtonText\"),\n          type: \"today\"\n        }\n      });\n    }\n\n    return extend(true, _popupConfig, {\n      toolbarItems: toolbarItems,\n      position: {\n        collision: \"flipfit flip\"\n      }\n    });\n  },\n  _escapeHandler: function _escapeHandler() {\n    this.dateBox.close();\n    this.dateBox.focus();\n  },\n  _valueChangedHandler: function _valueChangedHandler(e) {\n    var dateBox = this.dateBox;\n    var value = e.value;\n    var prevValue = e.previousValue;\n\n    if (dateUtils.sameDate(value, prevValue)) {\n      return;\n    }\n\n    if (\"instantly\" === dateBox.option(\"applyValueMode\")) {\n      this.dateBoxValue(this.getValue(), e.event);\n    }\n  },\n  _updateValue: function _updateValue() {\n    if (!this._widget) {\n      return;\n    }\n\n    this._widget.option(\"value\", this.dateBoxValue());\n  },\n  textChangedHandler: function textChangedHandler() {\n    this._lastActionElement = \"input\";\n\n    if (this.dateBox.option(\"opened\") && this._widget) {\n      this._updateValue(true);\n    }\n  },\n  _cellClickHandler: function _cellClickHandler(e) {\n    var dateBox = this.dateBox;\n\n    if (\"instantly\" === dateBox.option(\"applyValueMode\")) {\n      dateBox.option(\"opened\", false);\n      this.dateBoxValue(this.getValue(), e.event);\n    }\n  }\n});\nmodule.exports = CalendarStrategy;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/date_box/ui.date_box.strategy.calendar.js"],"names":["Calendar","require","DateBoxStrategy","dateUtils","commonUtils","isFunction","extend","messageLocalization","CalendarStrategy","inherit","NAME","supportedKeys","homeEndHandler","e","option","preventDefault","rightArrow","leftArrow","enter","dateBox","_widget","contouredDate","_view","lastActionElement","_lastActionElement","dateBoxValue","close","_valueChangeEventHandler","bind","home","end","getDisplayFormat","displayFormat","_getWidgetName","_getWidgetOptions","disabledDates","value","dateSerializationFormat","_keyboardProcessor","_widgetKeyboardProcessor","min","dateOption","max","onValueChanged","_valueChangedHandler","onCellClick","_cellClickHandler","tabIndex","_injectComponent","onContouredChanged","_refreshActiveDescendant","hasFocus","func","that","params","component","setAria","actionValue","popupConfig","_popupConfig","toolbarItems","buttonsLocation","position","splitPair","unshift","widget","toolbar","location","options","onInitialized","registerKeyHandler","_escapeHandler","onClick","_toTodayView","text","format","type","collision","focus","prevValue","previousValue","sameDate","getValue","event","_updateValue","textChangedHandler","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.calendar.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar Calendar = require(\"../calendar\");\r\nvar DateBoxStrategy = require(\"./ui.date_box.strategy\");\r\nvar dateUtils = require(\"../../core/utils/date\");\r\nvar commonUtils = require(\"../../core/utils/common\");\r\nvar isFunction = require(\"../../core/utils/type\").isFunction;\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar messageLocalization = require(\"../../localization/message\");\r\nvar CalendarStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"Calendar\",\r\n    supportedKeys: function() {\r\n        var homeEndHandler = function(e) {\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n            return false\r\n        };\r\n        return {\r\n            rightArrow: function() {\r\n                if (this.option(\"opened\")) {\r\n                    return true\r\n                }\r\n            },\r\n            leftArrow: function() {\r\n                if (this.option(\"opened\")) {\r\n                    return true\r\n                }\r\n            },\r\n            enter: function(e) {\r\n                if (this.dateBox.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    if (this._widget.option(\"zoomLevel\") === this._widget.option(\"maxZoomLevel\")) {\r\n                        var contouredDate = this._widget._view.option(\"contouredDate\");\r\n                        var lastActionElement = this._lastActionElement;\r\n                        if (contouredDate && \"calendar\" === lastActionElement) {\r\n                            this.dateBoxValue(contouredDate, e)\r\n                        }\r\n                        this.dateBox.close();\r\n                        this.dateBox._valueChangeEventHandler(e)\r\n                    } else {\r\n                        return true\r\n                    }\r\n                } else {\r\n                    this.dateBox._valueChangeEventHandler(e)\r\n                }\r\n            }.bind(this),\r\n            home: homeEndHandler,\r\n            end: homeEndHandler\r\n        }\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || \"shortdate\"\r\n    },\r\n    _getWidgetName: function() {\r\n        return Calendar\r\n    },\r\n    _getWidgetOptions: function() {\r\n        var disabledDates = this.dateBox.option(\"disabledDates\");\r\n        return extend(this.dateBox.option(\"calendarOptions\"), {\r\n            value: this.dateBoxValue() || null,\r\n            dateSerializationFormat: null,\r\n            _keyboardProcessor: this._widgetKeyboardProcessor,\r\n            min: this.dateBox.dateOption(\"min\"),\r\n            max: this.dateBox.dateOption(\"max\"),\r\n            onValueChanged: this._valueChangedHandler.bind(this),\r\n            onCellClick: this._cellClickHandler.bind(this),\r\n            tabIndex: null,\r\n            disabledDates: isFunction(disabledDates) ? this._injectComponent(disabledDates.bind(this.dateBox)) : disabledDates,\r\n            onContouredChanged: this._refreshActiveDescendant.bind(this),\r\n            hasFocus: function() {\r\n                return true\r\n            }\r\n        })\r\n    },\r\n    _injectComponent: function(func) {\r\n        var that = this;\r\n        return function(params) {\r\n            extend(params, {\r\n                component: that.dateBox\r\n            });\r\n            return func(params)\r\n        }\r\n    },\r\n    _refreshActiveDescendant: function(e) {\r\n        this._lastActionElement = \"calendar\";\r\n        this.dateBox.setAria(\"activedescendant\", e.actionValue)\r\n    },\r\n    popupConfig: function(_popupConfig) {\r\n        var toolbarItems = _popupConfig.toolbarItems;\r\n        var buttonsLocation = this.dateBox.option(\"buttonsLocation\");\r\n        var position = [];\r\n        if (\"default\" !== buttonsLocation) {\r\n            position = commonUtils.splitPair(buttonsLocation)\r\n        } else {\r\n            position = [\"bottom\", \"center\"]\r\n        }\r\n        if (\"useButtons\" === this.dateBox.option(\"applyValueMode\")) {\r\n            toolbarItems.unshift({\r\n                widget: \"dxButton\",\r\n                toolbar: position[0],\r\n                location: \"after\" === position[1] ? \"before\" : position[1],\r\n                options: {\r\n                    onInitialized: function(e) {\r\n                        e.component.registerKeyHandler(\"escape\", this._escapeHandler.bind(this))\r\n                    }.bind(this),\r\n                    onClick: function() {\r\n                        this._widget._toTodayView()\r\n                    }.bind(this),\r\n                    text: messageLocalization.format(\"dxCalendar-todayButtonText\"),\r\n                    type: \"today\"\r\n                }\r\n            })\r\n        }\r\n        return extend(true, _popupConfig, {\r\n            toolbarItems: toolbarItems,\r\n            position: {\r\n                collision: \"flipfit flip\"\r\n            }\r\n        })\r\n    },\r\n    _escapeHandler: function() {\r\n        this.dateBox.close();\r\n        this.dateBox.focus()\r\n    },\r\n    _valueChangedHandler: function(e) {\r\n        var dateBox = this.dateBox;\r\n        var value = e.value;\r\n        var prevValue = e.previousValue;\r\n        if (dateUtils.sameDate(value, prevValue)) {\r\n            return\r\n        }\r\n        if (\"instantly\" === dateBox.option(\"applyValueMode\")) {\r\n            this.dateBoxValue(this.getValue(), e.event)\r\n        }\r\n    },\r\n    _updateValue: function() {\r\n        if (!this._widget) {\r\n            return\r\n        }\r\n        this._widget.option(\"value\", this.dateBoxValue())\r\n    },\r\n    textChangedHandler: function() {\r\n        this._lastActionElement = \"input\";\r\n        if (this.dateBox.option(\"opened\") && this._widget) {\r\n            this._updateValue(true)\r\n        }\r\n    },\r\n    _cellClickHandler: function(e) {\r\n        var dateBox = this.dateBox;\r\n        if (\"instantly\" === dateBox.option(\"applyValueMode\")) {\r\n            dateBox.option(\"opened\", false);\r\n            this.dateBoxValue(this.getValue(), e.event)\r\n        }\r\n    }\r\n});\r\nmodule.exports = CalendarStrategy;\r\n"]},"metadata":{},"sourceType":"script"}