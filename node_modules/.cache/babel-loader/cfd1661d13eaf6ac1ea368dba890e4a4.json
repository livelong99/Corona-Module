{"ast":null,"code":"/**\r\n * DevExtreme (ui/color_box/color_box.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\");\n\nvar eventsEngine = require(\"../../events/core/events_engine\");\n\nvar Color = require(\"../../color\");\n\nvar ColorView = require(\"./color_view\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar isFunction = require(\"../../core/utils/type\").isFunction;\n\nvar registerComponent = require(\"../../core/component_registrator\");\n\nvar DropDownEditor = require(\"../drop_down_editor/ui.drop_down_editor\");\n\nvar COLOR_BOX_CLASS = \"dx-colorbox\";\nvar COLOR_BOX_INPUT_CLASS = COLOR_BOX_CLASS + \"-input\";\nvar COLOR_BOX_INPUT_CONTAINER_CLASS = COLOR_BOX_INPUT_CLASS + \"-container\";\nvar COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS = COLOR_BOX_CLASS + \"-color-result-preview\";\nvar COLOR_BOX_COLOR_IS_NOT_DEFINED = COLOR_BOX_CLASS + \"-color-is-not-defined\";\nvar COLOR_BOX_OVERLAY_CLASS = COLOR_BOX_CLASS + \"-overlay\";\nvar COLOR_BOX_CONTAINER_CELL_CLASS = \"dx-colorview-container-cell\";\nvar COLOR_BOX_BUTTON_CELL_CLASS = \"dx-colorview-button-cell\";\nvar COLOR_BOX_BUTTONS_CONTAINER_CLASS = \"dx-colorview-buttons-container\";\nvar COLOR_BOX_APPLY_BUTTON_CLASS = \"dx-colorview-apply-button\";\nvar COLOR_BOX_CANCEL_BUTTON_CLASS = \"dx-colorview-cancel-button\";\nvar colorEditorPrototype = ColorView.prototype;\nvar colorUtils = {\n  makeTransparentBackground: colorEditorPrototype._makeTransparentBackground.bind(colorEditorPrototype),\n  makeRgba: colorEditorPrototype._makeRgba.bind(colorEditorPrototype)\n};\nvar ColorBox = DropDownEditor.inherit({\n  _supportedKeys: function _supportedKeys() {\n    var arrowHandler = function arrowHandler(e) {\n      e.stopPropagation();\n\n      if (this.option(\"opened\")) {\n        e.preventDefault();\n        return true;\n      }\n    };\n\n    var upArrowHandler = function upArrowHandler(e) {\n      if (!this.option(\"opened\")) {\n        e.preventDefault();\n        return false;\n      }\n\n      if (e.altKey) {\n        this.close();\n        return false;\n      }\n\n      return true;\n    };\n\n    var downArrowHandler = function downArrowHandler(e) {\n      if (!this.option(\"opened\") && !e.altKey) {\n        e.preventDefault();\n        return false;\n      }\n\n      if (!this.option(\"opened\") && e.altKey) {\n        this._validatedOpening();\n\n        return false;\n      }\n\n      return true;\n    };\n\n    return extend(this.callBase(), {\n      tab: function tab(e) {\n        if (this.option(\"opened\")) {\n          e.preventDefault();\n\n          this._colorView._rgbInputs[0].focus();\n        }\n      },\n      enter: this._enterKeyHandler,\n      leftArrow: arrowHandler,\n      rightArrow: arrowHandler,\n      upArrow: upArrowHandler,\n      downArrow: downArrowHandler\n    });\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      editAlphaChannel: false,\n      applyValueMode: \"useButtons\",\n      keyStep: 1,\n      fieldTemplate: null,\n      onApplyButtonClick: null,\n      onCancelButtonClick: null,\n      buttonsLocation: \"bottom after\"\n    });\n  },\n  _popupHidingHandler: function _popupHidingHandler() {\n    this.callBase();\n\n    if (\"useButtons\" === this.option(\"applyValueMode\")) {\n      this._updateColorViewValue(this.option(\"value\"));\n    }\n  },\n  _popupConfig: function _popupConfig() {\n    return extend(this.callBase(), {\n      height: \"auto\",\n      width: \"\"\n    });\n  },\n  _contentReadyHandler: function _contentReadyHandler() {\n    this._createColorView();\n\n    this._addPopupBottomClasses();\n  },\n  _addPopupBottomClasses: function _addPopupBottomClasses() {\n    var $popupBottom = this._popup.bottomToolbar();\n\n    if ($popupBottom) {\n      $popupBottom.addClass(COLOR_BOX_CONTAINER_CELL_CLASS).addClass(COLOR_BOX_BUTTON_CELL_CLASS).find(\".dx-toolbar-items-container\").addClass(COLOR_BOX_BUTTONS_CONTAINER_CLASS);\n      $popupBottom.find(\".dx-popup-done\").addClass(COLOR_BOX_APPLY_BUTTON_CLASS);\n      $popupBottom.find(\".dx-popup-cancel\").addClass(COLOR_BOX_CANCEL_BUTTON_CLASS);\n    }\n  },\n  _createColorView: function _createColorView() {\n    this._popup.overlayContent().addClass(COLOR_BOX_OVERLAY_CLASS);\n\n    var $colorView = $(\"<div>\").appendTo(this._popup.$content());\n    this._colorView = this._createComponent($colorView, ColorView, this._colorViewConfig());\n\n    this._colorView.registerKeyHandler(\"escape\", this._escapeHandler.bind(this));\n\n    eventsEngine.on($colorView, \"focus\", function () {\n      this.focus();\n    }.bind(this));\n  },\n  _escapeHandler: function _escapeHandler() {\n    this.close();\n    this.focus();\n  },\n  _applyNewColor: function _applyNewColor(value) {\n    this.option(\"value\", value);\n\n    if (value) {\n      colorUtils.makeTransparentBackground(this._$colorResultPreview, value);\n    }\n\n    if (this._colorViewEnterKeyPressed) {\n      this.close();\n      this._colorViewEnterKeyPressed = false;\n    }\n  },\n  _colorViewConfig: function _colorViewConfig() {\n    var that = this;\n    return {\n      value: that.option(\"value\"),\n      matchValue: that.option(\"value\"),\n      editAlphaChannel: that.option(\"editAlphaChannel\"),\n      applyValueMode: that.option(\"applyValueMode\"),\n      focusStateEnabled: that.option(\"focusStateEnabled\"),\n      stylingMode: this.option(\"stylingMode\"),\n      onEnterKeyPressed: function onEnterKeyPressed() {\n        that._colorViewEnterKeyPressed = true;\n\n        if (that._colorView.option(\"value\") !== that.option(\"value\")) {\n          that._applyNewColor(that._colorView.option(\"value\"));\n\n          that.close();\n        }\n      },\n      onValueChanged: function onValueChanged(args) {\n        if (colorUtils.makeRgba(args.value) === args.previousValue) {\n          return;\n        }\n\n        var instantlyMode = \"instantly\" === that.option(\"applyValueMode\");\n\n        if (!instantlyMode && !that._colorViewEnterKeyPressed) {\n          return;\n        }\n\n        that._applyNewColor(args.value);\n      },\n      _keyboardProcessor: that._colorViewProcessor\n    };\n  },\n  _enterKeyHandler: function _enterKeyHandler() {\n    var newValue = this._input().val();\n\n    var value = this.option(\"value\");\n    var oldValue = this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value;\n\n    if (!newValue) {\n      return false;\n    }\n\n    var color = new Color(newValue);\n\n    if (color.colorIsInvalid) {\n      this._input().val(oldValue);\n\n      return;\n    }\n\n    if (newValue !== oldValue) {\n      this._applyColorFromInput(newValue);\n\n      this.option(\"value\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(newValue) : newValue);\n    }\n\n    if (this._colorView) {\n      var colorViewValue = this._colorView.option(\"value\");\n\n      if (value !== colorViewValue) {\n        this.option(\"value\", colorViewValue);\n      }\n    }\n\n    this.close();\n    return false;\n  },\n  _applyButtonHandler: function _applyButtonHandler() {\n    this._applyNewColor(this._colorView.option(\"value\"));\n\n    if (isFunction(this.option(\"onApplyButtonClick\"))) {\n      this.option(\"onApplyButtonClick\")();\n    }\n\n    this.callBase();\n  },\n  _cancelButtonHandler: function _cancelButtonHandler() {\n    this._resetInputValue();\n\n    if (isFunction(this.option(\"onCancelButtonClick\"))) {\n      this.option(\"onCancelButtonClick\")();\n    }\n\n    this.callBase();\n  },\n  _attachChildKeyboardEvents: function _attachChildKeyboardEvents() {\n    this._colorViewProcessor = this._keyboardProcessor.attachChildProcessor();\n\n    if (this._colorView) {\n      this._colorView.option(\"_keyboardProcessor\", this._colorViewProcessor);\n\n      return;\n    }\n  },\n  _init: function _init() {\n    this.callBase();\n  },\n  _initMarkup: function _initMarkup() {\n    this.$element().addClass(COLOR_BOX_CLASS);\n    this.callBase();\n  },\n  _renderInput: function _renderInput() {\n    this.callBase();\n\n    this._input().addClass(COLOR_BOX_INPUT_CLASS);\n\n    this._renderColorPreview();\n  },\n  _renderColorPreview: function _renderColorPreview() {\n    this.$element().wrapInner($(\"<div>\").addClass(COLOR_BOX_INPUT_CONTAINER_CLASS));\n    this._$colorBoxInputContainer = this.$element().children().eq(0);\n    this._$colorResultPreview = $(\"<div>\").addClass(COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS).appendTo(this._$textEditorInputContainer);\n\n    if (!this.option(\"value\")) {\n      this._$colorBoxInputContainer.addClass(COLOR_BOX_COLOR_IS_NOT_DEFINED);\n    } else {\n      colorUtils.makeTransparentBackground(this._$colorResultPreview, this.option(\"value\"));\n    }\n  },\n  _renderValue: function _renderValue() {\n    var value = this.option(\"value\");\n    this.option(\"text\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value);\n    return this.callBase();\n  },\n  _resetInputValue: function _resetInputValue() {\n    var $input = this._input();\n\n    var value = this.option(\"value\");\n    $input.val(value);\n\n    this._updateColorViewValue(value);\n  },\n  _updateColorViewValue: function _updateColorViewValue(value) {\n    if (this._colorView) {\n      this._colorView.option({\n        value: value,\n        matchValue: value\n      });\n    }\n  },\n  _valueChangeEventHandler: function _valueChangeEventHandler(e) {\n    var value = this._input().val();\n\n    if (value) {\n      value = this._applyColorFromInput(value);\n\n      this._updateColorViewValue(value);\n    }\n\n    this.callBase(e, value);\n  },\n  _applyColorFromInput: function _applyColorFromInput(value) {\n    var newColor = new Color(value);\n\n    if (newColor.colorIsInvalid) {\n      this._resetInputValue();\n\n      value = this.option(\"value\");\n    }\n\n    return value;\n  },\n  _optionChanged: function _optionChanged(args) {\n    var value = args.value;\n    var name = args.name;\n\n    switch (name) {\n      case \"value\":\n        this._$colorBoxInputContainer.toggleClass(COLOR_BOX_COLOR_IS_NOT_DEFINED, !value);\n\n        if (value) {\n          colorUtils.makeTransparentBackground(this._$colorResultPreview, value);\n        } else {\n          this._$colorResultPreview.removeAttr(\"style\");\n        }\n\n        this._updateColorViewValue(value);\n\n        this.callBase(args);\n        break;\n\n      case \"applyButtonText\":\n      case \"cancelButtonText\":\n        this.callBase(args);\n        this._popup && this._addPopupBottomClasses();\n        break;\n\n      case \"editAlphaChannel\":\n      case \"onCancelButtonClick\":\n      case \"onApplyButtonClick\":\n      case \"keyStep\":\n        if (this._colorView) {\n          this._colorView.option(name, value);\n        }\n\n        break;\n\n      case \"applyValueMode\":\n        this.callBase(args);\n        break;\n\n      case \"rtlEnabled\":\n        if (this._colorView) {\n          this._colorView.option(name, value);\n        }\n\n        this.callBase(args);\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\nregisterComponent(\"dxColorBox\", ColorBox);\nmodule.exports = ColorBox;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/color_box/color_box.js"],"names":["$","require","eventsEngine","Color","ColorView","extend","isFunction","registerComponent","DropDownEditor","COLOR_BOX_CLASS","COLOR_BOX_INPUT_CLASS","COLOR_BOX_INPUT_CONTAINER_CLASS","COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS","COLOR_BOX_COLOR_IS_NOT_DEFINED","COLOR_BOX_OVERLAY_CLASS","COLOR_BOX_CONTAINER_CELL_CLASS","COLOR_BOX_BUTTON_CELL_CLASS","COLOR_BOX_BUTTONS_CONTAINER_CLASS","COLOR_BOX_APPLY_BUTTON_CLASS","COLOR_BOX_CANCEL_BUTTON_CLASS","colorEditorPrototype","prototype","colorUtils","makeTransparentBackground","_makeTransparentBackground","bind","makeRgba","_makeRgba","ColorBox","inherit","_supportedKeys","arrowHandler","e","stopPropagation","option","preventDefault","upArrowHandler","altKey","close","downArrowHandler","_validatedOpening","callBase","tab","_colorView","_rgbInputs","focus","enter","_enterKeyHandler","leftArrow","rightArrow","upArrow","downArrow","_getDefaultOptions","editAlphaChannel","applyValueMode","keyStep","fieldTemplate","onApplyButtonClick","onCancelButtonClick","buttonsLocation","_popupHidingHandler","_updateColorViewValue","_popupConfig","height","width","_contentReadyHandler","_createColorView","_addPopupBottomClasses","$popupBottom","_popup","bottomToolbar","addClass","find","overlayContent","$colorView","appendTo","$content","_createComponent","_colorViewConfig","registerKeyHandler","_escapeHandler","on","_applyNewColor","value","_$colorResultPreview","_colorViewEnterKeyPressed","that","matchValue","focusStateEnabled","stylingMode","onEnterKeyPressed","onValueChanged","args","previousValue","instantlyMode","_keyboardProcessor","_colorViewProcessor","newValue","_input","val","oldValue","color","colorIsInvalid","_applyColorFromInput","colorViewValue","_applyButtonHandler","_cancelButtonHandler","_resetInputValue","_attachChildKeyboardEvents","attachChildProcessor","_init","_initMarkup","$element","_renderInput","_renderColorPreview","wrapInner","_$colorBoxInputContainer","children","eq","_$textEditorInputContainer","_renderValue","$input","_valueChangeEventHandler","newColor","_optionChanged","name","toggleClass","removeAttr","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/color_box/color_box.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\");\r\nvar eventsEngine = require(\"../../events/core/events_engine\");\r\nvar Color = require(\"../../color\");\r\nvar ColorView = require(\"./color_view\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar isFunction = require(\"../../core/utils/type\").isFunction;\r\nvar registerComponent = require(\"../../core/component_registrator\");\r\nvar DropDownEditor = require(\"../drop_down_editor/ui.drop_down_editor\");\r\nvar COLOR_BOX_CLASS = \"dx-colorbox\";\r\nvar COLOR_BOX_INPUT_CLASS = COLOR_BOX_CLASS + \"-input\";\r\nvar COLOR_BOX_INPUT_CONTAINER_CLASS = COLOR_BOX_INPUT_CLASS + \"-container\";\r\nvar COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS = COLOR_BOX_CLASS + \"-color-result-preview\";\r\nvar COLOR_BOX_COLOR_IS_NOT_DEFINED = COLOR_BOX_CLASS + \"-color-is-not-defined\";\r\nvar COLOR_BOX_OVERLAY_CLASS = COLOR_BOX_CLASS + \"-overlay\";\r\nvar COLOR_BOX_CONTAINER_CELL_CLASS = \"dx-colorview-container-cell\";\r\nvar COLOR_BOX_BUTTON_CELL_CLASS = \"dx-colorview-button-cell\";\r\nvar COLOR_BOX_BUTTONS_CONTAINER_CLASS = \"dx-colorview-buttons-container\";\r\nvar COLOR_BOX_APPLY_BUTTON_CLASS = \"dx-colorview-apply-button\";\r\nvar COLOR_BOX_CANCEL_BUTTON_CLASS = \"dx-colorview-cancel-button\";\r\nvar colorEditorPrototype = ColorView.prototype;\r\nvar colorUtils = {\r\n    makeTransparentBackground: colorEditorPrototype._makeTransparentBackground.bind(colorEditorPrototype),\r\n    makeRgba: colorEditorPrototype._makeRgba.bind(colorEditorPrototype)\r\n};\r\nvar ColorBox = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        var arrowHandler = function(e) {\r\n            e.stopPropagation();\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n        };\r\n        var upArrowHandler = function(e) {\r\n            if (!this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return false\r\n            }\r\n            if (e.altKey) {\r\n                this.close();\r\n                return false\r\n            }\r\n            return true\r\n        };\r\n        var downArrowHandler = function(e) {\r\n            if (!this.option(\"opened\") && !e.altKey) {\r\n                e.preventDefault();\r\n                return false\r\n            }\r\n            if (!this.option(\"opened\") && e.altKey) {\r\n                this._validatedOpening();\r\n                return false\r\n            }\r\n            return true\r\n        };\r\n        return extend(this.callBase(), {\r\n            tab: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._colorView._rgbInputs[0].focus()\r\n                }\r\n            },\r\n            enter: this._enterKeyHandler,\r\n            leftArrow: arrowHandler,\r\n            rightArrow: arrowHandler,\r\n            upArrow: upArrowHandler,\r\n            downArrow: downArrowHandler\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            editAlphaChannel: false,\r\n            applyValueMode: \"useButtons\",\r\n            keyStep: 1,\r\n            fieldTemplate: null,\r\n            onApplyButtonClick: null,\r\n            onCancelButtonClick: null,\r\n            buttonsLocation: \"bottom after\"\r\n        })\r\n    },\r\n    _popupHidingHandler: function() {\r\n        this.callBase();\r\n        if (\"useButtons\" === this.option(\"applyValueMode\")) {\r\n            this._updateColorViewValue(this.option(\"value\"))\r\n        }\r\n    },\r\n    _popupConfig: function() {\r\n        return extend(this.callBase(), {\r\n            height: \"auto\",\r\n            width: \"\"\r\n        })\r\n    },\r\n    _contentReadyHandler: function() {\r\n        this._createColorView();\r\n        this._addPopupBottomClasses()\r\n    },\r\n    _addPopupBottomClasses: function() {\r\n        var $popupBottom = this._popup.bottomToolbar();\r\n        if ($popupBottom) {\r\n            $popupBottom.addClass(COLOR_BOX_CONTAINER_CELL_CLASS).addClass(COLOR_BOX_BUTTON_CELL_CLASS).find(\".dx-toolbar-items-container\").addClass(COLOR_BOX_BUTTONS_CONTAINER_CLASS);\r\n            $popupBottom.find(\".dx-popup-done\").addClass(COLOR_BOX_APPLY_BUTTON_CLASS);\r\n            $popupBottom.find(\".dx-popup-cancel\").addClass(COLOR_BOX_CANCEL_BUTTON_CLASS)\r\n        }\r\n    },\r\n    _createColorView: function() {\r\n        this._popup.overlayContent().addClass(COLOR_BOX_OVERLAY_CLASS);\r\n        var $colorView = $(\"<div>\").appendTo(this._popup.$content());\r\n        this._colorView = this._createComponent($colorView, ColorView, this._colorViewConfig());\r\n        this._colorView.registerKeyHandler(\"escape\", this._escapeHandler.bind(this));\r\n        eventsEngine.on($colorView, \"focus\", function() {\r\n            this.focus()\r\n        }.bind(this))\r\n    },\r\n    _escapeHandler: function() {\r\n        this.close();\r\n        this.focus()\r\n    },\r\n    _applyNewColor: function(value) {\r\n        this.option(\"value\", value);\r\n        if (value) {\r\n            colorUtils.makeTransparentBackground(this._$colorResultPreview, value)\r\n        }\r\n        if (this._colorViewEnterKeyPressed) {\r\n            this.close();\r\n            this._colorViewEnterKeyPressed = false\r\n        }\r\n    },\r\n    _colorViewConfig: function() {\r\n        var that = this;\r\n        return {\r\n            value: that.option(\"value\"),\r\n            matchValue: that.option(\"value\"),\r\n            editAlphaChannel: that.option(\"editAlphaChannel\"),\r\n            applyValueMode: that.option(\"applyValueMode\"),\r\n            focusStateEnabled: that.option(\"focusStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            onEnterKeyPressed: function() {\r\n                that._colorViewEnterKeyPressed = true;\r\n                if (that._colorView.option(\"value\") !== that.option(\"value\")) {\r\n                    that._applyNewColor(that._colorView.option(\"value\"));\r\n                    that.close()\r\n                }\r\n            },\r\n            onValueChanged: function(args) {\r\n                if (colorUtils.makeRgba(args.value) === args.previousValue) {\r\n                    return\r\n                }\r\n                var instantlyMode = \"instantly\" === that.option(\"applyValueMode\");\r\n                if (!instantlyMode && !that._colorViewEnterKeyPressed) {\r\n                    return\r\n                }\r\n                that._applyNewColor(args.value)\r\n            },\r\n            _keyboardProcessor: that._colorViewProcessor\r\n        }\r\n    },\r\n    _enterKeyHandler: function() {\r\n        var newValue = this._input().val();\r\n        var value = this.option(\"value\");\r\n        var oldValue = this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value;\r\n        if (!newValue) {\r\n            return false\r\n        }\r\n        var color = new Color(newValue);\r\n        if (color.colorIsInvalid) {\r\n            this._input().val(oldValue);\r\n            return\r\n        }\r\n        if (newValue !== oldValue) {\r\n            this._applyColorFromInput(newValue);\r\n            this.option(\"value\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(newValue) : newValue)\r\n        }\r\n        if (this._colorView) {\r\n            var colorViewValue = this._colorView.option(\"value\");\r\n            if (value !== colorViewValue) {\r\n                this.option(\"value\", colorViewValue)\r\n            }\r\n        }\r\n        this.close();\r\n        return false\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this._applyNewColor(this._colorView.option(\"value\"));\r\n        if (isFunction(this.option(\"onApplyButtonClick\"))) {\r\n            this.option(\"onApplyButtonClick\")()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this._resetInputValue();\r\n        if (isFunction(this.option(\"onCancelButtonClick\"))) {\r\n            this.option(\"onCancelButtonClick\")()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _attachChildKeyboardEvents: function() {\r\n        this._colorViewProcessor = this._keyboardProcessor.attachChildProcessor();\r\n        if (this._colorView) {\r\n            this._colorView.option(\"_keyboardProcessor\", this._colorViewProcessor);\r\n            return\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase()\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(COLOR_BOX_CLASS);\r\n        this.callBase()\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._input().addClass(COLOR_BOX_INPUT_CLASS);\r\n        this._renderColorPreview()\r\n    },\r\n    _renderColorPreview: function() {\r\n        this.$element().wrapInner($(\"<div>\").addClass(COLOR_BOX_INPUT_CONTAINER_CLASS));\r\n        this._$colorBoxInputContainer = this.$element().children().eq(0);\r\n        this._$colorResultPreview = $(\"<div>\").addClass(COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS).appendTo(this._$textEditorInputContainer);\r\n        if (!this.option(\"value\")) {\r\n            this._$colorBoxInputContainer.addClass(COLOR_BOX_COLOR_IS_NOT_DEFINED)\r\n        } else {\r\n            colorUtils.makeTransparentBackground(this._$colorResultPreview, this.option(\"value\"))\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.option(\"value\");\r\n        this.option(\"text\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value);\r\n        return this.callBase()\r\n    },\r\n    _resetInputValue: function() {\r\n        var $input = this._input();\r\n        var value = this.option(\"value\");\r\n        $input.val(value);\r\n        this._updateColorViewValue(value)\r\n    },\r\n    _updateColorViewValue: function(value) {\r\n        if (this._colorView) {\r\n            this._colorView.option({\r\n                value: value,\r\n                matchValue: value\r\n            })\r\n        }\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var value = this._input().val();\r\n        if (value) {\r\n            value = this._applyColorFromInput(value);\r\n            this._updateColorViewValue(value)\r\n        }\r\n        this.callBase(e, value)\r\n    },\r\n    _applyColorFromInput: function(value) {\r\n        var newColor = new Color(value);\r\n        if (newColor.colorIsInvalid) {\r\n            this._resetInputValue();\r\n            value = this.option(\"value\")\r\n        }\r\n        return value\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value;\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"value\":\r\n                this._$colorBoxInputContainer.toggleClass(COLOR_BOX_COLOR_IS_NOT_DEFINED, !value);\r\n                if (value) {\r\n                    colorUtils.makeTransparentBackground(this._$colorResultPreview, value)\r\n                } else {\r\n                    this._$colorResultPreview.removeAttr(\"style\")\r\n                }\r\n                this._updateColorViewValue(value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n                this.callBase(args);\r\n                this._popup && this._addPopupBottomClasses();\r\n                break;\r\n            case \"editAlphaChannel\":\r\n            case \"onCancelButtonClick\":\r\n            case \"onApplyButtonClick\":\r\n            case \"keyStep\":\r\n                if (this._colorView) {\r\n                    this._colorView.option(name, value)\r\n                }\r\n                break;\r\n            case \"applyValueMode\":\r\n                this.callBase(args);\r\n                break;\r\n            case \"rtlEnabled\":\r\n                if (this._colorView) {\r\n                    this._colorView.option(name, value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxColorBox\", ColorBox);\r\nmodule.exports = ColorBox;\r\n"]},"metadata":{},"sourceType":"script"}