{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\src\\\\Components\\\\World\\\\Graph.jsx\";\nimport React, { useContext } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { HistoryContext } from '../Store';\nimport axios from \"axios\";\nimport { Chart, ArgumentAxis, ValueAxis, LineSeries, Legend, ZoomAndPan, Title } from \"@devexpress/dx-react-chart-material-ui\";\n\nfunction Graph(props) {\n  const _useContext = useContext(HistoryContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        history = _useContext2[0],\n        setHistory = _useContext2[1];\n\n  const Hist = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var rec;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              \"method\": \"get\",\n              \"url\": \"https://corona.lmao.ninja/v2/historical\"\n            }).then(response => {\n              const Timeline = response.data;\n              return Timeline;\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 2:\n            rec = _context.sent;\n            setHistory(rec);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function Hist() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (history.length === 0) Hist();\n  const info = history.filter(rec => rec.country === props.name);\n\n  function getData(record) {\n    const ArgumentLabel = props => {\n      const x = props.x; // filter Labels\n\n      if (lastLabelCoordinate && lastLabelCoordinate < x && x - lastLabelCoordinate <= labelHalfWidth) {\n        return null;\n      }\n\n      lastLabelCoordinate = x;\n      return /*#__PURE__*/React.createElement(ArgumentAxis.Label, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }\n      }));\n    };\n\n    const Cases = record.timeline.cases;\n    const Deaths = record.timeline.deaths;\n    const Recovered = record.timeline.recovered;\n    const data = [];\n    const dates = Object.keys(Cases);\n    var i = 0;\n    var k = Math.round(dates.length / 4);\n    var date;\n\n    for (var _i = 0, _dates = dates; _i < _dates.length; _i++) {\n      date = _dates[_i];\n\n      if (Cases[date] > 0) {\n        if (i % k === 0) {\n          if (date.length === 7) data.push({\n            argument: date.substring(0, 4),\n            cases: Cases[date],\n            deaths: Deaths[date],\n            recovered: Recovered[date]\n          });else data.push({\n            argument: date.substring(0, 3),\n            cases: Cases[date],\n            deaths: Deaths[date],\n            recovered: Recovered[date]\n          });\n        } //else\n        //data.push({argument:\"\" , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\n\n      }\n\n      i++;\n    }\n\n    date = dates[dates.length - 1];\n    data.push({\n      argument: date.substring(0, 4),\n      cases: Cases[date],\n      deaths: Deaths[date],\n      recovered: Recovered[date]\n    });\n    return /*#__PURE__*/React.createElement(Chart, {\n      data: data,\n      width: 800,\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ArgumentAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      wordWrap: \"none\",\n      overlappingBehavior: \"stagger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(ValueAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Title, {\n      text: \"Corona Record in \" + props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(LineSeries, {\n      name: \"Total Cases\",\n      valueField: \"cases\",\n      argumentField: \"argument\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(LineSeries, {\n      name: \"Total Deaths\",\n      valueField: \"deaths\",\n      argumentField: \"argument\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(LineSeries, {\n      name: \"Total Recoveries\",\n      valueField: \"recovered\",\n      argumentField: \"argument\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ZoomAndPan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, info.map(getData));\n}\n\nexport default Graph;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/src/Components/World/Graph.jsx"],"names":["React","useContext","Paper","HistoryContext","axios","Chart","ArgumentAxis","ValueAxis","LineSeries","Legend","ZoomAndPan","Title","Graph","props","history","setHistory","Hist","then","response","Timeline","data","catch","error","console","log","rec","length","info","filter","country","name","getData","record","ArgumentLabel","x","lastLabelCoordinate","labelHalfWidth","Cases","timeline","cases","Deaths","deaths","Recovered","recovered","dates","Object","keys","i","k","Math","round","date","push","argument","substring","map"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {HistoryContext} from '../Store';\r\nimport axios from \"axios\";\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  LineSeries,\r\n  Legend,\r\n  ZoomAndPan,\r\n  Title\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\n\r\n\r\nfunction Graph(props) {\r\n\r\n  const [history, setHistory] = useContext(HistoryContext);\r\n\r\n  const Hist = async () => {\r\n    const rec = await axios({\r\n    \"method\": \"get\",\r\n    \"url\": \"https://corona.lmao.ninja/v2/historical\"})\r\n    .then((response)=>{\r\n        const Timeline = response.data;\r\n        return Timeline;\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n  });\r\n  setHistory(rec)\r\n  }\r\n\r\n  if(history.length===0)\r\n    Hist();\r\n\r\n  const info = history.filter((rec)=>(rec.country===props.name))\r\n\r\n  function getData(record) {\r\n\r\n    const ArgumentLabel = props => {\r\n      const { x } = props;\r\n      // filter Labels\r\n      if (\r\n        lastLabelCoordinate &&\r\n        lastLabelCoordinate < x &&\r\n        x - lastLabelCoordinate <= labelHalfWidth\r\n      ) {\r\n        return null;\r\n      }\r\n      lastLabelCoordinate = x;\r\n      return <ArgumentAxis.Label {...props} />;\r\n    };\r\n\r\n    const Cases = record.timeline.cases;\r\n    const Deaths = record.timeline.deaths;\r\n    const Recovered = record.timeline.recovered;\r\n    const data = []\r\n    const dates = Object.keys(Cases);\r\n    var i =0;\r\n    var k = Math.round(dates.length/4);\r\n    var date;\r\n    for(date of dates) {\r\n       if(Cases[date]>0){\r\n        if(i%(k)===0){\r\n          if(date.length===7)\r\n            data.push({argument:date.substring(0,4) , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n          else\r\n            data.push({argument:date.substring(0,3) , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n        }\r\n        //else\r\n          //data.push({argument:\"\" , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n       }\r\n       i++;\r\n    }\r\n      date = dates[dates.length-1];\r\n      data.push({argument:date.substring(0,4) , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n    return (\r\n      <Chart data={data} width={800} height={400}>\r\n        <ArgumentAxis>\r\n        <Label\r\n              wordWrap=\"none\"\r\n              overlappingBehavior={\"stagger\"}\r\n            />\r\n        </ArgumentAxis>\r\n        <ValueAxis />\r\n        <Title text={\"Corona Record in \" + props.name} />\r\n\r\n        <LineSeries\r\n            name=\"Total Cases\"\r\n            valueField=\"cases\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <LineSeries\r\n            name=\"Total Deaths\"\r\n            valueField=\"deaths\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <LineSeries\r\n            name=\"Total Recoveries\"\r\n            valueField=\"recovered\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <Legend />\r\n          <ZoomAndPan />\r\n      </Chart>\r\n    )\r\n    \r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n\r\n      {info.map(getData)}\r\n      \r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default (Graph);"]},"metadata":{},"sourceType":"module"}