{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/ready_callbacks.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar domAdapter = require(\"../dom_adapter\");\n\nvar injector = require(\"./dependency_injector\");\n\nvar windowUtils = require(\"./window\");\n\nvar callOnce = require(\"./call_once\");\n\nvar callbacks = [];\n\nvar isReady = function isReady() {\n  return \"complete\" === domAdapter.getReadyState() || \"loading\" !== domAdapter.getReadyState() && !domAdapter.getDocumentElement().doScroll;\n};\n\nvar subscribeReady = callOnce(function () {\n  var removeListener = domAdapter.listen(domAdapter.getDocument(), \"DOMContentLoaded\", function () {\n    readyCallbacks.fire();\n    removeListener();\n  });\n});\nvar readyCallbacks = {\n  add: function add(callback) {\n    var hasWindow = windowUtils.hasWindow();\n\n    if (hasWindow && isReady()) {\n      callback();\n    } else {\n      callbacks.push(callback);\n      hasWindow && subscribeReady();\n    }\n  },\n  fire: function fire() {\n    callbacks.forEach(function (callback) {\n      return callback();\n    });\n    callbacks = [];\n  }\n};\nmodule.exports = injector(readyCallbacks);","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/core/utils/ready_callbacks.js"],"names":["domAdapter","require","injector","windowUtils","callOnce","callbacks","isReady","getReadyState","getDocumentElement","doScroll","subscribeReady","removeListener","listen","getDocument","readyCallbacks","fire","add","callback","hasWindow","push","forEach","module","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,uBAAD,CAAtB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,UAAD,CAAzB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAII,SAAS,GAAG,EAAhB;;AACA,IAAIC,OAAO,GAAG,SAAVA,OAAU,GAAW;AACrB,SAAO,eAAeN,UAAU,CAACO,aAAX,EAAf,IAA6C,cAAcP,UAAU,CAACO,aAAX,EAAd,IAA4C,CAACP,UAAU,CAACQ,kBAAX,GAAgCC,QAAjI;AACH,CAFD;;AAGA,IAAIC,cAAc,GAAGN,QAAQ,CAAC,YAAW;AACrC,MAAIO,cAAc,GAAGX,UAAU,CAACY,MAAX,CAAkBZ,UAAU,CAACa,WAAX,EAAlB,EAA4C,kBAA5C,EAAgE,YAAW;AAC5FC,IAAAA,cAAc,CAACC,IAAf;AACAJ,IAAAA,cAAc;AACjB,GAHoB,CAArB;AAIH,CAL4B,CAA7B;AAMA,IAAIG,cAAc,GAAG;AACjBE,EAAAA,GAAG,EAAE,aAASC,QAAT,EAAmB;AACpB,QAAIC,SAAS,GAAGf,WAAW,CAACe,SAAZ,EAAhB;;AACA,QAAIA,SAAS,IAAIZ,OAAO,EAAxB,EAA4B;AACxBW,MAAAA,QAAQ;AACX,KAFD,MAEO;AACHZ,MAAAA,SAAS,CAACc,IAAV,CAAeF,QAAf;AACAC,MAAAA,SAAS,IAAIR,cAAc,EAA3B;AACH;AACJ,GATgB;AAUjBK,EAAAA,IAAI,EAAE,gBAAW;AACbV,IAAAA,SAAS,CAACe,OAAV,CAAkB,UAASH,QAAT,EAAmB;AACjC,aAAOA,QAAQ,EAAf;AACH,KAFD;AAGAZ,IAAAA,SAAS,GAAG,EAAZ;AACH;AAfgB,CAArB;AAiBAgB,MAAM,CAACC,OAAP,GAAiBpB,QAAQ,CAACY,cAAD,CAAzB","sourcesContent":["/**\r\n * DevExtreme (core/utils/ready_callbacks.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar domAdapter = require(\"../dom_adapter\");\r\nvar injector = require(\"./dependency_injector\");\r\nvar windowUtils = require(\"./window\");\r\nvar callOnce = require(\"./call_once\");\r\nvar callbacks = [];\r\nvar isReady = function() {\r\n    return \"complete\" === domAdapter.getReadyState() || \"loading\" !== domAdapter.getReadyState() && !domAdapter.getDocumentElement().doScroll\r\n};\r\nvar subscribeReady = callOnce(function() {\r\n    var removeListener = domAdapter.listen(domAdapter.getDocument(), \"DOMContentLoaded\", function() {\r\n        readyCallbacks.fire();\r\n        removeListener()\r\n    })\r\n});\r\nvar readyCallbacks = {\r\n    add: function(callback) {\r\n        var hasWindow = windowUtils.hasWindow();\r\n        if (hasWindow && isReady()) {\r\n            callback()\r\n        } else {\r\n            callbacks.push(callback);\r\n            hasWindow && subscribeReady()\r\n        }\r\n    },\r\n    fire: function() {\r\n        callbacks.forEach(function(callback) {\r\n            return callback()\r\n        });\r\n        callbacks = []\r\n    }\r\n};\r\nmodule.exports = injector(readyCallbacks);\r\n"]},"metadata":{},"sourceType":"script"}