{"ast":null,"code":"/**\r\n * DevExtreme (viz/axes/base_axis.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _smart_formatter = require(\"./smart_formatter\");\n\nvar _utils = require(\"../core/utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _axes_constants = require(\"./axes_constants\");\n\nvar _axes_constants2 = _interopRequireDefault(_axes_constants);\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _format_helper = require(\"../../format_helper\");\n\nvar _format_helper2 = _interopRequireDefault(_format_helper);\n\nvar _parse_utils = require(\"../components/parse_utils\");\n\nvar _parse_utils2 = _interopRequireDefault(_parse_utils);\n\nvar _tick_generator = require(\"./tick_generator\");\n\nvar _tick_generator2 = _interopRequireDefault(_tick_generator);\n\nvar _translator2d = require(\"../translators/translator2d\");\n\nvar _translator2d2 = _interopRequireDefault(_translator2d);\n\nvar _range = require(\"../translators/range\");\n\nvar _tick = require(\"./tick\");\n\nvar _math2 = require(\"../../core/utils/math\");\n\nvar _date = require(\"../../core/utils/date\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _xy_axes = require(\"./xy_axes\");\n\nvar _xy_axes2 = _interopRequireDefault(_xy_axes);\n\nvar _polar_axes = require(\"./polar_axes\");\n\nvar _polar_axes2 = _interopRequireDefault(_polar_axes);\n\nvar _constant_line = require(\"./constant_line\");\n\nvar _constant_line2 = _interopRequireDefault(_constant_line);\n\nvar _strip = require(\"./strip\");\n\nvar _strip2 = _interopRequireDefault(_strip);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar convertTicksToValues = _axes_constants2.default.convertTicksToValues;\nvar patchFontOptions = _utils2.default.patchFontOptions;\nvar getVizRangeObject = _utils2.default.getVizRangeObject;\nvar getLog = _utils2.default.getLogExt;\nvar raiseTo = _utils2.default.raiseToExt;\nvar valueOf = _utils2.default.valueOf;\nvar _math = Math;\nvar _abs = _math.abs;\nvar _max = _math.max;\nvar _min = _math.min;\nvar _isArray = Array.isArray;\nvar DEFAULT_AXIS_LABEL_SPACING = 5;\nvar MAX_GRID_BORDER_ADHENSION = 4;\nvar TOP = _axes_constants2.default.top;\nvar BOTTOM = _axes_constants2.default.bottom;\nvar LEFT = _axes_constants2.default.left;\nvar RIGHT = _axes_constants2.default.right;\nvar CENTER = _axes_constants2.default.center;\nvar KEEP = \"keep\";\nvar SHIFT = \"shift\";\nvar RESET = \"reset\";\nvar ROTATE = \"rotate\";\nvar DEFAULT_AXIS_DIVISION_FACTOR = 50;\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 15;\nvar SCROLL_THRESHOLD = 5;\nvar MIN_BAR_MARGIN = 5;\nvar MAX_MARGIN_VALUE = .8;\nvar dateIntervals = {\n  day: 864e5,\n  week: 6048e5\n};\n\nfunction getTickGenerator(options, incidentOccurred, skipTickGeneration, rangeIsEmpty, adjustDivisionFactor, _ref) {\n  var allowNegatives = _ref.allowNegatives,\n      linearThreshold = _ref.linearThreshold;\n  return _tick_generator2.default.tickGenerator({\n    axisType: options.type,\n    dataType: options.dataType,\n    logBase: options.logarithmBase,\n    allowNegatives: allowNegatives,\n    linearThreshold: linearThreshold,\n    axisDivisionFactor: adjustDivisionFactor(options.axisDivisionFactor || DEFAULT_AXIS_DIVISION_FACTOR),\n    minorAxisDivisionFactor: adjustDivisionFactor(options.minorAxisDivisionFactor || DEFAULT_MINOR_AXIS_DIVISION_FACTOR),\n    numberMultipliers: options.numberMultipliers,\n    calculateMinors: options.minorTick.visible || options.minorGrid.visible || options.calculateMinors,\n    allowDecimals: options.allowDecimals,\n    endOnTick: options.endOnTick,\n    incidentOccurred: incidentOccurred,\n    firstDayOfWeek: options.workWeek && options.workWeek[0],\n    skipTickGeneration: skipTickGeneration,\n    skipCalculationLimits: options.skipCalculationLimits,\n    generateExtraTick: options.generateExtraTick,\n    minTickInterval: options.minTickInterval,\n    rangeIsEmpty: rangeIsEmpty\n  });\n}\n\nfunction createMajorTick(axis, renderer, skippedCategory) {\n  var options = axis.getOptions();\n  return (0, _tick.tick)(axis, renderer, options.tick, options.grid, skippedCategory, false);\n}\n\nfunction createMinorTick(axis, renderer) {\n  var options = axis.getOptions();\n  return (0, _tick.tick)(axis, renderer, options.minorTick, options.minorGrid);\n}\n\nfunction createBoundaryTick(axis, renderer, isFirst) {\n  var options = axis.getOptions();\n  return (0, _tick.tick)(axis, renderer, (0, _extend.extend)({}, options.tick, {\n    visible: options.showCustomBoundaryTicks\n  }), options.grid, void 0, false, isFirst ? -1 : 1);\n}\n\nfunction callAction(elements, action, actionArgument1, actionArgument2) {\n  (elements || []).forEach(function (e) {\n    return e[action](actionArgument1, actionArgument2);\n  });\n}\n\nfunction initTickCoords(ticks) {\n  callAction(ticks, \"initCoords\");\n}\n\nfunction drawTickMarks(ticks, options) {\n  callAction(ticks, \"drawMark\", options);\n}\n\nfunction drawGrids(ticks, drawLine) {\n  callAction(ticks, \"drawGrid\", drawLine);\n}\n\nfunction updateTicksPosition(ticks, options, animate) {\n  callAction(ticks, \"updateTickPosition\", options, animate);\n}\n\nfunction updateGridsPosition(ticks, animate) {\n  callAction(ticks, \"updateGridPosition\", animate);\n}\n\nvar measureLabels = exports.measureLabels = function (items) {\n  items.forEach(function (item) {\n    item.labelBBox = item.label ? item.label.getBBox() : {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  });\n};\n\nfunction cleanUpInvalidTicks(ticks) {\n  var i = ticks.length - 1;\n\n  for (i; i >= 0; i--) {\n    if (!removeInvalidTick(ticks, i)) {\n      break;\n    }\n  }\n\n  for (i = 0; i < ticks.length; i++) {\n    if (removeInvalidTick(ticks, i)) {\n      i--;\n    } else {\n      break;\n    }\n  }\n}\n\nfunction removeInvalidTick(ticks, i) {\n  if (null === ticks[i].coords.x || null === ticks[i].coords.y) {\n    ticks.splice(i, 1);\n    return true;\n  }\n\n  return false;\n}\n\nfunction validateAxisOptions(options) {\n  var labelOptions = options.label;\n  var position = options.position;\n  var defaultPosition = options.isHorizontal ? BOTTOM : LEFT;\n  var secondaryPosition = options.isHorizontal ? TOP : RIGHT;\n\n  if (position !== defaultPosition && position !== secondaryPosition) {\n    position = defaultPosition;\n  }\n\n  if (position === RIGHT && !labelOptions.userAlignment) {\n    labelOptions.alignment = LEFT;\n  }\n\n  options.position = position;\n  options.hoverMode = options.hoverMode ? options.hoverMode.toLowerCase() : \"none\";\n  labelOptions.minSpacing = (0, _type.isDefined)(labelOptions.minSpacing) ? labelOptions.minSpacing : DEFAULT_AXIS_LABEL_SPACING;\n  options.type && (options.type = options.type.toLowerCase());\n  options.argumentType && (options.argumentType = options.argumentType.toLowerCase());\n  options.valueType && (options.valueType = options.valueType.toLowerCase());\n}\n\nfunction getOptimalAngle(boxes, labelOpt) {\n  var angle = 180 * _math.asin((boxes[0].height + labelOpt.minSpacing) / (boxes[1].x - boxes[0].x)) / _math.PI;\n\n  return angle < 45 ? -45 : -90;\n}\n\nfunction updateLabels(ticks, step, func) {\n  ticks.forEach(function (tick, index) {\n    if (tick.label) {\n      if (index % step !== 0) {\n        tick.removeLabel();\n      } else {\n        if (func) {\n          func(tick, index);\n        }\n      }\n    }\n  });\n}\n\nfunction getZoomBoundValue(optionValue, dataValue) {\n  if (void 0 === optionValue) {\n    return dataValue;\n  } else {\n    if (null === optionValue) {\n      return;\n    } else {\n      return optionValue;\n    }\n  }\n}\n\nfunction configureGenerator(options, axisDivisionFactor, viewPort, screenDelta, minTickInterval) {\n  var tickGeneratorOptions = (0, _extend.extend)({}, options, {\n    endOnTick: true,\n    axisDivisionFactor: axisDivisionFactor,\n    skipCalculationLimits: true,\n    generateExtraTick: true,\n    minTickInterval: minTickInterval\n  });\n  return function (tickInterval, skipTickGeneration, min, max, breaks) {\n    return getTickGenerator(tickGeneratorOptions, _common.noop, skipTickGeneration, viewPort.isEmpty(), function (v) {\n      return v;\n    }, viewPort)({\n      min: min,\n      max: max,\n      categories: viewPort.categories,\n      isSpacedMargin: viewPort.isSpacedMargin\n    }, screenDelta, tickInterval, (0, _type.isDefined)(tickInterval), void 0, void 0, void 0, breaks);\n  };\n}\n\nfunction convertVisualRangeObject(visualRange, optionValue) {\n  return _utils2.default.convertVisualRangeObject(visualRange, !_isArray(optionValue));\n}\n\nfunction getConstantLineSharpDirection(coord, axisCanvas) {\n  return Math.max(axisCanvas.start, axisCanvas.end) !== coord ? 1 : -1;\n}\n\nvar calculateCanvasMargins = exports.calculateCanvasMargins = function (bBoxes, canvas) {\n  var cLeft = canvas.left;\n  var cTop = canvas.top;\n  var cRight = canvas.width - canvas.right;\n  var cBottom = canvas.height - canvas.bottom;\n  return bBoxes.reduce(function (margins, bBox) {\n    if (!bBox || bBox.isEmpty) {\n      return margins;\n    }\n\n    return {\n      left: _max(margins.left, cLeft - bBox.x),\n      top: _max(margins.top, cTop - bBox.y),\n      right: _max(margins.right, bBox.x + bBox.width - cRight),\n      bottom: _max(margins.bottom, bBox.y + bBox.height - cBottom)\n    };\n  }, {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  });\n};\n\nvar Axis = exports.Axis = function (renderSettings) {\n  var that = this;\n  that._renderer = renderSettings.renderer;\n  that._incidentOccurred = renderSettings.incidentOccurred;\n  that._eventTrigger = renderSettings.eventTrigger;\n  that._stripsGroup = renderSettings.stripsGroup;\n  that._labelAxesGroup = renderSettings.labelAxesGroup;\n  that._constantLinesGroup = renderSettings.constantLinesGroup;\n  that._scaleBreaksGroup = renderSettings.scaleBreaksGroup;\n  that._axesContainerGroup = renderSettings.axesContainerGroup;\n  that._gridContainerGroup = renderSettings.gridGroup;\n  that._axisCssPrefix = renderSettings.widgetClass + \"-\" + (renderSettings.axisClass ? renderSettings.axisClass + \"-\" : \"\");\n\n  that._setType(renderSettings.axisType, renderSettings.drawingType);\n\n  that._createAxisGroups();\n\n  that._translator = that._createTranslator();\n  that.isArgumentAxis = renderSettings.isArgumentAxis;\n  that._viewport = {};\n  that._firstDrawing = true;\n  that._initRange = {};\n};\n\nAxis.prototype = {\n  constructor: Axis,\n  _drawAxis: function _drawAxis() {\n    var options = this._options;\n\n    if (!options.visible) {\n      return;\n    }\n\n    this._axisElement = this._createAxisElement();\n\n    this._updateAxisElementPosition();\n\n    this._axisElement.attr({\n      \"stroke-width\": options.width,\n      stroke: options.color,\n      \"stroke-opacity\": options.opacity\n    }).sharp(this._getSharpParam(true), this.getAxisSharpDirection()).append(this._axisLineGroup);\n  },\n  _createPathElement: function _createPathElement(points, attr, sharpDirection) {\n    return this.sharp(this._renderer.path(points, \"line\").attr(attr), sharpDirection);\n  },\n  sharp: function sharp(svgElement) {\n    var sharpDirection = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;\n    return svgElement.sharp(this._getSharpParam(), sharpDirection);\n  },\n  getAxisSharpDirection: function getAxisSharpDirection() {\n    var position = this._options.position;\n    return position === TOP || position === LEFT ? 1 : -1;\n  },\n  getSharpDirectionByCoords: function getSharpDirectionByCoords(coords) {\n    var canvas = this._getCanvasStartEnd();\n\n    var maxCoord = Math.max(canvas.start, canvas.end);\n    return this.getRadius ? 0 : maxCoord !== coords[this._isHorizontal ? \"x\" : \"y\"] ? 1 : -1;\n  },\n  _getGridLineDrawer: function _getGridLineDrawer() {\n    var that = this;\n    return function (tick, gridStyle) {\n      var grid = that._getGridPoints(tick.coords);\n\n      if (grid.points) {\n        return that._createPathElement(grid.points, gridStyle, that.getSharpDirectionByCoords(tick.coords));\n      }\n\n      return null;\n    };\n  },\n  _getGridPoints: function _getGridPoints(coords) {\n    var that = this;\n    var isHorizontal = this._isHorizontal;\n    var tickPositionField = isHorizontal ? \"x\" : \"y\";\n    var orthogonalPositions = this._orthogonalPositions;\n    var positionFrom = orthogonalPositions.start;\n    var positionTo = orthogonalPositions.end;\n    var borderOptions = that.borderOptions;\n    var canvasStart = isHorizontal ? LEFT : TOP;\n    var canvasEnd = isHorizontal ? RIGHT : BOTTOM;\n    var axisCanvas = that.getCanvas();\n    var canvas = {\n      left: axisCanvas.left,\n      right: axisCanvas.width - axisCanvas.right,\n      top: axisCanvas.top,\n      bottom: axisCanvas.height - axisCanvas.bottom\n    };\n    var firstBorderLinePosition = borderOptions.visible && borderOptions[canvasStart] ? canvas[canvasStart] : void 0;\n    var lastBorderLinePosition = borderOptions.visible && borderOptions[canvasEnd] ? canvas[canvasEnd] : void 0;\n    var minDelta = MAX_GRID_BORDER_ADHENSION + firstBorderLinePosition;\n    var maxDelta = lastBorderLinePosition - MAX_GRID_BORDER_ADHENSION;\n\n    if (that.areCoordsOutsideAxis(coords) || void 0 === coords[tickPositionField] || coords[tickPositionField] < minDelta || coords[tickPositionField] > maxDelta) {\n      return {\n        points: null\n      };\n    }\n\n    return {\n      points: isHorizontal ? null !== coords[tickPositionField] ? [coords[tickPositionField], positionFrom, coords[tickPositionField], positionTo] : null : null !== coords[tickPositionField] ? [positionFrom, coords[tickPositionField], positionTo, coords[tickPositionField]] : null\n    };\n  },\n  _getConstantLinePos: function _getConstantLinePos(parsedValue, canvasStart, canvasEnd) {\n    var value = this._getTranslatedCoord(parsedValue);\n\n    if (!(0, _type.isDefined)(value) || value < _min(canvasStart, canvasEnd) || value > _max(canvasStart, canvasEnd)) {\n      return;\n    }\n\n    return value;\n  },\n  _getConstantLineGraphicAttributes: function _getConstantLineGraphicAttributes(value) {\n    var positionFrom = this._orthogonalPositions.start;\n    var positionTo = this._orthogonalPositions.end;\n    return {\n      points: this._isHorizontal ? [value, positionFrom, value, positionTo] : [positionFrom, value, positionTo, value]\n    };\n  },\n  _createConstantLine: function _createConstantLine(value, attr) {\n    return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr, getConstantLineSharpDirection(value, this._getCanvasStartEnd()));\n  },\n  _drawConstantLineLabelText: function _drawConstantLineLabelText(text, x, y, _ref2, group) {\n    var font = _ref2.font,\n        cssClass = _ref2.cssClass;\n    return this._renderer.text(text, x, y).css(patchFontOptions((0, _extend.extend)({}, this._options.label.font, font))).attr({\n      align: \"center\",\n      \"class\": cssClass\n    }).append(group);\n  },\n  _drawConstantLineLabels: function _drawConstantLineLabels(parsedValue, lineLabelOptions, value, group) {\n    var that = this;\n    var text = lineLabelOptions.text;\n    var options = that._options;\n    var labelOptions = options.label;\n    var coords;\n\n    that._checkAlignmentConstantLineLabels(lineLabelOptions);\n\n    text = (0, _type.isDefined)(text) ? text : that.formatLabel(parsedValue, labelOptions);\n    coords = that._getConstantLineLabelsCoords(value, lineLabelOptions);\n    return that._drawConstantLineLabelText(text, coords.x, coords.y, lineLabelOptions, group);\n  },\n  _getStripPos: function _getStripPos(startValue, endValue, canvasStart, canvasEnd, range) {\n    var isContinuous = !!(range.minVisible || range.maxVisible);\n    var categories = (range.categories || []).reduce(function (result, cat) {\n      result.push(cat.valueOf());\n      return result;\n    }, []);\n    var start;\n    var end;\n    var swap;\n    var startCategoryIndex;\n    var endCategoryIndex;\n    var min = range.minVisible;\n\n    if (!isContinuous) {\n      if ((0, _type.isDefined)(startValue) && (0, _type.isDefined)(endValue)) {\n        var parsedStartValue = this.parser(startValue);\n        var parsedEndValue = this.parser(endValue);\n        startCategoryIndex = (0, _array.inArray)((0, _type.isDefined)(parsedStartValue) ? parsedStartValue.valueOf() : void 0, categories);\n        endCategoryIndex = (0, _array.inArray)((0, _type.isDefined)(parsedEndValue) ? parsedEndValue.valueOf() : void 0, categories);\n\n        if (startCategoryIndex === -1 || endCategoryIndex === -1) {\n          return {\n            from: 0,\n            to: 0\n          };\n        }\n\n        if (startCategoryIndex > endCategoryIndex) {\n          swap = endValue;\n          endValue = startValue;\n          startValue = swap;\n        }\n      }\n    }\n\n    if ((0, _type.isDefined)(startValue)) {\n      startValue = this.validateUnit(startValue, \"E2105\", \"strip\");\n      start = this._getTranslatedCoord(startValue, -1);\n\n      if (!(0, _type.isDefined)(start) && isContinuous) {\n        start = startValue < min ? canvasStart : canvasEnd;\n      }\n    } else {\n      start = canvasStart;\n    }\n\n    if ((0, _type.isDefined)(endValue)) {\n      endValue = this.validateUnit(endValue, \"E2105\", \"strip\");\n      end = this._getTranslatedCoord(endValue, 1);\n\n      if (!(0, _type.isDefined)(end) && isContinuous) {\n        end = endValue > min ? canvasEnd : canvasStart;\n      }\n    } else {\n      end = canvasEnd;\n    }\n\n    return start < end ? {\n      from: start,\n      to: end\n    } : {\n      from: end,\n      to: start\n    };\n  },\n  _getStripGraphicAttributes: function _getStripGraphicAttributes(fromPoint, toPoint) {\n    var x;\n    var y;\n    var width;\n    var height;\n    var orthogonalPositions = this._orthogonalPositions;\n    var positionFrom = orthogonalPositions.start;\n    var positionTo = orthogonalPositions.end;\n\n    if (this._isHorizontal) {\n      x = fromPoint;\n      y = _min(positionFrom, positionTo);\n      width = toPoint - fromPoint;\n      height = _abs(positionFrom - positionTo);\n    } else {\n      x = _min(positionFrom, positionTo);\n      y = fromPoint;\n      width = _abs(positionFrom - positionTo);\n      height = _abs(fromPoint - toPoint);\n    }\n\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  },\n  _createStrip: function _createStrip(attrs) {\n    return this._renderer.rect(attrs.x, attrs.y, attrs.width, attrs.height);\n  },\n  _adjustStripLabels: function _adjustStripLabels() {\n    var that = this;\n\n    this._strips.forEach(function (strip) {\n      if (strip.label) {\n        strip.label.attr(that._getAdjustedStripLabelCoords(strip));\n      }\n    });\n  },\n  _adjustLabelsCoord: function _adjustLabelsCoord(offset, maxWidth, checkCanvas) {\n    var that = this;\n\n    that._majorTicks.forEach(function (tick) {\n      if (tick.label) {\n        tick.updateMultilineTextAlignment();\n        tick.label.attr(that._getLabelAdjustedCoord(tick, offset + (tick.labelOffset || 0), maxWidth, checkCanvas));\n      }\n    });\n  },\n  _adjustLabels: function _adjustLabels(offset) {\n    var that = this;\n\n    var maxSize = that._majorTicks.reduce(function (size, tick) {\n      if (!tick.label) {\n        return size;\n      }\n\n      var bBox = tick.labelRotationAngle ? _utils2.default.rotateBBox(tick.labelBBox, [tick.labelCoords.x, tick.labelCoords.y], -tick.labelRotationAngle) : tick.labelBBox;\n      return {\n        width: _max(size.width || 0, bBox.width),\n        height: _max(size.height || 0, bBox.height),\n        offset: _max(size.offset || 0, tick.labelOffset || 0)\n      };\n    }, {});\n\n    var additionalOffset = that._isHorizontal ? maxSize.height : maxSize.width;\n\n    that._adjustLabelsCoord(offset, maxSize.width);\n\n    return offset + additionalOffset + (additionalOffset && that._options.label.indentFromAxis) + maxSize.offset;\n  },\n  _getLabelAdjustedCoord: function _getLabelAdjustedCoord(tick, offset, maxWidth) {\n    offset = offset || 0;\n    var that = this;\n    var options = that._options;\n\n    var box = _utils2.default.rotateBBox(tick.labelBBox, [tick.labelCoords.x, tick.labelCoords.y], -tick.labelRotationAngle || 0);\n\n    var position = options.position;\n    var textAlign = tick.labelAlignment || options.label.alignment;\n    var isDiscrete = \"discrete\" === that._options.type;\n    var isFlatLabel = tick.labelRotationAngle % 90 === 0;\n    var indentFromAxis = options.label.indentFromAxis;\n    var axisPosition = that._axisPosition;\n    var labelCoords = tick.labelCoords;\n    var labelX = labelCoords.x;\n    var translateX;\n    var translateY;\n\n    if (that._isHorizontal) {\n      if (position === BOTTOM) {\n        translateY = axisPosition + indentFromAxis - box.y + offset;\n      } else {\n        translateY = axisPosition - indentFromAxis - (box.y + box.height) - offset;\n      }\n\n      if (textAlign === RIGHT) {\n        translateX = isDiscrete && isFlatLabel ? tick.coords.x - (box.x + box.width) : labelX - box.x - box.width;\n      } else {\n        if (textAlign === LEFT) {\n          translateX = isDiscrete && isFlatLabel ? labelX - box.x - (tick.coords.x - labelX) : labelX - box.x;\n        } else {\n          translateX = labelX - box.x - box.width / 2;\n        }\n      }\n    } else {\n      translateY = labelCoords.y - box.y - box.height / 2;\n\n      if (position === LEFT) {\n        if (textAlign === LEFT) {\n          translateX = axisPosition - indentFromAxis - maxWidth - box.x;\n        } else {\n          if (textAlign === CENTER) {\n            translateX = axisPosition - indentFromAxis - maxWidth / 2 - box.x - box.width / 2;\n          } else {\n            translateX = axisPosition - indentFromAxis - box.x - box.width;\n          }\n        }\n\n        translateX -= offset;\n      } else {\n        if (textAlign === RIGHT) {\n          translateX = axisPosition + indentFromAxis + maxWidth - box.x - box.width;\n        } else {\n          if (textAlign === CENTER) {\n            translateX = axisPosition + indentFromAxis + maxWidth / 2 - box.x - box.width / 2;\n          } else {\n            translateX = axisPosition + indentFromAxis - box.x;\n          }\n        }\n\n        translateX += offset;\n      }\n    }\n\n    return {\n      translateX: translateX,\n      translateY: translateY\n    };\n  },\n  _createAxisConstantLineGroups: function _createAxisConstantLineGroups() {\n    var that = this;\n    var renderer = that._renderer;\n    var classSelector = that._axisCssPrefix;\n    var constantLinesClass = classSelector + \"constant-lines\";\n    var insideGroup;\n    var outsideGroup1;\n    var outsideGroup2;\n    insideGroup = renderer.g().attr({\n      \"class\": constantLinesClass\n    });\n    outsideGroup1 = renderer.g().attr({\n      \"class\": constantLinesClass\n    });\n    outsideGroup2 = renderer.g().attr({\n      \"class\": constantLinesClass\n    });\n    return {\n      inside: insideGroup,\n      outside1: outsideGroup1,\n      left: outsideGroup1,\n      top: outsideGroup1,\n      outside2: outsideGroup2,\n      right: outsideGroup2,\n      bottom: outsideGroup2,\n      remove: function remove() {\n        this.inside.remove();\n        this.outside1.remove();\n        this.outside2.remove();\n      },\n      clear: function clear() {\n        this.inside.clear();\n        this.outside1.clear();\n        this.outside2.clear();\n      }\n    };\n  },\n  _createAxisGroups: function _createAxisGroups() {\n    var that = this;\n    var renderer = that._renderer;\n    var classSelector = that._axisCssPrefix;\n    that._axisGroup = renderer.g().attr({\n      \"class\": classSelector + \"axis\"\n    });\n    that._axisStripGroup = renderer.g().attr({\n      \"class\": classSelector + \"strips\"\n    });\n    that._axisGridGroup = renderer.g().attr({\n      \"class\": classSelector + \"grid\"\n    });\n    that._axisElementsGroup = renderer.g().attr({\n      \"class\": classSelector + \"elements\"\n    }).append(that._axisGroup);\n    that._axisLineGroup = renderer.g().attr({\n      \"class\": classSelector + \"line\"\n    }).append(that._axisGroup);\n    that._axisTitleGroup = renderer.g().attr({\n      \"class\": classSelector + \"title\"\n    }).append(that._axisGroup);\n    that._axisConstantLineGroups = {\n      above: that._createAxisConstantLineGroups(),\n      under: that._createAxisConstantLineGroups()\n    };\n    that._axisStripLabelGroup = renderer.g().attr({\n      \"class\": classSelector + \"axis-labels\"\n    });\n  },\n  _clearAxisGroups: function _clearAxisGroups() {\n    var that = this;\n\n    that._axisGroup.remove();\n\n    that._axisStripGroup.remove();\n\n    that._axisStripLabelGroup.remove();\n\n    that._axisConstantLineGroups.above.remove();\n\n    that._axisConstantLineGroups.under.remove();\n\n    that._axisGridGroup.remove();\n\n    that._axisTitleGroup.clear();\n\n    that._axisElementsGroup.clear();\n\n    that._axisLineGroup && that._axisLineGroup.clear();\n    that._axisStripGroup && that._axisStripGroup.clear();\n    that._axisGridGroup && that._axisGridGroup.clear();\n\n    that._axisConstantLineGroups.above.clear();\n\n    that._axisConstantLineGroups.under.clear();\n\n    that._axisStripLabelGroup && that._axisStripLabelGroup.clear();\n  },\n  _getLabelFormatObject: function _getLabelFormatObject(value, labelOptions, range, point, tickInterval, ticks) {\n    range = range || this._getViewportRange();\n    var formatObject = {\n      value: value,\n      valueText: (0, _smart_formatter.smartFormatter)(value, {\n        labelOptions: labelOptions,\n        ticks: ticks || convertTicksToValues(this._majorTicks),\n        tickInterval: (0, _type.isDefined)(tickInterval) ? tickInterval : this._tickInterval,\n        dataType: this._options.dataType,\n        logarithmBase: this._options.logarithmBase,\n        type: this._options.type,\n        showTransition: !this._options.marker.visible,\n        point: point\n      }) || \"\",\n      min: range.minVisible,\n      max: range.maxVisible\n    };\n\n    if (point) {\n      formatObject.point = point;\n    }\n\n    return formatObject;\n  },\n  formatLabel: function formatLabel(value, labelOptions, range, point, tickInterval, ticks) {\n    var formatObject = this._getLabelFormatObject(value, labelOptions, range, point, tickInterval, ticks);\n\n    return (0, _type.isFunction)(labelOptions.customizeText) ? labelOptions.customizeText.call(formatObject, formatObject) : formatObject.valueText;\n  },\n  formatHint: function formatHint(value, labelOptions, range) {\n    var formatObject = this._getLabelFormatObject(value, labelOptions, range);\n\n    return (0, _type.isFunction)(labelOptions.customizeHint) ? labelOptions.customizeHint.call(formatObject, formatObject) : void 0;\n  },\n  formatRange: function formatRange(startValue, endValue, interval) {\n    return (0, _smart_formatter.formatRange)(startValue, endValue, interval, this.getOptions());\n  },\n  _setTickOffset: function _setTickOffset() {\n    var options = this._options;\n    var discreteAxisDivisionMode = options.discreteAxisDivisionMode;\n    this._tickOffset = +(\"crossLabels\" !== discreteAxisDivisionMode || !discreteAxisDivisionMode);\n  },\n  getMargins: function getMargins() {\n    var that = this;\n    var options = that._options;\n    var position = options.position;\n    var placeholderSize = options.placeholderSize;\n    var canvas = that.getCanvas();\n    var cLeft = canvas.left;\n    var cTop = canvas.top;\n    var cRight = canvas.width - canvas.right;\n    var cBottom = canvas.height - canvas.bottom;\n\n    var edgeMarginCorrection = _max(options.grid.visible && options.grid.width || 0, options.tick.visible && options.tick.width || 0);\n\n    var constantLineAboveSeries = that._axisConstantLineGroups.above;\n    var constantLineUnderSeries = that._axisConstantLineGroups.under;\n    var boxes = [that._axisElementsGroup, constantLineAboveSeries.outside1, constantLineAboveSeries.outside2, constantLineUnderSeries.outside1, constantLineUnderSeries.outside2, that._axisLineGroup].map(function (group) {\n      return group && group.getBBox();\n    }).concat(function (group) {\n      var box = group && group.getBBox();\n\n      if (!box || box.isEmpty) {\n        return box;\n      }\n\n      if (that._isHorizontal) {\n        box.x = cLeft;\n        box.width = cRight - cLeft;\n      } else {\n        box.y = cTop;\n        box.height = cBottom - cTop;\n      }\n\n      return box;\n    }(that._axisTitleGroup));\n    var margins = calculateCanvasMargins(boxes, canvas);\n    margins[position] += options.crosshairMargin;\n\n    if (placeholderSize) {\n      margins[position] = placeholderSize;\n    }\n\n    if (edgeMarginCorrection) {\n      if (that._isHorizontal && canvas.right < edgeMarginCorrection && margins.right < edgeMarginCorrection) {\n        margins.right = edgeMarginCorrection;\n      }\n\n      if (!that._isHorizontal && canvas.bottom < edgeMarginCorrection && margins.bottom < edgeMarginCorrection) {\n        margins.bottom = edgeMarginCorrection;\n      }\n    }\n\n    return margins;\n  },\n  validateUnit: function validateUnit(unit, idError, parameters) {\n    var that = this;\n    unit = that.parser(unit);\n\n    if (void 0 === unit && idError) {\n      that._incidentOccurred(idError, [parameters]);\n    }\n\n    return unit;\n  },\n  _setType: function _setType(axisType, drawingType) {\n    var that = this;\n    var axisTypeMethods;\n\n    switch (axisType) {\n      case \"xyAxes\":\n        axisTypeMethods = _xy_axes2.default;\n        break;\n\n      case \"polarAxes\":\n        axisTypeMethods = _polar_axes2.default;\n    }\n\n    (0, _extend.extend)(that, axisTypeMethods[drawingType]);\n  },\n  _getSharpParam: function _getSharpParam() {\n    return true;\n  },\n  _disposeBreaksGroup: _common.noop,\n  dispose: function dispose() {\n    var that = this;\n    [that._axisElementsGroup, that._axisStripGroup, that._axisGroup].forEach(function (g) {\n      g.dispose();\n    });\n    that._strips = that._title = null;\n    that._axisStripGroup = that._axisConstantLineGroups = that._axisStripLabelGroup = that._axisBreaksGroup = null;\n    that._axisLineGroup = that._axisElementsGroup = that._axisGridGroup = null;\n    that._axisGroup = that._axisTitleGroup = null;\n    that._axesContainerGroup = that._stripsGroup = that._constantLinesGroup = null;\n    that._renderer = that._options = that._textOptions = that._textFontStyles = null;\n    that._translator = null;\n    that._majorTicks = that._minorTicks = null;\n\n    that._disposeBreaksGroup();\n  },\n  getOptions: function getOptions() {\n    return this._options;\n  },\n  setPane: function setPane(pane) {\n    this.pane = pane;\n    this._options.pane = pane;\n  },\n  setTypes: function setTypes(type, axisType, typeSelector) {\n    this._options.type = type || this._options.type;\n    this._options[typeSelector] = axisType || this._options[typeSelector];\n\n    this._updateTranslator();\n  },\n  resetTypes: function resetTypes(typeSelector) {\n    this._options.type = this._initTypes.type;\n    this._options[typeSelector] = this._initTypes[typeSelector];\n  },\n  getTranslator: function getTranslator() {\n    return this._translator;\n  },\n  updateOptions: function updateOptions(options) {\n    var that = this;\n    var labelOpt = options.label;\n    validateAxisOptions(options);\n    that._options = options;\n    options.tick = options.tick || {};\n    options.minorTick = options.minorTick || {};\n    options.grid = options.grid || {};\n    options.minorGrid = options.minorGrid || {};\n    options.title = options.title || {};\n    options.marker = options.marker || {};\n    that._initTypes = {\n      type: options.type,\n      argumentType: options.argumentType,\n      valueType: options.valueType\n    };\n\n    that._setTickOffset();\n\n    that._isHorizontal = options.isHorizontal;\n    that.pane = options.pane;\n    that.name = options.name;\n    that.priority = options.priority;\n    that._hasLabelFormat = \"\" !== labelOpt.format && (0, _type.isDefined)(labelOpt.format);\n    that._textOptions = {\n      opacity: labelOpt.opacity,\n      align: \"center\",\n      \"class\": labelOpt.cssClass\n    };\n    that._textFontStyles = _utils2.default.patchFontOptions(labelOpt.font);\n\n    if (options.type === _axes_constants2.default.logarithmic) {\n      if (options.logarithmBaseError) {\n        that._incidentOccurred(\"E2104\");\n\n        delete options.logarithmBaseError;\n      }\n    }\n\n    that._updateTranslator();\n\n    that._createConstantLines();\n\n    that._strips = (options.strips || []).map(function (o) {\n      return (0, _strip2.default)(that, o);\n    });\n    that._majorTicks = that._minorTicks = null;\n    that._firstDrawing = true;\n  },\n  calculateInterval: function calculateInterval(value, prevValue) {\n    var options = this._options;\n\n    if (!options || options.type !== _axes_constants2.default.logarithmic) {\n      return _abs(value - prevValue);\n    }\n\n    var _Range = new _range.Range(this.getTranslator().getBusinessRange()),\n        allowNegatives = _Range.allowNegatives,\n        linearThreshold = _Range.linearThreshold;\n\n    return _abs(getLog(value, options.logarithmBase, allowNegatives, linearThreshold) - getLog(prevValue, options.logarithmBase, allowNegatives, linearThreshold));\n  },\n  _processCanvas: function _processCanvas(canvas) {\n    return canvas;\n  },\n  updateCanvas: function updateCanvas(canvas) {\n    var positions = this._orthogonalPositions = {\n      start: !this._isHorizontal ? canvas.left : canvas.top,\n      end: !this._isHorizontal ? canvas.width - canvas.right : canvas.height - canvas.bottom\n    };\n    this._canvas = canvas;\n    positions.center = positions.start + (positions.end - positions.start) / 2;\n\n    this._translator.updateCanvas(this._processCanvas(canvas));\n\n    this._initAxisPositions();\n  },\n  getCanvas: function getCanvas() {\n    return this._canvas;\n  },\n  getAxisShift: function getAxisShift() {\n    return this._axisShift || 0;\n  },\n  hideTitle: function hideTitle() {\n    var that = this;\n\n    if (that._options.title.text) {\n      that._incidentOccurred(\"W2105\", [that._isHorizontal ? \"horizontal\" : \"vertical\"]);\n\n      that._axisTitleGroup.clear();\n    }\n  },\n  getTitle: function getTitle() {\n    return this._title;\n  },\n  hideOuterElements: function hideOuterElements() {\n    var that = this;\n    var options = that._options;\n\n    if ((options.label.visible || that._outsideConstantLines.length) && !that._translator.getBusinessRange().isEmpty()) {\n      that._incidentOccurred(\"W2106\", [that._isHorizontal ? \"horizontal\" : \"vertical\"]);\n\n      that._axisElementsGroup.clear();\n\n      callAction(that._outsideConstantLines, \"removeLabel\");\n    }\n  },\n  adjustViewport: function adjustViewport(businessRange) {\n    var that = this;\n    var options = that._options;\n    var isDiscrete = options.type === _axes_constants2.default.discrete;\n    var categories = that._seriesData && that._seriesData.categories || [];\n    var wholeRange = that.adjustRange(getVizRangeObject(options.wholeRange));\n    var visualRange = that.getViewport() || {};\n    var result = new _range.Range(businessRange);\n\n    that._addConstantLinesToRange(result, \"minVisible\", \"maxVisible\");\n\n    var minDefined = (0, _type.isDefined)(visualRange.startValue);\n    var maxDefined = (0, _type.isDefined)(visualRange.endValue);\n\n    if (!isDiscrete) {\n      minDefined = minDefined && (!(0, _type.isDefined)(wholeRange.endValue) || visualRange.startValue < wholeRange.endValue);\n      maxDefined = maxDefined && (!(0, _type.isDefined)(wholeRange.startValue) || visualRange.endValue > wholeRange.startValue);\n    }\n\n    var minVisible = minDefined ? visualRange.startValue : result.minVisible;\n    var maxVisible = maxDefined ? visualRange.endValue : result.maxVisible;\n\n    if (!isDiscrete) {\n      result.min = (0, _type.isDefined)(wholeRange.startValue) ? wholeRange.startValue : result.min;\n      result.max = (0, _type.isDefined)(wholeRange.endValue) ? wholeRange.endValue : result.max;\n    } else {\n      var categoriesInfo = _utils2.default.getCategoriesInfo(categories, wholeRange.startValue, wholeRange.endValue);\n\n      categories = categoriesInfo.categories;\n      result.categories = categories;\n    }\n\n    var adjustedVisualRange = _utils2.default.adjustVisualRange({\n      axisType: options.type,\n      dataType: options.dataType,\n      base: options.logarithmBase\n    }, {\n      startValue: minDefined ? visualRange.startValue : void 0,\n      endValue: maxDefined ? visualRange.endValue : void 0,\n      length: visualRange.length\n    }, {\n      categories: categories,\n      min: wholeRange.startValue,\n      max: wholeRange.endValue\n    }, {\n      categories: categories,\n      min: minVisible,\n      max: maxVisible\n    });\n\n    result.minVisible = adjustedVisualRange.startValue;\n    result.maxVisible = adjustedVisualRange.endValue;\n    !(0, _type.isDefined)(result.min) && (result.min = result.minVisible);\n    !(0, _type.isDefined)(result.max) && (result.max = result.maxVisible);\n    result.addRange({});\n    return result;\n  },\n  adjustRange: function adjustRange(range) {\n    range = range || {};\n    var isDiscrete = this._options.type === _axes_constants2.default.discrete;\n    var isLogarithmic = this._options.type === _axes_constants2.default.logarithmic;\n    var disabledNegatives = false === this._options.allowNegatives;\n\n    if (isLogarithmic) {\n      range.startValue = disabledNegatives && range.startValue <= 0 ? null : range.startValue;\n      range.endValue = disabledNegatives && range.endValue <= 0 ? null : range.endValue;\n    }\n\n    if (!isDiscrete && (0, _type.isDefined)(range.startValue) && (0, _type.isDefined)(range.endValue) && range.startValue > range.endValue) {\n      var tmp = range.endValue;\n      range.endValue = range.startValue;\n      range.startValue = tmp;\n    }\n\n    return range;\n  },\n  _getVisualRangeUpdateMode: function _getVisualRangeUpdateMode(viewport, newRange, oppositeValue) {\n    var value = this._options.visualRangeUpdateMode;\n    var translator = this._translator;\n    var range = this._seriesData;\n\n    if (this.isArgumentAxis) {\n      if ([SHIFT, KEEP, RESET].indexOf(value) === -1) {\n        if (range.axisType === _axes_constants2.default.discrete) {\n          var categories = range.categories;\n          var newCategories = newRange.categories;\n          var visualRange = this.visualRange();\n\n          if (categories && newCategories && categories.length && newCategories.map(function (c) {\n            return c.valueOf();\n          }).join(\",\").indexOf(categories.map(function (c) {\n            return c.valueOf();\n          }).join(\",\")) !== -1 && (visualRange.startValue.valueOf() !== categories[0].valueOf() || visualRange.endValue.valueOf() !== categories[categories.length - 1].valueOf())) {\n            value = KEEP;\n          } else {\n            value = RESET;\n          }\n        } else {\n          var minPoint = translator.translate(range.min);\n          var minVisiblePoint = translator.translate(viewport.startValue);\n          var maxPoint = translator.translate(range.max);\n          var maxVisiblePoint = translator.translate(viewport.endValue);\n\n          if (minPoint === minVisiblePoint && maxPoint === maxVisiblePoint) {\n            value = RESET;\n          } else {\n            if (minPoint !== minVisiblePoint && maxPoint === maxVisiblePoint) {\n              value = SHIFT;\n            } else {\n              value = KEEP;\n            }\n          }\n        }\n      }\n    } else {\n      if ([KEEP, RESET].indexOf(value) === -1) {\n        if (oppositeValue === KEEP) {\n          value = KEEP;\n        } else {\n          value = RESET;\n        }\n      }\n    }\n\n    return value;\n  },\n  _handleBusinessRangeChanged: function _handleBusinessRangeChanged(oppositeVisualRangeUpdateMode, axisReinitialized, newRange) {\n    var that = this;\n    var visualRange = this.visualRange();\n\n    if (axisReinitialized || that._translator.getBusinessRange().isEmpty()) {\n      return;\n    }\n\n    var visualRangeUpdateMode = that._lastVisualRangeUpdateMode = that._getVisualRangeUpdateMode(visualRange, newRange, oppositeVisualRangeUpdateMode);\n\n    if (!that.isArgumentAxis) {\n      var viewport = that.getViewport();\n\n      if (!(0, _type.isDefined)(viewport.startValue) && !(0, _type.isDefined)(viewport.endValue) && !(0, _type.isDefined)(viewport.length)) {\n        visualRangeUpdateMode = RESET;\n      }\n    }\n\n    that._prevDataWasEmpty && (visualRangeUpdateMode = KEEP);\n\n    if (visualRangeUpdateMode === KEEP) {\n      that._setVisualRange([visualRange.startValue, visualRange.endValue]);\n    }\n\n    if (visualRangeUpdateMode === RESET) {\n      that._setVisualRange([null, null]);\n    }\n\n    if (visualRangeUpdateMode === SHIFT) {\n      that._setVisualRange({\n        length: that.getVisualRangeLength()\n      });\n    }\n  },\n  getVisualRangeLength: function getVisualRangeLength(range) {\n    var currentBusinessRange = range || this._translator.getBusinessRange();\n\n    var type = this._options.type;\n    var length;\n\n    if (type === _axes_constants2.default.logarithmic) {\n      length = (0, _math2.adjust)(this.calculateInterval(currentBusinessRange.maxVisible, currentBusinessRange.minVisible));\n    } else {\n      if (type === _axes_constants2.default.discrete) {\n        var categoriesInfo = _utils2.default.getCategoriesInfo(currentBusinessRange.categories, currentBusinessRange.minVisible, currentBusinessRange.maxVisible);\n\n        length = categoriesInfo.categories.length;\n      } else {\n        length = currentBusinessRange.maxVisible - currentBusinessRange.minVisible;\n      }\n    }\n\n    return length;\n  },\n  getVisualRangeCenter: function getVisualRangeCenter(range) {\n    var businessRange = this._translator.getBusinessRange();\n\n    var currentBusinessRange = range || businessRange;\n    var _this$_options = this._options,\n        type = _this$_options.type,\n        logarithmBase = _this$_options.logarithmBase;\n    var center;\n\n    if (!(0, _type.isDefined)(currentBusinessRange.minVisible) || !(0, _type.isDefined)(currentBusinessRange.maxVisible)) {\n      return;\n    }\n\n    if (type === _axes_constants2.default.logarithmic) {\n      var allowNegatives = currentBusinessRange.allowNegatives,\n          linearThreshold = currentBusinessRange.linearThreshold,\n          minVisible = currentBusinessRange.minVisible,\n          maxVisible = currentBusinessRange.maxVisible;\n      center = raiseTo((0, _math2.adjust)(getLog(maxVisible, logarithmBase, allowNegatives, linearThreshold) + getLog(minVisible, logarithmBase, allowNegatives, linearThreshold)) / 2, logarithmBase, allowNegatives, linearThreshold);\n    } else {\n      if (type === _axes_constants2.default.discrete) {\n        var categoriesInfo = _utils2.default.getCategoriesInfo(currentBusinessRange.categories, currentBusinessRange.minVisible, currentBusinessRange.maxVisible);\n\n        var index = Math.ceil(categoriesInfo.categories.length / 2) - 1;\n        center = businessRange.categories.indexOf(categoriesInfo.categories[index]);\n      } else {\n        center = (currentBusinessRange.maxVisible.valueOf() + currentBusinessRange.minVisible.valueOf()) / 2;\n      }\n    }\n\n    return center;\n  },\n  setBusinessRange: function setBusinessRange(range, axisReinitialized, oppositeVisualRangeUpdateMode, argCategories) {\n    var that = this;\n    var options = that._options;\n    var isDiscrete = options.type === _axes_constants2.default.discrete;\n\n    that._handleBusinessRangeChanged(oppositeVisualRangeUpdateMode, axisReinitialized, range);\n\n    that._seriesData = new _range.Range(range);\n\n    var dataIsEmpty = that._seriesData.isEmpty();\n\n    that._prevDataWasEmpty = dataIsEmpty;\n\n    that._seriesData.addRange({\n      categories: options.categories,\n      dataType: options.dataType,\n      axisType: options.type,\n      base: options.logarithmBase,\n      invert: options.inverted\n    });\n\n    if (options.type === _axes_constants2.default.logarithmic) {\n      that._seriesData.addRange({\n        allowNegatives: void 0 !== options.allowNegatives ? options.allowNegatives : range.min <= 0\n      });\n\n      if (!isNaN(options.linearThreshold)) {\n        that._seriesData.linearThreshold = options.linearThreshold;\n      }\n    }\n\n    if (!isDiscrete) {\n      if (!(0, _type.isDefined)(that._seriesData.min) && !(0, _type.isDefined)(that._seriesData.max)) {\n        var visualRange = that.getViewport();\n        visualRange && that._seriesData.addRange({\n          min: visualRange.startValue,\n          max: visualRange.endValue\n        });\n      }\n\n      var synchronizedValue = options.synchronizedValue;\n\n      if ((0, _type.isDefined)(synchronizedValue)) {\n        that._seriesData.addRange({\n          min: synchronizedValue,\n          max: synchronizedValue\n        });\n      }\n    }\n\n    that._seriesData.minVisible = void 0 === that._seriesData.minVisible ? that._seriesData.min : that._seriesData.minVisible;\n    that._seriesData.maxVisible = void 0 === that._seriesData.maxVisible ? that._seriesData.max : that._seriesData.maxVisible;\n\n    if (!that.isArgumentAxis && options.showZero) {\n      that._seriesData.correctValueZeroLevel();\n    }\n\n    that._seriesData.sortCategories(that.getCategoriesSorter(argCategories));\n\n    that._seriesData.breaks = that._breaks = that._getScaleBreaks(options, that._seriesData, that._series, that.isArgumentAxis);\n\n    that._translator.updateBusinessRange(that.adjustViewport(that._seriesData));\n  },\n  _addConstantLinesToRange: function _addConstantLinesToRange(dataRange, minValueField, maxValueField) {\n    this._outsideConstantLines.concat(this._insideConstantLines || []).forEach(function (cl) {\n      if (cl.options.extendAxis) {\n        var _dataRange$addRange;\n\n        var value = cl.getParsedValue();\n        dataRange.addRange((_dataRange$addRange = {}, _defineProperty(_dataRange$addRange, minValueField, value), _defineProperty(_dataRange$addRange, maxValueField, value), _dataRange$addRange));\n      }\n    });\n  },\n  setGroupSeries: function setGroupSeries(series) {\n    this._series = series;\n  },\n  getLabelsPosition: function getLabelsPosition() {\n    var that = this;\n    var options = that._options;\n    var position = options.position;\n    var labelShift = options.label.indentFromAxis + (that._axisShift || 0) + that._constantLabelOffset;\n    var axisPosition = that._axisPosition;\n    return position === TOP || position === LEFT ? axisPosition - labelShift : axisPosition + labelShift;\n  },\n  getFormattedValue: function getFormattedValue(value, options, point) {\n    var labelOptions = this._options.label;\n    return (0, _type.isDefined)(value) ? this.formatLabel(value, (0, _extend.extend)(true, {}, labelOptions, options), void 0, point) : null;\n  },\n  _getBoundaryTicks: function _getBoundaryTicks(majors, viewPort) {\n    var that = this;\n    var length = majors.length;\n    var options = that._options;\n    var customBounds = options.customBoundTicks;\n    var min = viewPort.minVisible;\n    var max = viewPort.maxVisible;\n    var addMinMax = options.showCustomBoundaryTicks ? that._boundaryTicksVisibility : {};\n    var boundaryTicks = [];\n\n    if (options.type === _axes_constants2.default.discrete) {\n      if (that._tickOffset && 0 !== majors.length) {\n        boundaryTicks = [majors[0], majors[majors.length - 1]];\n      }\n    } else {\n      if (customBounds) {\n        if (addMinMax.min && (0, _type.isDefined)(customBounds[0])) {\n          boundaryTicks.push(customBounds[0]);\n        }\n\n        if (addMinMax.max && (0, _type.isDefined)(customBounds[1])) {\n          boundaryTicks.push(customBounds[1]);\n        }\n      } else {\n        if (addMinMax.min && (0 === length || majors[0] > min)) {\n          boundaryTicks.push(min);\n        }\n\n        if (addMinMax.max && (0 === length || majors[length - 1] < max)) {\n          boundaryTicks.push(max);\n        }\n      }\n    }\n\n    return boundaryTicks;\n  },\n  setPercentLabelFormat: function setPercentLabelFormat() {\n    if (!this._hasLabelFormat) {\n      this._options.label.format = \"percent\";\n    }\n  },\n  resetAutoLabelFormat: function resetAutoLabelFormat() {\n    if (!this._hasLabelFormat) {\n      delete this._options.label.format;\n    }\n  },\n  getMultipleAxesSpacing: function getMultipleAxesSpacing() {\n    return this._options.multipleAxesSpacing || 0;\n  },\n  getTicksValues: function getTicksValues() {\n    return {\n      majorTicksValues: convertTicksToValues(this._majorTicks),\n      minorTicksValues: convertTicksToValues(this._minorTicks)\n    };\n  },\n  setTicks: function setTicks(ticks) {\n    var majors = ticks.majorTicks || [];\n    this._majorTicks = majors.map(createMajorTick(this, this._renderer, this._getSkippedCategory(majors)));\n    this._minorTicks = (ticks.minorTicks || []).map(createMinorTick(this, this._renderer));\n    this._isSynchronized = true;\n  },\n  _adjustDivisionFactor: function _adjustDivisionFactor(val) {\n    return val;\n  },\n  _getTicks: function _getTicks(viewPort, incidentOccurred, skipTickGeneration) {\n    var that = this;\n    var options = that._options;\n    var customTicks = options.customTicks;\n    var customMinorTicks = options.customMinorTicks;\n    return getTickGenerator(options, incidentOccurred || that._incidentOccurred, skipTickGeneration, that._translator.getBusinessRange().isEmpty(), that._adjustDivisionFactor.bind(that), viewPort)({\n      min: viewPort.minVisible,\n      max: viewPort.maxVisible,\n      categories: viewPort.categories,\n      isSpacedMargin: viewPort.isSpacedMargin\n    }, that._getScreenDelta(), options.tickInterval, \"ignore\" === options.label.overlappingBehavior || options.forceUserTickInterval, {\n      majors: customTicks,\n      minors: customMinorTicks\n    }, options.minorTickInterval, options.minorTickCount, that._breaks);\n  },\n  _createTicksAndLabelFormat: function _createTicksAndLabelFormat(range, incidentOccurred) {\n    var options = this._options;\n\n    var ticks = this._getTicks(range, incidentOccurred, false);\n\n    if (!range.isEmpty() && options.type === _axes_constants2.default.discrete && \"datetime\" === options.dataType && !this._hasLabelFormat && ticks.ticks.length) {\n      options.label.format = _format_helper2.default.getDateFormatByTicks(ticks.ticks);\n    }\n\n    return ticks;\n  },\n  getAggregationInfo: function getAggregationInfo(useAllAggregatedPoints, range) {\n    var that = this;\n    var options = that._options;\n    var marginOptions = that._marginOptions;\n    var businessRange = new _range.Range(that.getTranslator().getBusinessRange()).addRange(range);\n    var visualRange = that.getViewport();\n    var minVisible = visualRange && (0, _type.isDefined)(visualRange.startValue) ? visualRange.startValue : businessRange.minVisible;\n    var maxVisible = visualRange && (0, _type.isDefined)(visualRange.endValue) ? visualRange.endValue : businessRange.maxVisible;\n    var ticks = [];\n\n    if (options.type === _axes_constants2.default.discrete && options.aggregateByCategory) {\n      return {\n        aggregateByCategory: true\n      };\n    }\n\n    var aggregationInterval = options.aggregationInterval;\n    var aggregationGroupWidth = options.aggregationGroupWidth;\n\n    if (!aggregationGroupWidth && marginOptions) {\n      if (marginOptions.checkInterval) {\n        aggregationGroupWidth = options.axisDivisionFactor;\n      }\n\n      if (marginOptions.sizePointNormalState) {\n        aggregationGroupWidth = Math.min(marginOptions.sizePointNormalState, options.axisDivisionFactor);\n      }\n    }\n\n    var minInterval = !options.aggregationGroupWidth && !aggregationInterval && range.interval;\n    var generateTicks = configureGenerator(options, aggregationGroupWidth, businessRange, that._getScreenDelta(), minInterval);\n    var tickInterval = generateTicks(aggregationInterval, true, minVisible, maxVisible, that._breaks).tickInterval;\n\n    if (options.type !== _axes_constants2.default.discrete) {\n      var min = useAllAggregatedPoints ? businessRange.min : minVisible;\n      var max = useAllAggregatedPoints ? businessRange.max : maxVisible;\n\n      if ((0, _type.isDefined)(min) && (0, _type.isDefined)(max)) {\n        var add = _utils2.default.getAddFunction({\n          base: options.logarithmBase,\n          axisType: options.type,\n          dataType: options.dataType\n        }, false);\n\n        var start = min;\n        var end = max;\n\n        if (!useAllAggregatedPoints) {\n          var maxMinDistance = Math.max(that.calculateInterval(max, min), \"datetime\" === options.dataType ? (0, _date.dateToMilliseconds)(tickInterval) : tickInterval);\n          start = add(min, maxMinDistance, -1);\n          end = add(max, maxMinDistance);\n        }\n\n        start = start < businessRange.min ? businessRange.min : start;\n        end = end > businessRange.max ? businessRange.max : end;\n\n        var breaks = that._getScaleBreaks(options, {\n          minVisible: start,\n          maxVisible: end\n        }, that._series, that.isArgumentAxis);\n\n        ticks = generateTicks(tickInterval, false, start, end, breaks).ticks;\n      }\n    }\n\n    that._aggregationInterval = tickInterval;\n    return {\n      interval: tickInterval,\n      ticks: ticks\n    };\n  },\n  createTicks: function createTicks(canvas) {\n    var that = this;\n    var renderer = that._renderer;\n    var options = that._options;\n\n    if (!canvas) {\n      return;\n    }\n\n    that._isSynchronized = false;\n    that.updateCanvas(canvas);\n    that._estimatedTickInterval = that._getTicks(that.adjustViewport(this._seriesData), _common.noop, true).tickInterval;\n\n    var range = that._getViewportRange();\n\n    var margins = this._calculateValueMargins();\n\n    range.addRange({\n      minVisible: margins.minValue,\n      maxVisible: margins.maxValue,\n      isSpacedMargin: margins.isSpacedMargin\n    });\n\n    var ticks = that._createTicksAndLabelFormat(range);\n\n    var boundaryTicks = that._getBoundaryTicks(ticks.ticks, that._getViewportRange());\n\n    if (options.showCustomBoundaryTicks && boundaryTicks.length) {\n      that._boundaryTicks = [boundaryTicks[0]].map(createBoundaryTick(that, renderer, true));\n\n      if (boundaryTicks.length > 1) {\n        that._boundaryTicks = that._boundaryTicks.concat([boundaryTicks[1]].map(createBoundaryTick(that, renderer, false)));\n      }\n    } else {\n      that._boundaryTicks = [];\n    }\n\n    var minors = (ticks.minorTicks || []).filter(function (minor) {\n      return !boundaryTicks.some(function (boundary) {\n        return valueOf(boundary) === valueOf(minor);\n      });\n    });\n    that._tickInterval = ticks.tickInterval;\n    that._minorTickInterval = ticks.minorTickInterval;\n    var oldMajorTicks = that._majorTicks || [];\n    var majorTicksByValues = oldMajorTicks.reduce(function (r, t) {\n      r[t.value.valueOf()] = t;\n      return r;\n    }, {});\n    var sameType = (0, _type.type)(ticks.ticks[0]) === (0, _type.type)(oldMajorTicks[0] && oldMajorTicks[0].value);\n\n    var skippedCategory = that._getSkippedCategory(ticks.ticks);\n\n    var majorTicks = ticks.ticks.map(function (v) {\n      var tick = majorTicksByValues[v.valueOf()];\n\n      if (tick && sameType) {\n        delete majorTicksByValues[v.valueOf()];\n        tick.setSkippedCategory(skippedCategory);\n        return tick;\n      } else {\n        return createMajorTick(that, renderer, skippedCategory)(v);\n      }\n    });\n    that._majorTicks = majorTicks;\n    var oldMinorTicks = that._minorTicks || [];\n    that._minorTicks = minors.map(function (v, i) {\n      var minorTick = oldMinorTicks[i];\n\n      if (minorTick) {\n        minorTick.updateValue(v);\n        return minorTick;\n      }\n\n      return createMinorTick(that, renderer)(v);\n    });\n    that._ticksToRemove = Object.keys(majorTicksByValues).map(function (k) {\n      return majorTicksByValues[k];\n    }).concat(oldMinorTicks.slice(that._minorTicks.length, oldMinorTicks.length));\n    that._correctedBreaks = ticks.breaks;\n\n    that._reinitTranslator(that._getViewportRange());\n  },\n  _reinitTranslator: function _reinitTranslator(range) {\n    var that = this;\n    var translator = that._translator;\n\n    if (that._correctedBreaks) {\n      range.breaks = that._correctedBreaks;\n    }\n\n    if (that._isSynchronized) {\n      return;\n    }\n\n    translator.updateBusinessRange(that.adjustViewport(range));\n  },\n  _getViewportRange: function _getViewportRange() {\n    return this.adjustViewport(this._seriesData);\n  },\n  setMarginOptions: function setMarginOptions(options) {\n    this._marginOptions = options;\n  },\n  getMarginOptions: function getMarginOptions() {\n    return (0, _type.isDefined)(this._marginOptions) ? this._marginOptions : {};\n  },\n  allowToExtendVisualRange: function allowToExtendVisualRange(isEnd) {\n    var wholeRange = this.adjustRange(getVizRangeObject(this._options.wholeRange));\n    var bound = isEnd ? wholeRange.endValue : wholeRange.startValue;\n    return !this.isArgumentAxis || !(0, _type.isDefined)(bound) && this.isExtremePosition(isEnd);\n  },\n  _calculateRangeInterval: function _calculateRangeInterval(interval) {\n    var isDateTime = \"datetime\" === this._options.dataType;\n    var minArgs = [];\n\n    var addToArgs = function addToArgs(value) {\n      (0, _type.isDefined)(value) && minArgs.push(isDateTime ? (0, _date.dateToMilliseconds)(value) : value);\n    };\n\n    addToArgs(this._tickInterval);\n    addToArgs(this._estimatedTickInterval);\n    (0, _type.isDefined)(interval) && minArgs.push(interval);\n    addToArgs(this._aggregationInterval);\n    return this._calculateWorkWeekInterval(_min.apply(this, minArgs));\n  },\n  _calculateWorkWeekInterval: function _calculateWorkWeekInterval(businessInterval) {\n    var options = this._options;\n\n    if (\"datetime\" === options.dataType && options.workdaysOnly && businessInterval) {\n      var workWeek = options.workWeek.length * dateIntervals.day;\n      var weekend = dateIntervals.week - workWeek;\n\n      if (workWeek !== businessInterval && weekend < businessInterval) {\n        var weekendsCount = Math.ceil(businessInterval / dateIntervals.week);\n        businessInterval = weekend >= businessInterval ? dateIntervals.day : businessInterval - weekend * weekendsCount;\n      } else {\n        if (weekend >= businessInterval && businessInterval > dateIntervals.day) {\n          businessInterval = dateIntervals.day;\n        }\n      }\n    }\n\n    return businessInterval;\n  },\n  _calculateValueMargins: function _calculateValueMargins(ticks) {\n    this._resetMargins();\n\n    var that = this;\n    var margins = that.getMarginOptions();\n    var marginSize = (margins.size || 0) / 2;\n    var options = that._options;\n\n    var dataRange = that._getViewportRange();\n\n    var viewPort = that.getViewport();\n\n    var screenDelta = that._getScreenDelta();\n\n    var isDiscrete = (options.type || \"\").indexOf(_axes_constants2.default.discrete) !== -1;\n    var valueMarginsEnabled = options.valueMarginsEnabled && !isDiscrete;\n    var translator = that._translator;\n    var minValueMargin = options.minValueMargin;\n    var maxValueMargin = options.maxValueMargin;\n    var minPadding = 0;\n    var maxPadding = 0;\n    var interval = 0;\n    var rangeInterval;\n\n    if (dataRange.stubData || !screenDelta) {\n      return {\n        startPadding: 0,\n        endPadding: 0\n      };\n    }\n\n    function getConvertIntervalCoefficient(intervalInPx) {\n      var ratioOfCanvasRange = translator.ratioOfCanvasRange();\n      return ratioOfCanvasRange / (ratioOfCanvasRange * screenDelta / (intervalInPx + screenDelta));\n    }\n\n    if (that.isArgumentAxis && margins.checkInterval) {\n      rangeInterval = that._calculateRangeInterval(dataRange.interval);\n      var pxInterval = translator.getInterval(rangeInterval);\n\n      if (isFinite(pxInterval)) {\n        interval = Math.ceil(pxInterval / (2 * getConvertIntervalCoefficient(pxInterval)));\n      } else {\n        rangeInterval = 0;\n      }\n    }\n\n    var minPercentPadding;\n    var maxPercentPadding;\n    var maxPaddingValue = screenDelta * MAX_MARGIN_VALUE / 2;\n\n    if (valueMarginsEnabled) {\n      if ((0, _type.isDefined)(minValueMargin)) {\n        minPercentPadding = isFinite(minValueMargin) ? minValueMargin : 0;\n      } else {\n        if (!that.isArgumentAxis && margins.checkInterval && valueOf(dataRange.minVisible) > 0 && valueOf(dataRange.minVisible) === valueOf(dataRange.min)) {\n          minPadding = MIN_BAR_MARGIN;\n        } else {\n          minPadding = Math.max(marginSize, interval);\n          minPadding = Math.min(maxPaddingValue, minPadding);\n        }\n      }\n\n      if ((0, _type.isDefined)(maxValueMargin)) {\n        maxPercentPadding = isFinite(maxValueMargin) ? maxValueMargin : 0;\n      } else {\n        if (!that.isArgumentAxis && margins.checkInterval && valueOf(dataRange.maxVisible) < 0 && valueOf(dataRange.maxVisible) === valueOf(dataRange.max)) {\n          maxPadding = MIN_BAR_MARGIN;\n        } else {\n          maxPadding = Math.max(marginSize, interval);\n          maxPadding = Math.min(maxPaddingValue, maxPadding);\n        }\n      }\n    }\n\n    var percentStick = margins.percentStick && !this.isArgumentAxis;\n\n    if (percentStick) {\n      if (1 === _abs(dataRange.max)) {\n        maxPadding = 0;\n      }\n\n      if (1 === _abs(dataRange.min)) {\n        minPadding = 0;\n      }\n    }\n\n    var canvasStartEnd = that._getCanvasStartEnd();\n\n    var commonMargin = 1 + (minPercentPadding || 0) + (maxPercentPadding || 0);\n    var screenDeltaWithMargins = (screenDelta - minPadding - maxPadding) / commonMargin || screenDelta;\n\n    if (void 0 !== minPercentPadding || void 0 !== maxPercentPadding) {\n      if (void 0 !== minPercentPadding) {\n        minPadding = screenDeltaWithMargins * minPercentPadding;\n      }\n\n      if (void 0 !== maxPercentPadding) {\n        maxPadding = screenDeltaWithMargins * maxPercentPadding;\n      }\n    }\n\n    var minValue;\n    var maxValue;\n\n    if (options.type !== _axes_constants2.default.discrete && ticks && ticks.length > 1 && !options.skipViewportExtending && !viewPort.action && false !== options.endOnTick) {\n      var length = ticks.length;\n      var firstTickPosition = translator.translate(ticks[0].value);\n      var lastTickPosition = translator.translate(ticks[length - 1].value);\n      var invertMultiplier = firstTickPosition > lastTickPosition ? -1 : 1;\n\n      var minTickPadding = _max(invertMultiplier * (canvasStartEnd.start - firstTickPosition), 0);\n\n      var maxTickPadding = _max(invertMultiplier * (lastTickPosition - canvasStartEnd.end), 0);\n\n      if (minTickPadding > minPadding || maxTickPadding > maxPadding) {\n        var commonPadding = maxTickPadding + minTickPadding;\n        var coeff = getConvertIntervalCoefficient(commonPadding);\n\n        if (minTickPadding >= minPadding) {\n          minValue = ticks[0].value;\n        }\n\n        if (maxTickPadding >= maxPadding) {\n          maxValue = ticks[length - 1].value;\n        }\n\n        minPadding = _max(minTickPadding, minPadding) / coeff;\n        maxPadding = _max(maxTickPadding, maxPadding) / coeff;\n      }\n    }\n\n    minPercentPadding = void 0 === minPercentPadding ? minPadding / screenDeltaWithMargins : minPercentPadding;\n    maxPercentPadding = void 0 === maxPercentPadding ? maxPadding / screenDeltaWithMargins : maxPercentPadding;\n\n    if (!isDiscrete) {\n      if (this._translator.isInverted()) {\n        minValue = (0, _type.isDefined)(minValue) ? minValue : translator.from(canvasStartEnd.start + screenDelta * minPercentPadding, -1);\n        maxValue = (0, _type.isDefined)(maxValue) ? maxValue : translator.from(canvasStartEnd.end - screenDelta * maxPercentPadding, 1);\n      } else {\n        minValue = (0, _type.isDefined)(minValue) ? minValue : translator.from(canvasStartEnd.start - screenDelta * minPercentPadding, -1);\n        maxValue = (0, _type.isDefined)(maxValue) ? maxValue : translator.from(canvasStartEnd.end + screenDelta * maxPercentPadding, 1);\n      }\n    }\n\n    function correctZeroLevel(minPoint, maxPoint) {\n      var minExpectedPadding = _abs(canvasStartEnd.start - minPoint);\n\n      var maxExpectedPadding = _abs(canvasStartEnd.end - maxPoint);\n\n      var coeff = getConvertIntervalCoefficient(minExpectedPadding + maxExpectedPadding);\n      minPadding = minExpectedPadding / coeff;\n      maxPadding = maxExpectedPadding / coeff;\n    }\n\n    if (!that.isArgumentAxis) {\n      if (minValue * dataRange.min <= 0 && minValue * dataRange.minVisible <= 0) {\n        correctZeroLevel(translator.translate(0), translator.translate(maxValue));\n        minValue = 0;\n      }\n\n      if (maxValue * dataRange.max <= 0 && maxValue * dataRange.maxVisible <= 0) {\n        correctZeroLevel(translator.translate(minValue), translator.translate(0));\n        maxValue = 0;\n      }\n    }\n\n    return {\n      startPadding: this._translator.isInverted() ? maxPadding : minPadding,\n      endPadding: this._translator.isInverted() ? minPadding : maxPadding,\n      minValue: minValue,\n      maxValue: maxValue,\n      interval: rangeInterval,\n      isSpacedMargin: minPadding === maxPadding && 0 !== minPadding\n    };\n  },\n  applyMargins: function applyMargins() {\n    if (this._isSynchronized) {\n      return;\n    }\n\n    var margins = this._calculateValueMargins(this._majorTicks);\n\n    var canvas = (0, _extend.extend)({}, this._canvas, {\n      startPadding: margins.startPadding,\n      endPadding: margins.endPadding\n    });\n\n    this._translator.updateCanvas(this._processCanvas(canvas));\n\n    if (isFinite(margins.interval)) {\n      var br = this._translator.getBusinessRange();\n\n      br.addRange({\n        interval: margins.interval\n      });\n\n      this._translator.updateBusinessRange(br);\n    }\n  },\n  _resetMargins: function _resetMargins() {\n    this._reinitTranslator(this._getViewportRange());\n\n    if (this._canvas) {\n      this._translator.updateCanvas(this._processCanvas(this._canvas));\n    }\n  },\n  _createConstantLines: function _createConstantLines() {\n    var _this = this;\n\n    var constantLines = (this._options.constantLines || []).map(function (o) {\n      return (0, _constant_line2.default)(_this, o);\n    });\n    this._outsideConstantLines = constantLines.filter(function (l) {\n      return \"outside\" === l.labelPosition;\n    });\n    this._insideConstantLines = constantLines.filter(function (l) {\n      return \"inside\" === l.labelPosition;\n    });\n  },\n  draw: function draw(canvas, borderOptions) {\n    var that = this;\n    var options = this._options;\n    that.borderOptions = borderOptions || {\n      visible: false\n    };\n\n    that._resetMargins();\n\n    that.createTicks(canvas);\n    that.applyMargins();\n\n    that._clearAxisGroups();\n\n    initTickCoords(that._majorTicks);\n    initTickCoords(that._minorTicks);\n    initTickCoords(that._boundaryTicks);\n\n    that._axisGroup.append(that._axesContainerGroup);\n\n    that._drawAxis();\n\n    that._drawTitle();\n\n    drawTickMarks(that._majorTicks, options.tick);\n    drawTickMarks(that._minorTicks, options.minorTick);\n    drawTickMarks(that._boundaryTicks, options.tick);\n\n    var drawGridLine = that._getGridLineDrawer();\n\n    drawGrids(that._majorTicks, drawGridLine);\n    drawGrids(that._minorTicks, drawGridLine);\n    callAction(that._majorTicks, \"drawLabel\", that._getViewportRange());\n\n    that._majorTicks.forEach(function (tick) {\n      tick.labelRotationAngle = 0;\n      tick.labelAlignment = void 0;\n      tick.labelOffset = 0;\n    });\n\n    callAction(that._outsideConstantLines.concat(that._insideConstantLines), \"draw\");\n    callAction(that._strips, \"draw\");\n    that._dateMarkers = that._drawDateMarkers() || [];\n    that._labelAxesGroup && that._axisStripLabelGroup.append(that._labelAxesGroup);\n    that._gridContainerGroup && that._axisGridGroup.append(that._gridContainerGroup);\n    that._stripsGroup && that._axisStripGroup.append(that._stripsGroup);\n\n    if (that._constantLinesGroup) {\n      that._axisConstantLineGroups.above.inside.append(that._constantLinesGroup.above);\n\n      that._axisConstantLineGroups.above.outside1.append(that._constantLinesGroup.above);\n\n      that._axisConstantLineGroups.above.outside2.append(that._constantLinesGroup.above);\n\n      that._axisConstantLineGroups.under.inside.append(that._constantLinesGroup.under);\n\n      that._axisConstantLineGroups.under.outside1.append(that._constantLinesGroup.under);\n\n      that._axisConstantLineGroups.under.outside2.append(that._constantLinesGroup.under);\n    }\n\n    that._measureTitle();\n\n    measureLabels(that._majorTicks);\n    var textWidth;\n    var textHeight;\n    var convertedTickInterval;\n    var tickInterval = that._tickInterval;\n\n    if ((0, _type.isDefined)(tickInterval)) {\n      convertedTickInterval = that.getTranslator().getInterval(\"datetime\" === options.dataType ? (0, _date.dateToMilliseconds)(tickInterval) : tickInterval);\n    }\n\n    var usefulSpace = (0, _type.isDefined)(options.placeholderSize) ? options.placeholderSize - options.label.indentFromAxis : void 0;\n\n    if (that._isHorizontal) {\n      textWidth = convertedTickInterval;\n      textHeight = usefulSpace;\n    } else {\n      textWidth = usefulSpace;\n      textHeight = convertedTickInterval;\n    }\n\n    var displayMode = that._validateDisplayMode(options.label.displayMode);\n\n    var overlappingMode = that._validateOverlappingMode(options.label.overlappingBehavior, displayMode);\n\n    var wordWrapMode = options.label.wordWrap || \"none\";\n    var overflowMode = options.label.textOverflow || \"none\";\n\n    if ((\"none\" !== wordWrapMode || \"none\" !== overflowMode) && displayMode !== ROTATE && overlappingMode !== ROTATE && \"auto\" !== overlappingMode) {\n      var correctByWidth = false;\n      var correctByHeight = false;\n\n      if (textWidth) {\n        if (that._majorTicks.some(function (tick) {\n          return tick.labelBBox.width > textWidth;\n        })) {\n          correctByWidth = true;\n        }\n      }\n\n      if (textHeight) {\n        if (that._majorTicks.some(function (tick) {\n          return tick.labelBBox.height > textHeight;\n        })) {\n          correctByHeight = true;\n        }\n      }\n\n      if (correctByWidth || correctByHeight) {\n        that._majorTicks.forEach(function (tick) {\n          tick.label && tick.label.setMaxSize(textWidth, textHeight, options.label);\n        });\n\n        measureLabels(that._majorTicks);\n      }\n    }\n\n    measureLabels(that._outsideConstantLines);\n    measureLabels(that._insideConstantLines);\n    measureLabels(that._strips);\n    measureLabels(that._dateMarkers);\n\n    that._adjustConstantLineLabels(that._insideConstantLines);\n\n    that._adjustStripLabels();\n\n    var offset = that._constantLabelOffset = that._adjustConstantLineLabels(that._outsideConstantLines);\n\n    if (!that._translator.getBusinessRange().isEmpty()) {\n      that._setLabelsPlacement();\n\n      offset = that._adjustLabels(offset);\n    }\n\n    offset = that._adjustDateMarkers(offset);\n\n    that._adjustTitle(offset);\n  },\n  _measureTitle: _common.noop,\n  animate: function animate() {\n    callAction(this._majorTicks, \"animateLabels\");\n  },\n  updateSize: function updateSize(canvas, animate) {\n    var updateTitle = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : true;\n    var that = this;\n    that.updateCanvas(canvas);\n\n    if (updateTitle) {\n      that._checkTitleOverflow();\n\n      that._measureTitle();\n\n      that._updateTitleCoords();\n    }\n\n    that._reinitTranslator(that._getViewportRange());\n\n    that.applyMargins();\n    var animationEnabled = !that._firstDrawing && animate;\n    var options = this._options;\n    initTickCoords(that._majorTicks);\n    initTickCoords(that._minorTicks);\n    initTickCoords(that._boundaryTicks);\n    cleanUpInvalidTicks(that._majorTicks);\n    cleanUpInvalidTicks(that._minorTicks);\n    cleanUpInvalidTicks(that._boundaryTicks);\n\n    if (this._axisElement) {\n      that._updateAxisElementPosition();\n    }\n\n    updateTicksPosition(that._majorTicks, options.tick, animationEnabled);\n    updateTicksPosition(that._minorTicks, options.minorTick, animationEnabled);\n    updateTicksPosition(that._boundaryTicks, options.tick);\n    callAction(that._majorTicks, \"updateLabelPosition\", animationEnabled);\n\n    that._outsideConstantLines.concat(that._insideConstantLines || []).forEach(function (l) {\n      return l.updatePosition(animationEnabled);\n    });\n\n    callAction(that._strips, \"updatePosition\", animationEnabled);\n    updateGridsPosition(that._majorTicks, animationEnabled);\n    updateGridsPosition(that._minorTicks, animationEnabled);\n\n    if (animationEnabled) {\n      callAction(that._ticksToRemove || [], \"fadeOutElements\");\n    }\n\n    that.prepareAnimation();\n    that._ticksToRemove = null;\n\n    if (!that._translator.getBusinessRange().isEmpty()) {\n      that._firstDrawing = false;\n    }\n  },\n  prepareAnimation: function prepareAnimation() {\n    var that = this;\n    var action = \"saveCoords\";\n    callAction(that._majorTicks, action);\n    callAction(that._minorTicks, action);\n    callAction(that._insideConstantLines, action);\n    callAction(that._outsideConstantLines, action);\n    callAction(that._strips, action);\n  },\n  applyClipRects: function applyClipRects(elementsClipID, canvasClipID) {\n    this._axisGroup.attr({\n      \"clip-path\": canvasClipID\n    });\n\n    this._axisStripGroup.attr({\n      \"clip-path\": elementsClipID\n    });\n  },\n  _mergeViewportOptions: function _mergeViewportOptions() {\n    var that = this;\n    var options = that._options;\n    var visualRange = {};\n    var visualRangeOptionValue = options._customVisualRange;\n\n    if (((0, _type.isDefined)(options.max) || (0, _type.isDefined)(options.min)) && !(0, _type.isDefined)(visualRangeOptionValue.startValue) && !(0, _type.isDefined)(visualRangeOptionValue.endValue) && !(0, _type.isDefined)(visualRangeOptionValue.length)) {\n      visualRange = {\n        startValue: options.min,\n        endValue: options.max\n      };\n    } else {\n      visualRange = visualRangeOptionValue;\n    }\n\n    that._setVisualRange(visualRange);\n  },\n  _validateVisualRange: function _validateVisualRange(visualRange) {\n    var range = getVizRangeObject(visualRange);\n\n    if (void 0 !== range.startValue) {\n      range.startValue = this.validateUnit(range.startValue);\n    }\n\n    if (void 0 !== range.endValue) {\n      range.endValue = this.validateUnit(range.endValue);\n    }\n\n    return convertVisualRangeObject(range, visualRange);\n  },\n  _validateOptions: function _validateOptions(options) {\n    var that = this;\n\n    if (void 0 !== options.min) {\n      options.min = that.validateUnit(options.min, \"E2106\");\n    }\n\n    if (void 0 !== options.max) {\n      options.max = that.validateUnit(options.max, \"E2106\");\n    }\n\n    options.wholeRange = that._validateVisualRange(options.wholeRange);\n    options.visualRange = options._customVisualRange = that._validateVisualRange(options._customVisualRange);\n\n    that._mergeViewportOptions();\n  },\n  validate: function validate() {\n    var that = this;\n    var options = that._options;\n    var dataType = that.isArgumentAxis ? options.argumentType : options.valueType;\n    var parser = dataType ? _parse_utils2.default.getParser(dataType) : function (unit) {\n      return unit;\n    };\n    that.parser = parser;\n    options.dataType = dataType;\n\n    that._validateOptions(options);\n  },\n  resetVisualRange: function resetVisualRange(isSilent) {\n    this._seriesData.minVisible = this._seriesData.min;\n    this._seriesData.maxVisible = this._seriesData.max;\n    this.handleZooming([null, null], {\n      start: !!isSilent,\n      end: !!isSilent\n    });\n  },\n  _setVisualRange: function _setVisualRange(visualRange, allowPartialUpdate) {\n    var range = this.adjustRange(_utils2.default.getVizRangeObject(visualRange));\n\n    if (allowPartialUpdate) {\n      (0, _type.isDefined)(range.startValue) && (this._viewport.startValue = range.startValue);\n      (0, _type.isDefined)(range.endValue) && (this._viewport.endValue = range.endValue);\n    } else {\n      this._viewport = range;\n    }\n  },\n  _applyZooming: function _applyZooming(visualRange, allowPartialUpdate) {\n    var that = this;\n\n    that._resetVisualRangeOption();\n\n    that._setVisualRange(visualRange, allowPartialUpdate);\n\n    var viewPort = that.getViewport();\n    that._breaks = that._getScaleBreaks(that._options, {\n      minVisible: viewPort.startValue,\n      maxVisible: viewPort.endValue\n    }, that._series, that.isArgumentAxis);\n\n    that._translator.updateBusinessRange(that._getViewportRange());\n  },\n  getZoomStartEventArg: function getZoomStartEventArg(event, actionType) {\n    return {\n      axis: this,\n      range: this.visualRange(),\n      cancel: false,\n      event: event,\n      actionType: actionType\n    };\n  },\n  getZoomEndEventArg: function getZoomEndEventArg(previousRange, event, actionType, zoomFactor, shift) {\n    var newRange = this.visualRange();\n    return {\n      axis: this,\n      previousRange: previousRange,\n      range: newRange,\n      cancel: false,\n      event: event,\n      actionType: actionType,\n      zoomFactor: zoomFactor,\n      shift: shift,\n      rangeStart: newRange.startValue,\n      rangeEnd: newRange.endValue\n    };\n  },\n  getZoomBounds: function getZoomBounds() {\n    var wholeRange = _utils2.default.getVizRangeObject(this._options.wholeRange);\n\n    var range = this.getTranslator().getBusinessRange();\n    var secondPriorityRange = {\n      startValue: getZoomBoundValue(this._initRange.startValue, range.min),\n      endValue: getZoomBoundValue(this._initRange.endValue, range.max)\n    };\n    return {\n      startValue: getZoomBoundValue(wholeRange.startValue, secondPriorityRange.startValue),\n      endValue: getZoomBoundValue(wholeRange.endValue, secondPriorityRange.endValue)\n    };\n  },\n  setInitRange: function setInitRange() {\n    this._initRange = {};\n\n    if (0 === Object.keys(this._options.wholeRange || {}).length) {\n      this._initRange = this.getZoomBounds();\n    }\n  },\n  _resetVisualRangeOption: function _resetVisualRangeOption() {\n    this._options._customVisualRange = {};\n  },\n  setCustomVisualRange: function setCustomVisualRange(range) {\n    this._options._customVisualRange = range;\n  },\n  visualRange: function visualRange() {\n    var that = this;\n    var args = arguments;\n    var visualRange;\n\n    if (0 === args.length) {\n      var adjustedRange = that._getAdjustedBusinessRange();\n\n      var startValue = adjustedRange.minVisible;\n      var endValue = adjustedRange.maxVisible;\n\n      if (that._options.type === _axes_constants2.default.discrete) {\n        startValue = (0, _type.isDefined)(startValue) ? startValue : adjustedRange.categories[0];\n        endValue = (0, _type.isDefined)(endValue) ? endValue : adjustedRange.categories[adjustedRange.categories.length - 1];\n        return {\n          startValue: startValue,\n          endValue: endValue,\n          categories: _utils2.default.getCategoriesInfo(adjustedRange.categories, startValue, endValue).categories\n        };\n      }\n\n      return {\n        startValue: startValue,\n        endValue: endValue\n      };\n    } else {\n      if (_isArray(args[0])) {\n        visualRange = args[0];\n      } else {\n        if ((0, _type.isPlainObject)(args[0])) {\n          visualRange = (0, _extend.extend)({}, args[0]);\n        } else {\n          visualRange = [args[0], args[1]];\n        }\n      }\n    }\n\n    var zoomResults = that.handleZooming(visualRange, args[1]);\n\n    if (!zoomResults.isPrevented) {\n      that._visualRange(that, zoomResults);\n    }\n  },\n  handleZooming: function handleZooming(visualRange, preventEvents, domEvent, action) {\n    var that = this;\n    preventEvents = preventEvents || {};\n\n    if ((0, _type.isDefined)(visualRange)) {\n      visualRange = that._validateVisualRange(visualRange);\n      visualRange.action = action;\n    }\n\n    var zoomStartEvent = that.getZoomStartEventArg(domEvent, action);\n    var previousRange = zoomStartEvent.range;\n    !preventEvents.start && that._eventTrigger(\"zoomStart\", zoomStartEvent);\n    var zoomResults = {\n      isPrevented: zoomStartEvent.cancel,\n      skipEventRising: preventEvents.skipEventRising,\n      range: visualRange || zoomStartEvent.range\n    };\n\n    if (!zoomStartEvent.cancel) {\n      (0, _type.isDefined)(visualRange) && that._applyZooming(visualRange, preventEvents.allowPartialUpdate);\n\n      if (!(0, _type.isDefined)(that._storedZoomEndParams)) {\n        that._storedZoomEndParams = {\n          startRange: previousRange,\n          type: this.getOptions().type\n        };\n      }\n\n      that._storedZoomEndParams.event = domEvent;\n      that._storedZoomEndParams.action = action;\n      that._storedZoomEndParams.prevent = !!preventEvents.end;\n    }\n\n    return zoomResults;\n  },\n  handleZoomEnd: function handleZoomEnd() {\n    var that = this;\n\n    if ((0, _type.isDefined)(that._storedZoomEndParams) && !that._storedZoomEndParams.prevent) {\n      var previousRange = that._storedZoomEndParams.startRange;\n      var domEvent = that._storedZoomEndParams.event;\n      var action = that._storedZoomEndParams.action;\n      var previousBusinessRange = {\n        minVisible: previousRange.startValue,\n        maxVisible: previousRange.endValue,\n        categories: previousRange.categories\n      };\n\n      var typeIsNotChanged = that.getOptions().type === that._storedZoomEndParams.type;\n\n      var shift = typeIsNotChanged ? (0, _math2.adjust)(that.getVisualRangeCenter() - that.getVisualRangeCenter(previousBusinessRange)) : NaN;\n      var zoomFactor = typeIsNotChanged ? +(Math.round(that.getVisualRangeLength(previousBusinessRange) / that.getVisualRangeLength() + \"e+2\") + \"e-2\") : NaN;\n      var zoomEndEvent = that.getZoomEndEventArg(previousRange, domEvent, action, zoomFactor, shift);\n      zoomEndEvent.cancel = that.isZoomingLowerLimitOvercome(1 === zoomFactor ? \"pan\" : \"zoom\", zoomFactor);\n\n      that._eventTrigger(\"zoomEnd\", zoomEndEvent);\n\n      if (zoomEndEvent.cancel) {\n        that.restorePreviousVisualRange(previousRange);\n      }\n\n      that._storedZoomEndParams = null;\n    }\n  },\n  restorePreviousVisualRange: function restorePreviousVisualRange(previousRange) {\n    var that = this;\n    that._storedZoomEndParams = null;\n\n    that._applyZooming(previousRange);\n\n    that._visualRange(that, previousRange);\n  },\n  isZoomingLowerLimitOvercome: function isZoomingLowerLimitOvercome(actionType, zoomFactor, range) {\n    var that = this;\n    var options = that._options;\n    var minZoom = options.minVisualRangeLength;\n    var isOvercoming = \"zoom\" === actionType && zoomFactor >= 1;\n\n    var businessRange = that._translator.getBusinessRange();\n\n    var visualRange;\n\n    if ((0, _type.isDefined)(range)) {\n      visualRange = that.adjustRange(_utils2.default.getVizRangeObject(range));\n      visualRange = {\n        minVisible: visualRange.startValue,\n        maxVisible: visualRange.endValue,\n        categories: businessRange.categories\n      };\n    }\n\n    var visualRangeLength = that.getVisualRangeLength(visualRange);\n\n    if (\"discrete\" !== options.type) {\n      if ((0, _type.isDefined)(minZoom)) {\n        if (\"datetime\" === options.dataType && !(0, _type.isNumeric)(minZoom)) {\n          minZoom = (0, _date.dateToMilliseconds)(minZoom);\n        }\n\n        isOvercoming &= minZoom >= visualRangeLength;\n      } else {\n        var canvasLength = that._translator.canvasLength;\n        var fullRange = {\n          minVisible: businessRange.min,\n          maxVisible: businessRange.max,\n          categories: businessRange.categories\n        };\n        isOvercoming &= that.getVisualRangeLength(fullRange) / canvasLength >= visualRangeLength;\n      }\n    } else {\n      !(0, _type.isDefined)(minZoom) && (minZoom = 1);\n      isOvercoming &= (0, _type.isDefined)(range) && that.getVisualRangeLength() === minZoom && visualRangeLength <= minZoom;\n    }\n\n    return !!isOvercoming;\n  },\n  dataVisualRangeIsReduced: function dataVisualRangeIsReduced() {\n    var minDataValue;\n    var maxDataValue;\n    var translator = this.getTranslator();\n\n    if (\"discrete\" === this._options.type) {\n      var categories = translator.getBusinessRange().categories;\n      minDataValue = categories[0];\n      maxDataValue = categories[categories.length - 1];\n    } else {\n      var seriesData = this._seriesData;\n      minDataValue = seriesData.min;\n      maxDataValue = seriesData.max;\n    }\n\n    if (!(0, _type.isDefined)(minDataValue) || !(0, _type.isDefined)(maxDataValue)) {\n      return false;\n    }\n\n    var startPoint = translator.translate(minDataValue);\n    var endPoint = translator.translate(maxDataValue);\n    var edges = [Math.min(startPoint, endPoint), Math.max(startPoint, endPoint)];\n    var visualRange = this.visualRange();\n    var visualRangeStartPoint = translator.translate(visualRange.startValue);\n    var visualRangeEndPoint = translator.translate(visualRange.endValue);\n    return visualRangeStartPoint > edges[0] && visualRangeStartPoint < edges[1] || visualRangeEndPoint > edges[0] && visualRangeEndPoint < edges[1] || visualRangeStartPoint === visualRangeEndPoint && edges[0] !== edges[1];\n  },\n  isExtremePosition: function isExtremePosition(isMax) {\n    var extremeDataValue;\n    var seriesData;\n\n    if (\"discrete\" === this._options.type) {\n      seriesData = this._translator.getBusinessRange();\n      extremeDataValue = isMax ? seriesData.categories[seriesData.categories.length - 1] : seriesData.categories[0];\n    } else {\n      seriesData = this.getZoomBounds();\n      extremeDataValue = isMax ? seriesData.endValue : seriesData.startValue;\n    }\n\n    var translator = this.getTranslator();\n    var extremePoint = translator.translate(extremeDataValue);\n    var visualRange = this.visualRange();\n    var visualRangePoint = isMax ? translator.translate(visualRange.endValue) : translator.translate(visualRange.startValue);\n    return _abs(visualRangePoint - extremePoint) < SCROLL_THRESHOLD;\n  },\n  getViewport: function getViewport() {\n    return this._viewport;\n  },\n  getFullTicks: function getFullTicks() {\n    var majors = this._majorTicks || [];\n\n    if (this._options.type === _axes_constants2.default.discrete) {\n      return convertTicksToValues(majors);\n    } else {\n      return convertTicksToValues(majors.concat(this._minorTicks, this._boundaryTicks)).sort(function (a, b) {\n        return valueOf(a) - valueOf(b);\n      });\n    }\n  },\n  measureLabels: function measureLabels(canvas, withIndents) {\n    var that = this;\n    var options = that._options;\n    var widthAxis = options.visible ? options.width : 0;\n    var ticks;\n    var maxText;\n    var text;\n    var box;\n    var indent = withIndents ? options.label.indentFromAxis + .5 * options.tick.length : 0;\n    var tickInterval;\n\n    var viewportRange = that._getViewportRange();\n\n    if (viewportRange.isEmpty() || !options.label.visible || !that._axisElementsGroup) {\n      return {\n        height: widthAxis,\n        width: widthAxis,\n        x: 0,\n        y: 0\n      };\n    }\n\n    if (that._majorTicks) {\n      ticks = convertTicksToValues(that._majorTicks);\n    } else {\n      that.updateCanvas(canvas);\n      ticks = that._createTicksAndLabelFormat(viewportRange, _common.noop);\n      tickInterval = ticks.tickInterval;\n      ticks = ticks.ticks;\n    }\n\n    maxText = ticks.reduce(function (prevLabel, tick, index) {\n      var label = that.formatLabel(tick, options.label, viewportRange, void 0, tickInterval, ticks);\n\n      if (prevLabel.length < label.length) {\n        return label;\n      } else {\n        return prevLabel;\n      }\n    }, that.formatLabel(ticks[0], options.label, viewportRange, void 0, tickInterval, ticks));\n    text = that._renderer.text(maxText, 0, 0).css(that._textFontStyles).attr(that._textOptions).append(that._renderer.root);\n    box = text.getBBox();\n    text.remove();\n    return {\n      x: box.x,\n      y: box.y,\n      width: box.width + indent,\n      height: box.height + indent\n    };\n  },\n  _setLabelsPlacement: function _setLabelsPlacement() {\n    if (!this._options.label.visible) {\n      return;\n    }\n\n    var that = this;\n    var labelOpt = that._options.label;\n\n    var displayMode = that._validateDisplayMode(labelOpt.displayMode);\n\n    var overlappingMode = that._validateOverlappingMode(labelOpt.overlappingBehavior, displayMode);\n\n    var ignoreOverlapping = \"none\" === overlappingMode || \"ignore\" === overlappingMode;\n    var behavior = {\n      rotationAngle: labelOpt.rotationAngle,\n      staggeringSpacing: labelOpt.staggeringSpacing\n    };\n    var notRecastStep;\n\n    var boxes = that._majorTicks.map(function (tick) {\n      return tick.labelBBox;\n    });\n\n    var step = that._getStep(boxes);\n\n    switch (displayMode) {\n      case ROTATE:\n        if (ignoreOverlapping) {\n          notRecastStep = true;\n          step = 1;\n        }\n\n        that._applyLabelMode(displayMode, step, boxes, labelOpt, notRecastStep);\n\n        break;\n\n      case \"stagger\":\n        if (ignoreOverlapping) {\n          step = 2;\n        }\n\n        that._applyLabelMode(displayMode, _max(step, 2), boxes, labelOpt);\n\n        break;\n\n      default:\n        that._applyLabelOverlapping(boxes, overlappingMode, step, behavior);\n\n    }\n  },\n  _applyLabelOverlapping: function _applyLabelOverlapping(boxes, mode, step, behavior) {\n    var that = this;\n    var labelOpt = that._options.label;\n    var majorTicks = that._majorTicks;\n\n    if (\"none\" === mode || \"ignore\" === mode) {\n      return;\n    }\n\n    var checkLabels = function checkLabels(box, index, array) {\n      if (0 === index) {\n        return false;\n      }\n\n      return _axes_constants2.default.areLabelsOverlap(box, array[index - 1], labelOpt.minSpacing, labelOpt.alignment);\n    };\n\n    if (step > 1 && boxes.some(checkLabels)) {\n      that._applyLabelMode(mode, step, boxes, behavior);\n    }\n\n    that._checkBoundedLabelsOverlapping(majorTicks, boxes, mode);\n  },\n  _applyLabelMode: function _applyLabelMode(mode, step, boxes, behavior, notRecastStep) {\n    var that = this;\n    var majorTicks = that._majorTicks;\n    var labelOpt = that._options.label;\n    var angle = behavior.rotationAngle;\n    var labelHeight;\n    var alignment;\n    var func;\n\n    switch (mode) {\n      case ROTATE:\n        if (!labelOpt.userAlignment) {\n          alignment = angle < 0 ? RIGHT : LEFT;\n\n          if (angle % 90 === 0) {\n            alignment = CENTER;\n          }\n        }\n\n        step = notRecastStep ? step : that._getStep(boxes, angle);\n\n        func = function func(tick) {\n          tick.label.rotate(angle);\n          tick.labelRotationAngle = angle;\n          alignment && (tick.labelAlignment = alignment);\n        };\n\n        updateLabels(majorTicks, step, func);\n        break;\n\n      case \"stagger\":\n        labelHeight = that._getMaxLabelHeight(boxes, behavior.staggeringSpacing);\n\n        func = function func(tick, index) {\n          if (index / (step - 1) % 2 !== 0) {\n            tick.labelOffset = labelHeight;\n          }\n        };\n\n        updateLabels(majorTicks, step - 1, func);\n        break;\n\n      case \"auto\":\n      case \"_auto\":\n        if (2 === step) {\n          that._applyLabelMode(\"stagger\", step, boxes, behavior);\n        } else {\n          that._applyLabelMode(ROTATE, step, boxes, {\n            rotationAngle: getOptimalAngle(boxes, labelOpt)\n          });\n        }\n\n        break;\n\n      default:\n        updateLabels(majorTicks, step);\n    }\n  },\n  getMarkerTrackers: _common.noop,\n  _drawDateMarkers: _common.noop,\n  _adjustDateMarkers: _common.noop,\n  coordsIn: _common.noop,\n  areCoordsOutsideAxis: _common.noop,\n  _getSkippedCategory: _common.noop,\n  _initAxisPositions: _common.noop,\n  _drawTitle: _common.noop,\n  _updateTitleCoords: _common.noop,\n  _adjustConstantLineLabels: _common.noop,\n  _createTranslator: function _createTranslator() {\n    return new _translator2d2.default.Translator2D({}, {}, {});\n  },\n  _updateTranslator: function _updateTranslator() {\n    var translator = this._translator;\n    translator.update(translator.getBusinessRange(), this._canvas || {}, this._getTranslatorOptions());\n  },\n  _getTranslatorOptions: function _getTranslatorOptions() {\n    var options = this._options;\n    return {\n      isHorizontal: this._isHorizontal,\n      shiftZeroValue: !this.isArgumentAxis,\n      interval: options.semiDiscreteInterval,\n      stick: this._getStick(),\n      breaksSize: options.breakStyle ? options.breakStyle.width : 0\n    };\n  },\n  getVisibleArea: function getVisibleArea() {\n    var canvas = this._getCanvasStartEnd();\n\n    return [canvas.start, canvas.end].sort(function (a, b) {\n      return a - b;\n    });\n  },\n  _getCanvasStartEnd: function _getCanvasStartEnd() {\n    var isHorizontal = this._isHorizontal;\n    var canvas = this._canvas || {};\n\n    var invert = this._translator.getBusinessRange().invert;\n\n    var coords = isHorizontal ? [canvas.left, canvas.width - canvas.right] : [canvas.height - canvas.bottom, canvas.top];\n    invert && coords.reverse();\n    return {\n      start: coords[0],\n      end: coords[1]\n    };\n  },\n  _getScreenDelta: function _getScreenDelta() {\n    var that = this;\n\n    var canvas = that._getCanvasStartEnd();\n\n    var breaks = that._breaks;\n    var breaksLength = breaks ? breaks.length : 0;\n\n    var screenDelta = _abs(canvas.start - canvas.end);\n\n    return screenDelta - (breaksLength ? breaks[breaksLength - 1].cumulativeWidth : 0);\n  },\n  _getScaleBreaks: function _getScaleBreaks() {\n    return [];\n  },\n  _adjustTitle: _common.noop,\n  _checkTitleOverflow: _common.noop,\n  getSpiderTicks: _common.noop,\n  setSpiderTicks: _common.noop,\n  _checkBoundedLabelsOverlapping: _common.noop,\n  drawScaleBreaks: _common.noop,\n  _visualRange: _common.noop,\n  _rotateConstantLine: _common.noop,\n  applyVisualRangeSetter: function applyVisualRangeSetter(visualRangeSetter) {\n    this._visualRange = visualRangeSetter;\n  },\n  getCategoriesSorter: function getCategoriesSorter(argCategories) {\n    var sort;\n\n    if (this.isArgumentAxis) {\n      sort = argCategories;\n    } else {\n      var categoriesSortingMethod = this._options.categoriesSortingMethod;\n      sort = (0, _type.isDefined)(categoriesSortingMethod) ? categoriesSortingMethod : this._options.categories;\n    }\n\n    return sort;\n  },\n  _getAdjustedBusinessRange: function _getAdjustedBusinessRange() {\n    return this.adjustViewport(this._translator.getBusinessRange());\n  }\n};","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/axes/base_axis.js"],"names":["_smart_formatter","require","_utils","_utils2","_interopRequireDefault","_type","_axes_constants","_axes_constants2","_extend","_array","_format_helper","_format_helper2","_parse_utils","_parse_utils2","_tick_generator","_tick_generator2","_translator2d","_translator2d2","_range","_tick","_math2","_date","_common","_xy_axes","_xy_axes2","_polar_axes","_polar_axes2","_constant_line","_constant_line2","_strip","_strip2","obj","__esModule","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","convertTicksToValues","default","patchFontOptions","getVizRangeObject","getLog","getLogExt","raiseTo","raiseToExt","valueOf","_math","Math","_abs","abs","_max","max","_min","min","_isArray","Array","isArray","DEFAULT_AXIS_LABEL_SPACING","MAX_GRID_BORDER_ADHENSION","TOP","top","BOTTOM","bottom","LEFT","left","RIGHT","right","CENTER","center","KEEP","SHIFT","RESET","ROTATE","DEFAULT_AXIS_DIVISION_FACTOR","DEFAULT_MINOR_AXIS_DIVISION_FACTOR","SCROLL_THRESHOLD","MIN_BAR_MARGIN","MAX_MARGIN_VALUE","dateIntervals","day","week","getTickGenerator","options","incidentOccurred","skipTickGeneration","rangeIsEmpty","adjustDivisionFactor","_ref","allowNegatives","linearThreshold","tickGenerator","axisType","type","dataType","logBase","logarithmBase","axisDivisionFactor","minorAxisDivisionFactor","numberMultipliers","calculateMinors","minorTick","visible","minorGrid","allowDecimals","endOnTick","firstDayOfWeek","workWeek","skipCalculationLimits","generateExtraTick","minTickInterval","createMajorTick","axis","renderer","skippedCategory","getOptions","tick","grid","createMinorTick","createBoundaryTick","isFirst","extend","showCustomBoundaryTicks","callAction","elements","action","actionArgument1","actionArgument2","forEach","e","initTickCoords","ticks","drawTickMarks","drawGrids","drawLine","updateTicksPosition","animate","updateGridsPosition","measureLabels","exports","items","item","labelBBox","label","getBBox","x","y","width","height","cleanUpInvalidTicks","i","length","removeInvalidTick","coords","splice","validateAxisOptions","labelOptions","position","defaultPosition","isHorizontal","secondaryPosition","userAlignment","alignment","hoverMode","toLowerCase","minSpacing","isDefined","argumentType","valueType","getOptimalAngle","boxes","labelOpt","angle","asin","PI","updateLabels","step","func","index","removeLabel","getZoomBoundValue","optionValue","dataValue","configureGenerator","viewPort","screenDelta","tickGeneratorOptions","tickInterval","breaks","noop","isEmpty","v","categories","isSpacedMargin","convertVisualRangeObject","visualRange","getConstantLineSharpDirection","coord","axisCanvas","start","end","calculateCanvasMargins","bBoxes","canvas","cLeft","cTop","cRight","cBottom","reduce","margins","bBox","Axis","renderSettings","that","_renderer","_incidentOccurred","_eventTrigger","eventTrigger","_stripsGroup","stripsGroup","_labelAxesGroup","labelAxesGroup","_constantLinesGroup","constantLinesGroup","_scaleBreaksGroup","scaleBreaksGroup","_axesContainerGroup","axesContainerGroup","_gridContainerGroup","gridGroup","_axisCssPrefix","widgetClass","axisClass","_setType","drawingType","_createAxisGroups","_translator","_createTranslator","isArgumentAxis","_viewport","_firstDrawing","_initRange","prototype","constructor","_drawAxis","_options","_axisElement","_createAxisElement","_updateAxisElementPosition","attr","stroke","color","opacity","sharp","_getSharpParam","getAxisSharpDirection","append","_axisLineGroup","_createPathElement","points","sharpDirection","path","svgElement","arguments","getSharpDirectionByCoords","_getCanvasStartEnd","maxCoord","getRadius","_isHorizontal","_getGridLineDrawer","gridStyle","_getGridPoints","tickPositionField","orthogonalPositions","_orthogonalPositions","positionFrom","positionTo","borderOptions","canvasStart","canvasEnd","getCanvas","firstBorderLinePosition","lastBorderLinePosition","minDelta","maxDelta","areCoordsOutsideAxis","_getConstantLinePos","parsedValue","_getTranslatedCoord","_getConstantLineGraphicAttributes","_createConstantLine","_drawConstantLineLabelText","text","_ref2","group","font","cssClass","css","align","_drawConstantLineLabels","lineLabelOptions","_checkAlignmentConstantLineLabels","formatLabel","_getConstantLineLabelsCoords","_getStripPos","startValue","endValue","range","isContinuous","minVisible","maxVisible","result","cat","push","swap","startCategoryIndex","endCategoryIndex","parsedStartValue","parser","parsedEndValue","inArray","from","to","validateUnit","_getStripGraphicAttributes","fromPoint","toPoint","_createStrip","attrs","rect","_adjustStripLabels","_strips","strip","_getAdjustedStripLabelCoords","_adjustLabelsCoord","offset","maxWidth","checkCanvas","_majorTicks","updateMultilineTextAlignment","_getLabelAdjustedCoord","labelOffset","_adjustLabels","maxSize","size","labelRotationAngle","rotateBBox","labelCoords","additionalOffset","indentFromAxis","box","textAlign","labelAlignment","isDiscrete","isFlatLabel","axisPosition","_axisPosition","labelX","translateX","translateY","_createAxisConstantLineGroups","classSelector","constantLinesClass","insideGroup","outsideGroup1","outsideGroup2","g","inside","outside1","outside2","remove","clear","_axisGroup","_axisStripGroup","_axisGridGroup","_axisElementsGroup","_axisTitleGroup","_axisConstantLineGroups","above","under","_axisStripLabelGroup","_clearAxisGroups","_getLabelFormatObject","point","_getViewportRange","formatObject","valueText","smartFormatter","_tickInterval","showTransition","marker","isFunction","customizeText","call","formatHint","customizeHint","formatRange","interval","_setTickOffset","discreteAxisDivisionMode","_tickOffset","getMargins","placeholderSize","edgeMarginCorrection","constantLineAboveSeries","constantLineUnderSeries","map","concat","crosshairMargin","unit","idError","parameters","axisTypeMethods","_disposeBreaksGroup","dispose","_title","_axisBreaksGroup","_textOptions","_textFontStyles","_minorTicks","setPane","pane","setTypes","typeSelector","_updateTranslator","resetTypes","_initTypes","getTranslator","updateOptions","title","name","priority","_hasLabelFormat","format","logarithmic","logarithmBaseError","_createConstantLines","strips","o","calculateInterval","prevValue","_Range","Range","getBusinessRange","_processCanvas","updateCanvas","positions","_canvas","_initAxisPositions","getAxisShift","_axisShift","hideTitle","getTitle","hideOuterElements","_outsideConstantLines","adjustViewport","businessRange","discrete","_seriesData","wholeRange","adjustRange","getViewport","_addConstantLinesToRange","minDefined","maxDefined","categoriesInfo","getCategoriesInfo","adjustedVisualRange","adjustVisualRange","base","addRange","isLogarithmic","disabledNegatives","tmp","_getVisualRangeUpdateMode","viewport","newRange","oppositeValue","visualRangeUpdateMode","translator","indexOf","newCategories","c","join","minPoint","translate","minVisiblePoint","maxPoint","maxVisiblePoint","_handleBusinessRangeChanged","oppositeVisualRangeUpdateMode","axisReinitialized","_lastVisualRangeUpdateMode","_prevDataWasEmpty","_setVisualRange","getVisualRangeLength","currentBusinessRange","adjust","getVisualRangeCenter","_this$_options","ceil","setBusinessRange","argCategories","dataIsEmpty","invert","inverted","isNaN","synchronizedValue","showZero","correctValueZeroLevel","sortCategories","getCategoriesSorter","_breaks","_getScaleBreaks","_series","updateBusinessRange","dataRange","minValueField","maxValueField","_insideConstantLines","cl","extendAxis","_dataRange$addRange","getParsedValue","setGroupSeries","series","getLabelsPosition","labelShift","_constantLabelOffset","getFormattedValue","_getBoundaryTicks","majors","customBounds","customBoundTicks","addMinMax","_boundaryTicksVisibility","boundaryTicks","setPercentLabelFormat","resetAutoLabelFormat","getMultipleAxesSpacing","multipleAxesSpacing","getTicksValues","majorTicksValues","minorTicksValues","setTicks","majorTicks","_getSkippedCategory","minorTicks","_isSynchronized","_adjustDivisionFactor","val","_getTicks","customTicks","customMinorTicks","bind","_getScreenDelta","overlappingBehavior","forceUserTickInterval","minors","minorTickInterval","minorTickCount","_createTicksAndLabelFormat","getDateFormatByTicks","getAggregationInfo","useAllAggregatedPoints","marginOptions","_marginOptions","aggregateByCategory","aggregationInterval","aggregationGroupWidth","checkInterval","sizePointNormalState","minInterval","generateTicks","add","getAddFunction","maxMinDistance","dateToMilliseconds","_aggregationInterval","createTicks","_estimatedTickInterval","_calculateValueMargins","minValue","maxValue","_boundaryTicks","filter","minor","some","boundary","_minorTickInterval","oldMajorTicks","majorTicksByValues","r","t","sameType","setSkippedCategory","oldMinorTicks","updateValue","_ticksToRemove","keys","k","slice","_correctedBreaks","_reinitTranslator","setMarginOptions","getMarginOptions","allowToExtendVisualRange","isEnd","bound","isExtremePosition","_calculateRangeInterval","isDateTime","minArgs","addToArgs","_calculateWorkWeekInterval","apply","businessInterval","workdaysOnly","weekend","weekendsCount","_resetMargins","marginSize","valueMarginsEnabled","minValueMargin","maxValueMargin","minPadding","maxPadding","rangeInterval","stubData","startPadding","endPadding","getConvertIntervalCoefficient","intervalInPx","ratioOfCanvasRange","pxInterval","getInterval","isFinite","minPercentPadding","maxPercentPadding","maxPaddingValue","percentStick","canvasStartEnd","commonMargin","screenDeltaWithMargins","skipViewportExtending","firstTickPosition","lastTickPosition","invertMultiplier","minTickPadding","maxTickPadding","commonPadding","coeff","isInverted","correctZeroLevel","minExpectedPadding","maxExpectedPadding","applyMargins","br","_this","constantLines","l","labelPosition","draw","_drawTitle","drawGridLine","_dateMarkers","_drawDateMarkers","_measureTitle","textWidth","textHeight","convertedTickInterval","usefulSpace","displayMode","_validateDisplayMode","overlappingMode","_validateOverlappingMode","wordWrapMode","wordWrap","overflowMode","textOverflow","correctByWidth","correctByHeight","setMaxSize","_adjustConstantLineLabels","_setLabelsPlacement","_adjustDateMarkers","_adjustTitle","updateSize","updateTitle","_checkTitleOverflow","_updateTitleCoords","animationEnabled","updatePosition","prepareAnimation","applyClipRects","elementsClipID","canvasClipID","_mergeViewportOptions","visualRangeOptionValue","_customVisualRange","_validateVisualRange","_validateOptions","validate","getParser","resetVisualRange","isSilent","handleZooming","allowPartialUpdate","_applyZooming","_resetVisualRangeOption","getZoomStartEventArg","event","actionType","cancel","getZoomEndEventArg","previousRange","zoomFactor","shift","rangeStart","rangeEnd","getZoomBounds","secondPriorityRange","setInitRange","setCustomVisualRange","args","adjustedRange","_getAdjustedBusinessRange","isPlainObject","zoomResults","isPrevented","_visualRange","preventEvents","domEvent","zoomStartEvent","skipEventRising","_storedZoomEndParams","startRange","prevent","handleZoomEnd","previousBusinessRange","typeIsNotChanged","NaN","round","zoomEndEvent","isZoomingLowerLimitOvercome","restorePreviousVisualRange","minZoom","minVisualRangeLength","isOvercoming","visualRangeLength","isNumeric","canvasLength","fullRange","dataVisualRangeIsReduced","minDataValue","maxDataValue","seriesData","startPoint","endPoint","edges","visualRangeStartPoint","visualRangeEndPoint","isMax","extremeDataValue","extremePoint","visualRangePoint","getFullTicks","sort","a","b","withIndents","widthAxis","maxText","indent","viewportRange","prevLabel","root","ignoreOverlapping","behavior","rotationAngle","staggeringSpacing","notRecastStep","_getStep","_applyLabelMode","_applyLabelOverlapping","mode","checkLabels","array","areLabelsOverlap","_checkBoundedLabelsOverlapping","labelHeight","rotate","_getMaxLabelHeight","getMarkerTrackers","coordsIn","Translator2D","update","_getTranslatorOptions","shiftZeroValue","semiDiscreteInterval","stick","_getStick","breaksSize","breakStyle","getVisibleArea","reverse","breaksLength","cumulativeWidth","getSpiderTicks","setSpiderTicks","drawScaleBreaks","_rotateConstantLine","applyVisualRangeSetter","visualRangeSetter","categoriesSortingMethod"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/axes/base_axis.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _smart_formatter = require(\"./smart_formatter\");\r\nvar _utils = require(\"../core/utils\");\r\nvar _utils2 = _interopRequireDefault(_utils);\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _axes_constants = require(\"./axes_constants\");\r\nvar _axes_constants2 = _interopRequireDefault(_axes_constants);\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _format_helper = require(\"../../format_helper\");\r\nvar _format_helper2 = _interopRequireDefault(_format_helper);\r\nvar _parse_utils = require(\"../components/parse_utils\");\r\nvar _parse_utils2 = _interopRequireDefault(_parse_utils);\r\nvar _tick_generator = require(\"./tick_generator\");\r\nvar _tick_generator2 = _interopRequireDefault(_tick_generator);\r\nvar _translator2d = require(\"../translators/translator2d\");\r\nvar _translator2d2 = _interopRequireDefault(_translator2d);\r\nvar _range = require(\"../translators/range\");\r\nvar _tick = require(\"./tick\");\r\nvar _math2 = require(\"../../core/utils/math\");\r\nvar _date = require(\"../../core/utils/date\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _xy_axes = require(\"./xy_axes\");\r\nvar _xy_axes2 = _interopRequireDefault(_xy_axes);\r\nvar _polar_axes = require(\"./polar_axes\");\r\nvar _polar_axes2 = _interopRequireDefault(_polar_axes);\r\nvar _constant_line = require(\"./constant_line\");\r\nvar _constant_line2 = _interopRequireDefault(_constant_line);\r\nvar _strip = require(\"./strip\");\r\nvar _strip2 = _interopRequireDefault(_strip);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar convertTicksToValues = _axes_constants2.default.convertTicksToValues;\r\nvar patchFontOptions = _utils2.default.patchFontOptions;\r\nvar getVizRangeObject = _utils2.default.getVizRangeObject;\r\nvar getLog = _utils2.default.getLogExt;\r\nvar raiseTo = _utils2.default.raiseToExt;\r\nvar valueOf = _utils2.default.valueOf;\r\nvar _math = Math;\r\nvar _abs = _math.abs;\r\nvar _max = _math.max;\r\nvar _min = _math.min;\r\nvar _isArray = Array.isArray;\r\nvar DEFAULT_AXIS_LABEL_SPACING = 5;\r\nvar MAX_GRID_BORDER_ADHENSION = 4;\r\nvar TOP = _axes_constants2.default.top;\r\nvar BOTTOM = _axes_constants2.default.bottom;\r\nvar LEFT = _axes_constants2.default.left;\r\nvar RIGHT = _axes_constants2.default.right;\r\nvar CENTER = _axes_constants2.default.center;\r\nvar KEEP = \"keep\";\r\nvar SHIFT = \"shift\";\r\nvar RESET = \"reset\";\r\nvar ROTATE = \"rotate\";\r\nvar DEFAULT_AXIS_DIVISION_FACTOR = 50;\r\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 15;\r\nvar SCROLL_THRESHOLD = 5;\r\nvar MIN_BAR_MARGIN = 5;\r\nvar MAX_MARGIN_VALUE = .8;\r\nvar dateIntervals = {\r\n    day: 864e5,\r\n    week: 6048e5\r\n};\r\n\r\nfunction getTickGenerator(options, incidentOccurred, skipTickGeneration, rangeIsEmpty, adjustDivisionFactor, _ref) {\r\n    var allowNegatives = _ref.allowNegatives,\r\n        linearThreshold = _ref.linearThreshold;\r\n    return _tick_generator2.default.tickGenerator({\r\n        axisType: options.type,\r\n        dataType: options.dataType,\r\n        logBase: options.logarithmBase,\r\n        allowNegatives: allowNegatives,\r\n        linearThreshold: linearThreshold,\r\n        axisDivisionFactor: adjustDivisionFactor(options.axisDivisionFactor || DEFAULT_AXIS_DIVISION_FACTOR),\r\n        minorAxisDivisionFactor: adjustDivisionFactor(options.minorAxisDivisionFactor || DEFAULT_MINOR_AXIS_DIVISION_FACTOR),\r\n        numberMultipliers: options.numberMultipliers,\r\n        calculateMinors: options.minorTick.visible || options.minorGrid.visible || options.calculateMinors,\r\n        allowDecimals: options.allowDecimals,\r\n        endOnTick: options.endOnTick,\r\n        incidentOccurred: incidentOccurred,\r\n        firstDayOfWeek: options.workWeek && options.workWeek[0],\r\n        skipTickGeneration: skipTickGeneration,\r\n        skipCalculationLimits: options.skipCalculationLimits,\r\n        generateExtraTick: options.generateExtraTick,\r\n        minTickInterval: options.minTickInterval,\r\n        rangeIsEmpty: rangeIsEmpty\r\n    })\r\n}\r\n\r\nfunction createMajorTick(axis, renderer, skippedCategory) {\r\n    var options = axis.getOptions();\r\n    return (0, _tick.tick)(axis, renderer, options.tick, options.grid, skippedCategory, false)\r\n}\r\n\r\nfunction createMinorTick(axis, renderer) {\r\n    var options = axis.getOptions();\r\n    return (0, _tick.tick)(axis, renderer, options.minorTick, options.minorGrid)\r\n}\r\n\r\nfunction createBoundaryTick(axis, renderer, isFirst) {\r\n    var options = axis.getOptions();\r\n    return (0, _tick.tick)(axis, renderer, (0, _extend.extend)({}, options.tick, {\r\n        visible: options.showCustomBoundaryTicks\r\n    }), options.grid, void 0, false, isFirst ? -1 : 1)\r\n}\r\n\r\nfunction callAction(elements, action, actionArgument1, actionArgument2) {\r\n    (elements || []).forEach(function(e) {\r\n        return e[action](actionArgument1, actionArgument2)\r\n    })\r\n}\r\n\r\nfunction initTickCoords(ticks) {\r\n    callAction(ticks, \"initCoords\")\r\n}\r\n\r\nfunction drawTickMarks(ticks, options) {\r\n    callAction(ticks, \"drawMark\", options)\r\n}\r\n\r\nfunction drawGrids(ticks, drawLine) {\r\n    callAction(ticks, \"drawGrid\", drawLine)\r\n}\r\n\r\nfunction updateTicksPosition(ticks, options, animate) {\r\n    callAction(ticks, \"updateTickPosition\", options, animate)\r\n}\r\n\r\nfunction updateGridsPosition(ticks, animate) {\r\n    callAction(ticks, \"updateGridPosition\", animate)\r\n}\r\nvar measureLabels = exports.measureLabels = function(items) {\r\n    items.forEach(function(item) {\r\n        item.labelBBox = item.label ? item.label.getBBox() : {\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    })\r\n};\r\n\r\nfunction cleanUpInvalidTicks(ticks) {\r\n    var i = ticks.length - 1;\r\n    for (i; i >= 0; i--) {\r\n        if (!removeInvalidTick(ticks, i)) {\r\n            break\r\n        }\r\n    }\r\n    for (i = 0; i < ticks.length; i++) {\r\n        if (removeInvalidTick(ticks, i)) {\r\n            i--\r\n        } else {\r\n            break\r\n        }\r\n    }\r\n}\r\n\r\nfunction removeInvalidTick(ticks, i) {\r\n    if (null === ticks[i].coords.x || null === ticks[i].coords.y) {\r\n        ticks.splice(i, 1);\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction validateAxisOptions(options) {\r\n    var labelOptions = options.label;\r\n    var position = options.position;\r\n    var defaultPosition = options.isHorizontal ? BOTTOM : LEFT;\r\n    var secondaryPosition = options.isHorizontal ? TOP : RIGHT;\r\n    if (position !== defaultPosition && position !== secondaryPosition) {\r\n        position = defaultPosition\r\n    }\r\n    if (position === RIGHT && !labelOptions.userAlignment) {\r\n        labelOptions.alignment = LEFT\r\n    }\r\n    options.position = position;\r\n    options.hoverMode = options.hoverMode ? options.hoverMode.toLowerCase() : \"none\";\r\n    labelOptions.minSpacing = (0, _type.isDefined)(labelOptions.minSpacing) ? labelOptions.minSpacing : DEFAULT_AXIS_LABEL_SPACING;\r\n    options.type && (options.type = options.type.toLowerCase());\r\n    options.argumentType && (options.argumentType = options.argumentType.toLowerCase());\r\n    options.valueType && (options.valueType = options.valueType.toLowerCase())\r\n}\r\n\r\nfunction getOptimalAngle(boxes, labelOpt) {\r\n    var angle = 180 * _math.asin((boxes[0].height + labelOpt.minSpacing) / (boxes[1].x - boxes[0].x)) / _math.PI;\r\n    return angle < 45 ? -45 : -90\r\n}\r\n\r\nfunction updateLabels(ticks, step, func) {\r\n    ticks.forEach(function(tick, index) {\r\n        if (tick.label) {\r\n            if (index % step !== 0) {\r\n                tick.removeLabel()\r\n            } else {\r\n                if (func) {\r\n                    func(tick, index)\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction getZoomBoundValue(optionValue, dataValue) {\r\n    if (void 0 === optionValue) {\r\n        return dataValue\r\n    } else {\r\n        if (null === optionValue) {\r\n            return\r\n        } else {\r\n            return optionValue\r\n        }\r\n    }\r\n}\r\n\r\nfunction configureGenerator(options, axisDivisionFactor, viewPort, screenDelta, minTickInterval) {\r\n    var tickGeneratorOptions = (0, _extend.extend)({}, options, {\r\n        endOnTick: true,\r\n        axisDivisionFactor: axisDivisionFactor,\r\n        skipCalculationLimits: true,\r\n        generateExtraTick: true,\r\n        minTickInterval: minTickInterval\r\n    });\r\n    return function(tickInterval, skipTickGeneration, min, max, breaks) {\r\n        return getTickGenerator(tickGeneratorOptions, _common.noop, skipTickGeneration, viewPort.isEmpty(), function(v) {\r\n            return v\r\n        }, viewPort)({\r\n            min: min,\r\n            max: max,\r\n            categories: viewPort.categories,\r\n            isSpacedMargin: viewPort.isSpacedMargin\r\n        }, screenDelta, tickInterval, (0, _type.isDefined)(tickInterval), void 0, void 0, void 0, breaks)\r\n    }\r\n}\r\n\r\nfunction convertVisualRangeObject(visualRange, optionValue) {\r\n    return _utils2.default.convertVisualRangeObject(visualRange, !_isArray(optionValue))\r\n}\r\n\r\nfunction getConstantLineSharpDirection(coord, axisCanvas) {\r\n    return Math.max(axisCanvas.start, axisCanvas.end) !== coord ? 1 : -1\r\n}\r\nvar calculateCanvasMargins = exports.calculateCanvasMargins = function(bBoxes, canvas) {\r\n    var cLeft = canvas.left;\r\n    var cTop = canvas.top;\r\n    var cRight = canvas.width - canvas.right;\r\n    var cBottom = canvas.height - canvas.bottom;\r\n    return bBoxes.reduce(function(margins, bBox) {\r\n        if (!bBox || bBox.isEmpty) {\r\n            return margins\r\n        }\r\n        return {\r\n            left: _max(margins.left, cLeft - bBox.x),\r\n            top: _max(margins.top, cTop - bBox.y),\r\n            right: _max(margins.right, bBox.x + bBox.width - cRight),\r\n            bottom: _max(margins.bottom, bBox.y + bBox.height - cBottom)\r\n        }\r\n    }, {\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0\r\n    })\r\n};\r\nvar Axis = exports.Axis = function(renderSettings) {\r\n    var that = this;\r\n    that._renderer = renderSettings.renderer;\r\n    that._incidentOccurred = renderSettings.incidentOccurred;\r\n    that._eventTrigger = renderSettings.eventTrigger;\r\n    that._stripsGroup = renderSettings.stripsGroup;\r\n    that._labelAxesGroup = renderSettings.labelAxesGroup;\r\n    that._constantLinesGroup = renderSettings.constantLinesGroup;\r\n    that._scaleBreaksGroup = renderSettings.scaleBreaksGroup;\r\n    that._axesContainerGroup = renderSettings.axesContainerGroup;\r\n    that._gridContainerGroup = renderSettings.gridGroup;\r\n    that._axisCssPrefix = renderSettings.widgetClass + \"-\" + (renderSettings.axisClass ? renderSettings.axisClass + \"-\" : \"\");\r\n    that._setType(renderSettings.axisType, renderSettings.drawingType);\r\n    that._createAxisGroups();\r\n    that._translator = that._createTranslator();\r\n    that.isArgumentAxis = renderSettings.isArgumentAxis;\r\n    that._viewport = {};\r\n    that._firstDrawing = true;\r\n    that._initRange = {}\r\n};\r\nAxis.prototype = {\r\n    constructor: Axis,\r\n    _drawAxis: function() {\r\n        var options = this._options;\r\n        if (!options.visible) {\r\n            return\r\n        }\r\n        this._axisElement = this._createAxisElement();\r\n        this._updateAxisElementPosition();\r\n        this._axisElement.attr({\r\n            \"stroke-width\": options.width,\r\n            stroke: options.color,\r\n            \"stroke-opacity\": options.opacity\r\n        }).sharp(this._getSharpParam(true), this.getAxisSharpDirection()).append(this._axisLineGroup)\r\n    },\r\n    _createPathElement: function(points, attr, sharpDirection) {\r\n        return this.sharp(this._renderer.path(points, \"line\").attr(attr), sharpDirection)\r\n    },\r\n    sharp: function(svgElement) {\r\n        var sharpDirection = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;\r\n        return svgElement.sharp(this._getSharpParam(), sharpDirection)\r\n    },\r\n    getAxisSharpDirection: function() {\r\n        var position = this._options.position;\r\n        return position === TOP || position === LEFT ? 1 : -1\r\n    },\r\n    getSharpDirectionByCoords: function(coords) {\r\n        var canvas = this._getCanvasStartEnd();\r\n        var maxCoord = Math.max(canvas.start, canvas.end);\r\n        return this.getRadius ? 0 : maxCoord !== coords[this._isHorizontal ? \"x\" : \"y\"] ? 1 : -1\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            var grid = that._getGridPoints(tick.coords);\r\n            if (grid.points) {\r\n                return that._createPathElement(grid.points, gridStyle, that.getSharpDirectionByCoords(tick.coords))\r\n            }\r\n            return null\r\n        }\r\n    },\r\n    _getGridPoints: function(coords) {\r\n        var that = this;\r\n        var isHorizontal = this._isHorizontal;\r\n        var tickPositionField = isHorizontal ? \"x\" : \"y\";\r\n        var orthogonalPositions = this._orthogonalPositions;\r\n        var positionFrom = orthogonalPositions.start;\r\n        var positionTo = orthogonalPositions.end;\r\n        var borderOptions = that.borderOptions;\r\n        var canvasStart = isHorizontal ? LEFT : TOP;\r\n        var canvasEnd = isHorizontal ? RIGHT : BOTTOM;\r\n        var axisCanvas = that.getCanvas();\r\n        var canvas = {\r\n            left: axisCanvas.left,\r\n            right: axisCanvas.width - axisCanvas.right,\r\n            top: axisCanvas.top,\r\n            bottom: axisCanvas.height - axisCanvas.bottom\r\n        };\r\n        var firstBorderLinePosition = borderOptions.visible && borderOptions[canvasStart] ? canvas[canvasStart] : void 0;\r\n        var lastBorderLinePosition = borderOptions.visible && borderOptions[canvasEnd] ? canvas[canvasEnd] : void 0;\r\n        var minDelta = MAX_GRID_BORDER_ADHENSION + firstBorderLinePosition;\r\n        var maxDelta = lastBorderLinePosition - MAX_GRID_BORDER_ADHENSION;\r\n        if (that.areCoordsOutsideAxis(coords) || void 0 === coords[tickPositionField] || coords[tickPositionField] < minDelta || coords[tickPositionField] > maxDelta) {\r\n            return {\r\n                points: null\r\n            }\r\n        }\r\n        return {\r\n            points: isHorizontal ? null !== coords[tickPositionField] ? [coords[tickPositionField], positionFrom, coords[tickPositionField], positionTo] : null : null !== coords[tickPositionField] ? [positionFrom, coords[tickPositionField], positionTo, coords[tickPositionField]] : null\r\n        }\r\n    },\r\n    _getConstantLinePos: function(parsedValue, canvasStart, canvasEnd) {\r\n        var value = this._getTranslatedCoord(parsedValue);\r\n        if (!(0, _type.isDefined)(value) || value < _min(canvasStart, canvasEnd) || value > _max(canvasStart, canvasEnd)) {\r\n            return\r\n        }\r\n        return value\r\n    },\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        var positionFrom = this._orthogonalPositions.start;\r\n        var positionTo = this._orthogonalPositions.end;\r\n        return {\r\n            points: this._isHorizontal ? [value, positionFrom, value, positionTo] : [positionFrom, value, positionTo, value]\r\n        }\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr, getConstantLineSharpDirection(value, this._getCanvasStartEnd()))\r\n    },\r\n    _drawConstantLineLabelText: function(text, x, y, _ref2, group) {\r\n        var font = _ref2.font,\r\n            cssClass = _ref2.cssClass;\r\n        return this._renderer.text(text, x, y).css(patchFontOptions((0, _extend.extend)({}, this._options.label.font, font))).attr({\r\n            align: \"center\",\r\n            \"class\": cssClass\r\n        }).append(group)\r\n    },\r\n    _drawConstantLineLabels: function(parsedValue, lineLabelOptions, value, group) {\r\n        var that = this;\r\n        var text = lineLabelOptions.text;\r\n        var options = that._options;\r\n        var labelOptions = options.label;\r\n        var coords;\r\n        that._checkAlignmentConstantLineLabels(lineLabelOptions);\r\n        text = (0, _type.isDefined)(text) ? text : that.formatLabel(parsedValue, labelOptions);\r\n        coords = that._getConstantLineLabelsCoords(value, lineLabelOptions);\r\n        return that._drawConstantLineLabelText(text, coords.x, coords.y, lineLabelOptions, group)\r\n    },\r\n    _getStripPos: function(startValue, endValue, canvasStart, canvasEnd, range) {\r\n        var isContinuous = !!(range.minVisible || range.maxVisible);\r\n        var categories = (range.categories || []).reduce(function(result, cat) {\r\n            result.push(cat.valueOf());\r\n            return result\r\n        }, []);\r\n        var start;\r\n        var end;\r\n        var swap;\r\n        var startCategoryIndex;\r\n        var endCategoryIndex;\r\n        var min = range.minVisible;\r\n        if (!isContinuous) {\r\n            if ((0, _type.isDefined)(startValue) && (0, _type.isDefined)(endValue)) {\r\n                var parsedStartValue = this.parser(startValue);\r\n                var parsedEndValue = this.parser(endValue);\r\n                startCategoryIndex = (0, _array.inArray)((0, _type.isDefined)(parsedStartValue) ? parsedStartValue.valueOf() : void 0, categories);\r\n                endCategoryIndex = (0, _array.inArray)((0, _type.isDefined)(parsedEndValue) ? parsedEndValue.valueOf() : void 0, categories);\r\n                if (startCategoryIndex === -1 || endCategoryIndex === -1) {\r\n                    return {\r\n                        from: 0,\r\n                        to: 0\r\n                    }\r\n                }\r\n                if (startCategoryIndex > endCategoryIndex) {\r\n                    swap = endValue;\r\n                    endValue = startValue;\r\n                    startValue = swap\r\n                }\r\n            }\r\n        }\r\n        if ((0, _type.isDefined)(startValue)) {\r\n            startValue = this.validateUnit(startValue, \"E2105\", \"strip\");\r\n            start = this._getTranslatedCoord(startValue, -1);\r\n            if (!(0, _type.isDefined)(start) && isContinuous) {\r\n                start = startValue < min ? canvasStart : canvasEnd\r\n            }\r\n        } else {\r\n            start = canvasStart\r\n        }\r\n        if ((0, _type.isDefined)(endValue)) {\r\n            endValue = this.validateUnit(endValue, \"E2105\", \"strip\");\r\n            end = this._getTranslatedCoord(endValue, 1);\r\n            if (!(0, _type.isDefined)(end) && isContinuous) {\r\n                end = endValue > min ? canvasEnd : canvasStart\r\n            }\r\n        } else {\r\n            end = canvasEnd\r\n        }\r\n        return start < end ? {\r\n            from: start,\r\n            to: end\r\n        } : {\r\n            from: end,\r\n            to: start\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromPoint, toPoint) {\r\n        var x;\r\n        var y;\r\n        var width;\r\n        var height;\r\n        var orthogonalPositions = this._orthogonalPositions;\r\n        var positionFrom = orthogonalPositions.start;\r\n        var positionTo = orthogonalPositions.end;\r\n        if (this._isHorizontal) {\r\n            x = fromPoint;\r\n            y = _min(positionFrom, positionTo);\r\n            width = toPoint - fromPoint;\r\n            height = _abs(positionFrom - positionTo)\r\n        } else {\r\n            x = _min(positionFrom, positionTo);\r\n            y = fromPoint;\r\n            width = _abs(positionFrom - positionTo);\r\n            height = _abs(fromPoint - toPoint)\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        }\r\n    },\r\n    _createStrip: function(attrs) {\r\n        return this._renderer.rect(attrs.x, attrs.y, attrs.width, attrs.height)\r\n    },\r\n    _adjustStripLabels: function() {\r\n        var that = this;\r\n        this._strips.forEach(function(strip) {\r\n            if (strip.label) {\r\n                strip.label.attr(that._getAdjustedStripLabelCoords(strip))\r\n            }\r\n        })\r\n    },\r\n    _adjustLabelsCoord: function(offset, maxWidth, checkCanvas) {\r\n        var that = this;\r\n        that._majorTicks.forEach(function(tick) {\r\n            if (tick.label) {\r\n                tick.updateMultilineTextAlignment();\r\n                tick.label.attr(that._getLabelAdjustedCoord(tick, offset + (tick.labelOffset || 0), maxWidth, checkCanvas))\r\n            }\r\n        })\r\n    },\r\n    _adjustLabels: function(offset) {\r\n        var that = this;\r\n        var maxSize = that._majorTicks.reduce(function(size, tick) {\r\n            if (!tick.label) {\r\n                return size\r\n            }\r\n            var bBox = tick.labelRotationAngle ? _utils2.default.rotateBBox(tick.labelBBox, [tick.labelCoords.x, tick.labelCoords.y], -tick.labelRotationAngle) : tick.labelBBox;\r\n            return {\r\n                width: _max(size.width || 0, bBox.width),\r\n                height: _max(size.height || 0, bBox.height),\r\n                offset: _max(size.offset || 0, tick.labelOffset || 0)\r\n            }\r\n        }, {});\r\n        var additionalOffset = that._isHorizontal ? maxSize.height : maxSize.width;\r\n        that._adjustLabelsCoord(offset, maxSize.width);\r\n        return offset + additionalOffset + (additionalOffset && that._options.label.indentFromAxis) + maxSize.offset\r\n    },\r\n    _getLabelAdjustedCoord: function(tick, offset, maxWidth) {\r\n        offset = offset || 0;\r\n        var that = this;\r\n        var options = that._options;\r\n        var box = _utils2.default.rotateBBox(tick.labelBBox, [tick.labelCoords.x, tick.labelCoords.y], -tick.labelRotationAngle || 0);\r\n        var position = options.position;\r\n        var textAlign = tick.labelAlignment || options.label.alignment;\r\n        var isDiscrete = \"discrete\" === that._options.type;\r\n        var isFlatLabel = tick.labelRotationAngle % 90 === 0;\r\n        var indentFromAxis = options.label.indentFromAxis;\r\n        var axisPosition = that._axisPosition;\r\n        var labelCoords = tick.labelCoords;\r\n        var labelX = labelCoords.x;\r\n        var translateX;\r\n        var translateY;\r\n        if (that._isHorizontal) {\r\n            if (position === BOTTOM) {\r\n                translateY = axisPosition + indentFromAxis - box.y + offset\r\n            } else {\r\n                translateY = axisPosition - indentFromAxis - (box.y + box.height) - offset\r\n            }\r\n            if (textAlign === RIGHT) {\r\n                translateX = isDiscrete && isFlatLabel ? tick.coords.x - (box.x + box.width) : labelX - box.x - box.width\r\n            } else {\r\n                if (textAlign === LEFT) {\r\n                    translateX = isDiscrete && isFlatLabel ? labelX - box.x - (tick.coords.x - labelX) : labelX - box.x\r\n                } else {\r\n                    translateX = labelX - box.x - box.width / 2\r\n                }\r\n            }\r\n        } else {\r\n            translateY = labelCoords.y - box.y - box.height / 2;\r\n            if (position === LEFT) {\r\n                if (textAlign === LEFT) {\r\n                    translateX = axisPosition - indentFromAxis - maxWidth - box.x\r\n                } else {\r\n                    if (textAlign === CENTER) {\r\n                        translateX = axisPosition - indentFromAxis - maxWidth / 2 - box.x - box.width / 2\r\n                    } else {\r\n                        translateX = axisPosition - indentFromAxis - box.x - box.width\r\n                    }\r\n                }\r\n                translateX -= offset\r\n            } else {\r\n                if (textAlign === RIGHT) {\r\n                    translateX = axisPosition + indentFromAxis + maxWidth - box.x - box.width\r\n                } else {\r\n                    if (textAlign === CENTER) {\r\n                        translateX = axisPosition + indentFromAxis + maxWidth / 2 - box.x - box.width / 2\r\n                    } else {\r\n                        translateX = axisPosition + indentFromAxis - box.x\r\n                    }\r\n                }\r\n                translateX += offset\r\n            }\r\n        }\r\n        return {\r\n            translateX: translateX,\r\n            translateY: translateY\r\n        }\r\n    },\r\n    _createAxisConstantLineGroups: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var classSelector = that._axisCssPrefix;\r\n        var constantLinesClass = classSelector + \"constant-lines\";\r\n        var insideGroup;\r\n        var outsideGroup1;\r\n        var outsideGroup2;\r\n        insideGroup = renderer.g().attr({\r\n            \"class\": constantLinesClass\r\n        });\r\n        outsideGroup1 = renderer.g().attr({\r\n            \"class\": constantLinesClass\r\n        });\r\n        outsideGroup2 = renderer.g().attr({\r\n            \"class\": constantLinesClass\r\n        });\r\n        return {\r\n            inside: insideGroup,\r\n            outside1: outsideGroup1,\r\n            left: outsideGroup1,\r\n            top: outsideGroup1,\r\n            outside2: outsideGroup2,\r\n            right: outsideGroup2,\r\n            bottom: outsideGroup2,\r\n            remove: function() {\r\n                this.inside.remove();\r\n                this.outside1.remove();\r\n                this.outside2.remove()\r\n            },\r\n            clear: function() {\r\n                this.inside.clear();\r\n                this.outside1.clear();\r\n                this.outside2.clear()\r\n            }\r\n        }\r\n    },\r\n    _createAxisGroups: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var classSelector = that._axisCssPrefix;\r\n        that._axisGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"axis\"\r\n        });\r\n        that._axisStripGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"strips\"\r\n        });\r\n        that._axisGridGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"grid\"\r\n        });\r\n        that._axisElementsGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"elements\"\r\n        }).append(that._axisGroup);\r\n        that._axisLineGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"line\"\r\n        }).append(that._axisGroup);\r\n        that._axisTitleGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"title\"\r\n        }).append(that._axisGroup);\r\n        that._axisConstantLineGroups = {\r\n            above: that._createAxisConstantLineGroups(),\r\n            under: that._createAxisConstantLineGroups()\r\n        };\r\n        that._axisStripLabelGroup = renderer.g().attr({\r\n            \"class\": classSelector + \"axis-labels\"\r\n        })\r\n    },\r\n    _clearAxisGroups: function() {\r\n        var that = this;\r\n        that._axisGroup.remove();\r\n        that._axisStripGroup.remove();\r\n        that._axisStripLabelGroup.remove();\r\n        that._axisConstantLineGroups.above.remove();\r\n        that._axisConstantLineGroups.under.remove();\r\n        that._axisGridGroup.remove();\r\n        that._axisTitleGroup.clear();\r\n        that._axisElementsGroup.clear();\r\n        that._axisLineGroup && that._axisLineGroup.clear();\r\n        that._axisStripGroup && that._axisStripGroup.clear();\r\n        that._axisGridGroup && that._axisGridGroup.clear();\r\n        that._axisConstantLineGroups.above.clear();\r\n        that._axisConstantLineGroups.under.clear();\r\n        that._axisStripLabelGroup && that._axisStripLabelGroup.clear()\r\n    },\r\n    _getLabelFormatObject: function(value, labelOptions, range, point, tickInterval, ticks) {\r\n        range = range || this._getViewportRange();\r\n        var formatObject = {\r\n            value: value,\r\n            valueText: (0, _smart_formatter.smartFormatter)(value, {\r\n                labelOptions: labelOptions,\r\n                ticks: ticks || convertTicksToValues(this._majorTicks),\r\n                tickInterval: (0, _type.isDefined)(tickInterval) ? tickInterval : this._tickInterval,\r\n                dataType: this._options.dataType,\r\n                logarithmBase: this._options.logarithmBase,\r\n                type: this._options.type,\r\n                showTransition: !this._options.marker.visible,\r\n                point: point\r\n            }) || \"\",\r\n            min: range.minVisible,\r\n            max: range.maxVisible\r\n        };\r\n        if (point) {\r\n            formatObject.point = point\r\n        }\r\n        return formatObject\r\n    },\r\n    formatLabel: function(value, labelOptions, range, point, tickInterval, ticks) {\r\n        var formatObject = this._getLabelFormatObject(value, labelOptions, range, point, tickInterval, ticks);\r\n        return (0, _type.isFunction)(labelOptions.customizeText) ? labelOptions.customizeText.call(formatObject, formatObject) : formatObject.valueText\r\n    },\r\n    formatHint: function(value, labelOptions, range) {\r\n        var formatObject = this._getLabelFormatObject(value, labelOptions, range);\r\n        return (0, _type.isFunction)(labelOptions.customizeHint) ? labelOptions.customizeHint.call(formatObject, formatObject) : void 0\r\n    },\r\n    formatRange: function(startValue, endValue, interval) {\r\n        return (0, _smart_formatter.formatRange)(startValue, endValue, interval, this.getOptions())\r\n    },\r\n    _setTickOffset: function() {\r\n        var options = this._options;\r\n        var discreteAxisDivisionMode = options.discreteAxisDivisionMode;\r\n        this._tickOffset = +(\"crossLabels\" !== discreteAxisDivisionMode || !discreteAxisDivisionMode)\r\n    },\r\n    getMargins: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var position = options.position;\r\n        var placeholderSize = options.placeholderSize;\r\n        var canvas = that.getCanvas();\r\n        var cLeft = canvas.left;\r\n        var cTop = canvas.top;\r\n        var cRight = canvas.width - canvas.right;\r\n        var cBottom = canvas.height - canvas.bottom;\r\n        var edgeMarginCorrection = _max(options.grid.visible && options.grid.width || 0, options.tick.visible && options.tick.width || 0);\r\n        var constantLineAboveSeries = that._axisConstantLineGroups.above;\r\n        var constantLineUnderSeries = that._axisConstantLineGroups.under;\r\n        var boxes = [that._axisElementsGroup, constantLineAboveSeries.outside1, constantLineAboveSeries.outside2, constantLineUnderSeries.outside1, constantLineUnderSeries.outside2, that._axisLineGroup].map(function(group) {\r\n            return group && group.getBBox()\r\n        }).concat(function(group) {\r\n            var box = group && group.getBBox();\r\n            if (!box || box.isEmpty) {\r\n                return box\r\n            }\r\n            if (that._isHorizontal) {\r\n                box.x = cLeft;\r\n                box.width = cRight - cLeft\r\n            } else {\r\n                box.y = cTop;\r\n                box.height = cBottom - cTop\r\n            }\r\n            return box\r\n        }(that._axisTitleGroup));\r\n        var margins = calculateCanvasMargins(boxes, canvas);\r\n        margins[position] += options.crosshairMargin;\r\n        if (placeholderSize) {\r\n            margins[position] = placeholderSize\r\n        }\r\n        if (edgeMarginCorrection) {\r\n            if (that._isHorizontal && canvas.right < edgeMarginCorrection && margins.right < edgeMarginCorrection) {\r\n                margins.right = edgeMarginCorrection\r\n            }\r\n            if (!that._isHorizontal && canvas.bottom < edgeMarginCorrection && margins.bottom < edgeMarginCorrection) {\r\n                margins.bottom = edgeMarginCorrection\r\n            }\r\n        }\r\n        return margins\r\n    },\r\n    validateUnit: function(unit, idError, parameters) {\r\n        var that = this;\r\n        unit = that.parser(unit);\r\n        if (void 0 === unit && idError) {\r\n            that._incidentOccurred(idError, [parameters])\r\n        }\r\n        return unit\r\n    },\r\n    _setType: function(axisType, drawingType) {\r\n        var that = this;\r\n        var axisTypeMethods;\r\n        switch (axisType) {\r\n            case \"xyAxes\":\r\n                axisTypeMethods = _xy_axes2.default;\r\n                break;\r\n            case \"polarAxes\":\r\n                axisTypeMethods = _polar_axes2.default\r\n        }(0, _extend.extend)(that, axisTypeMethods[drawingType])\r\n    },\r\n    _getSharpParam: function() {\r\n        return true\r\n    },\r\n    _disposeBreaksGroup: _common.noop,\r\n    dispose: function() {\r\n        var that = this;\r\n        [that._axisElementsGroup, that._axisStripGroup, that._axisGroup].forEach(function(g) {\r\n            g.dispose()\r\n        });\r\n        that._strips = that._title = null;\r\n        that._axisStripGroup = that._axisConstantLineGroups = that._axisStripLabelGroup = that._axisBreaksGroup = null;\r\n        that._axisLineGroup = that._axisElementsGroup = that._axisGridGroup = null;\r\n        that._axisGroup = that._axisTitleGroup = null;\r\n        that._axesContainerGroup = that._stripsGroup = that._constantLinesGroup = null;\r\n        that._renderer = that._options = that._textOptions = that._textFontStyles = null;\r\n        that._translator = null;\r\n        that._majorTicks = that._minorTicks = null;\r\n        that._disposeBreaksGroup()\r\n    },\r\n    getOptions: function() {\r\n        return this._options\r\n    },\r\n    setPane: function(pane) {\r\n        this.pane = pane;\r\n        this._options.pane = pane\r\n    },\r\n    setTypes: function(type, axisType, typeSelector) {\r\n        this._options.type = type || this._options.type;\r\n        this._options[typeSelector] = axisType || this._options[typeSelector];\r\n        this._updateTranslator()\r\n    },\r\n    resetTypes: function(typeSelector) {\r\n        this._options.type = this._initTypes.type;\r\n        this._options[typeSelector] = this._initTypes[typeSelector]\r\n    },\r\n    getTranslator: function() {\r\n        return this._translator\r\n    },\r\n    updateOptions: function(options) {\r\n        var that = this;\r\n        var labelOpt = options.label;\r\n        validateAxisOptions(options);\r\n        that._options = options;\r\n        options.tick = options.tick || {};\r\n        options.minorTick = options.minorTick || {};\r\n        options.grid = options.grid || {};\r\n        options.minorGrid = options.minorGrid || {};\r\n        options.title = options.title || {};\r\n        options.marker = options.marker || {};\r\n        that._initTypes = {\r\n            type: options.type,\r\n            argumentType: options.argumentType,\r\n            valueType: options.valueType\r\n        };\r\n        that._setTickOffset();\r\n        that._isHorizontal = options.isHorizontal;\r\n        that.pane = options.pane;\r\n        that.name = options.name;\r\n        that.priority = options.priority;\r\n        that._hasLabelFormat = \"\" !== labelOpt.format && (0, _type.isDefined)(labelOpt.format);\r\n        that._textOptions = {\r\n            opacity: labelOpt.opacity,\r\n            align: \"center\",\r\n            \"class\": labelOpt.cssClass\r\n        };\r\n        that._textFontStyles = _utils2.default.patchFontOptions(labelOpt.font);\r\n        if (options.type === _axes_constants2.default.logarithmic) {\r\n            if (options.logarithmBaseError) {\r\n                that._incidentOccurred(\"E2104\");\r\n                delete options.logarithmBaseError\r\n            }\r\n        }\r\n        that._updateTranslator();\r\n        that._createConstantLines();\r\n        that._strips = (options.strips || []).map(function(o) {\r\n            return (0, _strip2.default)(that, o)\r\n        });\r\n        that._majorTicks = that._minorTicks = null;\r\n        that._firstDrawing = true\r\n    },\r\n    calculateInterval: function(value, prevValue) {\r\n        var options = this._options;\r\n        if (!options || options.type !== _axes_constants2.default.logarithmic) {\r\n            return _abs(value - prevValue)\r\n        }\r\n        var _Range = new _range.Range(this.getTranslator().getBusinessRange()),\r\n            allowNegatives = _Range.allowNegatives,\r\n            linearThreshold = _Range.linearThreshold;\r\n        return _abs(getLog(value, options.logarithmBase, allowNegatives, linearThreshold) - getLog(prevValue, options.logarithmBase, allowNegatives, linearThreshold))\r\n    },\r\n    _processCanvas: function(canvas) {\r\n        return canvas\r\n    },\r\n    updateCanvas: function(canvas) {\r\n        var positions = this._orthogonalPositions = {\r\n            start: !this._isHorizontal ? canvas.left : canvas.top,\r\n            end: !this._isHorizontal ? canvas.width - canvas.right : canvas.height - canvas.bottom\r\n        };\r\n        this._canvas = canvas;\r\n        positions.center = positions.start + (positions.end - positions.start) / 2;\r\n        this._translator.updateCanvas(this._processCanvas(canvas));\r\n        this._initAxisPositions()\r\n    },\r\n    getCanvas: function() {\r\n        return this._canvas\r\n    },\r\n    getAxisShift: function() {\r\n        return this._axisShift || 0\r\n    },\r\n    hideTitle: function() {\r\n        var that = this;\r\n        if (that._options.title.text) {\r\n            that._incidentOccurred(\"W2105\", [that._isHorizontal ? \"horizontal\" : \"vertical\"]);\r\n            that._axisTitleGroup.clear()\r\n        }\r\n    },\r\n    getTitle: function() {\r\n        return this._title\r\n    },\r\n    hideOuterElements: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        if ((options.label.visible || that._outsideConstantLines.length) && !that._translator.getBusinessRange().isEmpty()) {\r\n            that._incidentOccurred(\"W2106\", [that._isHorizontal ? \"horizontal\" : \"vertical\"]);\r\n            that._axisElementsGroup.clear();\r\n            callAction(that._outsideConstantLines, \"removeLabel\")\r\n        }\r\n    },\r\n    adjustViewport: function(businessRange) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var isDiscrete = options.type === _axes_constants2.default.discrete;\r\n        var categories = that._seriesData && that._seriesData.categories || [];\r\n        var wholeRange = that.adjustRange(getVizRangeObject(options.wholeRange));\r\n        var visualRange = that.getViewport() || {};\r\n        var result = new _range.Range(businessRange);\r\n        that._addConstantLinesToRange(result, \"minVisible\", \"maxVisible\");\r\n        var minDefined = (0, _type.isDefined)(visualRange.startValue);\r\n        var maxDefined = (0, _type.isDefined)(visualRange.endValue);\r\n        if (!isDiscrete) {\r\n            minDefined = minDefined && (!(0, _type.isDefined)(wholeRange.endValue) || visualRange.startValue < wholeRange.endValue);\r\n            maxDefined = maxDefined && (!(0, _type.isDefined)(wholeRange.startValue) || visualRange.endValue > wholeRange.startValue)\r\n        }\r\n        var minVisible = minDefined ? visualRange.startValue : result.minVisible;\r\n        var maxVisible = maxDefined ? visualRange.endValue : result.maxVisible;\r\n        if (!isDiscrete) {\r\n            result.min = (0, _type.isDefined)(wholeRange.startValue) ? wholeRange.startValue : result.min;\r\n            result.max = (0, _type.isDefined)(wholeRange.endValue) ? wholeRange.endValue : result.max\r\n        } else {\r\n            var categoriesInfo = _utils2.default.getCategoriesInfo(categories, wholeRange.startValue, wholeRange.endValue);\r\n            categories = categoriesInfo.categories;\r\n            result.categories = categories\r\n        }\r\n        var adjustedVisualRange = _utils2.default.adjustVisualRange({\r\n            axisType: options.type,\r\n            dataType: options.dataType,\r\n            base: options.logarithmBase\r\n        }, {\r\n            startValue: minDefined ? visualRange.startValue : void 0,\r\n            endValue: maxDefined ? visualRange.endValue : void 0,\r\n            length: visualRange.length\r\n        }, {\r\n            categories: categories,\r\n            min: wholeRange.startValue,\r\n            max: wholeRange.endValue\r\n        }, {\r\n            categories: categories,\r\n            min: minVisible,\r\n            max: maxVisible\r\n        });\r\n        result.minVisible = adjustedVisualRange.startValue;\r\n        result.maxVisible = adjustedVisualRange.endValue;\r\n        !(0, _type.isDefined)(result.min) && (result.min = result.minVisible);\r\n        !(0, _type.isDefined)(result.max) && (result.max = result.maxVisible);\r\n        result.addRange({});\r\n        return result\r\n    },\r\n    adjustRange: function(range) {\r\n        range = range || {};\r\n        var isDiscrete = this._options.type === _axes_constants2.default.discrete;\r\n        var isLogarithmic = this._options.type === _axes_constants2.default.logarithmic;\r\n        var disabledNegatives = false === this._options.allowNegatives;\r\n        if (isLogarithmic) {\r\n            range.startValue = disabledNegatives && range.startValue <= 0 ? null : range.startValue;\r\n            range.endValue = disabledNegatives && range.endValue <= 0 ? null : range.endValue\r\n        }\r\n        if (!isDiscrete && (0, _type.isDefined)(range.startValue) && (0, _type.isDefined)(range.endValue) && range.startValue > range.endValue) {\r\n            var tmp = range.endValue;\r\n            range.endValue = range.startValue;\r\n            range.startValue = tmp\r\n        }\r\n        return range\r\n    },\r\n    _getVisualRangeUpdateMode: function(viewport, newRange, oppositeValue) {\r\n        var value = this._options.visualRangeUpdateMode;\r\n        var translator = this._translator;\r\n        var range = this._seriesData;\r\n        if (this.isArgumentAxis) {\r\n            if ([SHIFT, KEEP, RESET].indexOf(value) === -1) {\r\n                if (range.axisType === _axes_constants2.default.discrete) {\r\n                    var categories = range.categories;\r\n                    var newCategories = newRange.categories;\r\n                    var visualRange = this.visualRange();\r\n                    if (categories && newCategories && categories.length && newCategories.map(function(c) {\r\n                            return c.valueOf()\r\n                        }).join(\",\").indexOf(categories.map(function(c) {\r\n                            return c.valueOf()\r\n                        }).join(\",\")) !== -1 && (visualRange.startValue.valueOf() !== categories[0].valueOf() || visualRange.endValue.valueOf() !== categories[categories.length - 1].valueOf())) {\r\n                        value = KEEP\r\n                    } else {\r\n                        value = RESET\r\n                    }\r\n                } else {\r\n                    var minPoint = translator.translate(range.min);\r\n                    var minVisiblePoint = translator.translate(viewport.startValue);\r\n                    var maxPoint = translator.translate(range.max);\r\n                    var maxVisiblePoint = translator.translate(viewport.endValue);\r\n                    if (minPoint === minVisiblePoint && maxPoint === maxVisiblePoint) {\r\n                        value = RESET\r\n                    } else {\r\n                        if (minPoint !== minVisiblePoint && maxPoint === maxVisiblePoint) {\r\n                            value = SHIFT\r\n                        } else {\r\n                            value = KEEP\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if ([KEEP, RESET].indexOf(value) === -1) {\r\n                if (oppositeValue === KEEP) {\r\n                    value = KEEP\r\n                } else {\r\n                    value = RESET\r\n                }\r\n            }\r\n        }\r\n        return value\r\n    },\r\n    _handleBusinessRangeChanged: function(oppositeVisualRangeUpdateMode, axisReinitialized, newRange) {\r\n        var that = this;\r\n        var visualRange = this.visualRange();\r\n        if (axisReinitialized || that._translator.getBusinessRange().isEmpty()) {\r\n            return\r\n        }\r\n        var visualRangeUpdateMode = that._lastVisualRangeUpdateMode = that._getVisualRangeUpdateMode(visualRange, newRange, oppositeVisualRangeUpdateMode);\r\n        if (!that.isArgumentAxis) {\r\n            var viewport = that.getViewport();\r\n            if (!(0, _type.isDefined)(viewport.startValue) && !(0, _type.isDefined)(viewport.endValue) && !(0, _type.isDefined)(viewport.length)) {\r\n                visualRangeUpdateMode = RESET\r\n            }\r\n        }\r\n        that._prevDataWasEmpty && (visualRangeUpdateMode = KEEP);\r\n        if (visualRangeUpdateMode === KEEP) {\r\n            that._setVisualRange([visualRange.startValue, visualRange.endValue])\r\n        }\r\n        if (visualRangeUpdateMode === RESET) {\r\n            that._setVisualRange([null, null])\r\n        }\r\n        if (visualRangeUpdateMode === SHIFT) {\r\n            that._setVisualRange({\r\n                length: that.getVisualRangeLength()\r\n            })\r\n        }\r\n    },\r\n    getVisualRangeLength: function(range) {\r\n        var currentBusinessRange = range || this._translator.getBusinessRange();\r\n        var type = this._options.type;\r\n        var length;\r\n        if (type === _axes_constants2.default.logarithmic) {\r\n            length = (0, _math2.adjust)(this.calculateInterval(currentBusinessRange.maxVisible, currentBusinessRange.minVisible))\r\n        } else {\r\n            if (type === _axes_constants2.default.discrete) {\r\n                var categoriesInfo = _utils2.default.getCategoriesInfo(currentBusinessRange.categories, currentBusinessRange.minVisible, currentBusinessRange.maxVisible);\r\n                length = categoriesInfo.categories.length\r\n            } else {\r\n                length = currentBusinessRange.maxVisible - currentBusinessRange.minVisible\r\n            }\r\n        }\r\n        return length\r\n    },\r\n    getVisualRangeCenter: function(range) {\r\n        var businessRange = this._translator.getBusinessRange();\r\n        var currentBusinessRange = range || businessRange;\r\n        var _this$_options = this._options,\r\n            type = _this$_options.type,\r\n            logarithmBase = _this$_options.logarithmBase;\r\n        var center;\r\n        if (!(0, _type.isDefined)(currentBusinessRange.minVisible) || !(0, _type.isDefined)(currentBusinessRange.maxVisible)) {\r\n            return\r\n        }\r\n        if (type === _axes_constants2.default.logarithmic) {\r\n            var allowNegatives = currentBusinessRange.allowNegatives,\r\n                linearThreshold = currentBusinessRange.linearThreshold,\r\n                minVisible = currentBusinessRange.minVisible,\r\n                maxVisible = currentBusinessRange.maxVisible;\r\n            center = raiseTo((0, _math2.adjust)(getLog(maxVisible, logarithmBase, allowNegatives, linearThreshold) + getLog(minVisible, logarithmBase, allowNegatives, linearThreshold)) / 2, logarithmBase, allowNegatives, linearThreshold)\r\n        } else {\r\n            if (type === _axes_constants2.default.discrete) {\r\n                var categoriesInfo = _utils2.default.getCategoriesInfo(currentBusinessRange.categories, currentBusinessRange.minVisible, currentBusinessRange.maxVisible);\r\n                var index = Math.ceil(categoriesInfo.categories.length / 2) - 1;\r\n                center = businessRange.categories.indexOf(categoriesInfo.categories[index])\r\n            } else {\r\n                center = (currentBusinessRange.maxVisible.valueOf() + currentBusinessRange.minVisible.valueOf()) / 2\r\n            }\r\n        }\r\n        return center\r\n    },\r\n    setBusinessRange: function(range, axisReinitialized, oppositeVisualRangeUpdateMode, argCategories) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var isDiscrete = options.type === _axes_constants2.default.discrete;\r\n        that._handleBusinessRangeChanged(oppositeVisualRangeUpdateMode, axisReinitialized, range);\r\n        that._seriesData = new _range.Range(range);\r\n        var dataIsEmpty = that._seriesData.isEmpty();\r\n        that._prevDataWasEmpty = dataIsEmpty;\r\n        that._seriesData.addRange({\r\n            categories: options.categories,\r\n            dataType: options.dataType,\r\n            axisType: options.type,\r\n            base: options.logarithmBase,\r\n            invert: options.inverted\r\n        });\r\n        if (options.type === _axes_constants2.default.logarithmic) {\r\n            that._seriesData.addRange({\r\n                allowNegatives: void 0 !== options.allowNegatives ? options.allowNegatives : range.min <= 0\r\n            });\r\n            if (!isNaN(options.linearThreshold)) {\r\n                that._seriesData.linearThreshold = options.linearThreshold\r\n            }\r\n        }\r\n        if (!isDiscrete) {\r\n            if (!(0, _type.isDefined)(that._seriesData.min) && !(0, _type.isDefined)(that._seriesData.max)) {\r\n                var visualRange = that.getViewport();\r\n                visualRange && that._seriesData.addRange({\r\n                    min: visualRange.startValue,\r\n                    max: visualRange.endValue\r\n                })\r\n            }\r\n            var synchronizedValue = options.synchronizedValue;\r\n            if ((0, _type.isDefined)(synchronizedValue)) {\r\n                that._seriesData.addRange({\r\n                    min: synchronizedValue,\r\n                    max: synchronizedValue\r\n                })\r\n            }\r\n        }\r\n        that._seriesData.minVisible = void 0 === that._seriesData.minVisible ? that._seriesData.min : that._seriesData.minVisible;\r\n        that._seriesData.maxVisible = void 0 === that._seriesData.maxVisible ? that._seriesData.max : that._seriesData.maxVisible;\r\n        if (!that.isArgumentAxis && options.showZero) {\r\n            that._seriesData.correctValueZeroLevel()\r\n        }\r\n        that._seriesData.sortCategories(that.getCategoriesSorter(argCategories));\r\n        that._seriesData.breaks = that._breaks = that._getScaleBreaks(options, that._seriesData, that._series, that.isArgumentAxis);\r\n        that._translator.updateBusinessRange(that.adjustViewport(that._seriesData))\r\n    },\r\n    _addConstantLinesToRange: function(dataRange, minValueField, maxValueField) {\r\n        this._outsideConstantLines.concat(this._insideConstantLines || []).forEach(function(cl) {\r\n            if (cl.options.extendAxis) {\r\n                var _dataRange$addRange;\r\n                var value = cl.getParsedValue();\r\n                dataRange.addRange((_dataRange$addRange = {}, _defineProperty(_dataRange$addRange, minValueField, value), _defineProperty(_dataRange$addRange, maxValueField, value), _dataRange$addRange))\r\n            }\r\n        })\r\n    },\r\n    setGroupSeries: function(series) {\r\n        this._series = series\r\n    },\r\n    getLabelsPosition: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var position = options.position;\r\n        var labelShift = options.label.indentFromAxis + (that._axisShift || 0) + that._constantLabelOffset;\r\n        var axisPosition = that._axisPosition;\r\n        return position === TOP || position === LEFT ? axisPosition - labelShift : axisPosition + labelShift\r\n    },\r\n    getFormattedValue: function(value, options, point) {\r\n        var labelOptions = this._options.label;\r\n        return (0, _type.isDefined)(value) ? this.formatLabel(value, (0, _extend.extend)(true, {}, labelOptions, options), void 0, point) : null\r\n    },\r\n    _getBoundaryTicks: function(majors, viewPort) {\r\n        var that = this;\r\n        var length = majors.length;\r\n        var options = that._options;\r\n        var customBounds = options.customBoundTicks;\r\n        var min = viewPort.minVisible;\r\n        var max = viewPort.maxVisible;\r\n        var addMinMax = options.showCustomBoundaryTicks ? that._boundaryTicksVisibility : {};\r\n        var boundaryTicks = [];\r\n        if (options.type === _axes_constants2.default.discrete) {\r\n            if (that._tickOffset && 0 !== majors.length) {\r\n                boundaryTicks = [majors[0], majors[majors.length - 1]]\r\n            }\r\n        } else {\r\n            if (customBounds) {\r\n                if (addMinMax.min && (0, _type.isDefined)(customBounds[0])) {\r\n                    boundaryTicks.push(customBounds[0])\r\n                }\r\n                if (addMinMax.max && (0, _type.isDefined)(customBounds[1])) {\r\n                    boundaryTicks.push(customBounds[1])\r\n                }\r\n            } else {\r\n                if (addMinMax.min && (0 === length || majors[0] > min)) {\r\n                    boundaryTicks.push(min)\r\n                }\r\n                if (addMinMax.max && (0 === length || majors[length - 1] < max)) {\r\n                    boundaryTicks.push(max)\r\n                }\r\n            }\r\n        }\r\n        return boundaryTicks\r\n    },\r\n    setPercentLabelFormat: function() {\r\n        if (!this._hasLabelFormat) {\r\n            this._options.label.format = \"percent\"\r\n        }\r\n    },\r\n    resetAutoLabelFormat: function() {\r\n        if (!this._hasLabelFormat) {\r\n            delete this._options.label.format\r\n        }\r\n    },\r\n    getMultipleAxesSpacing: function() {\r\n        return this._options.multipleAxesSpacing || 0\r\n    },\r\n    getTicksValues: function() {\r\n        return {\r\n            majorTicksValues: convertTicksToValues(this._majorTicks),\r\n            minorTicksValues: convertTicksToValues(this._minorTicks)\r\n        }\r\n    },\r\n    setTicks: function(ticks) {\r\n        var majors = ticks.majorTicks || [];\r\n        this._majorTicks = majors.map(createMajorTick(this, this._renderer, this._getSkippedCategory(majors)));\r\n        this._minorTicks = (ticks.minorTicks || []).map(createMinorTick(this, this._renderer));\r\n        this._isSynchronized = true\r\n    },\r\n    _adjustDivisionFactor: function(val) {\r\n        return val\r\n    },\r\n    _getTicks: function(viewPort, incidentOccurred, skipTickGeneration) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var customTicks = options.customTicks;\r\n        var customMinorTicks = options.customMinorTicks;\r\n        return getTickGenerator(options, incidentOccurred || that._incidentOccurred, skipTickGeneration, that._translator.getBusinessRange().isEmpty(), that._adjustDivisionFactor.bind(that), viewPort)({\r\n            min: viewPort.minVisible,\r\n            max: viewPort.maxVisible,\r\n            categories: viewPort.categories,\r\n            isSpacedMargin: viewPort.isSpacedMargin\r\n        }, that._getScreenDelta(), options.tickInterval, \"ignore\" === options.label.overlappingBehavior || options.forceUserTickInterval, {\r\n            majors: customTicks,\r\n            minors: customMinorTicks\r\n        }, options.minorTickInterval, options.minorTickCount, that._breaks)\r\n    },\r\n    _createTicksAndLabelFormat: function(range, incidentOccurred) {\r\n        var options = this._options;\r\n        var ticks = this._getTicks(range, incidentOccurred, false);\r\n        if (!range.isEmpty() && options.type === _axes_constants2.default.discrete && \"datetime\" === options.dataType && !this._hasLabelFormat && ticks.ticks.length) {\r\n            options.label.format = _format_helper2.default.getDateFormatByTicks(ticks.ticks)\r\n        }\r\n        return ticks\r\n    },\r\n    getAggregationInfo: function(useAllAggregatedPoints, range) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var marginOptions = that._marginOptions;\r\n        var businessRange = new _range.Range(that.getTranslator().getBusinessRange()).addRange(range);\r\n        var visualRange = that.getViewport();\r\n        var minVisible = visualRange && (0, _type.isDefined)(visualRange.startValue) ? visualRange.startValue : businessRange.minVisible;\r\n        var maxVisible = visualRange && (0, _type.isDefined)(visualRange.endValue) ? visualRange.endValue : businessRange.maxVisible;\r\n        var ticks = [];\r\n        if (options.type === _axes_constants2.default.discrete && options.aggregateByCategory) {\r\n            return {\r\n                aggregateByCategory: true\r\n            }\r\n        }\r\n        var aggregationInterval = options.aggregationInterval;\r\n        var aggregationGroupWidth = options.aggregationGroupWidth;\r\n        if (!aggregationGroupWidth && marginOptions) {\r\n            if (marginOptions.checkInterval) {\r\n                aggregationGroupWidth = options.axisDivisionFactor\r\n            }\r\n            if (marginOptions.sizePointNormalState) {\r\n                aggregationGroupWidth = Math.min(marginOptions.sizePointNormalState, options.axisDivisionFactor)\r\n            }\r\n        }\r\n        var minInterval = !options.aggregationGroupWidth && !aggregationInterval && range.interval;\r\n        var generateTicks = configureGenerator(options, aggregationGroupWidth, businessRange, that._getScreenDelta(), minInterval);\r\n        var tickInterval = generateTicks(aggregationInterval, true, minVisible, maxVisible, that._breaks).tickInterval;\r\n        if (options.type !== _axes_constants2.default.discrete) {\r\n            var min = useAllAggregatedPoints ? businessRange.min : minVisible;\r\n            var max = useAllAggregatedPoints ? businessRange.max : maxVisible;\r\n            if ((0, _type.isDefined)(min) && (0, _type.isDefined)(max)) {\r\n                var add = _utils2.default.getAddFunction({\r\n                    base: options.logarithmBase,\r\n                    axisType: options.type,\r\n                    dataType: options.dataType\r\n                }, false);\r\n                var start = min;\r\n                var end = max;\r\n                if (!useAllAggregatedPoints) {\r\n                    var maxMinDistance = Math.max(that.calculateInterval(max, min), \"datetime\" === options.dataType ? (0, _date.dateToMilliseconds)(tickInterval) : tickInterval);\r\n                    start = add(min, maxMinDistance, -1);\r\n                    end = add(max, maxMinDistance)\r\n                }\r\n                start = start < businessRange.min ? businessRange.min : start;\r\n                end = end > businessRange.max ? businessRange.max : end;\r\n                var breaks = that._getScaleBreaks(options, {\r\n                    minVisible: start,\r\n                    maxVisible: end\r\n                }, that._series, that.isArgumentAxis);\r\n                ticks = generateTicks(tickInterval, false, start, end, breaks).ticks\r\n            }\r\n        }\r\n        that._aggregationInterval = tickInterval;\r\n        return {\r\n            interval: tickInterval,\r\n            ticks: ticks\r\n        }\r\n    },\r\n    createTicks: function(canvas) {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var options = that._options;\r\n        if (!canvas) {\r\n            return\r\n        }\r\n        that._isSynchronized = false;\r\n        that.updateCanvas(canvas);\r\n        that._estimatedTickInterval = that._getTicks(that.adjustViewport(this._seriesData), _common.noop, true).tickInterval;\r\n        var range = that._getViewportRange();\r\n        var margins = this._calculateValueMargins();\r\n        range.addRange({\r\n            minVisible: margins.minValue,\r\n            maxVisible: margins.maxValue,\r\n            isSpacedMargin: margins.isSpacedMargin\r\n        });\r\n        var ticks = that._createTicksAndLabelFormat(range);\r\n        var boundaryTicks = that._getBoundaryTicks(ticks.ticks, that._getViewportRange());\r\n        if (options.showCustomBoundaryTicks && boundaryTicks.length) {\r\n            that._boundaryTicks = [boundaryTicks[0]].map(createBoundaryTick(that, renderer, true));\r\n            if (boundaryTicks.length > 1) {\r\n                that._boundaryTicks = that._boundaryTicks.concat([boundaryTicks[1]].map(createBoundaryTick(that, renderer, false)))\r\n            }\r\n        } else {\r\n            that._boundaryTicks = []\r\n        }\r\n        var minors = (ticks.minorTicks || []).filter(function(minor) {\r\n            return !boundaryTicks.some(function(boundary) {\r\n                return valueOf(boundary) === valueOf(minor)\r\n            })\r\n        });\r\n        that._tickInterval = ticks.tickInterval;\r\n        that._minorTickInterval = ticks.minorTickInterval;\r\n        var oldMajorTicks = that._majorTicks || [];\r\n        var majorTicksByValues = oldMajorTicks.reduce(function(r, t) {\r\n            r[t.value.valueOf()] = t;\r\n            return r\r\n        }, {});\r\n        var sameType = (0, _type.type)(ticks.ticks[0]) === (0, _type.type)(oldMajorTicks[0] && oldMajorTicks[0].value);\r\n        var skippedCategory = that._getSkippedCategory(ticks.ticks);\r\n        var majorTicks = ticks.ticks.map(function(v) {\r\n            var tick = majorTicksByValues[v.valueOf()];\r\n            if (tick && sameType) {\r\n                delete majorTicksByValues[v.valueOf()];\r\n                tick.setSkippedCategory(skippedCategory);\r\n                return tick\r\n            } else {\r\n                return createMajorTick(that, renderer, skippedCategory)(v)\r\n            }\r\n        });\r\n        that._majorTicks = majorTicks;\r\n        var oldMinorTicks = that._minorTicks || [];\r\n        that._minorTicks = minors.map(function(v, i) {\r\n            var minorTick = oldMinorTicks[i];\r\n            if (minorTick) {\r\n                minorTick.updateValue(v);\r\n                return minorTick\r\n            }\r\n            return createMinorTick(that, renderer)(v)\r\n        });\r\n        that._ticksToRemove = Object.keys(majorTicksByValues).map(function(k) {\r\n            return majorTicksByValues[k]\r\n        }).concat(oldMinorTicks.slice(that._minorTicks.length, oldMinorTicks.length));\r\n        that._correctedBreaks = ticks.breaks;\r\n        that._reinitTranslator(that._getViewportRange())\r\n    },\r\n    _reinitTranslator: function(range) {\r\n        var that = this;\r\n        var translator = that._translator;\r\n        if (that._correctedBreaks) {\r\n            range.breaks = that._correctedBreaks\r\n        }\r\n        if (that._isSynchronized) {\r\n            return\r\n        }\r\n        translator.updateBusinessRange(that.adjustViewport(range))\r\n    },\r\n    _getViewportRange: function() {\r\n        return this.adjustViewport(this._seriesData)\r\n    },\r\n    setMarginOptions: function(options) {\r\n        this._marginOptions = options\r\n    },\r\n    getMarginOptions: function() {\r\n        return (0, _type.isDefined)(this._marginOptions) ? this._marginOptions : {}\r\n    },\r\n    allowToExtendVisualRange: function(isEnd) {\r\n        var wholeRange = this.adjustRange(getVizRangeObject(this._options.wholeRange));\r\n        var bound = isEnd ? wholeRange.endValue : wholeRange.startValue;\r\n        return !this.isArgumentAxis || !(0, _type.isDefined)(bound) && this.isExtremePosition(isEnd)\r\n    },\r\n    _calculateRangeInterval: function(interval) {\r\n        var isDateTime = \"datetime\" === this._options.dataType;\r\n        var minArgs = [];\r\n        var addToArgs = function(value) {\r\n            (0, _type.isDefined)(value) && minArgs.push(isDateTime ? (0, _date.dateToMilliseconds)(value) : value)\r\n        };\r\n        addToArgs(this._tickInterval);\r\n        addToArgs(this._estimatedTickInterval);\r\n        (0, _type.isDefined)(interval) && minArgs.push(interval);\r\n        addToArgs(this._aggregationInterval);\r\n        return this._calculateWorkWeekInterval(_min.apply(this, minArgs))\r\n    },\r\n    _calculateWorkWeekInterval: function(businessInterval) {\r\n        var options = this._options;\r\n        if (\"datetime\" === options.dataType && options.workdaysOnly && businessInterval) {\r\n            var workWeek = options.workWeek.length * dateIntervals.day;\r\n            var weekend = dateIntervals.week - workWeek;\r\n            if (workWeek !== businessInterval && weekend < businessInterval) {\r\n                var weekendsCount = Math.ceil(businessInterval / dateIntervals.week);\r\n                businessInterval = weekend >= businessInterval ? dateIntervals.day : businessInterval - weekend * weekendsCount\r\n            } else {\r\n                if (weekend >= businessInterval && businessInterval > dateIntervals.day) {\r\n                    businessInterval = dateIntervals.day\r\n                }\r\n            }\r\n        }\r\n        return businessInterval\r\n    },\r\n    _calculateValueMargins: function(ticks) {\r\n        this._resetMargins();\r\n        var that = this;\r\n        var margins = that.getMarginOptions();\r\n        var marginSize = (margins.size || 0) / 2;\r\n        var options = that._options;\r\n        var dataRange = that._getViewportRange();\r\n        var viewPort = that.getViewport();\r\n        var screenDelta = that._getScreenDelta();\r\n        var isDiscrete = (options.type || \"\").indexOf(_axes_constants2.default.discrete) !== -1;\r\n        var valueMarginsEnabled = options.valueMarginsEnabled && !isDiscrete;\r\n        var translator = that._translator;\r\n        var minValueMargin = options.minValueMargin;\r\n        var maxValueMargin = options.maxValueMargin;\r\n        var minPadding = 0;\r\n        var maxPadding = 0;\r\n        var interval = 0;\r\n        var rangeInterval;\r\n        if (dataRange.stubData || !screenDelta) {\r\n            return {\r\n                startPadding: 0,\r\n                endPadding: 0\r\n            }\r\n        }\r\n\r\n        function getConvertIntervalCoefficient(intervalInPx) {\r\n            var ratioOfCanvasRange = translator.ratioOfCanvasRange();\r\n            return ratioOfCanvasRange / (ratioOfCanvasRange * screenDelta / (intervalInPx + screenDelta))\r\n        }\r\n        if (that.isArgumentAxis && margins.checkInterval) {\r\n            rangeInterval = that._calculateRangeInterval(dataRange.interval);\r\n            var pxInterval = translator.getInterval(rangeInterval);\r\n            if (isFinite(pxInterval)) {\r\n                interval = Math.ceil(pxInterval / (2 * getConvertIntervalCoefficient(pxInterval)))\r\n            } else {\r\n                rangeInterval = 0\r\n            }\r\n        }\r\n        var minPercentPadding;\r\n        var maxPercentPadding;\r\n        var maxPaddingValue = screenDelta * MAX_MARGIN_VALUE / 2;\r\n        if (valueMarginsEnabled) {\r\n            if ((0, _type.isDefined)(minValueMargin)) {\r\n                minPercentPadding = isFinite(minValueMargin) ? minValueMargin : 0\r\n            } else {\r\n                if (!that.isArgumentAxis && margins.checkInterval && valueOf(dataRange.minVisible) > 0 && valueOf(dataRange.minVisible) === valueOf(dataRange.min)) {\r\n                    minPadding = MIN_BAR_MARGIN\r\n                } else {\r\n                    minPadding = Math.max(marginSize, interval);\r\n                    minPadding = Math.min(maxPaddingValue, minPadding)\r\n                }\r\n            }\r\n            if ((0, _type.isDefined)(maxValueMargin)) {\r\n                maxPercentPadding = isFinite(maxValueMargin) ? maxValueMargin : 0\r\n            } else {\r\n                if (!that.isArgumentAxis && margins.checkInterval && valueOf(dataRange.maxVisible) < 0 && valueOf(dataRange.maxVisible) === valueOf(dataRange.max)) {\r\n                    maxPadding = MIN_BAR_MARGIN\r\n                } else {\r\n                    maxPadding = Math.max(marginSize, interval);\r\n                    maxPadding = Math.min(maxPaddingValue, maxPadding)\r\n                }\r\n            }\r\n        }\r\n        var percentStick = margins.percentStick && !this.isArgumentAxis;\r\n        if (percentStick) {\r\n            if (1 === _abs(dataRange.max)) {\r\n                maxPadding = 0\r\n            }\r\n            if (1 === _abs(dataRange.min)) {\r\n                minPadding = 0\r\n            }\r\n        }\r\n        var canvasStartEnd = that._getCanvasStartEnd();\r\n        var commonMargin = 1 + (minPercentPadding || 0) + (maxPercentPadding || 0);\r\n        var screenDeltaWithMargins = (screenDelta - minPadding - maxPadding) / commonMargin || screenDelta;\r\n        if (void 0 !== minPercentPadding || void 0 !== maxPercentPadding) {\r\n            if (void 0 !== minPercentPadding) {\r\n                minPadding = screenDeltaWithMargins * minPercentPadding\r\n            }\r\n            if (void 0 !== maxPercentPadding) {\r\n                maxPadding = screenDeltaWithMargins * maxPercentPadding\r\n            }\r\n        }\r\n        var minValue;\r\n        var maxValue;\r\n        if (options.type !== _axes_constants2.default.discrete && ticks && ticks.length > 1 && !options.skipViewportExtending && !viewPort.action && false !== options.endOnTick) {\r\n            var length = ticks.length;\r\n            var firstTickPosition = translator.translate(ticks[0].value);\r\n            var lastTickPosition = translator.translate(ticks[length - 1].value);\r\n            var invertMultiplier = firstTickPosition > lastTickPosition ? -1 : 1;\r\n            var minTickPadding = _max(invertMultiplier * (canvasStartEnd.start - firstTickPosition), 0);\r\n            var maxTickPadding = _max(invertMultiplier * (lastTickPosition - canvasStartEnd.end), 0);\r\n            if (minTickPadding > minPadding || maxTickPadding > maxPadding) {\r\n                var commonPadding = maxTickPadding + minTickPadding;\r\n                var coeff = getConvertIntervalCoefficient(commonPadding);\r\n                if (minTickPadding >= minPadding) {\r\n                    minValue = ticks[0].value\r\n                }\r\n                if (maxTickPadding >= maxPadding) {\r\n                    maxValue = ticks[length - 1].value\r\n                }\r\n                minPadding = _max(minTickPadding, minPadding) / coeff;\r\n                maxPadding = _max(maxTickPadding, maxPadding) / coeff\r\n            }\r\n        }\r\n        minPercentPadding = void 0 === minPercentPadding ? minPadding / screenDeltaWithMargins : minPercentPadding;\r\n        maxPercentPadding = void 0 === maxPercentPadding ? maxPadding / screenDeltaWithMargins : maxPercentPadding;\r\n        if (!isDiscrete) {\r\n            if (this._translator.isInverted()) {\r\n                minValue = (0, _type.isDefined)(minValue) ? minValue : translator.from(canvasStartEnd.start + screenDelta * minPercentPadding, -1);\r\n                maxValue = (0, _type.isDefined)(maxValue) ? maxValue : translator.from(canvasStartEnd.end - screenDelta * maxPercentPadding, 1)\r\n            } else {\r\n                minValue = (0, _type.isDefined)(minValue) ? minValue : translator.from(canvasStartEnd.start - screenDelta * minPercentPadding, -1);\r\n                maxValue = (0, _type.isDefined)(maxValue) ? maxValue : translator.from(canvasStartEnd.end + screenDelta * maxPercentPadding, 1)\r\n            }\r\n        }\r\n\r\n        function correctZeroLevel(minPoint, maxPoint) {\r\n            var minExpectedPadding = _abs(canvasStartEnd.start - minPoint);\r\n            var maxExpectedPadding = _abs(canvasStartEnd.end - maxPoint);\r\n            var coeff = getConvertIntervalCoefficient(minExpectedPadding + maxExpectedPadding);\r\n            minPadding = minExpectedPadding / coeff;\r\n            maxPadding = maxExpectedPadding / coeff\r\n        }\r\n        if (!that.isArgumentAxis) {\r\n            if (minValue * dataRange.min <= 0 && minValue * dataRange.minVisible <= 0) {\r\n                correctZeroLevel(translator.translate(0), translator.translate(maxValue));\r\n                minValue = 0\r\n            }\r\n            if (maxValue * dataRange.max <= 0 && maxValue * dataRange.maxVisible <= 0) {\r\n                correctZeroLevel(translator.translate(minValue), translator.translate(0));\r\n                maxValue = 0\r\n            }\r\n        }\r\n        return {\r\n            startPadding: this._translator.isInverted() ? maxPadding : minPadding,\r\n            endPadding: this._translator.isInverted() ? minPadding : maxPadding,\r\n            minValue: minValue,\r\n            maxValue: maxValue,\r\n            interval: rangeInterval,\r\n            isSpacedMargin: minPadding === maxPadding && 0 !== minPadding\r\n        }\r\n    },\r\n    applyMargins: function() {\r\n        if (this._isSynchronized) {\r\n            return\r\n        }\r\n        var margins = this._calculateValueMargins(this._majorTicks);\r\n        var canvas = (0, _extend.extend)({}, this._canvas, {\r\n            startPadding: margins.startPadding,\r\n            endPadding: margins.endPadding\r\n        });\r\n        this._translator.updateCanvas(this._processCanvas(canvas));\r\n        if (isFinite(margins.interval)) {\r\n            var br = this._translator.getBusinessRange();\r\n            br.addRange({\r\n                interval: margins.interval\r\n            });\r\n            this._translator.updateBusinessRange(br)\r\n        }\r\n    },\r\n    _resetMargins: function() {\r\n        this._reinitTranslator(this._getViewportRange());\r\n        if (this._canvas) {\r\n            this._translator.updateCanvas(this._processCanvas(this._canvas))\r\n        }\r\n    },\r\n    _createConstantLines: function() {\r\n        var _this = this;\r\n        var constantLines = (this._options.constantLines || []).map(function(o) {\r\n            return (0, _constant_line2.default)(_this, o)\r\n        });\r\n        this._outsideConstantLines = constantLines.filter(function(l) {\r\n            return \"outside\" === l.labelPosition\r\n        });\r\n        this._insideConstantLines = constantLines.filter(function(l) {\r\n            return \"inside\" === l.labelPosition\r\n        })\r\n    },\r\n    draw: function(canvas, borderOptions) {\r\n        var that = this;\r\n        var options = this._options;\r\n        that.borderOptions = borderOptions || {\r\n            visible: false\r\n        };\r\n        that._resetMargins();\r\n        that.createTicks(canvas);\r\n        that.applyMargins();\r\n        that._clearAxisGroups();\r\n        initTickCoords(that._majorTicks);\r\n        initTickCoords(that._minorTicks);\r\n        initTickCoords(that._boundaryTicks);\r\n        that._axisGroup.append(that._axesContainerGroup);\r\n        that._drawAxis();\r\n        that._drawTitle();\r\n        drawTickMarks(that._majorTicks, options.tick);\r\n        drawTickMarks(that._minorTicks, options.minorTick);\r\n        drawTickMarks(that._boundaryTicks, options.tick);\r\n        var drawGridLine = that._getGridLineDrawer();\r\n        drawGrids(that._majorTicks, drawGridLine);\r\n        drawGrids(that._minorTicks, drawGridLine);\r\n        callAction(that._majorTicks, \"drawLabel\", that._getViewportRange());\r\n        that._majorTicks.forEach(function(tick) {\r\n            tick.labelRotationAngle = 0;\r\n            tick.labelAlignment = void 0;\r\n            tick.labelOffset = 0\r\n        });\r\n        callAction(that._outsideConstantLines.concat(that._insideConstantLines), \"draw\");\r\n        callAction(that._strips, \"draw\");\r\n        that._dateMarkers = that._drawDateMarkers() || [];\r\n        that._labelAxesGroup && that._axisStripLabelGroup.append(that._labelAxesGroup);\r\n        that._gridContainerGroup && that._axisGridGroup.append(that._gridContainerGroup);\r\n        that._stripsGroup && that._axisStripGroup.append(that._stripsGroup);\r\n        if (that._constantLinesGroup) {\r\n            that._axisConstantLineGroups.above.inside.append(that._constantLinesGroup.above);\r\n            that._axisConstantLineGroups.above.outside1.append(that._constantLinesGroup.above);\r\n            that._axisConstantLineGroups.above.outside2.append(that._constantLinesGroup.above);\r\n            that._axisConstantLineGroups.under.inside.append(that._constantLinesGroup.under);\r\n            that._axisConstantLineGroups.under.outside1.append(that._constantLinesGroup.under);\r\n            that._axisConstantLineGroups.under.outside2.append(that._constantLinesGroup.under)\r\n        }\r\n        that._measureTitle();\r\n        measureLabels(that._majorTicks);\r\n        var textWidth;\r\n        var textHeight;\r\n        var convertedTickInterval;\r\n        var tickInterval = that._tickInterval;\r\n        if ((0, _type.isDefined)(tickInterval)) {\r\n            convertedTickInterval = that.getTranslator().getInterval(\"datetime\" === options.dataType ? (0, _date.dateToMilliseconds)(tickInterval) : tickInterval)\r\n        }\r\n        var usefulSpace = (0, _type.isDefined)(options.placeholderSize) ? options.placeholderSize - options.label.indentFromAxis : void 0;\r\n        if (that._isHorizontal) {\r\n            textWidth = convertedTickInterval;\r\n            textHeight = usefulSpace\r\n        } else {\r\n            textWidth = usefulSpace;\r\n            textHeight = convertedTickInterval\r\n        }\r\n        var displayMode = that._validateDisplayMode(options.label.displayMode);\r\n        var overlappingMode = that._validateOverlappingMode(options.label.overlappingBehavior, displayMode);\r\n        var wordWrapMode = options.label.wordWrap || \"none\";\r\n        var overflowMode = options.label.textOverflow || \"none\";\r\n        if ((\"none\" !== wordWrapMode || \"none\" !== overflowMode) && displayMode !== ROTATE && overlappingMode !== ROTATE && \"auto\" !== overlappingMode) {\r\n            var correctByWidth = false;\r\n            var correctByHeight = false;\r\n            if (textWidth) {\r\n                if (that._majorTicks.some(function(tick) {\r\n                        return tick.labelBBox.width > textWidth\r\n                    })) {\r\n                    correctByWidth = true\r\n                }\r\n            }\r\n            if (textHeight) {\r\n                if (that._majorTicks.some(function(tick) {\r\n                        return tick.labelBBox.height > textHeight\r\n                    })) {\r\n                    correctByHeight = true\r\n                }\r\n            }\r\n            if (correctByWidth || correctByHeight) {\r\n                that._majorTicks.forEach(function(tick) {\r\n                    tick.label && tick.label.setMaxSize(textWidth, textHeight, options.label)\r\n                });\r\n                measureLabels(that._majorTicks)\r\n            }\r\n        }\r\n        measureLabels(that._outsideConstantLines);\r\n        measureLabels(that._insideConstantLines);\r\n        measureLabels(that._strips);\r\n        measureLabels(that._dateMarkers);\r\n        that._adjustConstantLineLabels(that._insideConstantLines);\r\n        that._adjustStripLabels();\r\n        var offset = that._constantLabelOffset = that._adjustConstantLineLabels(that._outsideConstantLines);\r\n        if (!that._translator.getBusinessRange().isEmpty()) {\r\n            that._setLabelsPlacement();\r\n            offset = that._adjustLabels(offset)\r\n        }\r\n        offset = that._adjustDateMarkers(offset);\r\n        that._adjustTitle(offset)\r\n    },\r\n    _measureTitle: _common.noop,\r\n    animate: function() {\r\n        callAction(this._majorTicks, \"animateLabels\")\r\n    },\r\n    updateSize: function(canvas, animate) {\r\n        var updateTitle = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : true;\r\n        var that = this;\r\n        that.updateCanvas(canvas);\r\n        if (updateTitle) {\r\n            that._checkTitleOverflow();\r\n            that._measureTitle();\r\n            that._updateTitleCoords()\r\n        }\r\n        that._reinitTranslator(that._getViewportRange());\r\n        that.applyMargins();\r\n        var animationEnabled = !that._firstDrawing && animate;\r\n        var options = this._options;\r\n        initTickCoords(that._majorTicks);\r\n        initTickCoords(that._minorTicks);\r\n        initTickCoords(that._boundaryTicks);\r\n        cleanUpInvalidTicks(that._majorTicks);\r\n        cleanUpInvalidTicks(that._minorTicks);\r\n        cleanUpInvalidTicks(that._boundaryTicks);\r\n        if (this._axisElement) {\r\n            that._updateAxisElementPosition()\r\n        }\r\n        updateTicksPosition(that._majorTicks, options.tick, animationEnabled);\r\n        updateTicksPosition(that._minorTicks, options.minorTick, animationEnabled);\r\n        updateTicksPosition(that._boundaryTicks, options.tick);\r\n        callAction(that._majorTicks, \"updateLabelPosition\", animationEnabled);\r\n        that._outsideConstantLines.concat(that._insideConstantLines || []).forEach(function(l) {\r\n            return l.updatePosition(animationEnabled)\r\n        });\r\n        callAction(that._strips, \"updatePosition\", animationEnabled);\r\n        updateGridsPosition(that._majorTicks, animationEnabled);\r\n        updateGridsPosition(that._minorTicks, animationEnabled);\r\n        if (animationEnabled) {\r\n            callAction(that._ticksToRemove || [], \"fadeOutElements\")\r\n        }\r\n        that.prepareAnimation();\r\n        that._ticksToRemove = null;\r\n        if (!that._translator.getBusinessRange().isEmpty()) {\r\n            that._firstDrawing = false\r\n        }\r\n    },\r\n    prepareAnimation: function() {\r\n        var that = this;\r\n        var action = \"saveCoords\";\r\n        callAction(that._majorTicks, action);\r\n        callAction(that._minorTicks, action);\r\n        callAction(that._insideConstantLines, action);\r\n        callAction(that._outsideConstantLines, action);\r\n        callAction(that._strips, action)\r\n    },\r\n    applyClipRects: function(elementsClipID, canvasClipID) {\r\n        this._axisGroup.attr({\r\n            \"clip-path\": canvasClipID\r\n        });\r\n        this._axisStripGroup.attr({\r\n            \"clip-path\": elementsClipID\r\n        })\r\n    },\r\n    _mergeViewportOptions: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var visualRange = {};\r\n        var visualRangeOptionValue = options._customVisualRange;\r\n        if (((0, _type.isDefined)(options.max) || (0, _type.isDefined)(options.min)) && !(0, _type.isDefined)(visualRangeOptionValue.startValue) && !(0, _type.isDefined)(visualRangeOptionValue.endValue) && !(0, _type.isDefined)(visualRangeOptionValue.length)) {\r\n            visualRange = {\r\n                startValue: options.min,\r\n                endValue: options.max\r\n            }\r\n        } else {\r\n            visualRange = visualRangeOptionValue\r\n        }\r\n        that._setVisualRange(visualRange)\r\n    },\r\n    _validateVisualRange: function(visualRange) {\r\n        var range = getVizRangeObject(visualRange);\r\n        if (void 0 !== range.startValue) {\r\n            range.startValue = this.validateUnit(range.startValue)\r\n        }\r\n        if (void 0 !== range.endValue) {\r\n            range.endValue = this.validateUnit(range.endValue)\r\n        }\r\n        return convertVisualRangeObject(range, visualRange)\r\n    },\r\n    _validateOptions: function(options) {\r\n        var that = this;\r\n        if (void 0 !== options.min) {\r\n            options.min = that.validateUnit(options.min, \"E2106\")\r\n        }\r\n        if (void 0 !== options.max) {\r\n            options.max = that.validateUnit(options.max, \"E2106\")\r\n        }\r\n        options.wholeRange = that._validateVisualRange(options.wholeRange);\r\n        options.visualRange = options._customVisualRange = that._validateVisualRange(options._customVisualRange);\r\n        that._mergeViewportOptions()\r\n    },\r\n    validate: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var dataType = that.isArgumentAxis ? options.argumentType : options.valueType;\r\n        var parser = dataType ? _parse_utils2.default.getParser(dataType) : function(unit) {\r\n            return unit\r\n        };\r\n        that.parser = parser;\r\n        options.dataType = dataType;\r\n        that._validateOptions(options)\r\n    },\r\n    resetVisualRange: function(isSilent) {\r\n        this._seriesData.minVisible = this._seriesData.min;\r\n        this._seriesData.maxVisible = this._seriesData.max;\r\n        this.handleZooming([null, null], {\r\n            start: !!isSilent,\r\n            end: !!isSilent\r\n        })\r\n    },\r\n    _setVisualRange: function(visualRange, allowPartialUpdate) {\r\n        var range = this.adjustRange(_utils2.default.getVizRangeObject(visualRange));\r\n        if (allowPartialUpdate) {\r\n            (0, _type.isDefined)(range.startValue) && (this._viewport.startValue = range.startValue);\r\n            (0, _type.isDefined)(range.endValue) && (this._viewport.endValue = range.endValue)\r\n        } else {\r\n            this._viewport = range\r\n        }\r\n    },\r\n    _applyZooming: function(visualRange, allowPartialUpdate) {\r\n        var that = this;\r\n        that._resetVisualRangeOption();\r\n        that._setVisualRange(visualRange, allowPartialUpdate);\r\n        var viewPort = that.getViewport();\r\n        that._breaks = that._getScaleBreaks(that._options, {\r\n            minVisible: viewPort.startValue,\r\n            maxVisible: viewPort.endValue\r\n        }, that._series, that.isArgumentAxis);\r\n        that._translator.updateBusinessRange(that._getViewportRange())\r\n    },\r\n    getZoomStartEventArg: function(event, actionType) {\r\n        return {\r\n            axis: this,\r\n            range: this.visualRange(),\r\n            cancel: false,\r\n            event: event,\r\n            actionType: actionType\r\n        }\r\n    },\r\n    getZoomEndEventArg: function(previousRange, event, actionType, zoomFactor, shift) {\r\n        var newRange = this.visualRange();\r\n        return {\r\n            axis: this,\r\n            previousRange: previousRange,\r\n            range: newRange,\r\n            cancel: false,\r\n            event: event,\r\n            actionType: actionType,\r\n            zoomFactor: zoomFactor,\r\n            shift: shift,\r\n            rangeStart: newRange.startValue,\r\n            rangeEnd: newRange.endValue\r\n        }\r\n    },\r\n    getZoomBounds: function() {\r\n        var wholeRange = _utils2.default.getVizRangeObject(this._options.wholeRange);\r\n        var range = this.getTranslator().getBusinessRange();\r\n        var secondPriorityRange = {\r\n            startValue: getZoomBoundValue(this._initRange.startValue, range.min),\r\n            endValue: getZoomBoundValue(this._initRange.endValue, range.max)\r\n        };\r\n        return {\r\n            startValue: getZoomBoundValue(wholeRange.startValue, secondPriorityRange.startValue),\r\n            endValue: getZoomBoundValue(wholeRange.endValue, secondPriorityRange.endValue)\r\n        }\r\n    },\r\n    setInitRange: function() {\r\n        this._initRange = {};\r\n        if (0 === Object.keys(this._options.wholeRange || {}).length) {\r\n            this._initRange = this.getZoomBounds()\r\n        }\r\n    },\r\n    _resetVisualRangeOption: function() {\r\n        this._options._customVisualRange = {}\r\n    },\r\n    setCustomVisualRange: function(range) {\r\n        this._options._customVisualRange = range\r\n    },\r\n    visualRange: function visualRange() {\r\n        var that = this;\r\n        var args = arguments;\r\n        var visualRange;\r\n        if (0 === args.length) {\r\n            var adjustedRange = that._getAdjustedBusinessRange();\r\n            var startValue = adjustedRange.minVisible;\r\n            var endValue = adjustedRange.maxVisible;\r\n            if (that._options.type === _axes_constants2.default.discrete) {\r\n                startValue = (0, _type.isDefined)(startValue) ? startValue : adjustedRange.categories[0];\r\n                endValue = (0, _type.isDefined)(endValue) ? endValue : adjustedRange.categories[adjustedRange.categories.length - 1];\r\n                return {\r\n                    startValue: startValue,\r\n                    endValue: endValue,\r\n                    categories: _utils2.default.getCategoriesInfo(adjustedRange.categories, startValue, endValue).categories\r\n                }\r\n            }\r\n            return {\r\n                startValue: startValue,\r\n                endValue: endValue\r\n            }\r\n        } else {\r\n            if (_isArray(args[0])) {\r\n                visualRange = args[0]\r\n            } else {\r\n                if ((0, _type.isPlainObject)(args[0])) {\r\n                    visualRange = (0, _extend.extend)({}, args[0])\r\n                } else {\r\n                    visualRange = [args[0], args[1]]\r\n                }\r\n            }\r\n        }\r\n        var zoomResults = that.handleZooming(visualRange, args[1]);\r\n        if (!zoomResults.isPrevented) {\r\n            that._visualRange(that, zoomResults)\r\n        }\r\n    },\r\n    handleZooming: function(visualRange, preventEvents, domEvent, action) {\r\n        var that = this;\r\n        preventEvents = preventEvents || {};\r\n        if ((0, _type.isDefined)(visualRange)) {\r\n            visualRange = that._validateVisualRange(visualRange);\r\n            visualRange.action = action\r\n        }\r\n        var zoomStartEvent = that.getZoomStartEventArg(domEvent, action);\r\n        var previousRange = zoomStartEvent.range;\r\n        !preventEvents.start && that._eventTrigger(\"zoomStart\", zoomStartEvent);\r\n        var zoomResults = {\r\n            isPrevented: zoomStartEvent.cancel,\r\n            skipEventRising: preventEvents.skipEventRising,\r\n            range: visualRange || zoomStartEvent.range\r\n        };\r\n        if (!zoomStartEvent.cancel) {\r\n            (0, _type.isDefined)(visualRange) && that._applyZooming(visualRange, preventEvents.allowPartialUpdate);\r\n            if (!(0, _type.isDefined)(that._storedZoomEndParams)) {\r\n                that._storedZoomEndParams = {\r\n                    startRange: previousRange,\r\n                    type: this.getOptions().type\r\n                }\r\n            }\r\n            that._storedZoomEndParams.event = domEvent;\r\n            that._storedZoomEndParams.action = action;\r\n            that._storedZoomEndParams.prevent = !!preventEvents.end\r\n        }\r\n        return zoomResults\r\n    },\r\n    handleZoomEnd: function() {\r\n        var that = this;\r\n        if ((0, _type.isDefined)(that._storedZoomEndParams) && !that._storedZoomEndParams.prevent) {\r\n            var previousRange = that._storedZoomEndParams.startRange;\r\n            var domEvent = that._storedZoomEndParams.event;\r\n            var action = that._storedZoomEndParams.action;\r\n            var previousBusinessRange = {\r\n                minVisible: previousRange.startValue,\r\n                maxVisible: previousRange.endValue,\r\n                categories: previousRange.categories\r\n            };\r\n            var typeIsNotChanged = that.getOptions().type === that._storedZoomEndParams.type;\r\n            var shift = typeIsNotChanged ? (0, _math2.adjust)(that.getVisualRangeCenter() - that.getVisualRangeCenter(previousBusinessRange)) : NaN;\r\n            var zoomFactor = typeIsNotChanged ? +(Math.round(that.getVisualRangeLength(previousBusinessRange) / that.getVisualRangeLength() + \"e+2\") + \"e-2\") : NaN;\r\n            var zoomEndEvent = that.getZoomEndEventArg(previousRange, domEvent, action, zoomFactor, shift);\r\n            zoomEndEvent.cancel = that.isZoomingLowerLimitOvercome(1 === zoomFactor ? \"pan\" : \"zoom\", zoomFactor);\r\n            that._eventTrigger(\"zoomEnd\", zoomEndEvent);\r\n            if (zoomEndEvent.cancel) {\r\n                that.restorePreviousVisualRange(previousRange)\r\n            }\r\n            that._storedZoomEndParams = null\r\n        }\r\n    },\r\n    restorePreviousVisualRange: function(previousRange) {\r\n        var that = this;\r\n        that._storedZoomEndParams = null;\r\n        that._applyZooming(previousRange);\r\n        that._visualRange(that, previousRange)\r\n    },\r\n    isZoomingLowerLimitOvercome: function(actionType, zoomFactor, range) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var minZoom = options.minVisualRangeLength;\r\n        var isOvercoming = \"zoom\" === actionType && zoomFactor >= 1;\r\n        var businessRange = that._translator.getBusinessRange();\r\n        var visualRange;\r\n        if ((0, _type.isDefined)(range)) {\r\n            visualRange = that.adjustRange(_utils2.default.getVizRangeObject(range));\r\n            visualRange = {\r\n                minVisible: visualRange.startValue,\r\n                maxVisible: visualRange.endValue,\r\n                categories: businessRange.categories\r\n            }\r\n        }\r\n        var visualRangeLength = that.getVisualRangeLength(visualRange);\r\n        if (\"discrete\" !== options.type) {\r\n            if ((0, _type.isDefined)(minZoom)) {\r\n                if (\"datetime\" === options.dataType && !(0, _type.isNumeric)(minZoom)) {\r\n                    minZoom = (0, _date.dateToMilliseconds)(minZoom)\r\n                }\r\n                isOvercoming &= minZoom >= visualRangeLength\r\n            } else {\r\n                var canvasLength = that._translator.canvasLength;\r\n                var fullRange = {\r\n                    minVisible: businessRange.min,\r\n                    maxVisible: businessRange.max,\r\n                    categories: businessRange.categories\r\n                };\r\n                isOvercoming &= that.getVisualRangeLength(fullRange) / canvasLength >= visualRangeLength\r\n            }\r\n        } else {\r\n            !(0, _type.isDefined)(minZoom) && (minZoom = 1);\r\n            isOvercoming &= (0, _type.isDefined)(range) && that.getVisualRangeLength() === minZoom && visualRangeLength <= minZoom\r\n        }\r\n        return !!isOvercoming\r\n    },\r\n    dataVisualRangeIsReduced: function() {\r\n        var minDataValue;\r\n        var maxDataValue;\r\n        var translator = this.getTranslator();\r\n        if (\"discrete\" === this._options.type) {\r\n            var categories = translator.getBusinessRange().categories;\r\n            minDataValue = categories[0];\r\n            maxDataValue = categories[categories.length - 1]\r\n        } else {\r\n            var seriesData = this._seriesData;\r\n            minDataValue = seriesData.min;\r\n            maxDataValue = seriesData.max\r\n        }\r\n        if (!(0, _type.isDefined)(minDataValue) || !(0, _type.isDefined)(maxDataValue)) {\r\n            return false\r\n        }\r\n        var startPoint = translator.translate(minDataValue);\r\n        var endPoint = translator.translate(maxDataValue);\r\n        var edges = [Math.min(startPoint, endPoint), Math.max(startPoint, endPoint)];\r\n        var visualRange = this.visualRange();\r\n        var visualRangeStartPoint = translator.translate(visualRange.startValue);\r\n        var visualRangeEndPoint = translator.translate(visualRange.endValue);\r\n        return visualRangeStartPoint > edges[0] && visualRangeStartPoint < edges[1] || visualRangeEndPoint > edges[0] && visualRangeEndPoint < edges[1] || visualRangeStartPoint === visualRangeEndPoint && edges[0] !== edges[1]\r\n    },\r\n    isExtremePosition: function(isMax) {\r\n        var extremeDataValue;\r\n        var seriesData;\r\n        if (\"discrete\" === this._options.type) {\r\n            seriesData = this._translator.getBusinessRange();\r\n            extremeDataValue = isMax ? seriesData.categories[seriesData.categories.length - 1] : seriesData.categories[0]\r\n        } else {\r\n            seriesData = this.getZoomBounds();\r\n            extremeDataValue = isMax ? seriesData.endValue : seriesData.startValue\r\n        }\r\n        var translator = this.getTranslator();\r\n        var extremePoint = translator.translate(extremeDataValue);\r\n        var visualRange = this.visualRange();\r\n        var visualRangePoint = isMax ? translator.translate(visualRange.endValue) : translator.translate(visualRange.startValue);\r\n        return _abs(visualRangePoint - extremePoint) < SCROLL_THRESHOLD\r\n    },\r\n    getViewport: function() {\r\n        return this._viewport\r\n    },\r\n    getFullTicks: function() {\r\n        var majors = this._majorTicks || [];\r\n        if (this._options.type === _axes_constants2.default.discrete) {\r\n            return convertTicksToValues(majors)\r\n        } else {\r\n            return convertTicksToValues(majors.concat(this._minorTicks, this._boundaryTicks)).sort(function(a, b) {\r\n                return valueOf(a) - valueOf(b)\r\n            })\r\n        }\r\n    },\r\n    measureLabels: function(canvas, withIndents) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var widthAxis = options.visible ? options.width : 0;\r\n        var ticks;\r\n        var maxText;\r\n        var text;\r\n        var box;\r\n        var indent = withIndents ? options.label.indentFromAxis + .5 * options.tick.length : 0;\r\n        var tickInterval;\r\n        var viewportRange = that._getViewportRange();\r\n        if (viewportRange.isEmpty() || !options.label.visible || !that._axisElementsGroup) {\r\n            return {\r\n                height: widthAxis,\r\n                width: widthAxis,\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        }\r\n        if (that._majorTicks) {\r\n            ticks = convertTicksToValues(that._majorTicks)\r\n        } else {\r\n            that.updateCanvas(canvas);\r\n            ticks = that._createTicksAndLabelFormat(viewportRange, _common.noop);\r\n            tickInterval = ticks.tickInterval;\r\n            ticks = ticks.ticks\r\n        }\r\n        maxText = ticks.reduce(function(prevLabel, tick, index) {\r\n            var label = that.formatLabel(tick, options.label, viewportRange, void 0, tickInterval, ticks);\r\n            if (prevLabel.length < label.length) {\r\n                return label\r\n            } else {\r\n                return prevLabel\r\n            }\r\n        }, that.formatLabel(ticks[0], options.label, viewportRange, void 0, tickInterval, ticks));\r\n        text = that._renderer.text(maxText, 0, 0).css(that._textFontStyles).attr(that._textOptions).append(that._renderer.root);\r\n        box = text.getBBox();\r\n        text.remove();\r\n        return {\r\n            x: box.x,\r\n            y: box.y,\r\n            width: box.width + indent,\r\n            height: box.height + indent\r\n        }\r\n    },\r\n    _setLabelsPlacement: function() {\r\n        if (!this._options.label.visible) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var labelOpt = that._options.label;\r\n        var displayMode = that._validateDisplayMode(labelOpt.displayMode);\r\n        var overlappingMode = that._validateOverlappingMode(labelOpt.overlappingBehavior, displayMode);\r\n        var ignoreOverlapping = \"none\" === overlappingMode || \"ignore\" === overlappingMode;\r\n        var behavior = {\r\n            rotationAngle: labelOpt.rotationAngle,\r\n            staggeringSpacing: labelOpt.staggeringSpacing\r\n        };\r\n        var notRecastStep;\r\n        var boxes = that._majorTicks.map(function(tick) {\r\n            return tick.labelBBox\r\n        });\r\n        var step = that._getStep(boxes);\r\n        switch (displayMode) {\r\n            case ROTATE:\r\n                if (ignoreOverlapping) {\r\n                    notRecastStep = true;\r\n                    step = 1\r\n                }\r\n                that._applyLabelMode(displayMode, step, boxes, labelOpt, notRecastStep);\r\n                break;\r\n            case \"stagger\":\r\n                if (ignoreOverlapping) {\r\n                    step = 2\r\n                }\r\n                that._applyLabelMode(displayMode, _max(step, 2), boxes, labelOpt);\r\n                break;\r\n            default:\r\n                that._applyLabelOverlapping(boxes, overlappingMode, step, behavior)\r\n        }\r\n    },\r\n    _applyLabelOverlapping: function(boxes, mode, step, behavior) {\r\n        var that = this;\r\n        var labelOpt = that._options.label;\r\n        var majorTicks = that._majorTicks;\r\n        if (\"none\" === mode || \"ignore\" === mode) {\r\n            return\r\n        }\r\n        var checkLabels = function(box, index, array) {\r\n            if (0 === index) {\r\n                return false\r\n            }\r\n            return _axes_constants2.default.areLabelsOverlap(box, array[index - 1], labelOpt.minSpacing, labelOpt.alignment)\r\n        };\r\n        if (step > 1 && boxes.some(checkLabels)) {\r\n            that._applyLabelMode(mode, step, boxes, behavior)\r\n        }\r\n        that._checkBoundedLabelsOverlapping(majorTicks, boxes, mode)\r\n    },\r\n    _applyLabelMode: function(mode, step, boxes, behavior, notRecastStep) {\r\n        var that = this;\r\n        var majorTicks = that._majorTicks;\r\n        var labelOpt = that._options.label;\r\n        var angle = behavior.rotationAngle;\r\n        var labelHeight;\r\n        var alignment;\r\n        var func;\r\n        switch (mode) {\r\n            case ROTATE:\r\n                if (!labelOpt.userAlignment) {\r\n                    alignment = angle < 0 ? RIGHT : LEFT;\r\n                    if (angle % 90 === 0) {\r\n                        alignment = CENTER\r\n                    }\r\n                }\r\n                step = notRecastStep ? step : that._getStep(boxes, angle);\r\n                func = function(tick) {\r\n                    tick.label.rotate(angle);\r\n                    tick.labelRotationAngle = angle;\r\n                    alignment && (tick.labelAlignment = alignment)\r\n                };\r\n                updateLabels(majorTicks, step, func);\r\n                break;\r\n            case \"stagger\":\r\n                labelHeight = that._getMaxLabelHeight(boxes, behavior.staggeringSpacing);\r\n                func = function(tick, index) {\r\n                    if (index / (step - 1) % 2 !== 0) {\r\n                        tick.labelOffset = labelHeight\r\n                    }\r\n                };\r\n                updateLabels(majorTicks, step - 1, func);\r\n                break;\r\n            case \"auto\":\r\n            case \"_auto\":\r\n                if (2 === step) {\r\n                    that._applyLabelMode(\"stagger\", step, boxes, behavior)\r\n                } else {\r\n                    that._applyLabelMode(ROTATE, step, boxes, {\r\n                        rotationAngle: getOptimalAngle(boxes, labelOpt)\r\n                    })\r\n                }\r\n                break;\r\n            default:\r\n                updateLabels(majorTicks, step)\r\n        }\r\n    },\r\n    getMarkerTrackers: _common.noop,\r\n    _drawDateMarkers: _common.noop,\r\n    _adjustDateMarkers: _common.noop,\r\n    coordsIn: _common.noop,\r\n    areCoordsOutsideAxis: _common.noop,\r\n    _getSkippedCategory: _common.noop,\r\n    _initAxisPositions: _common.noop,\r\n    _drawTitle: _common.noop,\r\n    _updateTitleCoords: _common.noop,\r\n    _adjustConstantLineLabels: _common.noop,\r\n    _createTranslator: function() {\r\n        return new _translator2d2.default.Translator2D({}, {}, {})\r\n    },\r\n    _updateTranslator: function() {\r\n        var translator = this._translator;\r\n        translator.update(translator.getBusinessRange(), this._canvas || {}, this._getTranslatorOptions())\r\n    },\r\n    _getTranslatorOptions: function() {\r\n        var options = this._options;\r\n        return {\r\n            isHorizontal: this._isHorizontal,\r\n            shiftZeroValue: !this.isArgumentAxis,\r\n            interval: options.semiDiscreteInterval,\r\n            stick: this._getStick(),\r\n            breaksSize: options.breakStyle ? options.breakStyle.width : 0\r\n        }\r\n    },\r\n    getVisibleArea: function() {\r\n        var canvas = this._getCanvasStartEnd();\r\n        return [canvas.start, canvas.end].sort(function(a, b) {\r\n            return a - b\r\n        })\r\n    },\r\n    _getCanvasStartEnd: function() {\r\n        var isHorizontal = this._isHorizontal;\r\n        var canvas = this._canvas || {};\r\n        var invert = this._translator.getBusinessRange().invert;\r\n        var coords = isHorizontal ? [canvas.left, canvas.width - canvas.right] : [canvas.height - canvas.bottom, canvas.top];\r\n        invert && coords.reverse();\r\n        return {\r\n            start: coords[0],\r\n            end: coords[1]\r\n        }\r\n    },\r\n    _getScreenDelta: function() {\r\n        var that = this;\r\n        var canvas = that._getCanvasStartEnd();\r\n        var breaks = that._breaks;\r\n        var breaksLength = breaks ? breaks.length : 0;\r\n        var screenDelta = _abs(canvas.start - canvas.end);\r\n        return screenDelta - (breaksLength ? breaks[breaksLength - 1].cumulativeWidth : 0)\r\n    },\r\n    _getScaleBreaks: function() {\r\n        return []\r\n    },\r\n    _adjustTitle: _common.noop,\r\n    _checkTitleOverflow: _common.noop,\r\n    getSpiderTicks: _common.noop,\r\n    setSpiderTicks: _common.noop,\r\n    _checkBoundedLabelsOverlapping: _common.noop,\r\n    drawScaleBreaks: _common.noop,\r\n    _visualRange: _common.noop,\r\n    _rotateConstantLine: _common.noop,\r\n    applyVisualRangeSetter: function(visualRangeSetter) {\r\n        this._visualRange = visualRangeSetter\r\n    },\r\n    getCategoriesSorter: function(argCategories) {\r\n        var sort;\r\n        if (this.isArgumentAxis) {\r\n            sort = argCategories\r\n        } else {\r\n            var categoriesSortingMethod = this._options.categoriesSortingMethod;\r\n            sort = (0, _type.isDefined)(categoriesSortingMethod) ? categoriesSortingMethod : this._options.categories\r\n        }\r\n        return sort\r\n    },\r\n    _getAdjustedBusinessRange: function() {\r\n        return this.adjustViewport(this._translator.getBusinessRange())\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}