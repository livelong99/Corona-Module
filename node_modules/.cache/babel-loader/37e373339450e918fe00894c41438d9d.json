{"ast":null,"code":"/**\r\n * DevExtreme (ui/sortable.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _component_registrator = require(\"../core/component_registrator\");\n\nvar _component_registrator2 = _interopRequireDefault(_component_registrator);\n\nvar _extend = require(\"../core/utils/extend\");\n\nvar _draggable = require(\"./draggable\");\n\nvar _draggable2 = _interopRequireDefault(_draggable);\n\nvar _dom = require(\"../core/utils/dom\");\n\nvar _translator = require(\"../animation/translator\");\n\nvar _translator2 = _interopRequireDefault(_translator);\n\nvar _fx = require(\"../animation/fx\");\n\nvar _fx2 = _interopRequireDefault(_fx);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar SORTABLE = \"dxSortable\";\nvar PLACEHOLDER_CLASS = \"placeholder\";\nvar CLONE_CLASS = \"clone\";\n\nvar isElementVisible = function isElementVisible(itemElement) {\n  return (0, _renderer2.default)(itemElement).is(\":visible\");\n};\n\nvar Sortable = _draggable2.default.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return (0, _extend.extend)(this.callBase(), {\n      clone: true,\n      filter: \"> *\",\n      itemOrientation: \"vertical\",\n      dropFeedbackMode: \"push\",\n      allowDropInsideItem: false,\n      allowReordering: true,\n      moveItemOnDrop: false,\n      onDragChange: null,\n      onAdd: null,\n      onRemove: null,\n      onReorder: null,\n      onPlaceholderPrepared: null,\n      animation: {\n        type: \"slide\",\n        duration: 300\n      },\n      fromIndex: null,\n      toIndex: null,\n      dropInsideItem: false,\n      itemPoints: null\n    });\n  },\n  reset: function reset() {\n    this.option({\n      dropInsideItem: false,\n      toIndex: null,\n      fromIndex: null\n    });\n\n    if (this._$placeholderElement) {\n      this._$placeholderElement.remove();\n    }\n\n    this._$placeholderElement = null;\n\n    if (!this._isIndicateMode() && this._$modifiedItem) {\n      this._$modifiedItem.css(\"marginBottom\", this._modifiedItemMargin);\n\n      this._$modifiedItem = null;\n    }\n  },\n  _getPrevVisibleItem: function _getPrevVisibleItem(items, index) {\n    return items.slice(0, index).reverse().filter(isElementVisible)[0];\n  },\n  _dragStartHandler: function _dragStartHandler(e) {\n    this.callBase.apply(this, arguments);\n\n    if (true === e.cancel) {\n      return;\n    }\n\n    var $sourceElement = this._getSourceElement();\n\n    this._updateItemPoints();\n\n    this.option(\"fromIndex\", this._getElementIndex($sourceElement));\n  },\n  _dragEnterHandler: function _dragEnterHandler() {\n    this.callBase.apply(this, arguments);\n\n    if (this === this._getSourceDraggable()) {\n      return;\n    }\n\n    this._updateItemPoints();\n\n    this.option(\"fromIndex\", -1);\n\n    if (!this._isIndicateMode()) {\n      var itemPoints = this.option(\"itemPoints\");\n      var lastItemPoint = itemPoints[itemPoints.length - 1];\n\n      if (lastItemPoint) {\n        var $element = this.$element();\n\n        var $sourceElement = this._getSourceElement();\n\n        var isVertical = this._isVerticalOrientation();\n\n        var sourceElementSize = isVertical ? $sourceElement.outerHeight(true) : $sourceElement.outerWidth(true);\n        var scrollSize = $element.get(0)[isVertical ? \"scrollHeight\" : \"scrollWidth\"];\n        var scrollPosition = $element.get(0)[isVertical ? \"scrollTop\" : \"scrollLeft\"];\n        var positionProp = isVertical ? \"top\" : \"left\";\n        var lastPointPosition = lastItemPoint[positionProp];\n        var elementPosition = $element.offset()[positionProp];\n        var freeSize = elementPosition + scrollSize - scrollPosition - lastPointPosition;\n\n        if (freeSize < sourceElementSize) {\n          if (isVertical) {\n            var items = this._getItems();\n\n            var $lastItem = (0, _renderer2.default)(this._getPrevVisibleItem(items));\n            this._$modifiedItem = $lastItem;\n            this._modifiedItemMargin = $lastItem.get(0).style.marginBottom;\n            $lastItem.css(\"marginBottom\", sourceElementSize - freeSize);\n            var $sortable = $lastItem.closest(\".dx-sortable\");\n            var sortable = $sortable.data(\"dxScrollable\") || $sortable.data(\"dxScrollView\");\n            sortable && sortable.update();\n          }\n        }\n      }\n    }\n  },\n  dragEnter: function dragEnter() {\n    if (this === this._getTargetDraggable()) {\n      this.option(\"toIndex\", this.option(\"fromIndex\"));\n    } else {\n      this.option(\"toIndex\", -1);\n    }\n  },\n  dragLeave: function dragLeave() {\n    if (this === this._getTargetDraggable()) {\n      this.option(\"toIndex\", -1);\n    } else {\n      this.option(\"toIndex\", this.option(\"fromIndex\"));\n    }\n  },\n  dragEnd: function dragEnd(sourceEvent) {\n    var $sourceElement = this._getSourceElement();\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    var isSourceDraggable = sourceDraggable.NAME !== this.NAME;\n    var toIndex = this.option(\"toIndex\");\n\n    if (null !== toIndex && toIndex >= 0) {\n      var cancelAdd;\n      var cancelRemove;\n\n      if (sourceDraggable !== this) {\n        cancelAdd = this._fireAddEvent(sourceEvent);\n\n        if (!cancelAdd) {\n          cancelRemove = this._fireRemoveEvent(sourceEvent);\n        }\n      }\n\n      if (isSourceDraggable) {\n        _translator2.default.resetPosition($sourceElement);\n      }\n\n      if (this.option(\"moveItemOnDrop\")) {\n        !cancelAdd && this._moveItem($sourceElement, toIndex, cancelRemove);\n      }\n\n      if (sourceDraggable === this) {\n        this._fireReorderEvent(sourceEvent);\n      }\n    }\n  },\n  dragMove: function dragMove(e) {\n    var itemPoints = this.option(\"itemPoints\");\n\n    if (!itemPoints) {\n      return;\n    }\n\n    var isVertical = this._isVerticalOrientation();\n\n    var axisName = isVertical ? \"top\" : \"left\";\n    var cursorPosition = isVertical ? e.pageY : e.pageX;\n    var itemPoint;\n\n    for (var i = itemPoints.length - 1; i >= 0; i--) {\n      var centerPosition = itemPoints[i + 1] && (itemPoints[i][axisName] + itemPoints[i + 1][axisName]) / 2;\n\n      if (centerPosition > cursorPosition || void 0 === centerPosition) {\n        itemPoint = itemPoints[i];\n      } else {\n        break;\n      }\n    }\n\n    if (itemPoint) {\n      this._updatePlaceholderPosition(e, itemPoint);\n\n      if (this._verticalScrollHelper.isScrolling() && this._isIndicateMode()) {\n        this._movePlaceholder();\n      }\n    }\n  },\n  _isIndicateMode: function _isIndicateMode() {\n    return \"indicate\" === this.option(\"dropFeedbackMode\") || this.option(\"allowDropInsideItem\");\n  },\n  _createPlaceholder: function _createPlaceholder() {\n    var $placeholderContainer;\n\n    if (this._isIndicateMode()) {\n      $placeholderContainer = (0, _renderer2.default)(\"<div>\").addClass(this._addWidgetPrefix(PLACEHOLDER_CLASS)).insertBefore(this._getSourceDraggable()._$dragElement);\n    }\n\n    this._$placeholderElement = $placeholderContainer;\n    return $placeholderContainer;\n  },\n  _getItems: function _getItems() {\n    var itemsSelector = this._getItemsSelector();\n\n    return this._$content().find(itemsSelector).not(\".\" + this._addWidgetPrefix(PLACEHOLDER_CLASS)).not(\".\" + this._addWidgetPrefix(CLONE_CLASS)).toArray();\n  },\n  _allowReordering: function _allowReordering() {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var targetDraggable = this._getTargetDraggable();\n\n    return sourceDraggable !== targetDraggable || this.option(\"allowReordering\");\n  },\n  _isValidPoint: function _isValidPoint(visibleIndex, draggableVisibleIndex, dropInsideItem) {\n    var allowDropInsideItem = this.option(\"allowDropInsideItem\");\n\n    var allowReordering = dropInsideItem || this._allowReordering();\n\n    if (!allowReordering && (0 !== visibleIndex || !allowDropInsideItem)) {\n      return false;\n    }\n\n    if (!this._isIndicateMode()) {\n      return true;\n    }\n\n    return draggableVisibleIndex === -1 || visibleIndex !== draggableVisibleIndex && (dropInsideItem || visibleIndex !== draggableVisibleIndex + 1);\n  },\n  _getItemPoints: function _getItemPoints() {\n    var that = this;\n    var result;\n\n    var isVertical = that._isVerticalOrientation();\n\n    var itemElements = that._getItems();\n\n    var visibleItemElements = itemElements.filter(isElementVisible);\n\n    var $draggableItem = this._getDraggableElement();\n\n    var draggableVisibleIndex = visibleItemElements.indexOf($draggableItem.get(0));\n    result = visibleItemElements.map(function (item, visibleIndex) {\n      var offset = (0, _renderer2.default)(item).offset();\n      return {\n        dropInsideItem: false,\n        left: offset.left,\n        top: offset.top,\n        index: itemElements.indexOf(item),\n        $item: (0, _renderer2.default)(item),\n        width: (0, _renderer2.default)(item).outerWidth(),\n        height: (0, _renderer2.default)(item).outerHeight(),\n        isValid: that._isValidPoint(visibleIndex, draggableVisibleIndex)\n      };\n    });\n\n    if (result.length) {\n      var lastItem = result[result.length - 1];\n      result.push({\n        dropInsideItem: false,\n        index: itemElements.length,\n        top: isVertical ? lastItem.top + lastItem.height : lastItem.top,\n        left: !isVertical ? lastItem.left + lastItem.width : lastItem.left,\n        isValid: this._isValidPoint(visibleItemElements.length, draggableVisibleIndex)\n      });\n\n      if (this.option(\"allowDropInsideItem\")) {\n        var points = result;\n        result = [];\n\n        for (var i = 0; i < points.length; i++) {\n          result.push(points[i]);\n\n          if (points[i + 1]) {\n            result.push((0, _extend.extend)({}, points[i], {\n              dropInsideItem: true,\n              top: Math.floor((points[i].top + points[i + 1].top) / 2),\n              left: Math.floor((points[i].left + points[i + 1].left) / 2),\n              isValid: this._isValidPoint(i, draggableVisibleIndex, true)\n            }));\n          }\n        }\n      }\n    } else {\n      result.push({\n        dropInsideItem: false,\n        index: 0,\n        isValid: true\n      });\n    }\n\n    return result;\n  },\n  _updateItemPoints: function _updateItemPoints() {\n    this.option(\"itemPoints\", this._getItemPoints());\n  },\n  _getElementIndex: function _getElementIndex($itemElement) {\n    return this._getItems().indexOf($itemElement.get(0));\n  },\n  _getDragTemplateArgs: function _getDragTemplateArgs($element) {\n    var args = this.callBase.apply(this, arguments);\n    args.model.fromIndex = this._getElementIndex($element);\n    return args;\n  },\n  _togglePlaceholder: function _togglePlaceholder(value) {\n    this._$placeholderElement && this._$placeholderElement.toggle(value);\n  },\n  _isVerticalOrientation: function _isVerticalOrientation() {\n    return \"vertical\" === this.option(\"itemOrientation\");\n  },\n  _normalizeToIndex: function _normalizeToIndex(toIndex, dropInsideItem) {\n    var isAnotherDraggable = this._getSourceDraggable() !== this._getTargetDraggable();\n\n    var fromIndex = this.option(\"fromIndex\");\n\n    if (null === toIndex) {\n      return fromIndex;\n    }\n\n    return Math.max(isAnotherDraggable || fromIndex >= toIndex || dropInsideItem ? toIndex : toIndex - 1, 0);\n  },\n  _updatePlaceholderPosition: function _updatePlaceholderPosition(e, itemPoint) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var toIndex = this._normalizeToIndex(itemPoint.index, itemPoint.dropInsideItem);\n\n    var eventArgs = (0, _extend.extend)(this._getEventArgs(e), {\n      toIndex: toIndex,\n      dropInsideItem: itemPoint.dropInsideItem\n    });\n    itemPoint.isValid && this._getAction(\"onDragChange\")(eventArgs);\n\n    if (eventArgs.cancel || !itemPoint.isValid) {\n      if (!itemPoint.isValid) {\n        this.option({\n          dropInsideItem: false,\n          toIndex: null\n        });\n      }\n\n      return;\n    }\n\n    this.option({\n      dropInsideItem: itemPoint.dropInsideItem,\n      toIndex: itemPoint.index\n    });\n\n    this._getAction(\"onPlaceholderPrepared\")((0, _extend.extend)(this._getEventArgs(e), {\n      placeholderElement: (0, _dom.getPublicElement)(this._$placeholderElement),\n      dragElement: (0, _dom.getPublicElement)(sourceDraggable._$dragElement)\n    }));\n\n    this._updateItemPoints();\n  },\n  _makeWidthCorrection: function _makeWidthCorrection($item, width) {\n    var that = this;\n    that._$scrollable = null;\n    $item.parents().toArray().some(function (element) {\n      var $element = (0, _renderer2.default)(element);\n\n      if (that._horizontalScrollHelper.isScrollable($element)) {\n        that._$scrollable = $element;\n        return true;\n      }\n    });\n\n    if (that._$scrollable && that._$scrollable.width() < width) {\n      var scrollableWidth = that._$scrollable.width();\n\n      var offsetLeft = $item.offset().left - that._$scrollable.offset().left;\n\n      var offsetRight = scrollableWidth - $item.outerWidth() - offsetLeft;\n\n      if (offsetLeft > 0) {\n        width = scrollableWidth - offsetLeft;\n      } else {\n        if (offsetRight > 0) {\n          width = scrollableWidth - offsetRight;\n        } else {\n          width = scrollableWidth;\n        }\n      }\n    }\n\n    return width;\n  },\n  _updatePlaceholderSizes: function _updatePlaceholderSizes($placeholderElement, itemElement) {\n    var that = this;\n    var dropInsideItem = that.option(\"dropInsideItem\");\n    var $item = itemElement ? (0, _renderer2.default)(itemElement) : that._getSourceElement();\n\n    var isVertical = that._isVerticalOrientation();\n\n    var width = \"\";\n    var height = \"\";\n    $placeholderElement.toggleClass(that._addWidgetPrefix(\"placeholder-inside\"), dropInsideItem);\n\n    if (isVertical || dropInsideItem) {\n      width = $item.outerWidth();\n    }\n\n    if (!isVertical || dropInsideItem) {\n      height = $item.outerHeight();\n    }\n\n    width = that._makeWidthCorrection($item, width);\n    $placeholderElement.css({\n      width: width,\n      height: height\n    });\n  },\n  _moveItem: function _moveItem($itemElement, index, cancelRemove) {\n    var $prevTargetItemElement;\n\n    var $itemElements = this._getItems();\n\n    var $targetItemElement = $itemElements[index];\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    if (cancelRemove) {\n      $itemElement = $itemElement.clone();\n\n      sourceDraggable._toggleDragSourceClass(false, $itemElement);\n    }\n\n    if (!$targetItemElement) {\n      $prevTargetItemElement = $itemElements[index - 1];\n    }\n\n    this._moveItemCore($itemElement, $targetItemElement, $prevTargetItemElement);\n  },\n  _moveItemCore: function _moveItemCore($targetItem, item, prevItem) {\n    if (!item && !prevItem) {\n      $targetItem.appendTo(this.$element());\n    } else {\n      if (prevItem) {\n        $targetItem.insertAfter((0, _renderer2.default)(prevItem));\n      } else {\n        $targetItem.insertBefore((0, _renderer2.default)(item));\n      }\n    }\n  },\n  _getDragStartArgs: function _getDragStartArgs(e, $itemElement) {\n    return (0, _extend.extend)(this.callBase.apply(this, arguments), {\n      fromIndex: this._getElementIndex($itemElement)\n    });\n  },\n  _getEventArgs: function _getEventArgs(e) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var targetDraggable = this._getTargetDraggable();\n\n    var dropInsideItem = targetDraggable.option(\"dropInsideItem\");\n    return (0, _extend.extend)(this.callBase.apply(this, arguments), {\n      fromIndex: sourceDraggable.option(\"fromIndex\"),\n      toIndex: this._normalizeToIndex(targetDraggable.option(\"toIndex\"), dropInsideItem),\n      dropInsideItem: dropInsideItem\n    });\n  },\n  _optionChanged: function _optionChanged(args) {\n    var name = args.name;\n\n    switch (name) {\n      case \"onDragChange\":\n      case \"onPlaceholderPrepared\":\n      case \"onAdd\":\n      case \"onRemove\":\n      case \"onReorder\":\n        this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\n        break;\n\n      case \"itemOrientation\":\n      case \"allowDropInsideItem\":\n      case \"moveItemOnDrop\":\n      case \"dropFeedbackMode\":\n      case \"itemPoints\":\n      case \"fromIndex\":\n      case \"animation\":\n      case \"allowReordering\":\n        break;\n\n      case \"dropInsideItem\":\n        this._optionChangedDropInsideItem(args);\n\n        break;\n\n      case \"toIndex\":\n        this._optionChangedToIndex(args);\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _optionChangedDropInsideItem: function _optionChangedDropInsideItem(args) {\n    if (this._isIndicateMode() && this._$placeholderElement) {\n      var toIndex = this.option(\"toIndex\");\n\n      var itemElement = this._getItems()[toIndex];\n\n      this._updatePlaceholderSizes(this._$placeholderElement, itemElement);\n    }\n  },\n  _isPositionVisible: function _isPositionVisible(position) {\n    var $element = this.$element();\n    var scrollContainer;\n\n    if (\"hidden\" !== $element.css(\"overflow\")) {\n      scrollContainer = $element.get(0);\n    } else {\n      $element.parents().each(function () {\n        if (\"visible\" !== (0, _renderer2.default)(this).css(\"overflow\")) {\n          scrollContainer = this;\n          return false;\n        }\n      });\n    }\n\n    if (scrollContainer) {\n      var clientRect = scrollContainer.getBoundingClientRect();\n\n      var isVerticalOrientation = this._isVerticalOrientation();\n\n      var start = isVerticalOrientation ? \"top\" : \"left\";\n      var end = isVerticalOrientation ? \"bottom\" : \"right\";\n\n      if (position[start] < clientRect[start] || position[start] > clientRect[end]) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  _optionChangedToIndex: function _optionChangedToIndex(args) {\n    var toIndex = args.value;\n\n    if (this._isIndicateMode()) {\n      var showPlaceholder = null !== toIndex && toIndex >= 0;\n\n      this._togglePlaceholder(showPlaceholder);\n\n      if (showPlaceholder) {\n        this._movePlaceholder();\n      }\n    } else {\n      this._moveItems(args.previousValue, args.value);\n    }\n  },\n  _makeLeftCorrection: function _makeLeftCorrection(left, leftMargin) {\n    var that = this;\n    var $scrollable = that._$scrollable;\n\n    if ($scrollable && that._isVerticalOrientation() && $scrollable.scrollLeft() > leftMargin) {\n      left += $scrollable.scrollLeft() - leftMargin;\n    }\n\n    return left;\n  },\n  _movePlaceholder: function _movePlaceholder() {\n    var that = this;\n\n    var $placeholderElement = that._$placeholderElement || that._createPlaceholder();\n\n    var items = that._getItems();\n\n    var toIndex = that.option(\"toIndex\");\n    var itemElement = items[toIndex];\n\n    var isVerticalOrientation = that._isVerticalOrientation();\n\n    var position = null;\n    var leftMargin = 0;\n\n    that._updatePlaceholderSizes($placeholderElement, itemElement);\n\n    if (itemElement) {\n      var $itemElement = (0, _renderer2.default)(itemElement);\n      position = $itemElement.offset();\n      leftMargin = parseFloat($itemElement.css(\"marginLeft\"));\n    } else {\n      var prevVisibleItemElement = this._getPrevVisibleItem(items, toIndex);\n\n      if (prevVisibleItemElement) {\n        position = (0, _renderer2.default)(prevVisibleItemElement).offset();\n        position.top += isVerticalOrientation ? (0, _renderer2.default)(prevVisibleItemElement).outerHeight(true) : (0, _renderer2.default)(prevVisibleItemElement).outerWidth(true);\n      }\n    }\n\n    if (position && !that._isPositionVisible(position)) {\n      position = null;\n    }\n\n    if (position) {\n      position.left = that._makeLeftCorrection(position.left, leftMargin);\n\n      that._move(position, $placeholderElement);\n    }\n\n    $placeholderElement.toggle(!!position);\n  },\n  _getPositions: function _getPositions(items, elementSize, fromIndex, toIndex) {\n    var positions = [];\n\n    for (var i = 0; i < items.length; i++) {\n      var position = 0;\n\n      if (null === toIndex || null === fromIndex) {\n        positions.push(position);\n        continue;\n      }\n\n      if (fromIndex === -1) {\n        if (i >= toIndex) {\n          position = elementSize;\n        }\n      } else {\n        if (toIndex === -1) {\n          if (i > fromIndex) {\n            position = -elementSize;\n          }\n        } else {\n          if (fromIndex < toIndex) {\n            if (i > fromIndex && i < toIndex) {\n              position = -elementSize;\n            }\n          } else {\n            if (fromIndex > toIndex) {\n              if (i >= toIndex && i < fromIndex) {\n                position = elementSize;\n              }\n            }\n          }\n        }\n      }\n\n      positions.push(position);\n    }\n\n    return positions;\n  },\n  _moveItems: function _moveItems(prevToIndex, toIndex) {\n    var fromIndex = this.option(\"fromIndex\");\n\n    var isVerticalOrientation = this._isVerticalOrientation();\n\n    var positionPropName = isVerticalOrientation ? \"top\" : \"left\";\n\n    var $draggableItem = this._getDraggableElement();\n\n    var elementSize = isVerticalOrientation ? ($draggableItem.outerHeight() + $draggableItem.outerHeight(true)) / 2 : ($draggableItem.outerWidth() + $draggableItem.outerWidth(true)) / 2;\n\n    var items = this._getItems();\n\n    var prevPositions = this._getPositions(items, elementSize, fromIndex, prevToIndex);\n\n    var positions = this._getPositions(items, elementSize, fromIndex, toIndex);\n\n    var animationConfig = this.option(\"animation\");\n\n    for (var i = 0; i < items.length; i++) {\n      var $item = (0, _renderer2.default)(items[i]);\n      var prevPosition = prevPositions[i];\n      var position = positions[i];\n\n      if (null === toIndex || null === fromIndex) {\n        _fx2.default.stop($item);\n\n        _translator2.default.resetPosition($item);\n      } else {\n        if (prevPosition !== position) {\n          _fx2.default.stop($item);\n\n          _fx2.default.animate($item, (0, _extend.extend)({}, animationConfig, {\n            to: _defineProperty({}, positionPropName, position)\n          }));\n        }\n      }\n    }\n  },\n  _toggleDragSourceClass: function _toggleDragSourceClass(value, $element) {\n    var $sourceElement = $element || this._$sourceElement;\n    this.callBase.apply(this, arguments);\n\n    if (!this._isIndicateMode()) {\n      $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source-hidden\"), value);\n    }\n  },\n  _dispose: function _dispose() {\n    this.reset();\n    this.callBase();\n  },\n  _fireAddEvent: function _fireAddEvent(sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n\n    this._getAction(\"onAdd\")(args);\n\n    return args.cancel;\n  },\n  _fireRemoveEvent: function _fireRemoveEvent(sourceEvent) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var args = this._getEventArgs(sourceEvent);\n\n    sourceDraggable._getAction(\"onRemove\")(args);\n\n    return args.cancel;\n  },\n  _fireReorderEvent: function _fireReorderEvent(sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n\n    this._getAction(\"onReorder\")(args);\n  }\n});\n\n(0, _component_registrator2.default)(SORTABLE, Sortable);\nmodule.exports = Sortable;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/sortable.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_component_registrator","_component_registrator2","_extend","_draggable","_draggable2","_dom","_translator","_translator2","_fx","_fx2","obj","__esModule","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","SORTABLE","PLACEHOLDER_CLASS","CLONE_CLASS","isElementVisible","itemElement","default","is","Sortable","inherit","_getDefaultOptions","extend","callBase","clone","filter","itemOrientation","dropFeedbackMode","allowDropInsideItem","allowReordering","moveItemOnDrop","onDragChange","onAdd","onRemove","onReorder","onPlaceholderPrepared","animation","type","duration","fromIndex","toIndex","dropInsideItem","itemPoints","reset","option","_$placeholderElement","remove","_isIndicateMode","_$modifiedItem","css","_modifiedItemMargin","_getPrevVisibleItem","items","index","slice","reverse","_dragStartHandler","e","apply","arguments","cancel","$sourceElement","_getSourceElement","_updateItemPoints","_getElementIndex","_dragEnterHandler","_getSourceDraggable","lastItemPoint","length","$element","isVertical","_isVerticalOrientation","sourceElementSize","outerHeight","outerWidth","scrollSize","get","scrollPosition","positionProp","lastPointPosition","elementPosition","offset","freeSize","_getItems","$lastItem","style","marginBottom","$sortable","closest","sortable","data","update","dragEnter","_getTargetDraggable","dragLeave","dragEnd","sourceEvent","sourceDraggable","isSourceDraggable","NAME","cancelAdd","cancelRemove","_fireAddEvent","_fireRemoveEvent","resetPosition","_moveItem","_fireReorderEvent","dragMove","axisName","cursorPosition","pageY","pageX","itemPoint","i","centerPosition","_updatePlaceholderPosition","_verticalScrollHelper","isScrolling","_movePlaceholder","_createPlaceholder","$placeholderContainer","addClass","_addWidgetPrefix","insertBefore","_$dragElement","itemsSelector","_getItemsSelector","_$content","find","not","toArray","_allowReordering","targetDraggable","_isValidPoint","visibleIndex","draggableVisibleIndex","_getItemPoints","that","result","itemElements","visibleItemElements","$draggableItem","_getDraggableElement","indexOf","map","item","left","top","$item","width","height","isValid","lastItem","push","points","Math","floor","$itemElement","_getDragTemplateArgs","args","model","_togglePlaceholder","toggle","_normalizeToIndex","isAnotherDraggable","max","eventArgs","_getEventArgs","_getAction","placeholderElement","getPublicElement","dragElement","_makeWidthCorrection","_$scrollable","parents","some","element","_horizontalScrollHelper","isScrollable","scrollableWidth","offsetLeft","offsetRight","_updatePlaceholderSizes","$placeholderElement","toggleClass","$prevTargetItemElement","$itemElements","$targetItemElement","_toggleDragSourceClass","_moveItemCore","$targetItem","prevItem","appendTo","insertAfter","_getDragStartArgs","_optionChanged","name","_createActionByOption","_optionChangedDropInsideItem","_optionChangedToIndex","_isPositionVisible","position","scrollContainer","each","clientRect","getBoundingClientRect","isVerticalOrientation","start","end","showPlaceholder","_moveItems","previousValue","_makeLeftCorrection","leftMargin","$scrollable","scrollLeft","parseFloat","prevVisibleItemElement","_move","_getPositions","elementSize","positions","prevToIndex","positionPropName","prevPositions","animationConfig","prevPosition","stop","animate","to","_$sourceElement","_dispose","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/sortable.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _component_registrator = require(\"../core/component_registrator\");\r\nvar _component_registrator2 = _interopRequireDefault(_component_registrator);\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _draggable = require(\"./draggable\");\r\nvar _draggable2 = _interopRequireDefault(_draggable);\r\nvar _dom = require(\"../core/utils/dom\");\r\nvar _translator = require(\"../animation/translator\");\r\nvar _translator2 = _interopRequireDefault(_translator);\r\nvar _fx = require(\"../animation/fx\");\r\nvar _fx2 = _interopRequireDefault(_fx);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar SORTABLE = \"dxSortable\";\r\nvar PLACEHOLDER_CLASS = \"placeholder\";\r\nvar CLONE_CLASS = \"clone\";\r\nvar isElementVisible = function(itemElement) {\r\n    return (0, _renderer2.default)(itemElement).is(\":visible\")\r\n};\r\nvar Sortable = _draggable2.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            clone: true,\r\n            filter: \"> *\",\r\n            itemOrientation: \"vertical\",\r\n            dropFeedbackMode: \"push\",\r\n            allowDropInsideItem: false,\r\n            allowReordering: true,\r\n            moveItemOnDrop: false,\r\n            onDragChange: null,\r\n            onAdd: null,\r\n            onRemove: null,\r\n            onReorder: null,\r\n            onPlaceholderPrepared: null,\r\n            animation: {\r\n                type: \"slide\",\r\n                duration: 300\r\n            },\r\n            fromIndex: null,\r\n            toIndex: null,\r\n            dropInsideItem: false,\r\n            itemPoints: null\r\n        })\r\n    },\r\n    reset: function() {\r\n        this.option({\r\n            dropInsideItem: false,\r\n            toIndex: null,\r\n            fromIndex: null\r\n        });\r\n        if (this._$placeholderElement) {\r\n            this._$placeholderElement.remove()\r\n        }\r\n        this._$placeholderElement = null;\r\n        if (!this._isIndicateMode() && this._$modifiedItem) {\r\n            this._$modifiedItem.css(\"marginBottom\", this._modifiedItemMargin);\r\n            this._$modifiedItem = null\r\n        }\r\n    },\r\n    _getPrevVisibleItem: function(items, index) {\r\n        return items.slice(0, index).reverse().filter(isElementVisible)[0]\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (true === e.cancel) {\r\n            return\r\n        }\r\n        var $sourceElement = this._getSourceElement();\r\n        this._updateItemPoints();\r\n        this.option(\"fromIndex\", this._getElementIndex($sourceElement))\r\n    },\r\n    _dragEnterHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (this === this._getSourceDraggable()) {\r\n            return\r\n        }\r\n        this._updateItemPoints();\r\n        this.option(\"fromIndex\", -1);\r\n        if (!this._isIndicateMode()) {\r\n            var itemPoints = this.option(\"itemPoints\");\r\n            var lastItemPoint = itemPoints[itemPoints.length - 1];\r\n            if (lastItemPoint) {\r\n                var $element = this.$element();\r\n                var $sourceElement = this._getSourceElement();\r\n                var isVertical = this._isVerticalOrientation();\r\n                var sourceElementSize = isVertical ? $sourceElement.outerHeight(true) : $sourceElement.outerWidth(true);\r\n                var scrollSize = $element.get(0)[isVertical ? \"scrollHeight\" : \"scrollWidth\"];\r\n                var scrollPosition = $element.get(0)[isVertical ? \"scrollTop\" : \"scrollLeft\"];\r\n                var positionProp = isVertical ? \"top\" : \"left\";\r\n                var lastPointPosition = lastItemPoint[positionProp];\r\n                var elementPosition = $element.offset()[positionProp];\r\n                var freeSize = elementPosition + scrollSize - scrollPosition - lastPointPosition;\r\n                if (freeSize < sourceElementSize) {\r\n                    if (isVertical) {\r\n                        var items = this._getItems();\r\n                        var $lastItem = (0, _renderer2.default)(this._getPrevVisibleItem(items));\r\n                        this._$modifiedItem = $lastItem;\r\n                        this._modifiedItemMargin = $lastItem.get(0).style.marginBottom;\r\n                        $lastItem.css(\"marginBottom\", sourceElementSize - freeSize);\r\n                        var $sortable = $lastItem.closest(\".dx-sortable\");\r\n                        var sortable = $sortable.data(\"dxScrollable\") || $sortable.data(\"dxScrollView\");\r\n                        sortable && sortable.update()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    dragEnter: function() {\r\n        if (this === this._getTargetDraggable()) {\r\n            this.option(\"toIndex\", this.option(\"fromIndex\"))\r\n        } else {\r\n            this.option(\"toIndex\", -1)\r\n        }\r\n    },\r\n    dragLeave: function() {\r\n        if (this === this._getTargetDraggable()) {\r\n            this.option(\"toIndex\", -1)\r\n        } else {\r\n            this.option(\"toIndex\", this.option(\"fromIndex\"))\r\n        }\r\n    },\r\n    dragEnd: function(sourceEvent) {\r\n        var $sourceElement = this._getSourceElement();\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var isSourceDraggable = sourceDraggable.NAME !== this.NAME;\r\n        var toIndex = this.option(\"toIndex\");\r\n        if (null !== toIndex && toIndex >= 0) {\r\n            var cancelAdd;\r\n            var cancelRemove;\r\n            if (sourceDraggable !== this) {\r\n                cancelAdd = this._fireAddEvent(sourceEvent);\r\n                if (!cancelAdd) {\r\n                    cancelRemove = this._fireRemoveEvent(sourceEvent)\r\n                }\r\n            }\r\n            if (isSourceDraggable) {\r\n                _translator2.default.resetPosition($sourceElement)\r\n            }\r\n            if (this.option(\"moveItemOnDrop\")) {\r\n                !cancelAdd && this._moveItem($sourceElement, toIndex, cancelRemove)\r\n            }\r\n            if (sourceDraggable === this) {\r\n                this._fireReorderEvent(sourceEvent)\r\n            }\r\n        }\r\n    },\r\n    dragMove: function(e) {\r\n        var itemPoints = this.option(\"itemPoints\");\r\n        if (!itemPoints) {\r\n            return\r\n        }\r\n        var isVertical = this._isVerticalOrientation();\r\n        var axisName = isVertical ? \"top\" : \"left\";\r\n        var cursorPosition = isVertical ? e.pageY : e.pageX;\r\n        var itemPoint;\r\n        for (var i = itemPoints.length - 1; i >= 0; i--) {\r\n            var centerPosition = itemPoints[i + 1] && (itemPoints[i][axisName] + itemPoints[i + 1][axisName]) / 2;\r\n            if (centerPosition > cursorPosition || void 0 === centerPosition) {\r\n                itemPoint = itemPoints[i]\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        if (itemPoint) {\r\n            this._updatePlaceholderPosition(e, itemPoint);\r\n            if (this._verticalScrollHelper.isScrolling() && this._isIndicateMode()) {\r\n                this._movePlaceholder()\r\n            }\r\n        }\r\n    },\r\n    _isIndicateMode: function() {\r\n        return \"indicate\" === this.option(\"dropFeedbackMode\") || this.option(\"allowDropInsideItem\")\r\n    },\r\n    _createPlaceholder: function() {\r\n        var $placeholderContainer;\r\n        if (this._isIndicateMode()) {\r\n            $placeholderContainer = (0, _renderer2.default)(\"<div>\").addClass(this._addWidgetPrefix(PLACEHOLDER_CLASS)).insertBefore(this._getSourceDraggable()._$dragElement)\r\n        }\r\n        this._$placeholderElement = $placeholderContainer;\r\n        return $placeholderContainer\r\n    },\r\n    _getItems: function() {\r\n        var itemsSelector = this._getItemsSelector();\r\n        return this._$content().find(itemsSelector).not(\".\" + this._addWidgetPrefix(PLACEHOLDER_CLASS)).not(\".\" + this._addWidgetPrefix(CLONE_CLASS)).toArray()\r\n    },\r\n    _allowReordering: function() {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        return sourceDraggable !== targetDraggable || this.option(\"allowReordering\")\r\n    },\r\n    _isValidPoint: function(visibleIndex, draggableVisibleIndex, dropInsideItem) {\r\n        var allowDropInsideItem = this.option(\"allowDropInsideItem\");\r\n        var allowReordering = dropInsideItem || this._allowReordering();\r\n        if (!allowReordering && (0 !== visibleIndex || !allowDropInsideItem)) {\r\n            return false\r\n        }\r\n        if (!this._isIndicateMode()) {\r\n            return true\r\n        }\r\n        return draggableVisibleIndex === -1 || visibleIndex !== draggableVisibleIndex && (dropInsideItem || visibleIndex !== draggableVisibleIndex + 1)\r\n    },\r\n    _getItemPoints: function() {\r\n        var that = this;\r\n        var result;\r\n        var isVertical = that._isVerticalOrientation();\r\n        var itemElements = that._getItems();\r\n        var visibleItemElements = itemElements.filter(isElementVisible);\r\n        var $draggableItem = this._getDraggableElement();\r\n        var draggableVisibleIndex = visibleItemElements.indexOf($draggableItem.get(0));\r\n        result = visibleItemElements.map(function(item, visibleIndex) {\r\n            var offset = (0, _renderer2.default)(item).offset();\r\n            return {\r\n                dropInsideItem: false,\r\n                left: offset.left,\r\n                top: offset.top,\r\n                index: itemElements.indexOf(item),\r\n                $item: (0, _renderer2.default)(item),\r\n                width: (0, _renderer2.default)(item).outerWidth(),\r\n                height: (0, _renderer2.default)(item).outerHeight(),\r\n                isValid: that._isValidPoint(visibleIndex, draggableVisibleIndex)\r\n            }\r\n        });\r\n        if (result.length) {\r\n            var lastItem = result[result.length - 1];\r\n            result.push({\r\n                dropInsideItem: false,\r\n                index: itemElements.length,\r\n                top: isVertical ? lastItem.top + lastItem.height : lastItem.top,\r\n                left: !isVertical ? lastItem.left + lastItem.width : lastItem.left,\r\n                isValid: this._isValidPoint(visibleItemElements.length, draggableVisibleIndex)\r\n            });\r\n            if (this.option(\"allowDropInsideItem\")) {\r\n                var points = result;\r\n                result = [];\r\n                for (var i = 0; i < points.length; i++) {\r\n                    result.push(points[i]);\r\n                    if (points[i + 1]) {\r\n                        result.push((0, _extend.extend)({}, points[i], {\r\n                            dropInsideItem: true,\r\n                            top: Math.floor((points[i].top + points[i + 1].top) / 2),\r\n                            left: Math.floor((points[i].left + points[i + 1].left) / 2),\r\n                            isValid: this._isValidPoint(i, draggableVisibleIndex, true)\r\n                        }))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            result.push({\r\n                dropInsideItem: false,\r\n                index: 0,\r\n                isValid: true\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _updateItemPoints: function() {\r\n        this.option(\"itemPoints\", this._getItemPoints())\r\n    },\r\n    _getElementIndex: function($itemElement) {\r\n        return this._getItems().indexOf($itemElement.get(0))\r\n    },\r\n    _getDragTemplateArgs: function($element) {\r\n        var args = this.callBase.apply(this, arguments);\r\n        args.model.fromIndex = this._getElementIndex($element);\r\n        return args\r\n    },\r\n    _togglePlaceholder: function(value) {\r\n        this._$placeholderElement && this._$placeholderElement.toggle(value)\r\n    },\r\n    _isVerticalOrientation: function() {\r\n        return \"vertical\" === this.option(\"itemOrientation\")\r\n    },\r\n    _normalizeToIndex: function(toIndex, dropInsideItem) {\r\n        var isAnotherDraggable = this._getSourceDraggable() !== this._getTargetDraggable();\r\n        var fromIndex = this.option(\"fromIndex\");\r\n        if (null === toIndex) {\r\n            return fromIndex\r\n        }\r\n        return Math.max(isAnotherDraggable || fromIndex >= toIndex || dropInsideItem ? toIndex : toIndex - 1, 0)\r\n    },\r\n    _updatePlaceholderPosition: function(e, itemPoint) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var toIndex = this._normalizeToIndex(itemPoint.index, itemPoint.dropInsideItem);\r\n        var eventArgs = (0, _extend.extend)(this._getEventArgs(e), {\r\n            toIndex: toIndex,\r\n            dropInsideItem: itemPoint.dropInsideItem\r\n        });\r\n        itemPoint.isValid && this._getAction(\"onDragChange\")(eventArgs);\r\n        if (eventArgs.cancel || !itemPoint.isValid) {\r\n            if (!itemPoint.isValid) {\r\n                this.option({\r\n                    dropInsideItem: false,\r\n                    toIndex: null\r\n                })\r\n            }\r\n            return\r\n        }\r\n        this.option({\r\n            dropInsideItem: itemPoint.dropInsideItem,\r\n            toIndex: itemPoint.index\r\n        });\r\n        this._getAction(\"onPlaceholderPrepared\")((0, _extend.extend)(this._getEventArgs(e), {\r\n            placeholderElement: (0, _dom.getPublicElement)(this._$placeholderElement),\r\n            dragElement: (0, _dom.getPublicElement)(sourceDraggable._$dragElement)\r\n        }));\r\n        this._updateItemPoints()\r\n    },\r\n    _makeWidthCorrection: function($item, width) {\r\n        var that = this;\r\n        that._$scrollable = null;\r\n        $item.parents().toArray().some(function(element) {\r\n            var $element = (0, _renderer2.default)(element);\r\n            if (that._horizontalScrollHelper.isScrollable($element)) {\r\n                that._$scrollable = $element;\r\n                return true\r\n            }\r\n        });\r\n        if (that._$scrollable && that._$scrollable.width() < width) {\r\n            var scrollableWidth = that._$scrollable.width();\r\n            var offsetLeft = $item.offset().left - that._$scrollable.offset().left;\r\n            var offsetRight = scrollableWidth - $item.outerWidth() - offsetLeft;\r\n            if (offsetLeft > 0) {\r\n                width = scrollableWidth - offsetLeft\r\n            } else {\r\n                if (offsetRight > 0) {\r\n                    width = scrollableWidth - offsetRight\r\n                } else {\r\n                    width = scrollableWidth\r\n                }\r\n            }\r\n        }\r\n        return width\r\n    },\r\n    _updatePlaceholderSizes: function($placeholderElement, itemElement) {\r\n        var that = this;\r\n        var dropInsideItem = that.option(\"dropInsideItem\");\r\n        var $item = itemElement ? (0, _renderer2.default)(itemElement) : that._getSourceElement();\r\n        var isVertical = that._isVerticalOrientation();\r\n        var width = \"\";\r\n        var height = \"\";\r\n        $placeholderElement.toggleClass(that._addWidgetPrefix(\"placeholder-inside\"), dropInsideItem);\r\n        if (isVertical || dropInsideItem) {\r\n            width = $item.outerWidth()\r\n        }\r\n        if (!isVertical || dropInsideItem) {\r\n            height = $item.outerHeight()\r\n        }\r\n        width = that._makeWidthCorrection($item, width);\r\n        $placeholderElement.css({\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _moveItem: function($itemElement, index, cancelRemove) {\r\n        var $prevTargetItemElement;\r\n        var $itemElements = this._getItems();\r\n        var $targetItemElement = $itemElements[index];\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (cancelRemove) {\r\n            $itemElement = $itemElement.clone();\r\n            sourceDraggable._toggleDragSourceClass(false, $itemElement)\r\n        }\r\n        if (!$targetItemElement) {\r\n            $prevTargetItemElement = $itemElements[index - 1]\r\n        }\r\n        this._moveItemCore($itemElement, $targetItemElement, $prevTargetItemElement)\r\n    },\r\n    _moveItemCore: function($targetItem, item, prevItem) {\r\n        if (!item && !prevItem) {\r\n            $targetItem.appendTo(this.$element())\r\n        } else {\r\n            if (prevItem) {\r\n                $targetItem.insertAfter((0, _renderer2.default)(prevItem))\r\n            } else {\r\n                $targetItem.insertBefore((0, _renderer2.default)(item))\r\n            }\r\n        }\r\n    },\r\n    _getDragStartArgs: function(e, $itemElement) {\r\n        return (0, _extend.extend)(this.callBase.apply(this, arguments), {\r\n            fromIndex: this._getElementIndex($itemElement)\r\n        })\r\n    },\r\n    _getEventArgs: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var dropInsideItem = targetDraggable.option(\"dropInsideItem\");\r\n        return (0, _extend.extend)(this.callBase.apply(this, arguments), {\r\n            fromIndex: sourceDraggable.option(\"fromIndex\"),\r\n            toIndex: this._normalizeToIndex(targetDraggable.option(\"toIndex\"), dropInsideItem),\r\n            dropInsideItem: dropInsideItem\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragChange\":\r\n            case \"onPlaceholderPrepared\":\r\n            case \"onAdd\":\r\n            case \"onRemove\":\r\n            case \"onReorder\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"itemOrientation\":\r\n            case \"allowDropInsideItem\":\r\n            case \"moveItemOnDrop\":\r\n            case \"dropFeedbackMode\":\r\n            case \"itemPoints\":\r\n            case \"fromIndex\":\r\n            case \"animation\":\r\n            case \"allowReordering\":\r\n                break;\r\n            case \"dropInsideItem\":\r\n                this._optionChangedDropInsideItem(args);\r\n                break;\r\n            case \"toIndex\":\r\n                this._optionChangedToIndex(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _optionChangedDropInsideItem: function(args) {\r\n        if (this._isIndicateMode() && this._$placeholderElement) {\r\n            var toIndex = this.option(\"toIndex\");\r\n            var itemElement = this._getItems()[toIndex];\r\n            this._updatePlaceholderSizes(this._$placeholderElement, itemElement)\r\n        }\r\n    },\r\n    _isPositionVisible: function(position) {\r\n        var $element = this.$element();\r\n        var scrollContainer;\r\n        if (\"hidden\" !== $element.css(\"overflow\")) {\r\n            scrollContainer = $element.get(0)\r\n        } else {\r\n            $element.parents().each(function() {\r\n                if (\"visible\" !== (0, _renderer2.default)(this).css(\"overflow\")) {\r\n                    scrollContainer = this;\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n        if (scrollContainer) {\r\n            var clientRect = scrollContainer.getBoundingClientRect();\r\n            var isVerticalOrientation = this._isVerticalOrientation();\r\n            var start = isVerticalOrientation ? \"top\" : \"left\";\r\n            var end = isVerticalOrientation ? \"bottom\" : \"right\";\r\n            if (position[start] < clientRect[start] || position[start] > clientRect[end]) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _optionChangedToIndex: function(args) {\r\n        var toIndex = args.value;\r\n        if (this._isIndicateMode()) {\r\n            var showPlaceholder = null !== toIndex && toIndex >= 0;\r\n            this._togglePlaceholder(showPlaceholder);\r\n            if (showPlaceholder) {\r\n                this._movePlaceholder()\r\n            }\r\n        } else {\r\n            this._moveItems(args.previousValue, args.value)\r\n        }\r\n    },\r\n    _makeLeftCorrection: function(left, leftMargin) {\r\n        var that = this;\r\n        var $scrollable = that._$scrollable;\r\n        if ($scrollable && that._isVerticalOrientation() && $scrollable.scrollLeft() > leftMargin) {\r\n            left += $scrollable.scrollLeft() - leftMargin\r\n        }\r\n        return left\r\n    },\r\n    _movePlaceholder: function() {\r\n        var that = this;\r\n        var $placeholderElement = that._$placeholderElement || that._createPlaceholder();\r\n        var items = that._getItems();\r\n        var toIndex = that.option(\"toIndex\");\r\n        var itemElement = items[toIndex];\r\n        var isVerticalOrientation = that._isVerticalOrientation();\r\n        var position = null;\r\n        var leftMargin = 0;\r\n        that._updatePlaceholderSizes($placeholderElement, itemElement);\r\n        if (itemElement) {\r\n            var $itemElement = (0, _renderer2.default)(itemElement);\r\n            position = $itemElement.offset();\r\n            leftMargin = parseFloat($itemElement.css(\"marginLeft\"))\r\n        } else {\r\n            var prevVisibleItemElement = this._getPrevVisibleItem(items, toIndex);\r\n            if (prevVisibleItemElement) {\r\n                position = (0, _renderer2.default)(prevVisibleItemElement).offset();\r\n                position.top += isVerticalOrientation ? (0, _renderer2.default)(prevVisibleItemElement).outerHeight(true) : (0, _renderer2.default)(prevVisibleItemElement).outerWidth(true)\r\n            }\r\n        }\r\n        if (position && !that._isPositionVisible(position)) {\r\n            position = null\r\n        }\r\n        if (position) {\r\n            position.left = that._makeLeftCorrection(position.left, leftMargin);\r\n            that._move(position, $placeholderElement)\r\n        }\r\n        $placeholderElement.toggle(!!position)\r\n    },\r\n    _getPositions: function(items, elementSize, fromIndex, toIndex) {\r\n        var positions = [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            var position = 0;\r\n            if (null === toIndex || null === fromIndex) {\r\n                positions.push(position);\r\n                continue\r\n            }\r\n            if (fromIndex === -1) {\r\n                if (i >= toIndex) {\r\n                    position = elementSize\r\n                }\r\n            } else {\r\n                if (toIndex === -1) {\r\n                    if (i > fromIndex) {\r\n                        position = -elementSize\r\n                    }\r\n                } else {\r\n                    if (fromIndex < toIndex) {\r\n                        if (i > fromIndex && i < toIndex) {\r\n                            position = -elementSize\r\n                        }\r\n                    } else {\r\n                        if (fromIndex > toIndex) {\r\n                            if (i >= toIndex && i < fromIndex) {\r\n                                position = elementSize\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            positions.push(position)\r\n        }\r\n        return positions\r\n    },\r\n    _moveItems: function(prevToIndex, toIndex) {\r\n        var fromIndex = this.option(\"fromIndex\");\r\n        var isVerticalOrientation = this._isVerticalOrientation();\r\n        var positionPropName = isVerticalOrientation ? \"top\" : \"left\";\r\n        var $draggableItem = this._getDraggableElement();\r\n        var elementSize = isVerticalOrientation ? ($draggableItem.outerHeight() + $draggableItem.outerHeight(true)) / 2 : ($draggableItem.outerWidth() + $draggableItem.outerWidth(true)) / 2;\r\n        var items = this._getItems();\r\n        var prevPositions = this._getPositions(items, elementSize, fromIndex, prevToIndex);\r\n        var positions = this._getPositions(items, elementSize, fromIndex, toIndex);\r\n        var animationConfig = this.option(\"animation\");\r\n        for (var i = 0; i < items.length; i++) {\r\n            var $item = (0, _renderer2.default)(items[i]);\r\n            var prevPosition = prevPositions[i];\r\n            var position = positions[i];\r\n            if (null === toIndex || null === fromIndex) {\r\n                _fx2.default.stop($item);\r\n                _translator2.default.resetPosition($item)\r\n            } else {\r\n                if (prevPosition !== position) {\r\n                    _fx2.default.stop($item);\r\n                    _fx2.default.animate($item, (0, _extend.extend)({}, animationConfig, {\r\n                        to: _defineProperty({}, positionPropName, position)\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _toggleDragSourceClass: function(value, $element) {\r\n        var $sourceElement = $element || this._$sourceElement;\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._isIndicateMode()) {\r\n            $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source-hidden\"), value)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this.reset();\r\n        this.callBase()\r\n    },\r\n    _fireAddEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onAdd\")(args);\r\n        return args.cancel\r\n    },\r\n    _fireRemoveEvent: function(sourceEvent) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var args = this._getEventArgs(sourceEvent);\r\n        sourceDraggable._getAction(\"onRemove\")(args);\r\n        return args.cancel\r\n    },\r\n    _fireReorderEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onReorder\")(args)\r\n    }\r\n});\r\n(0, _component_registrator2.default)(SORTABLE, Sortable);\r\nmodule.exports = Sortable;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}