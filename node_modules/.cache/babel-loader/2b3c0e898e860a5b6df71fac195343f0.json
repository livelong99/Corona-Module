{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/points/base_point.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar mixins = {};\n\nvar statesConsts = require(\"../../components/consts\").states;\n\nvar symbolPoint = require(\"./symbol_point\");\n\nvar barPoint = require(\"./bar_point\");\n\nvar bubblePoint = require(\"./bubble_point\");\n\nvar piePoint = require(\"./pie_point\");\n\nvar rangeSymbolPoint = require(\"./range_symbol_point\");\n\nvar rangeBarPoint = require(\"./range_bar_point\");\n\nvar candlestickPoint = require(\"./candlestick_point\");\n\nvar stockPoint = require(\"./stock_point\");\n\nvar polarPoints = require(\"./polar_point\");\n\nvar _normalizeEnum = require(\"../../core/utils\").normalizeEnum;\n\nvar extend = require(\"../../../core/utils/extend\").extend;\n\nvar _extend = extend;\n\nvar _isDefined = require(\"../../../core/utils/type\").isDefined;\n\nvar _noop = require(\"../../../core/utils/common\").noop;\n\nvar SYMBOL_POINT = \"symbolPoint\";\nvar POLAR_SYMBOL_POINT = \"polarSymbolPoint\";\nvar BAR_POINT = \"barPoint\";\nvar POLAR_BAR_POINT = \"polarBarPoint\";\nvar PIE_POINT = \"piePoint\";\nvar SELECTED_STATE = statesConsts.selectedMark;\nvar HOVER_STATE = statesConsts.hoverMark;\nvar NORMAL_STATE = statesConsts.normalMark;\nvar HOVER = statesConsts.hover;\nvar NORMAL = statesConsts.normal;\nvar SELECTION = statesConsts.selection;\nvar pointTypes = {\n  chart: {\n    scatter: SYMBOL_POINT,\n    line: SYMBOL_POINT,\n    spline: SYMBOL_POINT,\n    stepline: SYMBOL_POINT,\n    stackedline: SYMBOL_POINT,\n    fullstackedline: SYMBOL_POINT,\n    stackedspline: SYMBOL_POINT,\n    fullstackedspline: SYMBOL_POINT,\n    stackedsplinearea: SYMBOL_POINT,\n    fullstackedsplinearea: SYMBOL_POINT,\n    area: SYMBOL_POINT,\n    splinearea: SYMBOL_POINT,\n    steparea: SYMBOL_POINT,\n    stackedarea: SYMBOL_POINT,\n    fullstackedarea: SYMBOL_POINT,\n    rangearea: \"rangeSymbolPoint\",\n    bar: BAR_POINT,\n    stackedbar: BAR_POINT,\n    fullstackedbar: BAR_POINT,\n    rangebar: \"rangeBarPoint\",\n    bubble: \"bubblePoint\",\n    stock: \"stockPoint\",\n    candlestick: \"candlestickPoint\"\n  },\n  pie: {\n    pie: PIE_POINT,\n    doughnut: PIE_POINT,\n    donut: PIE_POINT\n  },\n  polar: {\n    scatter: POLAR_SYMBOL_POINT,\n    line: POLAR_SYMBOL_POINT,\n    area: POLAR_SYMBOL_POINT,\n    bar: POLAR_BAR_POINT,\n    stackedbar: POLAR_BAR_POINT\n  }\n};\n\nfunction isNoneMode(mode) {\n  return \"none\" === _normalizeEnum(mode);\n}\n\nfunction Point(series, dataItem, options) {\n  this.fullState = NORMAL_STATE;\n  this.series = series;\n  this.update(dataItem, options);\n  this._viewCounters = {\n    hover: 0,\n    selection: 0\n  };\n  this._emptySettings = {\n    fill: null,\n    stroke: null,\n    dashStyle: null\n  };\n}\n\nexports.Point = Point;\nmixins.symbolPoint = symbolPoint;\nmixins.barPoint = barPoint;\nmixins.bubblePoint = bubblePoint;\nmixins.piePoint = piePoint;\nmixins.rangeSymbolPoint = rangeSymbolPoint;\nmixins.rangeBarPoint = rangeBarPoint;\nmixins.candlestickPoint = candlestickPoint;\nmixins.stockPoint = stockPoint;\nmixins.polarSymbolPoint = polarPoints.polarSymbolPoint;\nmixins.polarBarPoint = polarPoints.polarBarPoint;\nPoint.prototype = {\n  constructor: Point,\n  getColor: function getColor() {\n    if (!this.hasValue() && !this._styles.usePointCustomOptions) {\n      this.series.customizePoint(this, this._dataItem);\n    }\n\n    return this._styles.normal.fill || this.series.getColor();\n  },\n  _getStyle: function _getStyle() {\n    return this._styles[this._currentStyle || \"normal\"];\n  },\n  update: function update(dataItem, options) {\n    this.updateOptions(options);\n    this.updateData(dataItem);\n  },\n  updateData: function updateData(dataItem) {\n    var that = this;\n    var argumentWasChanged = that.argument !== dataItem.argument;\n    that.argument = that.initialArgument = that.originalArgument = dataItem.argument;\n    that.tag = dataItem.tag;\n    that.index = dataItem.index;\n    that._dataItem = dataItem;\n    that.data = dataItem.data;\n    that.lowError = dataItem.lowError;\n    that.highError = dataItem.highError;\n    that.aggregationInfo = dataItem.aggregationInfo;\n\n    that._updateData(dataItem, argumentWasChanged);\n\n    !that.hasValue() && that.setInvisibility();\n\n    that._fillStyle();\n\n    that._updateLabelData();\n  },\n  deleteMarker: function deleteMarker() {\n    var that = this;\n\n    if (that.graphic) {\n      that.graphic.dispose();\n    }\n\n    that.graphic = null;\n  },\n  draw: function draw(renderer, groups, animationEnabled, firstDrawing) {\n    var that = this;\n\n    if (that._needDeletingOnDraw || that.series.autoHidePointMarkers && !that.isSelected()) {\n      that.deleteMarker();\n      that._needDeletingOnDraw = false;\n    }\n\n    if (that._needClearingOnDraw) {\n      that.clearMarker();\n      that._needClearingOnDraw = false;\n    }\n\n    if (!that._hasGraphic()) {\n      that.getMarkerVisibility() && !that.series.autoHidePointMarkers && that._drawMarker(renderer, groups.markers, animationEnabled, firstDrawing);\n    } else {\n      that._updateMarker(animationEnabled, this._getStyle(), groups.markers);\n    }\n\n    that._drawLabel();\n\n    that._drawErrorBar(renderer, groups.errorBars, animationEnabled);\n\n    return that;\n  },\n  _getViewStyle: function _getViewStyle() {\n    var state = NORMAL_STATE;\n    var fullState = this.fullState;\n    var styles = [NORMAL, HOVER, SELECTION, SELECTION];\n\n    if (this._viewCounters.hover) {\n      state |= HOVER_STATE;\n    }\n\n    if (this._viewCounters.selection) {\n      state |= SELECTED_STATE;\n    }\n\n    if (isNoneMode(this.getOptions().selectionMode)) {\n      fullState &= ~SELECTED_STATE;\n    }\n\n    if (isNoneMode(this.getOptions().hoverMode)) {\n      fullState &= ~HOVER_STATE;\n    }\n\n    state |= fullState;\n    return styles[state];\n  },\n  applyView: function applyView(legendCallback) {\n    var style = this._getViewStyle();\n\n    var that = this;\n    that._currentStyle = style;\n\n    if (!that.graphic && that.series.autoHidePointMarkers && (style === SELECTION || style === HOVER)) {\n      that._drawMarker(that.series.getRenderer(), that.series.getMarkersGroup());\n    }\n\n    if (that.graphic) {\n      if (that.series.autoHidePointMarkers && style !== SELECTION && style !== HOVER) {\n        that.deleteMarker();\n      } else {\n        if (\"normal\" === style) {\n          that.clearMarker();\n        } else {\n          that.graphic.toForeground();\n        }\n\n        that._updateMarker(true, that._styles[style], void 0, legendCallback);\n      }\n    }\n  },\n  setView: function setView(style) {\n    this._viewCounters[style]++;\n    this.applyView();\n  },\n  resetView: function resetView(style) {\n    var viewCounters = this._viewCounters;\n    --viewCounters[style];\n\n    if (viewCounters[style] < 0) {\n      viewCounters[style] = 0;\n    }\n\n    this.applyView();\n  },\n  releaseHoverState: function releaseHoverState() {\n    var that = this;\n\n    if (that.graphic && !that.isSelected()) {\n      that.graphic.toBackground();\n    }\n  },\n  select: function select() {\n    this.series.selectPoint(this);\n  },\n  clearSelection: function clearSelection() {\n    this.series.deselectPoint(this);\n  },\n  hover: function hover() {\n    this.series.hoverPoint(this);\n  },\n  clearHover: function clearHover() {\n    this.series.clearPointHover();\n  },\n  showTooltip: function showTooltip() {\n    this.series.showPointTooltip(this);\n  },\n  hideTooltip: function hideTooltip() {\n    this.series.hidePointTooltip(this);\n  },\n  _checkLabelsChanging: function _checkLabelsChanging(oldType, newType) {\n    var isNewRange = ~newType.indexOf(\"range\");\n    var isOldRange = ~oldType.indexOf(\"range\");\n    return isOldRange && !isNewRange || !isOldRange && isNewRange;\n  },\n  updateOptions: function updateOptions(newOptions) {\n    if (!newOptions) {\n      return;\n    }\n\n    var that = this;\n    var oldOptions = that._options;\n    var widgetType = newOptions.widgetType;\n    var oldType = oldOptions && oldOptions.type;\n    var newType = newOptions.type;\n    var newPointTypeMixin = pointTypes[widgetType][newType];\n\n    if (oldType !== newType) {\n      that._needDeletingOnDraw = true;\n      that._needClearingOnDraw = false;\n\n      if (oldType) {\n        that._checkLabelsChanging(oldType, newType) && that.deleteLabel();\n\n        that._resetType(mixins[pointTypes[oldType]]);\n      }\n\n      that._setType(mixins[newPointTypeMixin]);\n    } else {\n      that._needDeletingOnDraw = that._checkSymbol(oldOptions, newOptions);\n      that._needClearingOnDraw = that._checkCustomize(oldOptions, newOptions);\n    }\n\n    that._options = newOptions;\n\n    that._fillStyle();\n\n    that._updateLabelOptions(newPointTypeMixin);\n  },\n  translate: function translate() {\n    if (this.hasValue()) {\n      this._translate();\n\n      this.translated = true;\n    }\n  },\n  _checkCustomize: function _checkCustomize(oldOptions, newOptions) {\n    return oldOptions.styles.usePointCustomOptions && !newOptions.styles.usePointCustomOptions;\n  },\n  _getCustomLabelVisibility: function _getCustomLabelVisibility() {\n    return this._styles.useLabelCustomOptions ? !!this._options.label.visible : null;\n  },\n  getBoundingRect: function getBoundingRect() {\n    return this._getGraphicBBox();\n  },\n  _resetType: function _resetType(methods) {\n    for (var methodName in methods) {\n      delete this[methodName];\n    }\n  },\n  _setType: function _setType(methods) {\n    for (var methodName in methods) {\n      this[methodName] = methods[methodName];\n    }\n  },\n  isInVisibleArea: function isInVisibleArea() {\n    return this.inVisibleArea;\n  },\n  isSelected: function isSelected() {\n    return !!(this.fullState & SELECTED_STATE);\n  },\n  isHovered: function isHovered() {\n    return !!(this.fullState & HOVER_STATE);\n  },\n  getOptions: function getOptions() {\n    return this._options;\n  },\n  animate: function animate(complete, settings, partitionDuration) {\n    if (!this.graphic) {\n      complete && complete();\n      return;\n    }\n\n    this.graphic.animate(settings, {\n      partitionDuration: partitionDuration\n    }, complete);\n  },\n  getCoords: function getCoords(min) {\n    var that = this;\n\n    if (!min) {\n      return {\n        x: that.x,\n        y: that.y\n      };\n    }\n\n    if (!that._options.rotated) {\n      return {\n        x: that.x,\n        y: that.minY + (that.y - that.minY ? 0 : 1)\n      };\n    }\n\n    return {\n      x: that.minX - (that.x - that.minX ? 0 : 1),\n      y: that.y\n    };\n  },\n  getDefaultCoords: function getDefaultCoords() {\n    var that = this;\n    return !that._options.rotated ? {\n      x: that.x,\n      y: that.defaultY\n    } : {\n      x: that.defaultX,\n      y: that.y\n    };\n  },\n  setDefaultCoords: function setDefaultCoords() {\n    var coords = this.getDefaultCoords();\n    this.x = coords.x;\n    this.y = coords.y;\n  },\n  _getVisibleArea: function _getVisibleArea() {\n    return this.series.getVisibleArea();\n  },\n  _getArgTranslator: function _getArgTranslator() {\n    return this.series.getArgumentAxis().getTranslator();\n  },\n  _getValTranslator: function _getValTranslator() {\n    return this.series.getValueAxis().getTranslator();\n  },\n  _calculateVisibility: function _calculateVisibility(x, y, width, height) {\n    var that = this;\n\n    var visibleArea = that._getVisibleArea();\n\n    var rotated = that._options.rotated;\n\n    if (visibleArea.minX > x + (width || 0) || visibleArea.maxX < x || visibleArea.minY > y + (height || 0) || visibleArea.maxY < y || rotated && _isDefined(width) && 0 !== width && (visibleArea.minX === x + width || visibleArea.maxX === x) || !rotated && _isDefined(height) && 0 !== height && (visibleArea.minY === y + height || visibleArea.maxY === y)) {\n      that.inVisibleArea = false;\n    } else {\n      that.inVisibleArea = true;\n    }\n  },\n  isArgumentCorrect: function isArgumentCorrect() {\n    return this.series._argumentChecker(this.argument);\n  },\n  isValueCorrect: function isValueCorrect() {\n    var valueChecker = this.series._valueChecker;\n    return valueChecker(this.getMinValue()) && valueChecker(this.getMaxValue());\n  },\n  hasValue: function hasValue() {\n    return null !== this.value && null !== this.minValue && this.isArgumentCorrect() && this.isValueCorrect();\n  },\n  hasCoords: _noop,\n  correctPosition: _noop,\n  correctRadius: _noop,\n  correctLabelRadius: _noop,\n  getCrosshairData: _noop,\n  getPointRadius: _noop,\n  _populatePointShape: _noop,\n  _checkSymbol: _noop,\n  getMarkerCoords: _noop,\n  hide: _noop,\n  show: _noop,\n  hideMarker: _noop,\n  setInvisibility: _noop,\n  clearVisibility: _noop,\n  isVisible: _noop,\n  resetCorrection: _noop,\n  correctValue: _noop,\n  resetValue: _noop,\n  setPercentValue: _noop,\n  correctCoordinates: _noop,\n  coordsIn: _noop,\n  getTooltipParams: _noop,\n  applyWordWrap: _noop,\n  setLabelTrackerData: _noop,\n  updateLabelCoord: _noop,\n  drawLabel: _noop,\n  correctLabelPosition: _noop,\n  getMinValue: _noop,\n  getMaxValue: _noop,\n  _drawErrorBar: _noop,\n  getMarkerVisibility: _noop,\n  dispose: function dispose() {\n    var that = this;\n    that.deleteMarker();\n    that.deleteLabel();\n    that._errorBar && this._errorBar.dispose();\n    that._options = that._styles = that.series = that._errorBar = null;\n  },\n  getTooltipFormatObject: function getTooltipFormatObject(tooltip, stackPoints) {\n    var that = this;\n\n    var tooltipFormatObject = that._getFormatObject(tooltip);\n\n    var sharedTooltipValuesArray = [];\n    var tooltipStackPointsFormatObject = [];\n\n    if (stackPoints) {\n      stackPoints.forEach(function (point) {\n        if (!point.isVisible()) {\n          return;\n        }\n\n        var formatObject = point._getFormatObject(tooltip);\n\n        tooltipStackPointsFormatObject.push(formatObject);\n        sharedTooltipValuesArray.push(formatObject.seriesName + \": \" + formatObject.valueText);\n      });\n\n      _extend(tooltipFormatObject, {\n        points: tooltipStackPointsFormatObject,\n        valueText: sharedTooltipValuesArray.join(\"\\n\"),\n        stackName: that.series.getStackName() || null\n      });\n    }\n\n    var aggregationInfo = that.aggregationInfo;\n\n    if (aggregationInfo) {\n      var axis = that.series.getArgumentAxis();\n      var rangeText = axis.formatRange(aggregationInfo.intervalStart, aggregationInfo.intervalEnd, aggregationInfo.aggregationInterval);\n\n      if (rangeText) {\n        tooltipFormatObject.valueText += \"\\n\".concat(rangeText);\n      }\n    }\n\n    return tooltipFormatObject;\n  },\n  setHole: function setHole(holeValue, position) {\n    var that = this;\n    var minValue = isFinite(that.minValue) ? that.minValue : 0;\n\n    if (_isDefined(holeValue)) {\n      if (\"left\" === position) {\n        that.leftHole = that.value - holeValue;\n        that.minLeftHole = minValue - holeValue;\n      } else {\n        that.rightHole = that.value - holeValue;\n        that.minRightHole = minValue - holeValue;\n      }\n    }\n  },\n  resetHoles: function resetHoles() {\n    this.leftHole = null;\n    this.minLeftHole = null;\n    this.rightHole = null;\n    this.minRightHole = null;\n  },\n  getLabel: function getLabel() {\n    return this._label;\n  },\n  getLabels: function getLabels() {\n    return [this._label];\n  },\n  getCenterCoord: function getCenterCoord() {\n    return {\n      x: this.x,\n      y: this.y\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/series/points/base_point.js"],"names":["mixins","statesConsts","require","states","symbolPoint","barPoint","bubblePoint","piePoint","rangeSymbolPoint","rangeBarPoint","candlestickPoint","stockPoint","polarPoints","_normalizeEnum","normalizeEnum","extend","_extend","_isDefined","isDefined","_noop","noop","SYMBOL_POINT","POLAR_SYMBOL_POINT","BAR_POINT","POLAR_BAR_POINT","PIE_POINT","SELECTED_STATE","selectedMark","HOVER_STATE","hoverMark","NORMAL_STATE","normalMark","HOVER","hover","NORMAL","normal","SELECTION","selection","pointTypes","chart","scatter","line","spline","stepline","stackedline","fullstackedline","stackedspline","fullstackedspline","stackedsplinearea","fullstackedsplinearea","area","splinearea","steparea","stackedarea","fullstackedarea","rangearea","bar","stackedbar","fullstackedbar","rangebar","bubble","stock","candlestick","pie","doughnut","donut","polar","isNoneMode","mode","Point","series","dataItem","options","fullState","update","_viewCounters","_emptySettings","fill","stroke","dashStyle","exports","polarSymbolPoint","polarBarPoint","prototype","constructor","getColor","hasValue","_styles","usePointCustomOptions","customizePoint","_dataItem","_getStyle","_currentStyle","updateOptions","updateData","that","argumentWasChanged","argument","initialArgument","originalArgument","tag","index","data","lowError","highError","aggregationInfo","_updateData","setInvisibility","_fillStyle","_updateLabelData","deleteMarker","graphic","dispose","draw","renderer","groups","animationEnabled","firstDrawing","_needDeletingOnDraw","autoHidePointMarkers","isSelected","_needClearingOnDraw","clearMarker","_hasGraphic","getMarkerVisibility","_drawMarker","markers","_updateMarker","_drawLabel","_drawErrorBar","errorBars","_getViewStyle","state","styles","getOptions","selectionMode","hoverMode","applyView","legendCallback","style","getRenderer","getMarkersGroup","toForeground","setView","resetView","viewCounters","releaseHoverState","toBackground","select","selectPoint","clearSelection","deselectPoint","hoverPoint","clearHover","clearPointHover","showTooltip","showPointTooltip","hideTooltip","hidePointTooltip","_checkLabelsChanging","oldType","newType","isNewRange","indexOf","isOldRange","newOptions","oldOptions","_options","widgetType","type","newPointTypeMixin","deleteLabel","_resetType","_setType","_checkSymbol","_checkCustomize","_updateLabelOptions","translate","_translate","translated","_getCustomLabelVisibility","useLabelCustomOptions","label","visible","getBoundingRect","_getGraphicBBox","methods","methodName","isInVisibleArea","inVisibleArea","isHovered","animate","complete","settings","partitionDuration","getCoords","min","x","y","rotated","minY","minX","getDefaultCoords","defaultY","defaultX","setDefaultCoords","coords","_getVisibleArea","getVisibleArea","_getArgTranslator","getArgumentAxis","getTranslator","_getValTranslator","getValueAxis","_calculateVisibility","width","height","visibleArea","maxX","maxY","isArgumentCorrect","_argumentChecker","isValueCorrect","valueChecker","_valueChecker","getMinValue","getMaxValue","value","minValue","hasCoords","correctPosition","correctRadius","correctLabelRadius","getCrosshairData","getPointRadius","_populatePointShape","getMarkerCoords","hide","show","hideMarker","clearVisibility","isVisible","resetCorrection","correctValue","resetValue","setPercentValue","correctCoordinates","coordsIn","getTooltipParams","applyWordWrap","setLabelTrackerData","updateLabelCoord","drawLabel","correctLabelPosition","_errorBar","getTooltipFormatObject","tooltip","stackPoints","tooltipFormatObject","_getFormatObject","sharedTooltipValuesArray","tooltipStackPointsFormatObject","forEach","point","formatObject","push","seriesName","valueText","points","join","stackName","getStackName","axis","rangeText","formatRange","intervalStart","intervalEnd","aggregationInterval","concat","setHole","holeValue","position","isFinite","leftHole","minLeftHole","rightHole","minRightHole","resetHoles","getLabel","_label","getLabels","getCenterCoord"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/points/base_point.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar mixins = {};\r\nvar statesConsts = require(\"../../components/consts\").states;\r\nvar symbolPoint = require(\"./symbol_point\");\r\nvar barPoint = require(\"./bar_point\");\r\nvar bubblePoint = require(\"./bubble_point\");\r\nvar piePoint = require(\"./pie_point\");\r\nvar rangeSymbolPoint = require(\"./range_symbol_point\");\r\nvar rangeBarPoint = require(\"./range_bar_point\");\r\nvar candlestickPoint = require(\"./candlestick_point\");\r\nvar stockPoint = require(\"./stock_point\");\r\nvar polarPoints = require(\"./polar_point\");\r\nvar _normalizeEnum = require(\"../../core/utils\").normalizeEnum;\r\nvar extend = require(\"../../../core/utils/extend\").extend;\r\nvar _extend = extend;\r\nvar _isDefined = require(\"../../../core/utils/type\").isDefined;\r\nvar _noop = require(\"../../../core/utils/common\").noop;\r\nvar SYMBOL_POINT = \"symbolPoint\";\r\nvar POLAR_SYMBOL_POINT = \"polarSymbolPoint\";\r\nvar BAR_POINT = \"barPoint\";\r\nvar POLAR_BAR_POINT = \"polarBarPoint\";\r\nvar PIE_POINT = \"piePoint\";\r\nvar SELECTED_STATE = statesConsts.selectedMark;\r\nvar HOVER_STATE = statesConsts.hoverMark;\r\nvar NORMAL_STATE = statesConsts.normalMark;\r\nvar HOVER = statesConsts.hover;\r\nvar NORMAL = statesConsts.normal;\r\nvar SELECTION = statesConsts.selection;\r\nvar pointTypes = {\r\n    chart: {\r\n        scatter: SYMBOL_POINT,\r\n        line: SYMBOL_POINT,\r\n        spline: SYMBOL_POINT,\r\n        stepline: SYMBOL_POINT,\r\n        stackedline: SYMBOL_POINT,\r\n        fullstackedline: SYMBOL_POINT,\r\n        stackedspline: SYMBOL_POINT,\r\n        fullstackedspline: SYMBOL_POINT,\r\n        stackedsplinearea: SYMBOL_POINT,\r\n        fullstackedsplinearea: SYMBOL_POINT,\r\n        area: SYMBOL_POINT,\r\n        splinearea: SYMBOL_POINT,\r\n        steparea: SYMBOL_POINT,\r\n        stackedarea: SYMBOL_POINT,\r\n        fullstackedarea: SYMBOL_POINT,\r\n        rangearea: \"rangeSymbolPoint\",\r\n        bar: BAR_POINT,\r\n        stackedbar: BAR_POINT,\r\n        fullstackedbar: BAR_POINT,\r\n        rangebar: \"rangeBarPoint\",\r\n        bubble: \"bubblePoint\",\r\n        stock: \"stockPoint\",\r\n        candlestick: \"candlestickPoint\"\r\n    },\r\n    pie: {\r\n        pie: PIE_POINT,\r\n        doughnut: PIE_POINT,\r\n        donut: PIE_POINT\r\n    },\r\n    polar: {\r\n        scatter: POLAR_SYMBOL_POINT,\r\n        line: POLAR_SYMBOL_POINT,\r\n        area: POLAR_SYMBOL_POINT,\r\n        bar: POLAR_BAR_POINT,\r\n        stackedbar: POLAR_BAR_POINT\r\n    }\r\n};\r\n\r\nfunction isNoneMode(mode) {\r\n    return \"none\" === _normalizeEnum(mode)\r\n}\r\n\r\nfunction Point(series, dataItem, options) {\r\n    this.fullState = NORMAL_STATE;\r\n    this.series = series;\r\n    this.update(dataItem, options);\r\n    this._viewCounters = {\r\n        hover: 0,\r\n        selection: 0\r\n    };\r\n    this._emptySettings = {\r\n        fill: null,\r\n        stroke: null,\r\n        dashStyle: null\r\n    }\r\n}\r\nexports.Point = Point;\r\nmixins.symbolPoint = symbolPoint;\r\nmixins.barPoint = barPoint;\r\nmixins.bubblePoint = bubblePoint;\r\nmixins.piePoint = piePoint;\r\nmixins.rangeSymbolPoint = rangeSymbolPoint;\r\nmixins.rangeBarPoint = rangeBarPoint;\r\nmixins.candlestickPoint = candlestickPoint;\r\nmixins.stockPoint = stockPoint;\r\nmixins.polarSymbolPoint = polarPoints.polarSymbolPoint;\r\nmixins.polarBarPoint = polarPoints.polarBarPoint;\r\nPoint.prototype = {\r\n    constructor: Point,\r\n    getColor: function() {\r\n        if (!this.hasValue() && !this._styles.usePointCustomOptions) {\r\n            this.series.customizePoint(this, this._dataItem)\r\n        }\r\n        return this._styles.normal.fill || this.series.getColor()\r\n    },\r\n    _getStyle: function() {\r\n        return this._styles[this._currentStyle || \"normal\"]\r\n    },\r\n    update: function(dataItem, options) {\r\n        this.updateOptions(options);\r\n        this.updateData(dataItem)\r\n    },\r\n    updateData: function(dataItem) {\r\n        var that = this;\r\n        var argumentWasChanged = that.argument !== dataItem.argument;\r\n        that.argument = that.initialArgument = that.originalArgument = dataItem.argument;\r\n        that.tag = dataItem.tag;\r\n        that.index = dataItem.index;\r\n        that._dataItem = dataItem;\r\n        that.data = dataItem.data;\r\n        that.lowError = dataItem.lowError;\r\n        that.highError = dataItem.highError;\r\n        that.aggregationInfo = dataItem.aggregationInfo;\r\n        that._updateData(dataItem, argumentWasChanged);\r\n        !that.hasValue() && that.setInvisibility();\r\n        that._fillStyle();\r\n        that._updateLabelData()\r\n    },\r\n    deleteMarker: function() {\r\n        var that = this;\r\n        if (that.graphic) {\r\n            that.graphic.dispose()\r\n        }\r\n        that.graphic = null\r\n    },\r\n    draw: function(renderer, groups, animationEnabled, firstDrawing) {\r\n        var that = this;\r\n        if (that._needDeletingOnDraw || that.series.autoHidePointMarkers && !that.isSelected()) {\r\n            that.deleteMarker();\r\n            that._needDeletingOnDraw = false\r\n        }\r\n        if (that._needClearingOnDraw) {\r\n            that.clearMarker();\r\n            that._needClearingOnDraw = false\r\n        }\r\n        if (!that._hasGraphic()) {\r\n            that.getMarkerVisibility() && !that.series.autoHidePointMarkers && that._drawMarker(renderer, groups.markers, animationEnabled, firstDrawing)\r\n        } else {\r\n            that._updateMarker(animationEnabled, this._getStyle(), groups.markers)\r\n        }\r\n        that._drawLabel();\r\n        that._drawErrorBar(renderer, groups.errorBars, animationEnabled);\r\n        return that\r\n    },\r\n    _getViewStyle: function() {\r\n        var state = NORMAL_STATE;\r\n        var fullState = this.fullState;\r\n        var styles = [NORMAL, HOVER, SELECTION, SELECTION];\r\n        if (this._viewCounters.hover) {\r\n            state |= HOVER_STATE\r\n        }\r\n        if (this._viewCounters.selection) {\r\n            state |= SELECTED_STATE\r\n        }\r\n        if (isNoneMode(this.getOptions().selectionMode)) {\r\n            fullState &= ~SELECTED_STATE\r\n        }\r\n        if (isNoneMode(this.getOptions().hoverMode)) {\r\n            fullState &= ~HOVER_STATE\r\n        }\r\n        state |= fullState;\r\n        return styles[state]\r\n    },\r\n    applyView: function(legendCallback) {\r\n        var style = this._getViewStyle();\r\n        var that = this;\r\n        that._currentStyle = style;\r\n        if (!that.graphic && that.series.autoHidePointMarkers && (style === SELECTION || style === HOVER)) {\r\n            that._drawMarker(that.series.getRenderer(), that.series.getMarkersGroup())\r\n        }\r\n        if (that.graphic) {\r\n            if (that.series.autoHidePointMarkers && style !== SELECTION && style !== HOVER) {\r\n                that.deleteMarker()\r\n            } else {\r\n                if (\"normal\" === style) {\r\n                    that.clearMarker()\r\n                } else {\r\n                    that.graphic.toForeground()\r\n                }\r\n                that._updateMarker(true, that._styles[style], void 0, legendCallback)\r\n            }\r\n        }\r\n    },\r\n    setView: function(style) {\r\n        this._viewCounters[style]++;\r\n        this.applyView()\r\n    },\r\n    resetView: function(style) {\r\n        var viewCounters = this._viewCounters;\r\n        --viewCounters[style];\r\n        if (viewCounters[style] < 0) {\r\n            viewCounters[style] = 0\r\n        }\r\n        this.applyView()\r\n    },\r\n    releaseHoverState: function() {\r\n        var that = this;\r\n        if (that.graphic && !that.isSelected()) {\r\n            that.graphic.toBackground()\r\n        }\r\n    },\r\n    select: function() {\r\n        this.series.selectPoint(this)\r\n    },\r\n    clearSelection: function() {\r\n        this.series.deselectPoint(this)\r\n    },\r\n    hover: function() {\r\n        this.series.hoverPoint(this)\r\n    },\r\n    clearHover: function() {\r\n        this.series.clearPointHover()\r\n    },\r\n    showTooltip: function() {\r\n        this.series.showPointTooltip(this)\r\n    },\r\n    hideTooltip: function() {\r\n        this.series.hidePointTooltip(this)\r\n    },\r\n    _checkLabelsChanging: function(oldType, newType) {\r\n        var isNewRange = ~newType.indexOf(\"range\");\r\n        var isOldRange = ~oldType.indexOf(\"range\");\r\n        return isOldRange && !isNewRange || !isOldRange && isNewRange\r\n    },\r\n    updateOptions: function(newOptions) {\r\n        if (!newOptions) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var oldOptions = that._options;\r\n        var widgetType = newOptions.widgetType;\r\n        var oldType = oldOptions && oldOptions.type;\r\n        var newType = newOptions.type;\r\n        var newPointTypeMixin = pointTypes[widgetType][newType];\r\n        if (oldType !== newType) {\r\n            that._needDeletingOnDraw = true;\r\n            that._needClearingOnDraw = false;\r\n            if (oldType) {\r\n                that._checkLabelsChanging(oldType, newType) && that.deleteLabel();\r\n                that._resetType(mixins[pointTypes[oldType]])\r\n            }\r\n            that._setType(mixins[newPointTypeMixin])\r\n        } else {\r\n            that._needDeletingOnDraw = that._checkSymbol(oldOptions, newOptions);\r\n            that._needClearingOnDraw = that._checkCustomize(oldOptions, newOptions)\r\n        }\r\n        that._options = newOptions;\r\n        that._fillStyle();\r\n        that._updateLabelOptions(newPointTypeMixin)\r\n    },\r\n    translate: function() {\r\n        if (this.hasValue()) {\r\n            this._translate();\r\n            this.translated = true\r\n        }\r\n    },\r\n    _checkCustomize: function(oldOptions, newOptions) {\r\n        return oldOptions.styles.usePointCustomOptions && !newOptions.styles.usePointCustomOptions\r\n    },\r\n    _getCustomLabelVisibility: function() {\r\n        return this._styles.useLabelCustomOptions ? !!this._options.label.visible : null\r\n    },\r\n    getBoundingRect: function() {\r\n        return this._getGraphicBBox()\r\n    },\r\n    _resetType: function(methods) {\r\n        for (var methodName in methods) {\r\n            delete this[methodName]\r\n        }\r\n    },\r\n    _setType: function(methods) {\r\n        for (var methodName in methods) {\r\n            this[methodName] = methods[methodName]\r\n        }\r\n    },\r\n    isInVisibleArea: function() {\r\n        return this.inVisibleArea\r\n    },\r\n    isSelected: function() {\r\n        return !!(this.fullState & SELECTED_STATE)\r\n    },\r\n    isHovered: function() {\r\n        return !!(this.fullState & HOVER_STATE)\r\n    },\r\n    getOptions: function() {\r\n        return this._options\r\n    },\r\n    animate: function(complete, settings, partitionDuration) {\r\n        if (!this.graphic) {\r\n            complete && complete();\r\n            return\r\n        }\r\n        this.graphic.animate(settings, {\r\n            partitionDuration: partitionDuration\r\n        }, complete)\r\n    },\r\n    getCoords: function(min) {\r\n        var that = this;\r\n        if (!min) {\r\n            return {\r\n                x: that.x,\r\n                y: that.y\r\n            }\r\n        }\r\n        if (!that._options.rotated) {\r\n            return {\r\n                x: that.x,\r\n                y: that.minY + (that.y - that.minY ? 0 : 1)\r\n            }\r\n        }\r\n        return {\r\n            x: that.minX - (that.x - that.minX ? 0 : 1),\r\n            y: that.y\r\n        }\r\n    },\r\n    getDefaultCoords: function() {\r\n        var that = this;\r\n        return !that._options.rotated ? {\r\n            x: that.x,\r\n            y: that.defaultY\r\n        } : {\r\n            x: that.defaultX,\r\n            y: that.y\r\n        }\r\n    },\r\n    setDefaultCoords: function() {\r\n        var coords = this.getDefaultCoords();\r\n        this.x = coords.x;\r\n        this.y = coords.y\r\n    },\r\n    _getVisibleArea: function() {\r\n        return this.series.getVisibleArea()\r\n    },\r\n    _getArgTranslator: function() {\r\n        return this.series.getArgumentAxis().getTranslator()\r\n    },\r\n    _getValTranslator: function() {\r\n        return this.series.getValueAxis().getTranslator()\r\n    },\r\n    _calculateVisibility: function(x, y, width, height) {\r\n        var that = this;\r\n        var visibleArea = that._getVisibleArea();\r\n        var rotated = that._options.rotated;\r\n        if (visibleArea.minX > x + (width || 0) || visibleArea.maxX < x || visibleArea.minY > y + (height || 0) || visibleArea.maxY < y || rotated && _isDefined(width) && 0 !== width && (visibleArea.minX === x + width || visibleArea.maxX === x) || !rotated && _isDefined(height) && 0 !== height && (visibleArea.minY === y + height || visibleArea.maxY === y)) {\r\n            that.inVisibleArea = false\r\n        } else {\r\n            that.inVisibleArea = true\r\n        }\r\n    },\r\n    isArgumentCorrect: function() {\r\n        return this.series._argumentChecker(this.argument)\r\n    },\r\n    isValueCorrect: function() {\r\n        var valueChecker = this.series._valueChecker;\r\n        return valueChecker(this.getMinValue()) && valueChecker(this.getMaxValue())\r\n    },\r\n    hasValue: function() {\r\n        return null !== this.value && null !== this.minValue && this.isArgumentCorrect() && this.isValueCorrect()\r\n    },\r\n    hasCoords: _noop,\r\n    correctPosition: _noop,\r\n    correctRadius: _noop,\r\n    correctLabelRadius: _noop,\r\n    getCrosshairData: _noop,\r\n    getPointRadius: _noop,\r\n    _populatePointShape: _noop,\r\n    _checkSymbol: _noop,\r\n    getMarkerCoords: _noop,\r\n    hide: _noop,\r\n    show: _noop,\r\n    hideMarker: _noop,\r\n    setInvisibility: _noop,\r\n    clearVisibility: _noop,\r\n    isVisible: _noop,\r\n    resetCorrection: _noop,\r\n    correctValue: _noop,\r\n    resetValue: _noop,\r\n    setPercentValue: _noop,\r\n    correctCoordinates: _noop,\r\n    coordsIn: _noop,\r\n    getTooltipParams: _noop,\r\n    applyWordWrap: _noop,\r\n    setLabelTrackerData: _noop,\r\n    updateLabelCoord: _noop,\r\n    drawLabel: _noop,\r\n    correctLabelPosition: _noop,\r\n    getMinValue: _noop,\r\n    getMaxValue: _noop,\r\n    _drawErrorBar: _noop,\r\n    getMarkerVisibility: _noop,\r\n    dispose: function() {\r\n        var that = this;\r\n        that.deleteMarker();\r\n        that.deleteLabel();\r\n        that._errorBar && this._errorBar.dispose();\r\n        that._options = that._styles = that.series = that._errorBar = null\r\n    },\r\n    getTooltipFormatObject: function(tooltip, stackPoints) {\r\n        var that = this;\r\n        var tooltipFormatObject = that._getFormatObject(tooltip);\r\n        var sharedTooltipValuesArray = [];\r\n        var tooltipStackPointsFormatObject = [];\r\n        if (stackPoints) {\r\n            stackPoints.forEach(function(point) {\r\n                if (!point.isVisible()) {\r\n                    return\r\n                }\r\n                var formatObject = point._getFormatObject(tooltip);\r\n                tooltipStackPointsFormatObject.push(formatObject);\r\n                sharedTooltipValuesArray.push(formatObject.seriesName + \": \" + formatObject.valueText)\r\n            });\r\n            _extend(tooltipFormatObject, {\r\n                points: tooltipStackPointsFormatObject,\r\n                valueText: sharedTooltipValuesArray.join(\"\\n\"),\r\n                stackName: that.series.getStackName() || null\r\n            })\r\n        }\r\n        var aggregationInfo = that.aggregationInfo;\r\n        if (aggregationInfo) {\r\n            var axis = that.series.getArgumentAxis();\r\n            var rangeText = axis.formatRange(aggregationInfo.intervalStart, aggregationInfo.intervalEnd, aggregationInfo.aggregationInterval);\r\n            if (rangeText) {\r\n                tooltipFormatObject.valueText += \"\\n\".concat(rangeText)\r\n            }\r\n        }\r\n        return tooltipFormatObject\r\n    },\r\n    setHole: function(holeValue, position) {\r\n        var that = this;\r\n        var minValue = isFinite(that.minValue) ? that.minValue : 0;\r\n        if (_isDefined(holeValue)) {\r\n            if (\"left\" === position) {\r\n                that.leftHole = that.value - holeValue;\r\n                that.minLeftHole = minValue - holeValue\r\n            } else {\r\n                that.rightHole = that.value - holeValue;\r\n                that.minRightHole = minValue - holeValue\r\n            }\r\n        }\r\n    },\r\n    resetHoles: function() {\r\n        this.leftHole = null;\r\n        this.minLeftHole = null;\r\n        this.rightHole = null;\r\n        this.minRightHole = null\r\n    },\r\n    getLabel: function() {\r\n        return this._label\r\n    },\r\n    getLabels: function() {\r\n        return [this._label]\r\n    },\r\n    getCenterCoord: function() {\r\n        return {\r\n            x: this.x,\r\n            y: this.y\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}