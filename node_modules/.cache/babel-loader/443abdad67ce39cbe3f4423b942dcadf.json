{"ast":null,"code":"/**\r\n * DevExtreme (ui/selection/selection.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar Class = require(\"../../core/class\");\n\nvar deferredStrategy = require(\"./selection.strategy.deferred\");\n\nvar standardStrategy = require(\"./selection.strategy.standard\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar noop = require(\"../../core/utils/common\").noop;\n\nvar isDefined = require(\"../../core/utils/type\").isDefined;\n\nvar Deferred = require(\"../../core/utils/deferred\").Deferred;\n\nmodule.exports = Class.inherit({\n  ctor: function ctor(options) {\n    this.options = extend(this._getDefaultOptions(), options, {\n      selectedItemKeys: options.selectedKeys || []\n    });\n    this._selectionStrategy = this.options.deferred ? new deferredStrategy(this.options) : new standardStrategy(this.options);\n    this._focusedItemIndex = -1;\n\n    if (!this.options.equalByReference) {\n      this._selectionStrategy.updateSelectedItemKeyHash(this.options.selectedItemKeys);\n    }\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return {\n      allowNullValue: false,\n      deferred: false,\n      equalByReference: false,\n      mode: \"multiple\",\n      selectedItems: [],\n      selectionFilter: [],\n      maxFilterLengthInRequest: 0,\n      onSelectionChanged: noop,\n      key: noop,\n      keyOf: function keyOf(item) {\n        return item;\n      },\n      load: function load() {\n        return new Deferred().resolve([]);\n      },\n      totalCount: function totalCount() {\n        return -1;\n      },\n      isSelectableItem: function isSelectableItem() {\n        return true;\n      },\n      isItemSelected: function isItemSelected() {\n        return false;\n      },\n      getItemData: function getItemData(item) {\n        return item;\n      },\n      dataFields: noop,\n      filter: noop\n    };\n  },\n  validate: function validate() {\n    this._selectionStrategy.validate();\n  },\n  getSelectedItemKeys: function getSelectedItemKeys() {\n    return this._selectionStrategy.getSelectedItemKeys();\n  },\n  getSelectedItems: function getSelectedItems() {\n    return this._selectionStrategy.getSelectedItems();\n  },\n  selectionFilter: function selectionFilter(value) {\n    if (void 0 === value) {\n      return this.options.selectionFilter;\n    }\n\n    var filterIsChanged = this.options.selectionFilter !== value && JSON.stringify(this.options.selectionFilter) !== JSON.stringify(value);\n    this.options.selectionFilter = value;\n    filterIsChanged && this.onSelectionChanged();\n  },\n  setSelection: function setSelection(keys) {\n    return this.selectedItemKeys(keys);\n  },\n  select: function select(keys) {\n    return this.selectedItemKeys(keys, true);\n  },\n  deselect: function deselect(keys) {\n    return this.selectedItemKeys(keys, true, true);\n  },\n  selectedItemKeys: function selectedItemKeys(keys, preserve, isDeselect, isSelectAll) {\n    var that = this;\n    keys = keys || [];\n    keys = Array.isArray(keys) ? keys : [keys];\n    that.validate();\n    return this._selectionStrategy.selectedItemKeys(keys, preserve, isDeselect, isSelectAll);\n  },\n  clearSelection: function clearSelection() {\n    return this.selectedItemKeys([]);\n  },\n  _addSelectedItem: function _addSelectedItem(itemData, key) {\n    this._selectionStrategy.addSelectedItem(key, itemData);\n  },\n  _removeSelectedItem: function _removeSelectedItem(key) {\n    this._selectionStrategy.removeSelectedItem(key);\n  },\n  _setSelectedItems: function _setSelectedItems(keys, items) {\n    this._selectionStrategy.setSelectedItems(keys, items);\n  },\n  onSelectionChanged: function onSelectionChanged() {\n    this._selectionStrategy.onSelectionChanged();\n  },\n  changeItemSelection: function changeItemSelection(itemIndex, keys) {\n    var isSelectedItemsChanged;\n    var items = this.options.plainItems();\n    var item = items[itemIndex];\n\n    if (!this.isSelectable() || !this.isDataItem(item)) {\n      return false;\n    }\n\n    var itemData = this.options.getItemData(item);\n    var itemKey = this.options.keyOf(itemData);\n    keys = keys || {};\n\n    if (keys.shift && \"multiple\" === this.options.mode && this._focusedItemIndex >= 0) {\n      isSelectedItemsChanged = this.changeItemSelectionWhenShiftKeyPressed(itemIndex, items);\n    } else {\n      if (keys.control) {\n        this._resetItemSelectionWhenShiftKeyPressed();\n\n        var isSelected = this._selectionStrategy.isItemDataSelected(itemData);\n\n        if (\"single\" === this.options.mode) {\n          this.clearSelectedItems();\n        }\n\n        if (isSelected) {\n          this._removeSelectedItem(itemKey);\n        } else {\n          this._addSelectedItem(itemData, itemKey);\n        }\n\n        isSelectedItemsChanged = true;\n      } else {\n        this._resetItemSelectionWhenShiftKeyPressed();\n\n        var isKeysEqual = this._selectionStrategy.equalKeys(this.options.selectedItemKeys[0], itemKey);\n\n        if (1 !== this.options.selectedItemKeys.length || !isKeysEqual) {\n          this._setSelectedItems([itemKey], [itemData]);\n\n          isSelectedItemsChanged = true;\n        }\n      }\n    }\n\n    if (isSelectedItemsChanged) {\n      this._focusedItemIndex = itemIndex;\n      this.onSelectionChanged();\n      return true;\n    }\n  },\n  isDataItem: function isDataItem(item) {\n    return this.options.isSelectableItem(item);\n  },\n  isSelectable: function isSelectable() {\n    return \"single\" === this.options.mode || \"multiple\" === this.options.mode;\n  },\n  isItemDataSelected: function isItemDataSelected(data) {\n    return this._selectionStrategy.isItemDataSelected(data);\n  },\n  isItemSelected: function isItemSelected(arg) {\n    return this._selectionStrategy.isItemKeySelected(arg);\n  },\n  _resetItemSelectionWhenShiftKeyPressed: function _resetItemSelectionWhenShiftKeyPressed() {\n    delete this._shiftFocusedItemIndex;\n  },\n  _resetFocusedItemIndex: function _resetFocusedItemIndex() {\n    this._focusedItemIndex = -1;\n  },\n  changeItemSelectionWhenShiftKeyPressed: function changeItemSelectionWhenShiftKeyPressed(itemIndex, items) {\n    var isSelectedItemsChanged = false;\n    var itemIndexStep;\n    var index;\n    var keyOf = this.options.keyOf;\n    var focusedItem = items[this._focusedItemIndex];\n    var focusedData = this.options.getItemData(focusedItem);\n    var focusedKey = keyOf(focusedData);\n    var isFocusedItemSelected = focusedItem && this.isItemDataSelected(focusedData);\n\n    if (!isDefined(this._shiftFocusedItemIndex)) {\n      this._shiftFocusedItemIndex = this._focusedItemIndex;\n    }\n\n    var data;\n    var itemKey;\n\n    if (this._shiftFocusedItemIndex !== this._focusedItemIndex) {\n      itemIndexStep = this._focusedItemIndex < this._shiftFocusedItemIndex ? 1 : -1;\n\n      for (index = this._focusedItemIndex; index !== this._shiftFocusedItemIndex; index += itemIndexStep) {\n        if (this.isDataItem(items[index])) {\n          itemKey = keyOf(this.options.getItemData(items[index]));\n\n          this._removeSelectedItem(itemKey);\n\n          isSelectedItemsChanged = true;\n        }\n      }\n    }\n\n    if (itemIndex !== this._shiftFocusedItemIndex) {\n      itemIndexStep = itemIndex < this._shiftFocusedItemIndex ? 1 : -1;\n\n      for (index = itemIndex; index !== this._shiftFocusedItemIndex; index += itemIndexStep) {\n        if (this.isDataItem(items[index])) {\n          data = this.options.getItemData(items[index]);\n          itemKey = keyOf(data);\n\n          this._addSelectedItem(data, itemKey);\n\n          isSelectedItemsChanged = true;\n        }\n      }\n    }\n\n    if (this.isDataItem(focusedItem) && !isFocusedItemSelected) {\n      this._addSelectedItem(focusedData, focusedKey);\n\n      isSelectedItemsChanged = true;\n    }\n\n    return isSelectedItemsChanged;\n  },\n  clearSelectedItems: function clearSelectedItems() {\n    this._setSelectedItems([], []);\n  },\n  selectAll: function selectAll(isOnePage) {\n    this._resetFocusedItemIndex();\n\n    if (isOnePage) {\n      return this._onePageSelectAll(false);\n    } else {\n      return this.selectedItemKeys([], true, false, true);\n    }\n  },\n  deselectAll: function deselectAll(isOnePage) {\n    this._resetFocusedItemIndex();\n\n    if (isOnePage) {\n      return this._onePageSelectAll(true);\n    } else {\n      return this.selectedItemKeys([], true, true, true);\n    }\n  },\n  _onePageSelectAll: function _onePageSelectAll(isDeselect) {\n    var items = this._selectionStrategy.getSelectableItems(this.options.plainItems());\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n\n      if (this.isDataItem(item)) {\n        var itemData = this.options.getItemData(item);\n        var itemKey = this.options.keyOf(itemData);\n        var isSelected = this.isItemSelected(itemKey);\n\n        if (!isSelected && !isDeselect) {\n          this._addSelectedItem(itemData, itemKey);\n        }\n\n        if (isSelected && isDeselect) {\n          this._removeSelectedItem(itemKey);\n        }\n      }\n    }\n\n    this.onSelectionChanged();\n    return new Deferred().resolve();\n  },\n  getSelectAllState: function getSelectAllState(visibleOnly) {\n    return this._selectionStrategy.getSelectAllState(visibleOnly);\n  }\n});","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/selection/selection.js"],"names":["Class","require","deferredStrategy","standardStrategy","extend","noop","isDefined","Deferred","module","exports","inherit","ctor","options","_getDefaultOptions","selectedItemKeys","selectedKeys","_selectionStrategy","deferred","_focusedItemIndex","equalByReference","updateSelectedItemKeyHash","allowNullValue","mode","selectedItems","selectionFilter","maxFilterLengthInRequest","onSelectionChanged","key","keyOf","item","load","resolve","totalCount","isSelectableItem","isItemSelected","getItemData","dataFields","filter","validate","getSelectedItemKeys","getSelectedItems","value","filterIsChanged","JSON","stringify","setSelection","keys","select","deselect","preserve","isDeselect","isSelectAll","that","Array","isArray","clearSelection","_addSelectedItem","itemData","addSelectedItem","_removeSelectedItem","removeSelectedItem","_setSelectedItems","items","setSelectedItems","changeItemSelection","itemIndex","isSelectedItemsChanged","plainItems","isSelectable","isDataItem","itemKey","shift","changeItemSelectionWhenShiftKeyPressed","control","_resetItemSelectionWhenShiftKeyPressed","isSelected","isItemDataSelected","clearSelectedItems","isKeysEqual","equalKeys","length","data","arg","isItemKeySelected","_shiftFocusedItemIndex","_resetFocusedItemIndex","itemIndexStep","index","focusedItem","focusedData","focusedKey","isFocusedItemSelected","selectAll","isOnePage","_onePageSelectAll","deselectAll","getSelectableItems","i","getSelectAllState","visibleOnly"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/selection/selection.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar Class = require(\"../../core/class\");\r\nvar deferredStrategy = require(\"./selection.strategy.deferred\");\r\nvar standardStrategy = require(\"./selection.strategy.standard\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar noop = require(\"../../core/utils/common\").noop;\r\nvar isDefined = require(\"../../core/utils/type\").isDefined;\r\nvar Deferred = require(\"../../core/utils/deferred\").Deferred;\r\nmodule.exports = Class.inherit({\r\n    ctor: function(options) {\r\n        this.options = extend(this._getDefaultOptions(), options, {\r\n            selectedItemKeys: options.selectedKeys || []\r\n        });\r\n        this._selectionStrategy = this.options.deferred ? new deferredStrategy(this.options) : new standardStrategy(this.options);\r\n        this._focusedItemIndex = -1;\r\n        if (!this.options.equalByReference) {\r\n            this._selectionStrategy.updateSelectedItemKeyHash(this.options.selectedItemKeys)\r\n        }\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return {\r\n            allowNullValue: false,\r\n            deferred: false,\r\n            equalByReference: false,\r\n            mode: \"multiple\",\r\n            selectedItems: [],\r\n            selectionFilter: [],\r\n            maxFilterLengthInRequest: 0,\r\n            onSelectionChanged: noop,\r\n            key: noop,\r\n            keyOf: function(item) {\r\n                return item\r\n            },\r\n            load: function() {\r\n                return (new Deferred).resolve([])\r\n            },\r\n            totalCount: function() {\r\n                return -1\r\n            },\r\n            isSelectableItem: function() {\r\n                return true\r\n            },\r\n            isItemSelected: function() {\r\n                return false\r\n            },\r\n            getItemData: function(item) {\r\n                return item\r\n            },\r\n            dataFields: noop,\r\n            filter: noop\r\n        }\r\n    },\r\n    validate: function() {\r\n        this._selectionStrategy.validate()\r\n    },\r\n    getSelectedItemKeys: function() {\r\n        return this._selectionStrategy.getSelectedItemKeys()\r\n    },\r\n    getSelectedItems: function() {\r\n        return this._selectionStrategy.getSelectedItems()\r\n    },\r\n    selectionFilter: function(value) {\r\n        if (void 0 === value) {\r\n            return this.options.selectionFilter\r\n        }\r\n        var filterIsChanged = this.options.selectionFilter !== value && JSON.stringify(this.options.selectionFilter) !== JSON.stringify(value);\r\n        this.options.selectionFilter = value;\r\n        filterIsChanged && this.onSelectionChanged()\r\n    },\r\n    setSelection: function(keys) {\r\n        return this.selectedItemKeys(keys)\r\n    },\r\n    select: function(keys) {\r\n        return this.selectedItemKeys(keys, true)\r\n    },\r\n    deselect: function(keys) {\r\n        return this.selectedItemKeys(keys, true, true)\r\n    },\r\n    selectedItemKeys: function(keys, preserve, isDeselect, isSelectAll) {\r\n        var that = this;\r\n        keys = keys || [];\r\n        keys = Array.isArray(keys) ? keys : [keys];\r\n        that.validate();\r\n        return this._selectionStrategy.selectedItemKeys(keys, preserve, isDeselect, isSelectAll)\r\n    },\r\n    clearSelection: function() {\r\n        return this.selectedItemKeys([])\r\n    },\r\n    _addSelectedItem: function(itemData, key) {\r\n        this._selectionStrategy.addSelectedItem(key, itemData)\r\n    },\r\n    _removeSelectedItem: function(key) {\r\n        this._selectionStrategy.removeSelectedItem(key)\r\n    },\r\n    _setSelectedItems: function(keys, items) {\r\n        this._selectionStrategy.setSelectedItems(keys, items)\r\n    },\r\n    onSelectionChanged: function() {\r\n        this._selectionStrategy.onSelectionChanged()\r\n    },\r\n    changeItemSelection: function(itemIndex, keys) {\r\n        var isSelectedItemsChanged;\r\n        var items = this.options.plainItems();\r\n        var item = items[itemIndex];\r\n        if (!this.isSelectable() || !this.isDataItem(item)) {\r\n            return false\r\n        }\r\n        var itemData = this.options.getItemData(item);\r\n        var itemKey = this.options.keyOf(itemData);\r\n        keys = keys || {};\r\n        if (keys.shift && \"multiple\" === this.options.mode && this._focusedItemIndex >= 0) {\r\n            isSelectedItemsChanged = this.changeItemSelectionWhenShiftKeyPressed(itemIndex, items)\r\n        } else {\r\n            if (keys.control) {\r\n                this._resetItemSelectionWhenShiftKeyPressed();\r\n                var isSelected = this._selectionStrategy.isItemDataSelected(itemData);\r\n                if (\"single\" === this.options.mode) {\r\n                    this.clearSelectedItems()\r\n                }\r\n                if (isSelected) {\r\n                    this._removeSelectedItem(itemKey)\r\n                } else {\r\n                    this._addSelectedItem(itemData, itemKey)\r\n                }\r\n                isSelectedItemsChanged = true\r\n            } else {\r\n                this._resetItemSelectionWhenShiftKeyPressed();\r\n                var isKeysEqual = this._selectionStrategy.equalKeys(this.options.selectedItemKeys[0], itemKey);\r\n                if (1 !== this.options.selectedItemKeys.length || !isKeysEqual) {\r\n                    this._setSelectedItems([itemKey], [itemData]);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if (isSelectedItemsChanged) {\r\n            this._focusedItemIndex = itemIndex;\r\n            this.onSelectionChanged();\r\n            return true\r\n        }\r\n    },\r\n    isDataItem: function(item) {\r\n        return this.options.isSelectableItem(item)\r\n    },\r\n    isSelectable: function() {\r\n        return \"single\" === this.options.mode || \"multiple\" === this.options.mode\r\n    },\r\n    isItemDataSelected: function(data) {\r\n        return this._selectionStrategy.isItemDataSelected(data)\r\n    },\r\n    isItemSelected: function(arg) {\r\n        return this._selectionStrategy.isItemKeySelected(arg)\r\n    },\r\n    _resetItemSelectionWhenShiftKeyPressed: function() {\r\n        delete this._shiftFocusedItemIndex\r\n    },\r\n    _resetFocusedItemIndex: function() {\r\n        this._focusedItemIndex = -1\r\n    },\r\n    changeItemSelectionWhenShiftKeyPressed: function(itemIndex, items) {\r\n        var isSelectedItemsChanged = false;\r\n        var itemIndexStep;\r\n        var index;\r\n        var keyOf = this.options.keyOf;\r\n        var focusedItem = items[this._focusedItemIndex];\r\n        var focusedData = this.options.getItemData(focusedItem);\r\n        var focusedKey = keyOf(focusedData);\r\n        var isFocusedItemSelected = focusedItem && this.isItemDataSelected(focusedData);\r\n        if (!isDefined(this._shiftFocusedItemIndex)) {\r\n            this._shiftFocusedItemIndex = this._focusedItemIndex\r\n        }\r\n        var data;\r\n        var itemKey;\r\n        if (this._shiftFocusedItemIndex !== this._focusedItemIndex) {\r\n            itemIndexStep = this._focusedItemIndex < this._shiftFocusedItemIndex ? 1 : -1;\r\n            for (index = this._focusedItemIndex; index !== this._shiftFocusedItemIndex; index += itemIndexStep) {\r\n                if (this.isDataItem(items[index])) {\r\n                    itemKey = keyOf(this.options.getItemData(items[index]));\r\n                    this._removeSelectedItem(itemKey);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if (itemIndex !== this._shiftFocusedItemIndex) {\r\n            itemIndexStep = itemIndex < this._shiftFocusedItemIndex ? 1 : -1;\r\n            for (index = itemIndex; index !== this._shiftFocusedItemIndex; index += itemIndexStep) {\r\n                if (this.isDataItem(items[index])) {\r\n                    data = this.options.getItemData(items[index]);\r\n                    itemKey = keyOf(data);\r\n                    this._addSelectedItem(data, itemKey);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if (this.isDataItem(focusedItem) && !isFocusedItemSelected) {\r\n            this._addSelectedItem(focusedData, focusedKey);\r\n            isSelectedItemsChanged = true\r\n        }\r\n        return isSelectedItemsChanged\r\n    },\r\n    clearSelectedItems: function() {\r\n        this._setSelectedItems([], [])\r\n    },\r\n    selectAll: function(isOnePage) {\r\n        this._resetFocusedItemIndex();\r\n        if (isOnePage) {\r\n            return this._onePageSelectAll(false)\r\n        } else {\r\n            return this.selectedItemKeys([], true, false, true)\r\n        }\r\n    },\r\n    deselectAll: function(isOnePage) {\r\n        this._resetFocusedItemIndex();\r\n        if (isOnePage) {\r\n            return this._onePageSelectAll(true)\r\n        } else {\r\n            return this.selectedItemKeys([], true, true, true)\r\n        }\r\n    },\r\n    _onePageSelectAll: function(isDeselect) {\r\n        var items = this._selectionStrategy.getSelectableItems(this.options.plainItems());\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (this.isDataItem(item)) {\r\n                var itemData = this.options.getItemData(item);\r\n                var itemKey = this.options.keyOf(itemData);\r\n                var isSelected = this.isItemSelected(itemKey);\r\n                if (!isSelected && !isDeselect) {\r\n                    this._addSelectedItem(itemData, itemKey)\r\n                }\r\n                if (isSelected && isDeselect) {\r\n                    this._removeSelectedItem(itemKey)\r\n                }\r\n            }\r\n        }\r\n        this.onSelectionChanged();\r\n        return (new Deferred).resolve()\r\n    },\r\n    getSelectAllState: function(visibleOnly) {\r\n        return this._selectionStrategy.getSelectAllState(visibleOnly)\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}