{"ast":null,"code":"/**\r\n * DevExtreme (viz/components/chart_theme_manager.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar noop = require(\"../../core/utils/common\").noop;\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar BaseThemeManager = require(\"../core/base_theme_manager\").BaseThemeManager;\n\nvar _isString = typeUtils.isString;\nvar _isDefined = typeUtils.isDefined;\n\nvar _normalizeEnum = require(\"../core/utils\").normalizeEnum;\n\nvar ThemeManager = BaseThemeManager.inherit(function () {\n  var ctor = function ctor(params) {\n    var that = this;\n    that.callBase.apply(that, arguments);\n    var options = params.options || {};\n    that._userOptions = options;\n    that._mergeAxisTitleOptions = [];\n    that._multiPieColors = {};\n    that._callback = noop;\n  };\n\n  var dispose = function dispose() {\n    var that = this;\n    that.palette && that.palette.dispose();\n    that.palette = that._userOptions = that._mergedSettings = that._multiPieColors = null;\n    return that.callBase.apply(that, arguments);\n  };\n\n  var resetPalette = function resetPalette() {\n    this.palette.reset();\n    this._multiPieColors = {};\n  };\n\n  var processTitleOptions = function processTitleOptions(options) {\n    return _isString(options) ? {\n      text: options\n    } : options;\n  };\n\n  var processAxisOptions = function processAxisOptions(axisOptions) {\n    if (!axisOptions) {\n      return {};\n    }\n\n    axisOptions = extend(true, {}, axisOptions);\n    axisOptions.title = processTitleOptions(axisOptions.title);\n\n    if (\"logarithmic\" === axisOptions.type && axisOptions.logarithmBase <= 0 || axisOptions.logarithmBase && !typeUtils.isNumeric(axisOptions.logarithmBase)) {\n      axisOptions.logarithmBase = void 0;\n      axisOptions.logarithmBaseError = true;\n    }\n\n    if (axisOptions.label) {\n      if (axisOptions.label.alignment) {\n        axisOptions.label.userAlignment = true;\n      }\n    }\n\n    return axisOptions;\n  };\n\n  var applyParticularAxisOptions = function applyParticularAxisOptions(name, userOptions, rotated) {\n    var theme = this._theme;\n    var position = !(rotated ^ \"valueAxis\" === name) ? \"horizontalAxis\" : \"verticalAxis\";\n    var processedUserOptions = processAxisOptions(userOptions, name);\n    var commonAxisSettings = processAxisOptions(this._userOptions.commonAxisSettings, name);\n    var mergeOptions = extend(true, {}, theme.commonAxisSettings, theme[position], theme[name], commonAxisSettings, processedUserOptions);\n    mergeOptions.workWeek = processedUserOptions.workWeek || theme[name].workWeek;\n    mergeOptions.forceUserTickInterval |= _isDefined(processedUserOptions.tickInterval) && !_isDefined(processedUserOptions.axisDivisionFactor);\n    return mergeOptions;\n  };\n\n  var mergeOptions = function mergeOptions(name, userOptions) {\n    userOptions = userOptions || this._userOptions[name];\n    var theme = this._theme[name];\n    var result = this._mergedSettings[name];\n\n    if (result) {\n      return result;\n    }\n\n    if (typeUtils.isPlainObject(theme) && typeUtils.isPlainObject(userOptions)) {\n      result = extend(true, {}, theme, userOptions);\n    } else {\n      result = _isDefined(userOptions) ? userOptions : theme;\n    }\n\n    this._mergedSettings[name] = result;\n    return result;\n  };\n\n  var applyParticularTheme = {\n    base: mergeOptions,\n    argumentAxis: applyParticularAxisOptions,\n    valueAxisRangeSelector: function valueAxisRangeSelector() {\n      return mergeOptions.call(this, \"valueAxis\");\n    },\n    valueAxis: applyParticularAxisOptions,\n    series: function series(name, userOptions, seriesCount) {\n      var that = this;\n      var theme = that._theme;\n      var userCommonSettings = that._userOptions.commonSeriesSettings || {};\n      var themeCommonSettings = theme.commonSeriesSettings;\n\n      var widgetType = that._themeSection.split(\".\").slice(-1)[0];\n\n      var type = _normalizeEnum(userOptions.type || userCommonSettings.type || themeCommonSettings.type || \"pie\" === widgetType && theme.type);\n\n      var settings;\n      var palette = that.palette;\n      var isBar = ~type.indexOf(\"bar\");\n      var isLine = ~type.indexOf(\"line\");\n      var isArea = ~type.indexOf(\"area\");\n      var isBubble = \"bubble\" === type;\n      var mainSeriesColor;\n      var resolveLabelsOverlapping = that.getOptions(\"resolveLabelsOverlapping\");\n      var containerBackgroundColor = that.getOptions(\"containerBackgroundColor\");\n      var seriesTemplate = applyParticularTheme.seriesTemplate.call(this);\n      var seriesVisibility;\n\n      if (isBar || isBubble) {\n        userOptions = extend(true, {}, userCommonSettings, userCommonSettings[type], userOptions);\n        seriesVisibility = userOptions.visible;\n        userCommonSettings = {\n          type: {}\n        };\n        extend(true, userOptions, userOptions.point);\n        userOptions.visible = seriesVisibility;\n      }\n\n      settings = extend(true, {\n        aggregation: {}\n      }, themeCommonSettings, themeCommonSettings[type], userCommonSettings, userCommonSettings[type], userOptions);\n      settings.aggregation.enabled = \"chart\" === widgetType && normalizeAggregationEnabled(settings.aggregation, that.getOptions(\"useAggregation\"));\n      settings.type = type;\n      settings.widgetType = widgetType;\n      settings.containerBackgroundColor = containerBackgroundColor;\n\n      if (\"pie\" !== widgetType) {\n        mainSeriesColor = settings.color || palette.getNextColor(seriesCount);\n      } else {\n        mainSeriesColor = function mainSeriesColor(argument, index, count) {\n          var cat = \"\".concat(argument, \"-\").concat(index);\n\n          if (!that._multiPieColors[cat]) {\n            that._multiPieColors[cat] = palette.getNextColor(count);\n          }\n\n          return that._multiPieColors[cat];\n        };\n      }\n\n      settings.mainSeriesColor = mainSeriesColor;\n      settings.resolveLabelsOverlapping = resolveLabelsOverlapping;\n\n      if (settings.label && (isLine || isArea && \"rangearea\" !== type || \"scatter\" === type)) {\n        settings.label.position = \"outside\";\n      }\n\n      if (seriesTemplate) {\n        settings.nameField = seriesTemplate.nameField;\n      }\n\n      return settings;\n    },\n    animation: function animation(name) {\n      var userOptions = this._userOptions[name];\n      userOptions = typeUtils.isPlainObject(userOptions) ? userOptions : _isDefined(userOptions) ? {\n        enabled: !!userOptions\n      } : {};\n      return mergeOptions.call(this, name, userOptions);\n    },\n    seriesTemplate: function seriesTemplate() {\n      var value = mergeOptions.call(this, \"seriesTemplate\");\n\n      if (value) {\n        value.nameField = value.nameField || \"series\";\n      }\n\n      return value;\n    },\n    zoomAndPan: function zoomAndPan() {\n      function parseOption(option) {\n        option = _normalizeEnum(option);\n        var pan = \"pan\" === option || \"both\" === option;\n        var zoom = \"zoom\" === option || \"both\" === option;\n        return {\n          pan: pan,\n          zoom: zoom,\n          none: !pan && !zoom\n        };\n      }\n\n      var userOptions = this._userOptions.zoomAndPan;\n\n      if (!_isDefined(userOptions)) {\n        var zoomingMode = _normalizeEnum(this.getOptions(\"zoomingMode\"));\n\n        var scrollingMode = _normalizeEnum(this.getOptions(\"scrollingMode\"));\n\n        var allowZoom = [\"all\", \"mouse\", \"touch\"].indexOf(zoomingMode) !== -1;\n        var allowScroll = [\"all\", \"mouse\", \"touch\"].indexOf(scrollingMode) !== -1;\n        userOptions = {\n          argumentAxis: allowZoom && allowScroll ? \"both\" : allowZoom ? \"zoom\" : allowScroll ? \"pan\" : \"none\",\n          allowMouseWheel: \"all\" === zoomingMode || \"mouse\" === zoomingMode,\n          allowTouchGestures: \"all\" === zoomingMode || \"touch\" === zoomingMode || \"all\" === scrollingMode || \"touch\" === scrollingMode\n        };\n      }\n\n      var options = mergeOptions.call(this, \"zoomAndPan\", userOptions);\n      return {\n        valueAxis: parseOption(options.valueAxis),\n        argumentAxis: parseOption(options.argumentAxis),\n        dragToZoom: !!options.dragToZoom,\n        dragBoxStyle: {\n          \"class\": \"dxc-shutter\",\n          fill: options.dragBoxStyle.color,\n          opacity: options.dragBoxStyle.opacity\n        },\n        panKey: options.panKey,\n        allowMouseWheel: !!options.allowMouseWheel,\n        allowTouchGestures: !!options.allowTouchGestures\n      };\n    }\n  };\n\n  var normalizeAggregationEnabled = function normalizeAggregationEnabled(aggregation, useAggregation) {\n    return !!(!_isDefined(aggregation.enabled) ? useAggregation : aggregation.enabled);\n  };\n\n  return {\n    _themeSection: \"chart\",\n    ctor: ctor,\n    dispose: dispose,\n    resetPalette: resetPalette,\n    getOptions: function getOptions(name) {\n      return (applyParticularTheme[name] || applyParticularTheme.base).apply(this, arguments);\n    },\n    refresh: function refresh() {\n      this._mergedSettings = {};\n      return this.callBase.apply(this, arguments);\n    },\n    _initializeTheme: function _initializeTheme() {\n      var that = this;\n      that.callBase.apply(that, arguments);\n      that.updatePalette();\n    },\n    resetOptions: function resetOptions(name) {\n      this._mergedSettings[name] = null;\n    },\n    update: function update(options) {\n      this._userOptions = options;\n    },\n    updatePalette: function updatePalette() {\n      var that = this;\n      that.palette = that.createPalette(that.getOptions(\"palette\"), {\n        useHighlight: true,\n        extensionMode: that.getOptions(\"paletteExtensionMode\")\n      });\n    }\n  };\n}());\nexports.ThemeManager = ThemeManager;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/components/chart_theme_manager.js"],"names":["noop","require","typeUtils","extend","BaseThemeManager","_isString","isString","_isDefined","isDefined","_normalizeEnum","normalizeEnum","ThemeManager","inherit","ctor","params","that","callBase","apply","arguments","options","_userOptions","_mergeAxisTitleOptions","_multiPieColors","_callback","dispose","palette","_mergedSettings","resetPalette","reset","processTitleOptions","text","processAxisOptions","axisOptions","title","type","logarithmBase","isNumeric","logarithmBaseError","label","alignment","userAlignment","applyParticularAxisOptions","name","userOptions","rotated","theme","_theme","position","processedUserOptions","commonAxisSettings","mergeOptions","workWeek","forceUserTickInterval","tickInterval","axisDivisionFactor","result","isPlainObject","applyParticularTheme","base","argumentAxis","valueAxisRangeSelector","call","valueAxis","series","seriesCount","userCommonSettings","commonSeriesSettings","themeCommonSettings","widgetType","_themeSection","split","slice","settings","isBar","indexOf","isLine","isArea","isBubble","mainSeriesColor","resolveLabelsOverlapping","getOptions","containerBackgroundColor","seriesTemplate","seriesVisibility","visible","point","aggregation","enabled","normalizeAggregationEnabled","color","getNextColor","argument","index","count","cat","concat","nameField","animation","value","zoomAndPan","parseOption","option","pan","zoom","none","zoomingMode","scrollingMode","allowZoom","allowScroll","allowMouseWheel","allowTouchGestures","dragToZoom","dragBoxStyle","fill","opacity","panKey","useAggregation","refresh","_initializeTheme","updatePalette","resetOptions","update","createPalette","useHighlight","extensionMode","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/components/chart_theme_manager.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar noop = require(\"../../core/utils/common\").noop;\r\nvar typeUtils = require(\"../../core/utils/type\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar BaseThemeManager = require(\"../core/base_theme_manager\").BaseThemeManager;\r\nvar _isString = typeUtils.isString;\r\nvar _isDefined = typeUtils.isDefined;\r\nvar _normalizeEnum = require(\"../core/utils\").normalizeEnum;\r\nvar ThemeManager = BaseThemeManager.inherit(function() {\r\n    var ctor = function(params) {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        var options = params.options || {};\r\n        that._userOptions = options;\r\n        that._mergeAxisTitleOptions = [];\r\n        that._multiPieColors = {};\r\n        that._callback = noop\r\n    };\r\n    var dispose = function() {\r\n        var that = this;\r\n        that.palette && that.palette.dispose();\r\n        that.palette = that._userOptions = that._mergedSettings = that._multiPieColors = null;\r\n        return that.callBase.apply(that, arguments)\r\n    };\r\n    var resetPalette = function() {\r\n        this.palette.reset();\r\n        this._multiPieColors = {}\r\n    };\r\n    var processTitleOptions = function(options) {\r\n        return _isString(options) ? {\r\n            text: options\r\n        } : options\r\n    };\r\n    var processAxisOptions = function(axisOptions) {\r\n        if (!axisOptions) {\r\n            return {}\r\n        }\r\n        axisOptions = extend(true, {}, axisOptions);\r\n        axisOptions.title = processTitleOptions(axisOptions.title);\r\n        if (\"logarithmic\" === axisOptions.type && axisOptions.logarithmBase <= 0 || axisOptions.logarithmBase && !typeUtils.isNumeric(axisOptions.logarithmBase)) {\r\n            axisOptions.logarithmBase = void 0;\r\n            axisOptions.logarithmBaseError = true\r\n        }\r\n        if (axisOptions.label) {\r\n            if (axisOptions.label.alignment) {\r\n                axisOptions.label.userAlignment = true\r\n            }\r\n        }\r\n        return axisOptions\r\n    };\r\n    var applyParticularAxisOptions = function(name, userOptions, rotated) {\r\n        var theme = this._theme;\r\n        var position = !(rotated ^ \"valueAxis\" === name) ? \"horizontalAxis\" : \"verticalAxis\";\r\n        var processedUserOptions = processAxisOptions(userOptions, name);\r\n        var commonAxisSettings = processAxisOptions(this._userOptions.commonAxisSettings, name);\r\n        var mergeOptions = extend(true, {}, theme.commonAxisSettings, theme[position], theme[name], commonAxisSettings, processedUserOptions);\r\n        mergeOptions.workWeek = processedUserOptions.workWeek || theme[name].workWeek;\r\n        mergeOptions.forceUserTickInterval |= _isDefined(processedUserOptions.tickInterval) && !_isDefined(processedUserOptions.axisDivisionFactor);\r\n        return mergeOptions\r\n    };\r\n    var mergeOptions = function(name, userOptions) {\r\n        userOptions = userOptions || this._userOptions[name];\r\n        var theme = this._theme[name];\r\n        var result = this._mergedSettings[name];\r\n        if (result) {\r\n            return result\r\n        }\r\n        if (typeUtils.isPlainObject(theme) && typeUtils.isPlainObject(userOptions)) {\r\n            result = extend(true, {}, theme, userOptions)\r\n        } else {\r\n            result = _isDefined(userOptions) ? userOptions : theme\r\n        }\r\n        this._mergedSettings[name] = result;\r\n        return result\r\n    };\r\n    var applyParticularTheme = {\r\n        base: mergeOptions,\r\n        argumentAxis: applyParticularAxisOptions,\r\n        valueAxisRangeSelector: function() {\r\n            return mergeOptions.call(this, \"valueAxis\")\r\n        },\r\n        valueAxis: applyParticularAxisOptions,\r\n        series: function(name, userOptions, seriesCount) {\r\n            var that = this;\r\n            var theme = that._theme;\r\n            var userCommonSettings = that._userOptions.commonSeriesSettings || {};\r\n            var themeCommonSettings = theme.commonSeriesSettings;\r\n            var widgetType = that._themeSection.split(\".\").slice(-1)[0];\r\n            var type = _normalizeEnum(userOptions.type || userCommonSettings.type || themeCommonSettings.type || \"pie\" === widgetType && theme.type);\r\n            var settings;\r\n            var palette = that.palette;\r\n            var isBar = ~type.indexOf(\"bar\");\r\n            var isLine = ~type.indexOf(\"line\");\r\n            var isArea = ~type.indexOf(\"area\");\r\n            var isBubble = \"bubble\" === type;\r\n            var mainSeriesColor;\r\n            var resolveLabelsOverlapping = that.getOptions(\"resolveLabelsOverlapping\");\r\n            var containerBackgroundColor = that.getOptions(\"containerBackgroundColor\");\r\n            var seriesTemplate = applyParticularTheme.seriesTemplate.call(this);\r\n            var seriesVisibility;\r\n            if (isBar || isBubble) {\r\n                userOptions = extend(true, {}, userCommonSettings, userCommonSettings[type], userOptions);\r\n                seriesVisibility = userOptions.visible;\r\n                userCommonSettings = {\r\n                    type: {}\r\n                };\r\n                extend(true, userOptions, userOptions.point);\r\n                userOptions.visible = seriesVisibility\r\n            }\r\n            settings = extend(true, {\r\n                aggregation: {}\r\n            }, themeCommonSettings, themeCommonSettings[type], userCommonSettings, userCommonSettings[type], userOptions);\r\n            settings.aggregation.enabled = \"chart\" === widgetType && normalizeAggregationEnabled(settings.aggregation, that.getOptions(\"useAggregation\"));\r\n            settings.type = type;\r\n            settings.widgetType = widgetType;\r\n            settings.containerBackgroundColor = containerBackgroundColor;\r\n            if (\"pie\" !== widgetType) {\r\n                mainSeriesColor = settings.color || palette.getNextColor(seriesCount)\r\n            } else {\r\n                mainSeriesColor = function(argument, index, count) {\r\n                    var cat = \"\".concat(argument, \"-\").concat(index);\r\n                    if (!that._multiPieColors[cat]) {\r\n                        that._multiPieColors[cat] = palette.getNextColor(count)\r\n                    }\r\n                    return that._multiPieColors[cat]\r\n                }\r\n            }\r\n            settings.mainSeriesColor = mainSeriesColor;\r\n            settings.resolveLabelsOverlapping = resolveLabelsOverlapping;\r\n            if (settings.label && (isLine || isArea && \"rangearea\" !== type || \"scatter\" === type)) {\r\n                settings.label.position = \"outside\"\r\n            }\r\n            if (seriesTemplate) {\r\n                settings.nameField = seriesTemplate.nameField\r\n            }\r\n            return settings\r\n        },\r\n        animation: function(name) {\r\n            var userOptions = this._userOptions[name];\r\n            userOptions = typeUtils.isPlainObject(userOptions) ? userOptions : _isDefined(userOptions) ? {\r\n                enabled: !!userOptions\r\n            } : {};\r\n            return mergeOptions.call(this, name, userOptions)\r\n        },\r\n        seriesTemplate: function() {\r\n            var value = mergeOptions.call(this, \"seriesTemplate\");\r\n            if (value) {\r\n                value.nameField = value.nameField || \"series\"\r\n            }\r\n            return value\r\n        },\r\n        zoomAndPan: function() {\r\n            function parseOption(option) {\r\n                option = _normalizeEnum(option);\r\n                var pan = \"pan\" === option || \"both\" === option;\r\n                var zoom = \"zoom\" === option || \"both\" === option;\r\n                return {\r\n                    pan: pan,\r\n                    zoom: zoom,\r\n                    none: !pan && !zoom\r\n                }\r\n            }\r\n            var userOptions = this._userOptions.zoomAndPan;\r\n            if (!_isDefined(userOptions)) {\r\n                var zoomingMode = _normalizeEnum(this.getOptions(\"zoomingMode\"));\r\n                var scrollingMode = _normalizeEnum(this.getOptions(\"scrollingMode\"));\r\n                var allowZoom = [\"all\", \"mouse\", \"touch\"].indexOf(zoomingMode) !== -1;\r\n                var allowScroll = [\"all\", \"mouse\", \"touch\"].indexOf(scrollingMode) !== -1;\r\n                userOptions = {\r\n                    argumentAxis: allowZoom && allowScroll ? \"both\" : allowZoom ? \"zoom\" : allowScroll ? \"pan\" : \"none\",\r\n                    allowMouseWheel: \"all\" === zoomingMode || \"mouse\" === zoomingMode,\r\n                    allowTouchGestures: \"all\" === zoomingMode || \"touch\" === zoomingMode || \"all\" === scrollingMode || \"touch\" === scrollingMode\r\n                }\r\n            }\r\n            var options = mergeOptions.call(this, \"zoomAndPan\", userOptions);\r\n            return {\r\n                valueAxis: parseOption(options.valueAxis),\r\n                argumentAxis: parseOption(options.argumentAxis),\r\n                dragToZoom: !!options.dragToZoom,\r\n                dragBoxStyle: {\r\n                    \"class\": \"dxc-shutter\",\r\n                    fill: options.dragBoxStyle.color,\r\n                    opacity: options.dragBoxStyle.opacity\r\n                },\r\n                panKey: options.panKey,\r\n                allowMouseWheel: !!options.allowMouseWheel,\r\n                allowTouchGestures: !!options.allowTouchGestures\r\n            }\r\n        }\r\n    };\r\n    var normalizeAggregationEnabled = function(aggregation, useAggregation) {\r\n        return !!(!_isDefined(aggregation.enabled) ? useAggregation : aggregation.enabled)\r\n    };\r\n    return {\r\n        _themeSection: \"chart\",\r\n        ctor: ctor,\r\n        dispose: dispose,\r\n        resetPalette: resetPalette,\r\n        getOptions: function(name) {\r\n            return (applyParticularTheme[name] || applyParticularTheme.base).apply(this, arguments)\r\n        },\r\n        refresh: function() {\r\n            this._mergedSettings = {};\r\n            return this.callBase.apply(this, arguments)\r\n        },\r\n        _initializeTheme: function() {\r\n            var that = this;\r\n            that.callBase.apply(that, arguments);\r\n            that.updatePalette()\r\n        },\r\n        resetOptions: function(name) {\r\n            this._mergedSettings[name] = null\r\n        },\r\n        update: function(options) {\r\n            this._userOptions = options\r\n        },\r\n        updatePalette: function() {\r\n            var that = this;\r\n            that.palette = that.createPalette(that.getOptions(\"palette\"), {\r\n                useHighlight: true,\r\n                extensionMode: that.getOptions(\"paletteExtensionMode\")\r\n            })\r\n        }\r\n    }\r\n}());\r\nexports.ThemeManager = ThemeManager;\r\n"]},"metadata":{},"sourceType":"script"}