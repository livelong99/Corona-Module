{"ast":null,"code":"/**\r\n * DevExtreme (events/pointer/mouse.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar BaseStrategy = require(\"./base\");\n\nvar Observer = require(\"./observer\");\n\nvar eventMap = {\n  dxpointerdown: \"mousedown\",\n  dxpointermove: \"mousemove\",\n  dxpointerup: \"mouseup\",\n  dxpointercancel: \"\",\n  dxpointerover: \"mouseover\",\n  dxpointerout: \"mouseout\",\n  dxpointerenter: \"mouseenter\",\n  dxpointerleave: \"mouseleave\"\n};\n\nvar normalizeMouseEvent = function normalizeMouseEvent(e) {\n  e.pointerId = 1;\n  return {\n    pointers: observer.pointers(),\n    pointerId: 1\n  };\n};\n\nvar observer;\nvar activated = false;\n\nvar activateStrategy = function activateStrategy() {\n  if (activated) {\n    return;\n  }\n\n  observer = new Observer(eventMap, function () {\n    return true;\n  });\n  activated = true;\n};\n\nvar MouseStrategy = BaseStrategy.inherit({\n  ctor: function ctor() {\n    this.callBase.apply(this, arguments);\n    activateStrategy();\n  },\n  _fireEvent: function _fireEvent(args) {\n    return this.callBase(extend(normalizeMouseEvent(args.originalEvent), args));\n  }\n});\nMouseStrategy.map = eventMap;\nMouseStrategy.normalize = normalizeMouseEvent;\nMouseStrategy.activate = activateStrategy;\n\nMouseStrategy.resetObserver = function () {\n  observer.reset();\n};\n\nmodule.exports = MouseStrategy;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/events/pointer/mouse.js"],"names":["extend","require","BaseStrategy","Observer","eventMap","dxpointerdown","dxpointermove","dxpointerup","dxpointercancel","dxpointerover","dxpointerout","dxpointerenter","dxpointerleave","normalizeMouseEvent","e","pointerId","pointers","observer","activated","activateStrategy","MouseStrategy","inherit","ctor","callBase","apply","arguments","_fireEvent","args","originalEvent","map","normalize","activate","resetObserver","reset","module","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,yBAAD,CAAP,CAAmCD,MAAhD;;AACA,IAAIE,YAAY,GAAGD,OAAO,CAAC,QAAD,CAA1B;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIG,QAAQ,GAAG;AACXC,EAAAA,aAAa,EAAE,WADJ;AAEXC,EAAAA,aAAa,EAAE,WAFJ;AAGXC,EAAAA,WAAW,EAAE,SAHF;AAIXC,EAAAA,eAAe,EAAE,EAJN;AAKXC,EAAAA,aAAa,EAAE,WALJ;AAMXC,EAAAA,YAAY,EAAE,UANH;AAOXC,EAAAA,cAAc,EAAE,YAPL;AAQXC,EAAAA,cAAc,EAAE;AARL,CAAf;;AAUA,IAAIC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAASC,CAAT,EAAY;AAClCA,EAAAA,CAAC,CAACC,SAAF,GAAc,CAAd;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAEC,QAAQ,CAACD,QAAT,EADP;AAEHD,IAAAA,SAAS,EAAE;AAFR,GAAP;AAIH,CAND;;AAOA,IAAIE,QAAJ;AACA,IAAIC,SAAS,GAAG,KAAhB;;AACA,IAAIC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAW;AAC9B,MAAID,SAAJ,EAAe;AACX;AACH;;AACDD,EAAAA,QAAQ,GAAG,IAAId,QAAJ,CAAaC,QAAb,EAAuB,YAAW;AACzC,WAAO,IAAP;AACH,GAFU,CAAX;AAGAc,EAAAA,SAAS,GAAG,IAAZ;AACH,CARD;;AASA,IAAIE,aAAa,GAAGlB,YAAY,CAACmB,OAAb,CAAqB;AACrCC,EAAAA,IAAI,EAAE,gBAAW;AACb,SAAKC,QAAL,CAAcC,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;AACAN,IAAAA,gBAAgB;AACnB,GAJoC;AAKrCO,EAAAA,UAAU,EAAE,oBAASC,IAAT,EAAe;AACvB,WAAO,KAAKJ,QAAL,CAAcvB,MAAM,CAACa,mBAAmB,CAACc,IAAI,CAACC,aAAN,CAApB,EAA0CD,IAA1C,CAApB,CAAP;AACH;AAPoC,CAArB,CAApB;AASAP,aAAa,CAACS,GAAd,GAAoBzB,QAApB;AACAgB,aAAa,CAACU,SAAd,GAA0BjB,mBAA1B;AACAO,aAAa,CAACW,QAAd,GAAyBZ,gBAAzB;;AACAC,aAAa,CAACY,aAAd,GAA8B,YAAW;AACrCf,EAAAA,QAAQ,CAACgB,KAAT;AACH,CAFD;;AAGAC,MAAM,CAACC,OAAP,GAAiBf,aAAjB","sourcesContent":["/**\r\n * DevExtreme (events/pointer/mouse.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar BaseStrategy = require(\"./base\");\r\nvar Observer = require(\"./observer\");\r\nvar eventMap = {\r\n    dxpointerdown: \"mousedown\",\r\n    dxpointermove: \"mousemove\",\r\n    dxpointerup: \"mouseup\",\r\n    dxpointercancel: \"\",\r\n    dxpointerover: \"mouseover\",\r\n    dxpointerout: \"mouseout\",\r\n    dxpointerenter: \"mouseenter\",\r\n    dxpointerleave: \"mouseleave\"\r\n};\r\nvar normalizeMouseEvent = function(e) {\r\n    e.pointerId = 1;\r\n    return {\r\n        pointers: observer.pointers(),\r\n        pointerId: 1\r\n    }\r\n};\r\nvar observer;\r\nvar activated = false;\r\nvar activateStrategy = function() {\r\n    if (activated) {\r\n        return\r\n    }\r\n    observer = new Observer(eventMap, function() {\r\n        return true\r\n    });\r\n    activated = true\r\n};\r\nvar MouseStrategy = BaseStrategy.inherit({\r\n    ctor: function() {\r\n        this.callBase.apply(this, arguments);\r\n        activateStrategy()\r\n    },\r\n    _fireEvent: function(args) {\r\n        return this.callBase(extend(normalizeMouseEvent(args.originalEvent), args))\r\n    }\r\n});\r\nMouseStrategy.map = eventMap;\r\nMouseStrategy.normalize = normalizeMouseEvent;\r\nMouseStrategy.activate = activateStrategy;\r\nMouseStrategy.resetObserver = function() {\r\n    observer.reset()\r\n};\r\nmodule.exports = MouseStrategy;\r\n"]},"metadata":{},"sourceType":"script"}