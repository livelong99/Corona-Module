{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\src\\\\Components\\\\World\\\\WorldRecord.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport { WorldFullContext } from '../Store';\n\nfunction World(props) {\n  const _useContext = useContext(WorldFullContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        wTotal = _useContext2[0],\n        setWorldTotal = _useContext2[1];\n\n  const Total = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var rec;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return props.total.then(response => {\n              const Timeline = response.data;\n              console.log(Timeline);\n              return Timeline;\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 2:\n            rec = _context.sent;\n            setWorldTotal(rec);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function Total() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (wtotat === null) Total();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"orange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./Images/icon-infected.png\",\n    alt: \"infected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, props.total.cases), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Total Cases\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./Images/icon-inactive.png\",\n    alt: \"safe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, props.total.recovered), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Cured/Dischrged\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./Images/icon-death.png\",\n    alt: \"dead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, props.total.deaths), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Deaths\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./Images/icon-active.png\",\n    alt: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, props.total.active), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Active Cases\"))));\n}\n\nexport default World;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/src/Components/World/WorldRecord.jsx"],"names":["React","useState","useContext","WorldFullContext","World","props","wTotal","setWorldTotal","Total","total","then","response","Timeline","data","console","log","catch","error","rec","wtotat","cases","recovered","deaths","active"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAAQC,gBAAR,QAA+B,UAA/B;;AAEA,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AAAA,sBACaH,UAAU,CAACC,gBAAD,CADvB;AAAA;AAAA,QACZG,MADY;AAAA,QACJC,aADI;;AAInB,QAAMC,KAAK;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQH,KAAK,CAACI,KAAN,CACjBC,IADiB,CACXC,QAAD,IAAY;AACd,oBAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAA1B;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,qBAAOA,QAAP;AACH,aALiB,EAMjBI,KANiB,CAMVC,KAAD,IAAS;AACZH,cAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACP,aARqB,CADR;;AAAA;AACJC,YAAAA,GADI;AAUdX,YAAAA,aAAa,CAACW,GAAD,CAAb;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAALV,KAAK;AAAA;AAAA;AAAA,KAAX;;AAaA,MAAGW,MAAM,KAAG,IAAZ,EACIX,KAAK;AAGT,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAC,4BAAT;AAAsC,IAAA,GAAG,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASH,KAAK,CAACI,KAAN,CAAYW,KAArB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CADJ,eAMI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAC,4BAAT;AAAsC,IAAA,GAAG,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASf,KAAK,CAACI,KAAN,CAAYY,SAArB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,CANJ,eAWI;AAAI,IAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAC,yBAAT;AAAmC,IAAA,GAAG,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAShB,KAAK,CAACI,KAAN,CAAYa,MAArB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CAXJ,eAgBI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAC,0BAAT;AAAoC,IAAA,GAAG,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASjB,KAAK,CAACI,KAAN,CAAYc,MAArB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CAhBJ,CADJ,CADJ;AA0BH;;AAIC,eAAgBnB,KAAhB","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport {WorldFullContext} from '../Store';\r\n\r\nfunction World (props) {\r\n    const [wTotal, setWorldTotal] = useContext(WorldFullContext);\r\n    \r\n\r\n    const Total = async () => {\r\n        const rec = await props.total\r\n        .then((response)=>{\r\n            const Timeline = response.data;\r\n            console.log(Timeline);\r\n            return Timeline;\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n    });\r\n    setWorldTotal(rec);\r\n    }\r\n    \r\n    if(wtotat===null)\r\n        Total();   \r\n       \r\n\r\n    return (\r\n        <div className=\"total\">\r\n            <ul>\r\n                <li className=\"orange\">\r\n                    <img src=\"./Images/icon-infected.png\" alt=\"infected\"></img>\r\n                    <strong>{props.total.cases}</strong>\r\n                    <span>Total Cases</span>\r\n                </li>\r\n                <li className=\"green\">\r\n                    <img src=\"./Images/icon-inactive.png\" alt=\"safe\"></img>\r\n                    <strong>{props.total.recovered}</strong>\r\n                    <span>Cured/Dischrged</span>\r\n                </li>\r\n                <li className=\"red\">\r\n                    <img src=\"./Images/icon-death.png\" alt=\"dead\"></img>\r\n                    <strong>{props.total.deaths}</strong>\r\n                    <span>Deaths</span>\r\n                </li>\r\n                <li className=\"blue\">\r\n                    <img src=\"./Images/icon-active.png\" alt=\"active\"></img>\r\n                    <strong>{props.total.active}</strong>\r\n                    <span>Active Cases</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n  \r\n  \r\n  export default (World);\r\n"]},"metadata":{},"sourceType":"module"}