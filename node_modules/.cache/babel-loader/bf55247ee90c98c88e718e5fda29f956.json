{"ast":null,"code":"/**\r\n * DevExtreme (ui/date_box/ui.date_view_roller.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\");\n\nvar eventsEngine = require(\"../../events/core/events_engine\");\n\nvar registerComponent = require(\"../../core/component_registrator\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar each = require(\"../../core/utils/iterator\").each;\n\nvar eventUtils = require(\"../../events/utils\");\n\nvar clickEvent = require(\"../../events/click\");\n\nvar Scrollable = require(\"../scroll_view/ui.scrollable\");\n\nvar fx = require(\"../../animation/fx\");\n\nvar translator = require(\"../../animation/translator\");\n\nvar DATEVIEW_ROLLER_CLASS = \"dx-dateviewroller\";\nvar DATEVIEW_ROLLER_ACTIVE_CLASS = \"dx-state-active\";\nvar DATEVIEW_ROLLER_CURRENT_CLASS = \"dx-dateviewroller-current\";\nvar DATEVIEW_ROLLER_ITEM_CLASS = \"dx-dateview-item\";\nvar DATEVIEW_ROLLER_ITEM_SELECTED_CLASS = \"dx-dateview-item-selected\";\nvar DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS = \"dx-dateview-item-selected-frame\";\nvar DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS = \"dx-dateview-item-selected-border\";\nvar DateViewRoller = Scrollable.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      showScrollbar: false,\n      useNative: false,\n      selectedIndex: 0,\n      bounceEnabled: false,\n      items: [],\n      showOnClick: false,\n      onClick: null,\n      onSelectedIndexChanged: null\n    });\n  },\n  _defaultOptionsRules: function _defaultOptionsRules() {\n    return this.callBase().concat([{\n      device: {\n        platform: \"generic\"\n      },\n      options: {\n        scrollByContent: true\n      }\n    }]);\n  },\n  _init: function _init() {\n    this.callBase();\n\n    this._renderSelectedItemFrame();\n  },\n  _render: function _render() {\n    this.callBase();\n    this.$element().addClass(DATEVIEW_ROLLER_CLASS);\n\n    this._renderContainerClick();\n\n    this._renderItems();\n\n    this._renderSelectedValue();\n\n    this._renderItemsClick();\n\n    this._wrapAction(\"_endAction\", this._endActionHandler.bind(this));\n\n    this._renderSelectedIndexChanged();\n  },\n  _renderSelectedIndexChanged: function _renderSelectedIndexChanged() {\n    this._selectedIndexChanged = this._createActionByOption(\"onSelectedIndexChanged\");\n  },\n  _renderContainerClick: function _renderContainerClick() {\n    if (!this.option(\"showOnClick\")) {\n      return;\n    }\n\n    var eventName = eventUtils.addNamespace(clickEvent.name, this.NAME);\n\n    var clickAction = this._createActionByOption(\"onClick\");\n\n    eventsEngine.off(this._$container, eventName);\n    eventsEngine.on(this._$container, eventName, function (e) {\n      clickAction({\n        event: e\n      });\n    });\n  },\n  _wrapAction: function _wrapAction(actionName, callback) {\n    var strategy = this._strategy;\n    var originalAction = strategy[actionName];\n\n    strategy[actionName] = function () {\n      callback.apply(this, arguments);\n      return originalAction.apply(this, arguments);\n    };\n  },\n  _renderItems: function _renderItems() {\n    var items = this.option(\"items\") || [];\n    var $items = $();\n\n    this._$content.empty();\n\n    items.forEach(function (item) {\n      $items = $items.add($(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_CLASS).append(item));\n    });\n\n    this._$content.append($items);\n\n    this._$items = $items;\n    this.update();\n  },\n  _renderSelectedItemFrame: function _renderSelectedItemFrame() {\n    $(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS).append($(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS)).appendTo(this._$container);\n  },\n  _renderSelectedValue: function _renderSelectedValue(selectedIndex) {\n    var index = this._fitIndex(selectedIndex || this.option(\"selectedIndex\"));\n\n    this._moveTo({\n      top: this._getItemPosition(index)\n    });\n\n    this._renderActiveStateItem();\n  },\n  _fitIndex: function _fitIndex(index) {\n    var items = this.option(\"items\") || [];\n    var itemCount = items.length;\n\n    if (index >= itemCount) {\n      return itemCount - 1;\n    }\n\n    if (index < 0) {\n      return 0;\n    }\n\n    return index;\n  },\n  _getItemPosition: function _getItemPosition(index) {\n    return Math.round(this._itemHeight() * index);\n  },\n  _renderItemsClick: function _renderItemsClick() {\n    var itemSelector = this._getItemSelector();\n\n    var eventName = eventUtils.addNamespace(clickEvent.name, this.NAME);\n    eventsEngine.off(this.$element(), eventName, itemSelector);\n    eventsEngine.on(this.$element(), eventName, itemSelector, this._itemClickHandler.bind(this));\n  },\n  _getItemSelector: function _getItemSelector() {\n    return \".\" + DATEVIEW_ROLLER_ITEM_CLASS;\n  },\n  _itemClickHandler: function _itemClickHandler(e) {\n    this.option(\"selectedIndex\", this._itemElementIndex(e.currentTarget));\n  },\n  _itemElementIndex: function _itemElementIndex(itemElement) {\n    return this._itemElements().index(itemElement);\n  },\n  _itemElements: function _itemElements() {\n    return this.$element().find(this._getItemSelector());\n  },\n  _renderActiveStateItem: function _renderActiveStateItem() {\n    var selectedIndex = this.option(\"selectedIndex\");\n    each(this._$items, function (index) {\n      $(this).toggleClass(DATEVIEW_ROLLER_ITEM_SELECTED_CLASS, selectedIndex === index);\n    });\n  },\n  _moveTo: function _moveTo(targetLocation) {\n    targetLocation = this._normalizeLocation(targetLocation);\n\n    var location = this._location();\n\n    var delta = {\n      x: -(location.left - targetLocation.left),\n      y: -(location.top - targetLocation.top)\n    };\n\n    if (this._isVisible() && (delta.x || delta.y)) {\n      this._strategy._prepareDirections(true);\n\n      if (this._animation) {\n        var that = this;\n        fx.stop(this._$content);\n        fx.animate(this._$content, {\n          duration: 200,\n          type: \"slide\",\n          to: {\n            top: Math.floor(delta.y)\n          },\n          complete: function complete() {\n            translator.resetPosition(that._$content);\n\n            that._strategy.handleMove({\n              delta: delta\n            });\n          }\n        });\n        delete this._animation;\n      } else {\n        this._strategy.handleMove({\n          delta: delta\n        });\n      }\n    }\n  },\n  _validate: function _validate(e) {\n    return this._strategy.validate(e);\n  },\n  _endActionHandler: function _endActionHandler() {\n    var currentSelectedIndex = this.option(\"selectedIndex\");\n\n    var ratio = -this._location().top / this._itemHeight();\n\n    var newSelectedIndex = Math.round(ratio);\n    this._animation = true;\n\n    if (newSelectedIndex === currentSelectedIndex) {\n      this._renderSelectedValue(newSelectedIndex);\n    } else {\n      this.option(\"selectedIndex\", newSelectedIndex);\n    }\n  },\n  _itemHeight: function _itemHeight() {\n    var $item = this._$items.first();\n\n    return $item.get(0) && $item.get(0).getBoundingClientRect().height || 0;\n  },\n  _toggleActive: function _toggleActive(state) {\n    this.$element().toggleClass(DATEVIEW_ROLLER_ACTIVE_CLASS, state);\n  },\n  _isVisible: function _isVisible() {\n    return this._$container.is(\":visible\");\n  },\n  _fireSelectedIndexChanged: function _fireSelectedIndexChanged(value, previousValue) {\n    this._selectedIndexChanged({\n      value: value,\n      previousValue: previousValue,\n      event: void 0\n    });\n  },\n  _visibilityChanged: function _visibilityChanged(visible) {\n    this.callBase(visible);\n\n    if (visible) {\n      this._renderSelectedValue(this.option(\"selectedIndex\"));\n    }\n\n    this.toggleActiveState(false);\n  },\n  toggleActiveState: function toggleActiveState(state) {\n    this.$element().toggleClass(DATEVIEW_ROLLER_CURRENT_CLASS, state);\n  },\n  _refreshSelectedIndex: function _refreshSelectedIndex() {\n    var selectedIndex = this.option(\"selectedIndex\");\n\n    var fitIndex = this._fitIndex(selectedIndex);\n\n    fitIndex === selectedIndex ? this._renderActiveStateItem() : this.option(\"selectedIndex\", fitIndex);\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"selectedIndex\":\n        this._fireSelectedIndexChanged(args.value, args.previousValue);\n\n        this._renderSelectedValue(args.value);\n\n        break;\n\n      case \"items\":\n        this._renderItems();\n\n        this._refreshSelectedIndex();\n\n        break;\n\n      case \"onClick\":\n      case \"showOnClick\":\n        this._renderContainerClick();\n\n        break;\n\n      case \"onSelectedIndexChanged\":\n        this._renderSelectedIndexChanged();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\nregisterComponent(\"dxDateViewRoller\", DateViewRoller);\nmodule.exports = DateViewRoller;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/date_box/ui.date_view_roller.js"],"names":["$","require","eventsEngine","registerComponent","extend","each","eventUtils","clickEvent","Scrollable","fx","translator","DATEVIEW_ROLLER_CLASS","DATEVIEW_ROLLER_ACTIVE_CLASS","DATEVIEW_ROLLER_CURRENT_CLASS","DATEVIEW_ROLLER_ITEM_CLASS","DATEVIEW_ROLLER_ITEM_SELECTED_CLASS","DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS","DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS","DateViewRoller","inherit","_getDefaultOptions","callBase","showScrollbar","useNative","selectedIndex","bounceEnabled","items","showOnClick","onClick","onSelectedIndexChanged","_defaultOptionsRules","concat","device","platform","options","scrollByContent","_init","_renderSelectedItemFrame","_render","$element","addClass","_renderContainerClick","_renderItems","_renderSelectedValue","_renderItemsClick","_wrapAction","_endActionHandler","bind","_renderSelectedIndexChanged","_selectedIndexChanged","_createActionByOption","option","eventName","addNamespace","name","NAME","clickAction","off","_$container","on","e","event","actionName","callback","strategy","_strategy","originalAction","apply","arguments","$items","_$content","empty","forEach","item","add","append","_$items","update","appendTo","index","_fitIndex","_moveTo","top","_getItemPosition","_renderActiveStateItem","itemCount","length","Math","round","_itemHeight","itemSelector","_getItemSelector","_itemClickHandler","_itemElementIndex","currentTarget","itemElement","_itemElements","find","toggleClass","targetLocation","_normalizeLocation","location","_location","delta","x","left","y","_isVisible","_prepareDirections","_animation","that","stop","animate","duration","type","to","floor","complete","resetPosition","handleMove","_validate","validate","currentSelectedIndex","ratio","newSelectedIndex","$item","first","get","getBoundingClientRect","height","_toggleActive","state","is","_fireSelectedIndexChanged","value","previousValue","_visibilityChanged","visible","toggleActiveState","_refreshSelectedIndex","fitIndex","_optionChanged","args","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/date_box/ui.date_view_roller.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\");\r\nvar eventsEngine = require(\"../../events/core/events_engine\");\r\nvar registerComponent = require(\"../../core/component_registrator\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar each = require(\"../../core/utils/iterator\").each;\r\nvar eventUtils = require(\"../../events/utils\");\r\nvar clickEvent = require(\"../../events/click\");\r\nvar Scrollable = require(\"../scroll_view/ui.scrollable\");\r\nvar fx = require(\"../../animation/fx\");\r\nvar translator = require(\"../../animation/translator\");\r\nvar DATEVIEW_ROLLER_CLASS = \"dx-dateviewroller\";\r\nvar DATEVIEW_ROLLER_ACTIVE_CLASS = \"dx-state-active\";\r\nvar DATEVIEW_ROLLER_CURRENT_CLASS = \"dx-dateviewroller-current\";\r\nvar DATEVIEW_ROLLER_ITEM_CLASS = \"dx-dateview-item\";\r\nvar DATEVIEW_ROLLER_ITEM_SELECTED_CLASS = \"dx-dateview-item-selected\";\r\nvar DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS = \"dx-dateview-item-selected-frame\";\r\nvar DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS = \"dx-dateview-item-selected-border\";\r\nvar DateViewRoller = Scrollable.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            showScrollbar: false,\r\n            useNative: false,\r\n            selectedIndex: 0,\r\n            bounceEnabled: false,\r\n            items: [],\r\n            showOnClick: false,\r\n            onClick: null,\r\n            onSelectedIndexChanged: null\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                scrollByContent: true\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._renderSelectedItemFrame()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DATEVIEW_ROLLER_CLASS);\r\n        this._renderContainerClick();\r\n        this._renderItems();\r\n        this._renderSelectedValue();\r\n        this._renderItemsClick();\r\n        this._wrapAction(\"_endAction\", this._endActionHandler.bind(this));\r\n        this._renderSelectedIndexChanged()\r\n    },\r\n    _renderSelectedIndexChanged: function() {\r\n        this._selectedIndexChanged = this._createActionByOption(\"onSelectedIndexChanged\")\r\n    },\r\n    _renderContainerClick: function() {\r\n        if (!this.option(\"showOnClick\")) {\r\n            return\r\n        }\r\n        var eventName = eventUtils.addNamespace(clickEvent.name, this.NAME);\r\n        var clickAction = this._createActionByOption(\"onClick\");\r\n        eventsEngine.off(this._$container, eventName);\r\n        eventsEngine.on(this._$container, eventName, function(e) {\r\n            clickAction({\r\n                event: e\r\n            })\r\n        })\r\n    },\r\n    _wrapAction: function(actionName, callback) {\r\n        var strategy = this._strategy;\r\n        var originalAction = strategy[actionName];\r\n        strategy[actionName] = function() {\r\n            callback.apply(this, arguments);\r\n            return originalAction.apply(this, arguments)\r\n        }\r\n    },\r\n    _renderItems: function() {\r\n        var items = this.option(\"items\") || [];\r\n        var $items = $();\r\n        this._$content.empty();\r\n        items.forEach(function(item) {\r\n            $items = $items.add($(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_CLASS).append(item))\r\n        });\r\n        this._$content.append($items);\r\n        this._$items = $items;\r\n        this.update()\r\n    },\r\n    _renderSelectedItemFrame: function() {\r\n        $(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS).append($(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS)).appendTo(this._$container)\r\n    },\r\n    _renderSelectedValue: function(selectedIndex) {\r\n        var index = this._fitIndex(selectedIndex || this.option(\"selectedIndex\"));\r\n        this._moveTo({\r\n            top: this._getItemPosition(index)\r\n        });\r\n        this._renderActiveStateItem()\r\n    },\r\n    _fitIndex: function(index) {\r\n        var items = this.option(\"items\") || [];\r\n        var itemCount = items.length;\r\n        if (index >= itemCount) {\r\n            return itemCount - 1\r\n        }\r\n        if (index < 0) {\r\n            return 0\r\n        }\r\n        return index\r\n    },\r\n    _getItemPosition: function(index) {\r\n        return Math.round(this._itemHeight() * index)\r\n    },\r\n    _renderItemsClick: function() {\r\n        var itemSelector = this._getItemSelector();\r\n        var eventName = eventUtils.addNamespace(clickEvent.name, this.NAME);\r\n        eventsEngine.off(this.$element(), eventName, itemSelector);\r\n        eventsEngine.on(this.$element(), eventName, itemSelector, this._itemClickHandler.bind(this))\r\n    },\r\n    _getItemSelector: function() {\r\n        return \".\" + DATEVIEW_ROLLER_ITEM_CLASS\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        this.option(\"selectedIndex\", this._itemElementIndex(e.currentTarget))\r\n    },\r\n    _itemElementIndex: function(itemElement) {\r\n        return this._itemElements().index(itemElement)\r\n    },\r\n    _itemElements: function() {\r\n        return this.$element().find(this._getItemSelector())\r\n    },\r\n    _renderActiveStateItem: function() {\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        each(this._$items, function(index) {\r\n            $(this).toggleClass(DATEVIEW_ROLLER_ITEM_SELECTED_CLASS, selectedIndex === index)\r\n        })\r\n    },\r\n    _moveTo: function(targetLocation) {\r\n        targetLocation = this._normalizeLocation(targetLocation);\r\n        var location = this._location();\r\n        var delta = {\r\n            x: -(location.left - targetLocation.left),\r\n            y: -(location.top - targetLocation.top)\r\n        };\r\n        if (this._isVisible() && (delta.x || delta.y)) {\r\n            this._strategy._prepareDirections(true);\r\n            if (this._animation) {\r\n                var that = this;\r\n                fx.stop(this._$content);\r\n                fx.animate(this._$content, {\r\n                    duration: 200,\r\n                    type: \"slide\",\r\n                    to: {\r\n                        top: Math.floor(delta.y)\r\n                    },\r\n                    complete: function() {\r\n                        translator.resetPosition(that._$content);\r\n                        that._strategy.handleMove({\r\n                            delta: delta\r\n                        })\r\n                    }\r\n                });\r\n                delete this._animation\r\n            } else {\r\n                this._strategy.handleMove({\r\n                    delta: delta\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _validate: function(e) {\r\n        return this._strategy.validate(e)\r\n    },\r\n    _endActionHandler: function() {\r\n        var currentSelectedIndex = this.option(\"selectedIndex\");\r\n        var ratio = -this._location().top / this._itemHeight();\r\n        var newSelectedIndex = Math.round(ratio);\r\n        this._animation = true;\r\n        if (newSelectedIndex === currentSelectedIndex) {\r\n            this._renderSelectedValue(newSelectedIndex)\r\n        } else {\r\n            this.option(\"selectedIndex\", newSelectedIndex)\r\n        }\r\n    },\r\n    _itemHeight: function() {\r\n        var $item = this._$items.first();\r\n        return $item.get(0) && $item.get(0).getBoundingClientRect().height || 0\r\n    },\r\n    _toggleActive: function(state) {\r\n        this.$element().toggleClass(DATEVIEW_ROLLER_ACTIVE_CLASS, state)\r\n    },\r\n    _isVisible: function() {\r\n        return this._$container.is(\":visible\")\r\n    },\r\n    _fireSelectedIndexChanged: function(value, previousValue) {\r\n        this._selectedIndexChanged({\r\n            value: value,\r\n            previousValue: previousValue,\r\n            event: void 0\r\n        })\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        this.callBase(visible);\r\n        if (visible) {\r\n            this._renderSelectedValue(this.option(\"selectedIndex\"))\r\n        }\r\n        this.toggleActiveState(false)\r\n    },\r\n    toggleActiveState: function(state) {\r\n        this.$element().toggleClass(DATEVIEW_ROLLER_CURRENT_CLASS, state)\r\n    },\r\n    _refreshSelectedIndex: function() {\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        var fitIndex = this._fitIndex(selectedIndex);\r\n        fitIndex === selectedIndex ? this._renderActiveStateItem() : this.option(\"selectedIndex\", fitIndex)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"selectedIndex\":\r\n                this._fireSelectedIndexChanged(args.value, args.previousValue);\r\n                this._renderSelectedValue(args.value);\r\n                break;\r\n            case \"items\":\r\n                this._renderItems();\r\n                this._refreshSelectedIndex();\r\n                break;\r\n            case \"onClick\":\r\n            case \"showOnClick\":\r\n                this._renderContainerClick();\r\n                break;\r\n            case \"onSelectedIndexChanged\":\r\n                this._renderSelectedIndexChanged();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxDateViewRoller\", DateViewRoller);\r\nmodule.exports = DateViewRoller;\r\n"]},"metadata":{},"sourceType":"script"}