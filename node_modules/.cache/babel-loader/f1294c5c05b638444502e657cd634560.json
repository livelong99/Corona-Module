{"ast":null,"code":"/**\r\n * DevExtreme (ui/widget/utils.ink_ripple.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\");\n\nvar INKRIPPLE_CLASS = \"dx-inkripple\";\nvar INKRIPPLE_WAVE_CLASS = \"dx-inkripple-wave\";\nvar INKRIPPLE_SHOWING_CLASS = \"dx-inkripple-showing\";\nvar INKRIPPLE_HIDING_CLASS = \"dx-inkripple-hiding\";\nvar DEFAULT_WAVE_SIZE_COEFFICIENT = 2;\nvar MAX_WAVE_SIZE = 4e3;\nvar ANIMATION_DURATION = 300;\nvar HOLD_ANIMATION_DURATION = 1e3;\nvar DEFAULT_WAVE_INDEX = 0;\n\nvar render = function render(args) {\n  args = args || {};\n\n  if (void 0 === args.useHoldAnimation) {\n    args.useHoldAnimation = true;\n  }\n\n  var config = {\n    waveSizeCoefficient: args.waveSizeCoefficient || DEFAULT_WAVE_SIZE_COEFFICIENT,\n    isCentered: args.isCentered || false,\n    wavesNumber: args.wavesNumber || 1,\n    durations: getDurations(args.useHoldAnimation)\n  };\n  return {\n    showWave: showWave.bind(this, config),\n    hideWave: hideWave.bind(this, config)\n  };\n};\n\nvar getInkRipple = function getInkRipple(element) {\n  var result = element.children(\".\" + INKRIPPLE_CLASS);\n\n  if (0 === result.length) {\n    result = $(\"<div>\").addClass(INKRIPPLE_CLASS).appendTo(element);\n  }\n\n  return result;\n};\n\nvar getWaves = function getWaves(element, wavesNumber) {\n  var inkRipple = getInkRipple(element);\n  var result = inkRipple.children(\".\" + INKRIPPLE_WAVE_CLASS).toArray();\n\n  for (var i = result.length; i < wavesNumber; i++) {\n    var $currentWave = $(\"<div>\").appendTo(inkRipple).addClass(INKRIPPLE_WAVE_CLASS);\n    result.push($currentWave[0]);\n  }\n\n  return $(result);\n};\n\nvar getWaveStyleConfig = function getWaveStyleConfig(args, config) {\n  var element = config.element;\n  var elementWidth = element.outerWidth();\n  var elementHeight = element.outerHeight();\n  var elementDiagonal = parseInt(Math.sqrt(elementWidth * elementWidth + elementHeight * elementHeight));\n  var waveSize = Math.min(MAX_WAVE_SIZE, parseInt(elementDiagonal * args.waveSizeCoefficient));\n  var left;\n  var top;\n\n  if (args.isCentered) {\n    left = (elementWidth - waveSize) / 2;\n    top = (elementHeight - waveSize) / 2;\n  } else {\n    var event = config.event;\n    var position = config.element.offset();\n    var x = event.pageX - position.left;\n    var y = event.pageY - position.top;\n    left = x - waveSize / 2;\n    top = y - waveSize / 2;\n  }\n\n  return {\n    left: left,\n    top: top,\n    height: waveSize,\n    width: waveSize\n  };\n};\n\nvar showWave = function showWave(args, config) {\n  var $wave = getWaves(config.element, args.wavesNumber).eq(config.wave || DEFAULT_WAVE_INDEX);\n  args.hidingTimeout && clearTimeout(args.hidingTimeout);\n  hideSelectedWave($wave);\n  $wave.css(getWaveStyleConfig(args, config));\n  args.showingTimeout = setTimeout(showingWaveHandler.bind(this, args, $wave), 0);\n};\n\nvar showingWaveHandler = function showingWaveHandler(args, $wave) {\n  var durationCss = args.durations.showingScale + \"ms\";\n  $wave.addClass(INKRIPPLE_SHOWING_CLASS).css(\"transitionDuration\", durationCss);\n};\n\nvar getDurations = function getDurations(useHoldAnimation) {\n  return {\n    showingScale: useHoldAnimation ? HOLD_ANIMATION_DURATION : ANIMATION_DURATION,\n    hidingScale: ANIMATION_DURATION,\n    hidingOpacity: ANIMATION_DURATION\n  };\n};\n\nvar hideSelectedWave = function hideSelectedWave($wave) {\n  $wave.removeClass(INKRIPPLE_HIDING_CLASS).css(\"transitionDuration\", \"\");\n};\n\nvar hideWave = function hideWave(args, config) {\n  args.showingTimeout && clearTimeout(args.showingTimeout);\n  var $wave = getWaves(config.element, config.wavesNumber).eq(config.wave || DEFAULT_WAVE_INDEX);\n  var durations = args.durations;\n  var durationCss = durations.hidingScale + \"ms, \" + durations.hidingOpacity + \"ms\";\n  $wave.addClass(INKRIPPLE_HIDING_CLASS).removeClass(INKRIPPLE_SHOWING_CLASS).css(\"transitionDuration\", durationCss);\n  var animationDuration = Math.max(durations.hidingScale, durations.hidingOpacity);\n  args.hidingTimeout = setTimeout(hideSelectedWave.bind(this, $wave), animationDuration);\n};\n\nmodule.exports = {\n  render: render\n};","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/widget/utils.ink_ripple.js"],"names":["$","require","INKRIPPLE_CLASS","INKRIPPLE_WAVE_CLASS","INKRIPPLE_SHOWING_CLASS","INKRIPPLE_HIDING_CLASS","DEFAULT_WAVE_SIZE_COEFFICIENT","MAX_WAVE_SIZE","ANIMATION_DURATION","HOLD_ANIMATION_DURATION","DEFAULT_WAVE_INDEX","render","args","useHoldAnimation","config","waveSizeCoefficient","isCentered","wavesNumber","durations","getDurations","showWave","bind","hideWave","getInkRipple","element","result","children","length","addClass","appendTo","getWaves","inkRipple","toArray","i","$currentWave","push","getWaveStyleConfig","elementWidth","outerWidth","elementHeight","outerHeight","elementDiagonal","parseInt","Math","sqrt","waveSize","min","left","top","event","position","offset","x","pageX","y","pageY","height","width","$wave","eq","wave","hidingTimeout","clearTimeout","hideSelectedWave","css","showingTimeout","setTimeout","showingWaveHandler","durationCss","showingScale","hidingScale","hidingOpacity","removeClass","animationDuration","max","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/widget/utils.ink_ripple.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\");\r\nvar INKRIPPLE_CLASS = \"dx-inkripple\";\r\nvar INKRIPPLE_WAVE_CLASS = \"dx-inkripple-wave\";\r\nvar INKRIPPLE_SHOWING_CLASS = \"dx-inkripple-showing\";\r\nvar INKRIPPLE_HIDING_CLASS = \"dx-inkripple-hiding\";\r\nvar DEFAULT_WAVE_SIZE_COEFFICIENT = 2;\r\nvar MAX_WAVE_SIZE = 4e3;\r\nvar ANIMATION_DURATION = 300;\r\nvar HOLD_ANIMATION_DURATION = 1e3;\r\nvar DEFAULT_WAVE_INDEX = 0;\r\nvar render = function(args) {\r\n    args = args || {};\r\n    if (void 0 === args.useHoldAnimation) {\r\n        args.useHoldAnimation = true\r\n    }\r\n    var config = {\r\n        waveSizeCoefficient: args.waveSizeCoefficient || DEFAULT_WAVE_SIZE_COEFFICIENT,\r\n        isCentered: args.isCentered || false,\r\n        wavesNumber: args.wavesNumber || 1,\r\n        durations: getDurations(args.useHoldAnimation)\r\n    };\r\n    return {\r\n        showWave: showWave.bind(this, config),\r\n        hideWave: hideWave.bind(this, config)\r\n    }\r\n};\r\nvar getInkRipple = function(element) {\r\n    var result = element.children(\".\" + INKRIPPLE_CLASS);\r\n    if (0 === result.length) {\r\n        result = $(\"<div>\").addClass(INKRIPPLE_CLASS).appendTo(element)\r\n    }\r\n    return result\r\n};\r\nvar getWaves = function(element, wavesNumber) {\r\n    var inkRipple = getInkRipple(element);\r\n    var result = inkRipple.children(\".\" + INKRIPPLE_WAVE_CLASS).toArray();\r\n    for (var i = result.length; i < wavesNumber; i++) {\r\n        var $currentWave = $(\"<div>\").appendTo(inkRipple).addClass(INKRIPPLE_WAVE_CLASS);\r\n        result.push($currentWave[0])\r\n    }\r\n    return $(result)\r\n};\r\nvar getWaveStyleConfig = function(args, config) {\r\n    var element = config.element;\r\n    var elementWidth = element.outerWidth();\r\n    var elementHeight = element.outerHeight();\r\n    var elementDiagonal = parseInt(Math.sqrt(elementWidth * elementWidth + elementHeight * elementHeight));\r\n    var waveSize = Math.min(MAX_WAVE_SIZE, parseInt(elementDiagonal * args.waveSizeCoefficient));\r\n    var left;\r\n    var top;\r\n    if (args.isCentered) {\r\n        left = (elementWidth - waveSize) / 2;\r\n        top = (elementHeight - waveSize) / 2\r\n    } else {\r\n        var event = config.event;\r\n        var position = config.element.offset();\r\n        var x = event.pageX - position.left;\r\n        var y = event.pageY - position.top;\r\n        left = x - waveSize / 2;\r\n        top = y - waveSize / 2\r\n    }\r\n    return {\r\n        left: left,\r\n        top: top,\r\n        height: waveSize,\r\n        width: waveSize\r\n    }\r\n};\r\nvar showWave = function(args, config) {\r\n    var $wave = getWaves(config.element, args.wavesNumber).eq(config.wave || DEFAULT_WAVE_INDEX);\r\n    args.hidingTimeout && clearTimeout(args.hidingTimeout);\r\n    hideSelectedWave($wave);\r\n    $wave.css(getWaveStyleConfig(args, config));\r\n    args.showingTimeout = setTimeout(showingWaveHandler.bind(this, args, $wave), 0)\r\n};\r\nvar showingWaveHandler = function(args, $wave) {\r\n    var durationCss = args.durations.showingScale + \"ms\";\r\n    $wave.addClass(INKRIPPLE_SHOWING_CLASS).css(\"transitionDuration\", durationCss)\r\n};\r\nvar getDurations = function(useHoldAnimation) {\r\n    return {\r\n        showingScale: useHoldAnimation ? HOLD_ANIMATION_DURATION : ANIMATION_DURATION,\r\n        hidingScale: ANIMATION_DURATION,\r\n        hidingOpacity: ANIMATION_DURATION\r\n    }\r\n};\r\nvar hideSelectedWave = function($wave) {\r\n    $wave.removeClass(INKRIPPLE_HIDING_CLASS).css(\"transitionDuration\", \"\")\r\n};\r\nvar hideWave = function(args, config) {\r\n    args.showingTimeout && clearTimeout(args.showingTimeout);\r\n    var $wave = getWaves(config.element, config.wavesNumber).eq(config.wave || DEFAULT_WAVE_INDEX);\r\n    var durations = args.durations;\r\n    var durationCss = durations.hidingScale + \"ms, \" + durations.hidingOpacity + \"ms\";\r\n    $wave.addClass(INKRIPPLE_HIDING_CLASS).removeClass(INKRIPPLE_SHOWING_CLASS).css(\"transitionDuration\", durationCss);\r\n    var animationDuration = Math.max(durations.hidingScale, durations.hidingOpacity);\r\n    args.hidingTimeout = setTimeout(hideSelectedWave.bind(this, $wave), animationDuration)\r\n};\r\nmodule.exports = {\r\n    render: render\r\n};\r\n"]},"metadata":{},"sourceType":"script"}