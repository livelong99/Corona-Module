{"ast":null,"code":"/**\r\n * DevExtreme (data/store_helper.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar grep = require(\"../core/utils/common\").grep;\n\nvar extend = require(\"../core/utils/extend\").extend;\n\nvar each = require(\"../core/utils/iterator\").each;\n\nvar arrayQuery = require(\"./array_query\");\n\nvar normalizeSortingInfo = require(\"./utils\").normalizeSortingInfo;\n\nfunction multiLevelGroup(query, groupInfo) {\n  query = query.groupBy(groupInfo[0].selector);\n\n  if (groupInfo.length > 1) {\n    query = query.select(function (g) {\n      return extend({}, g, {\n        items: multiLevelGroup(arrayQuery(g.items), groupInfo.slice(1)).toArray()\n      });\n    });\n  }\n\n  return query;\n}\n\nfunction arrangeSortingInfo(groupInfo, sortInfo) {\n  var filteredGroup = [];\n  each(groupInfo, function (_, group) {\n    var collision = grep(sortInfo, function (sort) {\n      return group.selector === sort.selector;\n    });\n\n    if (collision.length < 1) {\n      filteredGroup.push(group);\n    }\n  });\n  return filteredGroup.concat(sortInfo);\n}\n\nfunction queryByOptions(query, options, isCountQuery) {\n  options = options || {};\n  var filter = options.filter;\n\n  if (filter) {\n    query = query.filter(filter);\n  }\n\n  if (isCountQuery) {\n    return query;\n  }\n\n  var sort = options.sort;\n  var select = options.select;\n  var group = options.group;\n  var skip = options.skip;\n  var take = options.take;\n\n  if (group) {\n    group = normalizeSortingInfo(group);\n    group.keepInitialKeyOrder = !!options.group.keepInitialKeyOrder;\n  }\n\n  if (sort || group) {\n    sort = normalizeSortingInfo(sort || []);\n\n    if (group && !group.keepInitialKeyOrder) {\n      sort = arrangeSortingInfo(group, sort);\n    }\n\n    each(sort, function (index) {\n      query = query[index ? \"thenBy\" : \"sortBy\"](this.selector, this.desc, this.compare);\n    });\n  }\n\n  if (select) {\n    query = query.select(select);\n  }\n\n  if (group) {\n    query = multiLevelGroup(query, group);\n  }\n\n  if (take || skip) {\n    query = query.slice(skip || 0, take);\n  }\n\n  return query;\n}\n\nmodule.exports = {\n  multiLevelGroup: multiLevelGroup,\n  arrangeSortingInfo: arrangeSortingInfo,\n  queryByOptions: queryByOptions\n};","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/data/store_helper.js"],"names":["grep","require","extend","each","arrayQuery","normalizeSortingInfo","multiLevelGroup","query","groupInfo","groupBy","selector","length","select","g","items","slice","toArray","arrangeSortingInfo","sortInfo","filteredGroup","_","group","collision","sort","push","concat","queryByOptions","options","isCountQuery","filter","skip","take","keepInitialKeyOrder","index","desc","compare","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (data/store_helper.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar grep = require(\"../core/utils/common\").grep;\r\nvar extend = require(\"../core/utils/extend\").extend;\r\nvar each = require(\"../core/utils/iterator\").each;\r\nvar arrayQuery = require(\"./array_query\");\r\nvar normalizeSortingInfo = require(\"./utils\").normalizeSortingInfo;\r\n\r\nfunction multiLevelGroup(query, groupInfo) {\r\n    query = query.groupBy(groupInfo[0].selector);\r\n    if (groupInfo.length > 1) {\r\n        query = query.select(function(g) {\r\n            return extend({}, g, {\r\n                items: multiLevelGroup(arrayQuery(g.items), groupInfo.slice(1)).toArray()\r\n            })\r\n        })\r\n    }\r\n    return query\r\n}\r\n\r\nfunction arrangeSortingInfo(groupInfo, sortInfo) {\r\n    var filteredGroup = [];\r\n    each(groupInfo, function(_, group) {\r\n        var collision = grep(sortInfo, function(sort) {\r\n            return group.selector === sort.selector\r\n        });\r\n        if (collision.length < 1) {\r\n            filteredGroup.push(group)\r\n        }\r\n    });\r\n    return filteredGroup.concat(sortInfo)\r\n}\r\n\r\nfunction queryByOptions(query, options, isCountQuery) {\r\n    options = options || {};\r\n    var filter = options.filter;\r\n    if (filter) {\r\n        query = query.filter(filter)\r\n    }\r\n    if (isCountQuery) {\r\n        return query\r\n    }\r\n    var sort = options.sort;\r\n    var select = options.select;\r\n    var group = options.group;\r\n    var skip = options.skip;\r\n    var take = options.take;\r\n    if (group) {\r\n        group = normalizeSortingInfo(group);\r\n        group.keepInitialKeyOrder = !!options.group.keepInitialKeyOrder\r\n    }\r\n    if (sort || group) {\r\n        sort = normalizeSortingInfo(sort || []);\r\n        if (group && !group.keepInitialKeyOrder) {\r\n            sort = arrangeSortingInfo(group, sort)\r\n        }\r\n        each(sort, function(index) {\r\n            query = query[index ? \"thenBy\" : \"sortBy\"](this.selector, this.desc, this.compare)\r\n        })\r\n    }\r\n    if (select) {\r\n        query = query.select(select)\r\n    }\r\n    if (group) {\r\n        query = multiLevelGroup(query, group)\r\n    }\r\n    if (take || skip) {\r\n        query = query.slice(skip || 0, take)\r\n    }\r\n    return query\r\n}\r\nmodule.exports = {\r\n    multiLevelGroup: multiLevelGroup,\r\n    arrangeSortingInfo: arrangeSortingInfo,\r\n    queryByOptions: queryByOptions\r\n};\r\n"]},"metadata":{},"sourceType":"script"}