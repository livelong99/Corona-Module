{"ast":null,"code":"/**\r\n * DevExtreme (ui/widget/ui.widget.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\");\n\nvar eventsEngine = require(\"../../events/core/events_engine\");\n\nvar Action = require(\"../../core/action\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar inArray = require(\"../../core/utils/array\").inArray;\n\nvar each = require(\"../../core/utils/iterator\").each;\n\nvar commonUtils = require(\"../../core/utils/common\");\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar domAdapter = require(\"../../core/dom_adapter\");\n\nvar DOMComponentWithTemplate = require(\"../../core/dom_component_with_template\");\n\nvar KeyboardProcessor = require(\"./ui.keyboard_processor\");\n\nvar selectors = require(\"./selectors\");\n\nvar eventUtils = require(\"../../events/utils\");\n\nvar hoverEvents = require(\"../../events/hover\");\n\nvar feedbackEvents = require(\"../../events/core/emitter.feedback\");\n\nvar clickEvent = require(\"../../events/click\");\n\nvar UI_FEEDBACK = \"UIFeedback\";\nvar WIDGET_CLASS = \"dx-widget\";\nvar ACTIVE_STATE_CLASS = \"dx-state-active\";\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\nvar INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\nvar FEEDBACK_SHOW_TIMEOUT = 30;\nvar FEEDBACK_HIDE_TIMEOUT = 400;\nvar FOCUS_NAMESPACE = \"Focus\";\nvar Widget = DOMComponentWithTemplate.inherit({\n  _supportedKeys: function _supportedKeys() {\n    return {};\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      disabled: false,\n      visible: true,\n      hint: void 0,\n      activeStateEnabled: false,\n      onContentReady: null,\n      hoverStateEnabled: false,\n      focusStateEnabled: false,\n      tabIndex: 0,\n      accessKey: null,\n      onFocusIn: null,\n      onFocusOut: null,\n      _keyboardProcessor: void 0\n    });\n  },\n  _feedbackShowTimeout: FEEDBACK_SHOW_TIMEOUT,\n  _feedbackHideTimeout: FEEDBACK_HIDE_TIMEOUT,\n  _init: function _init() {\n    this.callBase();\n\n    this._initContentReadyAction();\n  },\n  _clearInnerOptionCache: function _clearInnerOptionCache(optionContainer) {\n    this[optionContainer + \"Cache\"] = {};\n  },\n  _cacheInnerOptions: function _cacheInnerOptions(optionContainer, optionValue) {\n    var cacheName = optionContainer + \"Cache\";\n    this[cacheName] = extend(this[cacheName], optionValue);\n  },\n  _getOptionsFromContainer: function _getOptionsFromContainer(_ref) {\n    var name = _ref.name,\n        fullName = _ref.fullName,\n        value = _ref.value;\n    var options = {};\n\n    if (name === fullName) {\n      options = value;\n    } else {\n      var option = fullName.split(\".\").pop();\n      options[option] = value;\n    }\n\n    return options;\n  },\n  _innerOptionChanged: function _innerOptionChanged(innerWidget, args) {\n    var options = this._getOptionsFromContainer(args);\n\n    innerWidget && innerWidget.option(options);\n\n    this._cacheInnerOptions(args.name, options);\n  },\n  _getInnerOptionsCache: function _getInnerOptionsCache(optionContainer) {\n    return this[optionContainer + \"Cache\"];\n  },\n  _initInnerOptionCache: function _initInnerOptionCache(optionContainer) {\n    this._clearInnerOptionCache(optionContainer);\n\n    this._cacheInnerOptions(optionContainer, this.option(optionContainer));\n  },\n  _bindInnerWidgetOptions: function _bindInnerWidgetOptions(innerWidget, optionsContainer) {\n    this._options[optionsContainer] = extend({}, innerWidget.option());\n    innerWidget.on(\"optionChanged\", function (e) {\n      this._options[optionsContainer] = extend({}, e.component.option());\n    }.bind(this));\n  },\n  _getAriaTarget: function _getAriaTarget() {\n    return this._focusTarget();\n  },\n  _initContentReadyAction: function _initContentReadyAction() {\n    this._contentReadyAction = this._createActionByOption(\"onContentReady\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  },\n  _initMarkup: function _initMarkup() {\n    this.$element().addClass(WIDGET_CLASS);\n\n    this._toggleDisabledState(this.option(\"disabled\"));\n\n    this._toggleVisibility(this.option(\"visible\"));\n\n    this._renderHint();\n\n    if (this._isFocusable()) {\n      this._renderFocusTarget();\n    }\n\n    this.callBase();\n  },\n  _render: function _render() {\n    this.callBase();\n\n    this._renderContent();\n\n    this._renderFocusState();\n\n    this._attachFeedbackEvents();\n\n    this._attachHoverEvents();\n  },\n  _renderHint: function _renderHint() {\n    var hint = this.option(\"hint\");\n    this.$element().attr(\"title\", hint ? hint : null);\n  },\n  _renderContent: function _renderContent() {\n    var _this = this;\n\n    commonUtils.deferRender(function () {\n      if (_this._disposed) {\n        return;\n      }\n\n      return _this._renderContentImpl();\n    }).done(function () {\n      if (_this._disposed) {\n        return;\n      }\n\n      _this._fireContentReadyAction();\n    });\n  },\n  _renderContentImpl: commonUtils.noop,\n  _fireContentReadyAction: commonUtils.deferRenderer(function () {\n    this._contentReadyAction();\n  }),\n  _dispose: function _dispose() {\n    this._contentReadyAction = null;\n    this.callBase();\n  },\n  _resetActiveState: function _resetActiveState() {\n    this._toggleActiveState(this._eventBindingTarget(), false);\n  },\n  _clean: function _clean() {\n    this._cleanFocusState();\n\n    this._resetActiveState();\n\n    this.callBase();\n    this.$element().empty();\n  },\n  _toggleVisibility: function _toggleVisibility(visible) {\n    this.$element().toggleClass(INVISIBLE_STATE_CLASS, !visible);\n    this.setAria(\"hidden\", !visible || void 0);\n  },\n  _renderFocusState: function _renderFocusState() {\n    this._attachKeyboardEvents();\n\n    if (!this._isFocusable()) {\n      return;\n    }\n\n    this._renderFocusTarget();\n\n    this._attachFocusEvents();\n\n    this._renderAccessKey();\n  },\n  _renderAccessKey: function _renderAccessKey() {\n    var focusTarget = this._focusTarget();\n\n    focusTarget.attr(\"accesskey\", this.option(\"accessKey\"));\n    var clickNamespace = eventUtils.addNamespace(clickEvent.name, UI_FEEDBACK);\n    eventsEngine.off(focusTarget, clickNamespace);\n    this.option(\"accessKey\") && eventsEngine.on(focusTarget, clickNamespace, function (e) {\n      if (eventUtils.isFakeClickEvent(e)) {\n        e.stopImmediatePropagation();\n        this.focus();\n      }\n    }.bind(this));\n  },\n  _isFocusable: function _isFocusable() {\n    return this.option(\"focusStateEnabled\") && !this.option(\"disabled\");\n  },\n  _eventBindingTarget: function _eventBindingTarget() {\n    return this.$element();\n  },\n  _focusTarget: function _focusTarget() {\n    return this._getActiveElement();\n  },\n  _getActiveElement: function _getActiveElement() {\n    var activeElement = this._eventBindingTarget();\n\n    if (this._activeStateUnit) {\n      activeElement = activeElement.find(this._activeStateUnit).not(\".\" + DISABLED_STATE_CLASS);\n    }\n\n    return activeElement;\n  },\n  _renderFocusTarget: function _renderFocusTarget() {\n    this._focusTarget().attr(\"tabIndex\", this.option(\"tabIndex\"));\n  },\n  _keyboardEventBindingTarget: function _keyboardEventBindingTarget() {\n    return this._eventBindingTarget();\n  },\n  _detachFocusEvents: function _detachFocusEvents() {\n    var $element = this._focusEventTarget();\n\n    var namespace = this.NAME + FOCUS_NAMESPACE;\n    var focusEvents = eventUtils.addNamespace(\"focusin\", namespace);\n    focusEvents = focusEvents + \" \" + eventUtils.addNamespace(\"focusout\", namespace);\n\n    if (domAdapter.hasDocumentProperty(\"onbeforeactivate\")) {\n      focusEvents = focusEvents + \" \" + eventUtils.addNamespace(\"beforeactivate\", namespace);\n    }\n\n    eventsEngine.off($element, focusEvents);\n  },\n  _attachFocusEvents: function _attachFocusEvents() {\n    var namespace = this.NAME + FOCUS_NAMESPACE;\n    var focusInEvent = eventUtils.addNamespace(\"focusin\", namespace);\n    var focusOutEvent = eventUtils.addNamespace(\"focusout\", namespace);\n\n    var $focusTarget = this._focusEventTarget();\n\n    eventsEngine.on($focusTarget, focusInEvent, this._focusInHandler.bind(this));\n    eventsEngine.on($focusTarget, focusOutEvent, this._focusOutHandler.bind(this));\n\n    if (domAdapter.hasDocumentProperty(\"onbeforeactivate\")) {\n      var beforeActivateEvent = eventUtils.addNamespace(\"beforeactivate\", namespace);\n      eventsEngine.on(this._focusEventTarget(), beforeActivateEvent, function (e) {\n        if (!$(e.target).is(selectors.focusable)) {\n          e.preventDefault();\n        }\n      });\n    }\n  },\n  _refreshFocusEvent: function _refreshFocusEvent() {\n    this._detachFocusEvents();\n\n    this._attachFocusEvents();\n  },\n  _focusEventTarget: function _focusEventTarget() {\n    return this._focusTarget();\n  },\n  _focusInHandler: function _focusInHandler(e) {\n    if (e.isDefaultPrevented()) {\n      return;\n    }\n\n    var that = this;\n\n    that._createActionByOption(\"onFocusIn\", {\n      beforeExecute: function beforeExecute() {\n        that._updateFocusState(e, true);\n      },\n      excludeValidators: [\"readOnly\"]\n    })({\n      event: e\n    });\n  },\n  _focusOutHandler: function _focusOutHandler(e) {\n    if (e.isDefaultPrevented()) {\n      return;\n    }\n\n    var that = this;\n\n    that._createActionByOption(\"onFocusOut\", {\n      beforeExecute: function beforeExecute() {\n        that._updateFocusState(e, false);\n      },\n      excludeValidators: [\"readOnly\", \"disabled\"]\n    })({\n      event: e\n    });\n  },\n  _updateFocusState: function _updateFocusState(e, isFocused) {\n    var target = e.target;\n\n    if (inArray(target, this._focusTarget()) !== -1) {\n      this._toggleFocusClass(isFocused, $(target));\n    }\n  },\n  _toggleFocusClass: function _toggleFocusClass(isFocused, $element) {\n    var $focusTarget = $element && $element.length ? $element : this._focusTarget();\n    $focusTarget.toggleClass(FOCUSED_STATE_CLASS, isFocused);\n  },\n  _hasFocusClass: function _hasFocusClass(element) {\n    var $focusTarget = $(element || this._focusTarget());\n    return $focusTarget.hasClass(FOCUSED_STATE_CLASS);\n  },\n  _isFocused: function _isFocused() {\n    return this._hasFocusClass();\n  },\n  _attachKeyboardEvents: function _attachKeyboardEvents() {\n    var processor = this.option(\"_keyboardProcessor\");\n\n    if (processor) {\n      this._keyboardProcessor = processor.reinitialize(this._keyboardHandler, this);\n    } else {\n      if (this.option(\"focusStateEnabled\")) {\n        this._disposeKeyboardProcessor();\n\n        this._keyboardProcessor = new KeyboardProcessor({\n          element: this._keyboardEventBindingTarget(),\n          handler: this._keyboardHandler,\n          focusTarget: this._focusTarget(),\n          context: this\n        });\n      }\n    }\n  },\n  _keyboardHandler: function _keyboardHandler(options) {\n    var e = options.originalEvent;\n    var keyName = options.keyName;\n    var keyCode = options.which;\n\n    var keys = this._supportedKeys(e);\n\n    var func = keys[keyName] || keys[keyCode];\n\n    if (void 0 !== func) {\n      var handler = func.bind(this);\n      return handler(e) || false;\n    } else {\n      return true;\n    }\n  },\n  _refreshFocusState: function _refreshFocusState() {\n    this._cleanFocusState();\n\n    this._renderFocusState();\n  },\n  _cleanFocusState: function _cleanFocusState() {\n    var $element = this._focusTarget();\n\n    this._detachFocusEvents();\n\n    this._toggleFocusClass(false);\n\n    $element.removeAttr(\"tabIndex\");\n\n    this._disposeKeyboardProcessor();\n  },\n  _disposeKeyboardProcessor: function _disposeKeyboardProcessor() {\n    if (this._keyboardProcessor) {\n      this._keyboardProcessor.dispose();\n\n      delete this._keyboardProcessor;\n    }\n  },\n  _attachHoverEvents: function _attachHoverEvents() {\n    var that = this;\n    var hoverableSelector = that._activeStateUnit;\n    var nameStart = eventUtils.addNamespace(hoverEvents.start, UI_FEEDBACK);\n    var nameEnd = eventUtils.addNamespace(hoverEvents.end, UI_FEEDBACK);\n    eventsEngine.off(that._eventBindingTarget(), nameStart, hoverableSelector);\n    eventsEngine.off(that._eventBindingTarget(), nameEnd, hoverableSelector);\n\n    if (that.option(\"hoverStateEnabled\")) {\n      var startAction = new Action(function (args) {\n        that._hoverStartHandler(args.event);\n\n        that._refreshHoveredElement($(args.element));\n      }, {\n        excludeValidators: [\"readOnly\"]\n      });\n\n      var $eventBindingTarget = that._eventBindingTarget();\n\n      eventsEngine.on($eventBindingTarget, nameStart, hoverableSelector, function (e) {\n        startAction.execute({\n          element: $(e.target),\n          event: e\n        });\n      });\n      eventsEngine.on($eventBindingTarget, nameEnd, hoverableSelector, function (e) {\n        that._hoverEndHandler(e);\n\n        that._forgetHoveredElement();\n      });\n    } else {\n      that._toggleHoverClass(false);\n    }\n  },\n  _hoverStartHandler: commonUtils.noop,\n  _hoverEndHandler: commonUtils.noop,\n  _attachFeedbackEvents: function _attachFeedbackEvents() {\n    var that = this;\n    var feedbackSelector = that._activeStateUnit;\n    var activeEventName = eventUtils.addNamespace(feedbackEvents.active, UI_FEEDBACK);\n    var inactiveEventName = eventUtils.addNamespace(feedbackEvents.inactive, UI_FEEDBACK);\n    var feedbackAction;\n    var feedbackActionDisabled;\n    eventsEngine.off(that._eventBindingTarget(), activeEventName, feedbackSelector);\n    eventsEngine.off(that._eventBindingTarget(), inactiveEventName, feedbackSelector);\n\n    if (that.option(\"activeStateEnabled\")) {\n      var feedbackActionHandler = function feedbackActionHandler(args) {\n        var $element = $(args.element);\n        var value = args.value;\n        var dxEvent = args.event;\n\n        that._toggleActiveState($element, value, dxEvent);\n      };\n\n      eventsEngine.on(that._eventBindingTarget(), activeEventName, feedbackSelector, {\n        timeout: that._feedbackShowTimeout\n      }, function (e) {\n        feedbackAction = feedbackAction || new Action(feedbackActionHandler);\n        feedbackAction.execute({\n          element: $(e.currentTarget),\n          value: true,\n          event: e\n        });\n      });\n      eventsEngine.on(that._eventBindingTarget(), inactiveEventName, feedbackSelector, {\n        timeout: that._feedbackHideTimeout\n      }, function (e) {\n        feedbackActionDisabled = feedbackActionDisabled || new Action(feedbackActionHandler, {\n          excludeValidators: [\"disabled\", \"readOnly\"]\n        });\n        feedbackActionDisabled.execute({\n          element: $(e.currentTarget),\n          value: false,\n          event: e\n        });\n      });\n    }\n  },\n  _toggleActiveState: function _toggleActiveState($element, value) {\n    this._toggleHoverClass(!value);\n\n    $element.toggleClass(ACTIVE_STATE_CLASS, value);\n  },\n  _refreshHoveredElement: function _refreshHoveredElement(hoveredElement) {\n    var selector = this._activeStateUnit || this._eventBindingTarget();\n\n    this._forgetHoveredElement();\n\n    this._hoveredElement = hoveredElement.closest(selector);\n\n    this._toggleHoverClass(true);\n  },\n  _forgetHoveredElement: function _forgetHoveredElement() {\n    this._toggleHoverClass(false);\n\n    delete this._hoveredElement;\n  },\n  _toggleHoverClass: function _toggleHoverClass(value) {\n    if (this._hoveredElement) {\n      this._hoveredElement.toggleClass(HOVER_STATE_CLASS, value && this.option(\"hoverStateEnabled\"));\n    }\n  },\n  _toggleDisabledState: function _toggleDisabledState(value) {\n    this.$element().toggleClass(DISABLED_STATE_CLASS, Boolean(value));\n\n    this._toggleHoverClass(!value);\n\n    this.setAria(\"disabled\", value || void 0);\n  },\n  _setWidgetOption: function _setWidgetOption(widgetName, args) {\n    if (!this[widgetName]) {\n      return;\n    }\n\n    if (typeUtils.isPlainObject(args[0])) {\n      each(args[0], function (option, value) {\n        this._setWidgetOption(widgetName, [option, value]);\n      }.bind(this));\n      return;\n    }\n\n    var optionName = args[0];\n    var value = args[1];\n\n    if (1 === args.length) {\n      value = this.option(optionName);\n    }\n\n    var widgetOptionMap = this[widgetName + \"OptionMap\"];\n    this[widgetName].option(widgetOptionMap ? widgetOptionMap(optionName) : optionName, value);\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"disabled\":\n        this._toggleDisabledState(args.value);\n\n        this._refreshFocusState();\n\n        break;\n\n      case \"hint\":\n        this._renderHint();\n\n        break;\n\n      case \"activeStateEnabled\":\n        this._attachFeedbackEvents();\n\n        break;\n\n      case \"hoverStateEnabled\":\n        this._attachHoverEvents();\n\n        break;\n\n      case \"tabIndex\":\n      case \"_keyboardProcessor\":\n      case \"focusStateEnabled\":\n        this._refreshFocusState();\n\n        break;\n\n      case \"onFocusIn\":\n      case \"onFocusOut\":\n        break;\n\n      case \"accessKey\":\n        this._renderAccessKey();\n\n        break;\n\n      case \"visible\":\n        var visible = args.value;\n\n        this._toggleVisibility(visible);\n\n        if (this._isVisibilityChangeSupported()) {\n          this._checkVisibilityChanged(args.value ? \"shown\" : \"hiding\");\n        }\n\n        break;\n\n      case \"onContentReady\":\n        this._initContentReadyAction();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _isVisible: function _isVisible() {\n    return this.callBase() && this.option(\"visible\");\n  },\n  beginUpdate: function beginUpdate() {\n    this._ready(false);\n\n    this.callBase();\n  },\n  endUpdate: function endUpdate() {\n    this.callBase();\n\n    if (this._initialized) {\n      this._ready(true);\n    }\n  },\n  _ready: function _ready(value) {\n    if (0 === arguments.length) {\n      return this._isReady;\n    }\n\n    this._isReady = value;\n  },\n  setAria: function setAria() {\n    var setAttribute = function setAttribute(option) {\n      var attrName = \"role\" === option.name || \"id\" === option.name ? option.name : \"aria-\" + option.name;\n      var attrValue = option.value;\n\n      if (typeUtils.isDefined(attrValue)) {\n        attrValue = attrValue.toString();\n      } else {\n        attrValue = null;\n      }\n\n      option.target.attr(attrName, attrValue);\n    };\n\n    if (!typeUtils.isPlainObject(arguments[0])) {\n      setAttribute({\n        name: arguments[0],\n        value: arguments[1],\n        target: arguments[2] || this._getAriaTarget()\n      });\n    } else {\n      var $target = arguments[1] || this._getAriaTarget();\n\n      each(arguments[0], function (key, value) {\n        setAttribute({\n          name: key,\n          value: value,\n          target: $target\n        });\n      });\n    }\n  },\n  isReady: function isReady() {\n    return this._ready();\n  },\n  repaint: function repaint() {\n    this._refresh();\n  },\n  focus: function focus() {\n    eventsEngine.trigger(this._focusTarget(), \"focus\");\n  },\n  registerKeyHandler: function registerKeyHandler(key, handler) {\n    var currentKeys = this._supportedKeys();\n\n    var addingKeys = {};\n    addingKeys[key] = handler;\n\n    this._supportedKeys = function () {\n      return extend(currentKeys, addingKeys);\n    };\n  }\n});\nmodule.exports = Widget;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/widget/ui.widget.js"],"names":["$","require","eventsEngine","Action","extend","inArray","each","commonUtils","typeUtils","domAdapter","DOMComponentWithTemplate","KeyboardProcessor","selectors","eventUtils","hoverEvents","feedbackEvents","clickEvent","UI_FEEDBACK","WIDGET_CLASS","ACTIVE_STATE_CLASS","DISABLED_STATE_CLASS","INVISIBLE_STATE_CLASS","HOVER_STATE_CLASS","FOCUSED_STATE_CLASS","FEEDBACK_SHOW_TIMEOUT","FEEDBACK_HIDE_TIMEOUT","FOCUS_NAMESPACE","Widget","inherit","_supportedKeys","_getDefaultOptions","callBase","disabled","visible","hint","activeStateEnabled","onContentReady","hoverStateEnabled","focusStateEnabled","tabIndex","accessKey","onFocusIn","onFocusOut","_keyboardProcessor","_feedbackShowTimeout","_feedbackHideTimeout","_init","_initContentReadyAction","_clearInnerOptionCache","optionContainer","_cacheInnerOptions","optionValue","cacheName","_getOptionsFromContainer","_ref","name","fullName","value","options","option","split","pop","_innerOptionChanged","innerWidget","args","_getInnerOptionsCache","_initInnerOptionCache","_bindInnerWidgetOptions","optionsContainer","_options","on","e","component","bind","_getAriaTarget","_focusTarget","_contentReadyAction","_createActionByOption","excludeValidators","_initMarkup","$element","addClass","_toggleDisabledState","_toggleVisibility","_renderHint","_isFocusable","_renderFocusTarget","_render","_renderContent","_renderFocusState","_attachFeedbackEvents","_attachHoverEvents","attr","_this","deferRender","_disposed","_renderContentImpl","done","_fireContentReadyAction","noop","deferRenderer","_dispose","_resetActiveState","_toggleActiveState","_eventBindingTarget","_clean","_cleanFocusState","empty","toggleClass","setAria","_attachKeyboardEvents","_attachFocusEvents","_renderAccessKey","focusTarget","clickNamespace","addNamespace","off","isFakeClickEvent","stopImmediatePropagation","focus","_getActiveElement","activeElement","_activeStateUnit","find","not","_keyboardEventBindingTarget","_detachFocusEvents","_focusEventTarget","namespace","NAME","focusEvents","hasDocumentProperty","focusInEvent","focusOutEvent","$focusTarget","_focusInHandler","_focusOutHandler","beforeActivateEvent","target","is","focusable","preventDefault","_refreshFocusEvent","isDefaultPrevented","that","beforeExecute","_updateFocusState","event","isFocused","_toggleFocusClass","length","_hasFocusClass","element","hasClass","_isFocused","processor","reinitialize","_keyboardHandler","_disposeKeyboardProcessor","handler","context","originalEvent","keyName","keyCode","which","keys","func","_refreshFocusState","removeAttr","dispose","hoverableSelector","nameStart","start","nameEnd","end","startAction","_hoverStartHandler","_refreshHoveredElement","$eventBindingTarget","execute","_hoverEndHandler","_forgetHoveredElement","_toggleHoverClass","feedbackSelector","activeEventName","active","inactiveEventName","inactive","feedbackAction","feedbackActionDisabled","feedbackActionHandler","dxEvent","timeout","currentTarget","hoveredElement","selector","_hoveredElement","closest","Boolean","_setWidgetOption","widgetName","isPlainObject","optionName","widgetOptionMap","_optionChanged","_isVisibilityChangeSupported","_checkVisibilityChanged","_isVisible","beginUpdate","_ready","endUpdate","_initialized","arguments","_isReady","setAttribute","attrName","attrValue","isDefined","toString","$target","key","isReady","repaint","_refresh","trigger","registerKeyHandler","currentKeys","addingKeys","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/widget/ui.widget.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\");\r\nvar eventsEngine = require(\"../../events/core/events_engine\");\r\nvar Action = require(\"../../core/action\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar inArray = require(\"../../core/utils/array\").inArray;\r\nvar each = require(\"../../core/utils/iterator\").each;\r\nvar commonUtils = require(\"../../core/utils/common\");\r\nvar typeUtils = require(\"../../core/utils/type\");\r\nvar domAdapter = require(\"../../core/dom_adapter\");\r\nvar DOMComponentWithTemplate = require(\"../../core/dom_component_with_template\");\r\nvar KeyboardProcessor = require(\"./ui.keyboard_processor\");\r\nvar selectors = require(\"./selectors\");\r\nvar eventUtils = require(\"../../events/utils\");\r\nvar hoverEvents = require(\"../../events/hover\");\r\nvar feedbackEvents = require(\"../../events/core/emitter.feedback\");\r\nvar clickEvent = require(\"../../events/click\");\r\nvar UI_FEEDBACK = \"UIFeedback\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar ACTIVE_STATE_CLASS = \"dx-state-active\";\r\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nvar INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\r\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\r\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar FEEDBACK_SHOW_TIMEOUT = 30;\r\nvar FEEDBACK_HIDE_TIMEOUT = 400;\r\nvar FOCUS_NAMESPACE = \"Focus\";\r\nvar Widget = DOMComponentWithTemplate.inherit({\r\n    _supportedKeys: function() {\r\n        return {}\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            disabled: false,\r\n            visible: true,\r\n            hint: void 0,\r\n            activeStateEnabled: false,\r\n            onContentReady: null,\r\n            hoverStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            tabIndex: 0,\r\n            accessKey: null,\r\n            onFocusIn: null,\r\n            onFocusOut: null,\r\n            _keyboardProcessor: void 0\r\n        })\r\n    },\r\n    _feedbackShowTimeout: FEEDBACK_SHOW_TIMEOUT,\r\n    _feedbackHideTimeout: FEEDBACK_HIDE_TIMEOUT,\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initContentReadyAction()\r\n    },\r\n    _clearInnerOptionCache: function(optionContainer) {\r\n        this[optionContainer + \"Cache\"] = {}\r\n    },\r\n    _cacheInnerOptions: function(optionContainer, optionValue) {\r\n        var cacheName = optionContainer + \"Cache\";\r\n        this[cacheName] = extend(this[cacheName], optionValue)\r\n    },\r\n    _getOptionsFromContainer: function(_ref) {\r\n        var name = _ref.name,\r\n            fullName = _ref.fullName,\r\n            value = _ref.value;\r\n        var options = {};\r\n        if (name === fullName) {\r\n            options = value\r\n        } else {\r\n            var option = fullName.split(\".\").pop();\r\n            options[option] = value\r\n        }\r\n        return options\r\n    },\r\n    _innerOptionChanged: function(innerWidget, args) {\r\n        var options = this._getOptionsFromContainer(args);\r\n        innerWidget && innerWidget.option(options);\r\n        this._cacheInnerOptions(args.name, options)\r\n    },\r\n    _getInnerOptionsCache: function(optionContainer) {\r\n        return this[optionContainer + \"Cache\"]\r\n    },\r\n    _initInnerOptionCache: function(optionContainer) {\r\n        this._clearInnerOptionCache(optionContainer);\r\n        this._cacheInnerOptions(optionContainer, this.option(optionContainer))\r\n    },\r\n    _bindInnerWidgetOptions: function(innerWidget, optionsContainer) {\r\n        this._options[optionsContainer] = extend({}, innerWidget.option());\r\n        innerWidget.on(\"optionChanged\", function(e) {\r\n            this._options[optionsContainer] = extend({}, e.component.option())\r\n        }.bind(this))\r\n    },\r\n    _getAriaTarget: function() {\r\n        return this._focusTarget()\r\n    },\r\n    _initContentReadyAction: function() {\r\n        this._contentReadyAction = this._createActionByOption(\"onContentReady\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(WIDGET_CLASS);\r\n        this._toggleDisabledState(this.option(\"disabled\"));\r\n        this._toggleVisibility(this.option(\"visible\"));\r\n        this._renderHint();\r\n        if (this._isFocusable()) {\r\n            this._renderFocusTarget()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderContent();\r\n        this._renderFocusState();\r\n        this._attachFeedbackEvents();\r\n        this._attachHoverEvents()\r\n    },\r\n    _renderHint: function() {\r\n        var hint = this.option(\"hint\");\r\n        this.$element().attr(\"title\", hint ? hint : null)\r\n    },\r\n    _renderContent: function() {\r\n        var _this = this;\r\n        commonUtils.deferRender(function() {\r\n            if (_this._disposed) {\r\n                return\r\n            }\r\n            return _this._renderContentImpl()\r\n        }).done(function() {\r\n            if (_this._disposed) {\r\n                return\r\n            }\r\n            _this._fireContentReadyAction()\r\n        })\r\n    },\r\n    _renderContentImpl: commonUtils.noop,\r\n    _fireContentReadyAction: commonUtils.deferRenderer(function() {\r\n        this._contentReadyAction()\r\n    }),\r\n    _dispose: function() {\r\n        this._contentReadyAction = null;\r\n        this.callBase()\r\n    },\r\n    _resetActiveState: function() {\r\n        this._toggleActiveState(this._eventBindingTarget(), false)\r\n    },\r\n    _clean: function() {\r\n        this._cleanFocusState();\r\n        this._resetActiveState();\r\n        this.callBase();\r\n        this.$element().empty()\r\n    },\r\n    _toggleVisibility: function(visible) {\r\n        this.$element().toggleClass(INVISIBLE_STATE_CLASS, !visible);\r\n        this.setAria(\"hidden\", !visible || void 0)\r\n    },\r\n    _renderFocusState: function() {\r\n        this._attachKeyboardEvents();\r\n        if (!this._isFocusable()) {\r\n            return\r\n        }\r\n        this._renderFocusTarget();\r\n        this._attachFocusEvents();\r\n        this._renderAccessKey()\r\n    },\r\n    _renderAccessKey: function() {\r\n        var focusTarget = this._focusTarget();\r\n        focusTarget.attr(\"accesskey\", this.option(\"accessKey\"));\r\n        var clickNamespace = eventUtils.addNamespace(clickEvent.name, UI_FEEDBACK);\r\n        eventsEngine.off(focusTarget, clickNamespace);\r\n        this.option(\"accessKey\") && eventsEngine.on(focusTarget, clickNamespace, function(e) {\r\n            if (eventUtils.isFakeClickEvent(e)) {\r\n                e.stopImmediatePropagation();\r\n                this.focus()\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _isFocusable: function() {\r\n        return this.option(\"focusStateEnabled\") && !this.option(\"disabled\")\r\n    },\r\n    _eventBindingTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _focusTarget: function() {\r\n        return this._getActiveElement()\r\n    },\r\n    _getActiveElement: function() {\r\n        var activeElement = this._eventBindingTarget();\r\n        if (this._activeStateUnit) {\r\n            activeElement = activeElement.find(this._activeStateUnit).not(\".\" + DISABLED_STATE_CLASS)\r\n        }\r\n        return activeElement\r\n    },\r\n    _renderFocusTarget: function() {\r\n        this._focusTarget().attr(\"tabIndex\", this.option(\"tabIndex\"))\r\n    },\r\n    _keyboardEventBindingTarget: function() {\r\n        return this._eventBindingTarget()\r\n    },\r\n    _detachFocusEvents: function() {\r\n        var $element = this._focusEventTarget();\r\n        var namespace = this.NAME + FOCUS_NAMESPACE;\r\n        var focusEvents = eventUtils.addNamespace(\"focusin\", namespace);\r\n        focusEvents = focusEvents + \" \" + eventUtils.addNamespace(\"focusout\", namespace);\r\n        if (domAdapter.hasDocumentProperty(\"onbeforeactivate\")) {\r\n            focusEvents = focusEvents + \" \" + eventUtils.addNamespace(\"beforeactivate\", namespace)\r\n        }\r\n        eventsEngine.off($element, focusEvents)\r\n    },\r\n    _attachFocusEvents: function() {\r\n        var namespace = this.NAME + FOCUS_NAMESPACE;\r\n        var focusInEvent = eventUtils.addNamespace(\"focusin\", namespace);\r\n        var focusOutEvent = eventUtils.addNamespace(\"focusout\", namespace);\r\n        var $focusTarget = this._focusEventTarget();\r\n        eventsEngine.on($focusTarget, focusInEvent, this._focusInHandler.bind(this));\r\n        eventsEngine.on($focusTarget, focusOutEvent, this._focusOutHandler.bind(this));\r\n        if (domAdapter.hasDocumentProperty(\"onbeforeactivate\")) {\r\n            var beforeActivateEvent = eventUtils.addNamespace(\"beforeactivate\", namespace);\r\n            eventsEngine.on(this._focusEventTarget(), beforeActivateEvent, function(e) {\r\n                if (!$(e.target).is(selectors.focusable)) {\r\n                    e.preventDefault()\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _refreshFocusEvent: function() {\r\n        this._detachFocusEvents();\r\n        this._attachFocusEvents()\r\n    },\r\n    _focusEventTarget: function() {\r\n        return this._focusTarget()\r\n    },\r\n    _focusInHandler: function(e) {\r\n        if (e.isDefaultPrevented()) {\r\n            return\r\n        }\r\n        var that = this;\r\n        that._createActionByOption(\"onFocusIn\", {\r\n            beforeExecute: function() {\r\n                that._updateFocusState(e, true)\r\n            },\r\n            excludeValidators: [\"readOnly\"]\r\n        })({\r\n            event: e\r\n        })\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        if (e.isDefaultPrevented()) {\r\n            return\r\n        }\r\n        var that = this;\r\n        that._createActionByOption(\"onFocusOut\", {\r\n            beforeExecute: function() {\r\n                that._updateFocusState(e, false)\r\n            },\r\n            excludeValidators: [\"readOnly\", \"disabled\"]\r\n        })({\r\n            event: e\r\n        })\r\n    },\r\n    _updateFocusState: function(e, isFocused) {\r\n        var target = e.target;\r\n        if (inArray(target, this._focusTarget()) !== -1) {\r\n            this._toggleFocusClass(isFocused, $(target))\r\n        }\r\n    },\r\n    _toggleFocusClass: function(isFocused, $element) {\r\n        var $focusTarget = $element && $element.length ? $element : this._focusTarget();\r\n        $focusTarget.toggleClass(FOCUSED_STATE_CLASS, isFocused)\r\n    },\r\n    _hasFocusClass: function(element) {\r\n        var $focusTarget = $(element || this._focusTarget());\r\n        return $focusTarget.hasClass(FOCUSED_STATE_CLASS)\r\n    },\r\n    _isFocused: function() {\r\n        return this._hasFocusClass()\r\n    },\r\n    _attachKeyboardEvents: function() {\r\n        var processor = this.option(\"_keyboardProcessor\");\r\n        if (processor) {\r\n            this._keyboardProcessor = processor.reinitialize(this._keyboardHandler, this)\r\n        } else {\r\n            if (this.option(\"focusStateEnabled\")) {\r\n                this._disposeKeyboardProcessor();\r\n                this._keyboardProcessor = new KeyboardProcessor({\r\n                    element: this._keyboardEventBindingTarget(),\r\n                    handler: this._keyboardHandler,\r\n                    focusTarget: this._focusTarget(),\r\n                    context: this\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _keyboardHandler: function(options) {\r\n        var e = options.originalEvent;\r\n        var keyName = options.keyName;\r\n        var keyCode = options.which;\r\n        var keys = this._supportedKeys(e);\r\n        var func = keys[keyName] || keys[keyCode];\r\n        if (void 0 !== func) {\r\n            var handler = func.bind(this);\r\n            return handler(e) || false\r\n        } else {\r\n            return true\r\n        }\r\n    },\r\n    _refreshFocusState: function() {\r\n        this._cleanFocusState();\r\n        this._renderFocusState()\r\n    },\r\n    _cleanFocusState: function() {\r\n        var $element = this._focusTarget();\r\n        this._detachFocusEvents();\r\n        this._toggleFocusClass(false);\r\n        $element.removeAttr(\"tabIndex\");\r\n        this._disposeKeyboardProcessor()\r\n    },\r\n    _disposeKeyboardProcessor: function() {\r\n        if (this._keyboardProcessor) {\r\n            this._keyboardProcessor.dispose();\r\n            delete this._keyboardProcessor\r\n        }\r\n    },\r\n    _attachHoverEvents: function() {\r\n        var that = this;\r\n        var hoverableSelector = that._activeStateUnit;\r\n        var nameStart = eventUtils.addNamespace(hoverEvents.start, UI_FEEDBACK);\r\n        var nameEnd = eventUtils.addNamespace(hoverEvents.end, UI_FEEDBACK);\r\n        eventsEngine.off(that._eventBindingTarget(), nameStart, hoverableSelector);\r\n        eventsEngine.off(that._eventBindingTarget(), nameEnd, hoverableSelector);\r\n        if (that.option(\"hoverStateEnabled\")) {\r\n            var startAction = new Action(function(args) {\r\n                that._hoverStartHandler(args.event);\r\n                that._refreshHoveredElement($(args.element))\r\n            }, {\r\n                excludeValidators: [\"readOnly\"]\r\n            });\r\n            var $eventBindingTarget = that._eventBindingTarget();\r\n            eventsEngine.on($eventBindingTarget, nameStart, hoverableSelector, function(e) {\r\n                startAction.execute({\r\n                    element: $(e.target),\r\n                    event: e\r\n                })\r\n            });\r\n            eventsEngine.on($eventBindingTarget, nameEnd, hoverableSelector, function(e) {\r\n                that._hoverEndHandler(e);\r\n                that._forgetHoveredElement()\r\n            })\r\n        } else {\r\n            that._toggleHoverClass(false)\r\n        }\r\n    },\r\n    _hoverStartHandler: commonUtils.noop,\r\n    _hoverEndHandler: commonUtils.noop,\r\n    _attachFeedbackEvents: function() {\r\n        var that = this;\r\n        var feedbackSelector = that._activeStateUnit;\r\n        var activeEventName = eventUtils.addNamespace(feedbackEvents.active, UI_FEEDBACK);\r\n        var inactiveEventName = eventUtils.addNamespace(feedbackEvents.inactive, UI_FEEDBACK);\r\n        var feedbackAction;\r\n        var feedbackActionDisabled;\r\n        eventsEngine.off(that._eventBindingTarget(), activeEventName, feedbackSelector);\r\n        eventsEngine.off(that._eventBindingTarget(), inactiveEventName, feedbackSelector);\r\n        if (that.option(\"activeStateEnabled\")) {\r\n            var feedbackActionHandler = function(args) {\r\n                var $element = $(args.element);\r\n                var value = args.value;\r\n                var dxEvent = args.event;\r\n                that._toggleActiveState($element, value, dxEvent)\r\n            };\r\n            eventsEngine.on(that._eventBindingTarget(), activeEventName, feedbackSelector, {\r\n                timeout: that._feedbackShowTimeout\r\n            }, function(e) {\r\n                feedbackAction = feedbackAction || new Action(feedbackActionHandler);\r\n                feedbackAction.execute({\r\n                    element: $(e.currentTarget),\r\n                    value: true,\r\n                    event: e\r\n                })\r\n            });\r\n            eventsEngine.on(that._eventBindingTarget(), inactiveEventName, feedbackSelector, {\r\n                timeout: that._feedbackHideTimeout\r\n            }, function(e) {\r\n                feedbackActionDisabled = feedbackActionDisabled || new Action(feedbackActionHandler, {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                feedbackActionDisabled.execute({\r\n                    element: $(e.currentTarget),\r\n                    value: false,\r\n                    event: e\r\n                })\r\n            })\r\n        }\r\n    },\r\n    _toggleActiveState: function($element, value) {\r\n        this._toggleHoverClass(!value);\r\n        $element.toggleClass(ACTIVE_STATE_CLASS, value)\r\n    },\r\n    _refreshHoveredElement: function(hoveredElement) {\r\n        var selector = this._activeStateUnit || this._eventBindingTarget();\r\n        this._forgetHoveredElement();\r\n        this._hoveredElement = hoveredElement.closest(selector);\r\n        this._toggleHoverClass(true)\r\n    },\r\n    _forgetHoveredElement: function() {\r\n        this._toggleHoverClass(false);\r\n        delete this._hoveredElement\r\n    },\r\n    _toggleHoverClass: function(value) {\r\n        if (this._hoveredElement) {\r\n            this._hoveredElement.toggleClass(HOVER_STATE_CLASS, value && this.option(\"hoverStateEnabled\"))\r\n        }\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        this.$element().toggleClass(DISABLED_STATE_CLASS, Boolean(value));\r\n        this._toggleHoverClass(!value);\r\n        this.setAria(\"disabled\", value || void 0)\r\n    },\r\n    _setWidgetOption: function(widgetName, args) {\r\n        if (!this[widgetName]) {\r\n            return\r\n        }\r\n        if (typeUtils.isPlainObject(args[0])) {\r\n            each(args[0], function(option, value) {\r\n                this._setWidgetOption(widgetName, [option, value])\r\n            }.bind(this));\r\n            return\r\n        }\r\n        var optionName = args[0];\r\n        var value = args[1];\r\n        if (1 === args.length) {\r\n            value = this.option(optionName)\r\n        }\r\n        var widgetOptionMap = this[widgetName + \"OptionMap\"];\r\n        this[widgetName].option(widgetOptionMap ? widgetOptionMap(optionName) : optionName, value)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"disabled\":\r\n                this._toggleDisabledState(args.value);\r\n                this._refreshFocusState();\r\n                break;\r\n            case \"hint\":\r\n                this._renderHint();\r\n                break;\r\n            case \"activeStateEnabled\":\r\n                this._attachFeedbackEvents();\r\n                break;\r\n            case \"hoverStateEnabled\":\r\n                this._attachHoverEvents();\r\n                break;\r\n            case \"tabIndex\":\r\n            case \"_keyboardProcessor\":\r\n            case \"focusStateEnabled\":\r\n                this._refreshFocusState();\r\n                break;\r\n            case \"onFocusIn\":\r\n            case \"onFocusOut\":\r\n                break;\r\n            case \"accessKey\":\r\n                this._renderAccessKey();\r\n                break;\r\n            case \"visible\":\r\n                var visible = args.value;\r\n                this._toggleVisibility(visible);\r\n                if (this._isVisibilityChangeSupported()) {\r\n                    this._checkVisibilityChanged(args.value ? \"shown\" : \"hiding\")\r\n                }\r\n                break;\r\n            case \"onContentReady\":\r\n                this._initContentReadyAction();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _isVisible: function() {\r\n        return this.callBase() && this.option(\"visible\")\r\n    },\r\n    beginUpdate: function() {\r\n        this._ready(false);\r\n        this.callBase()\r\n    },\r\n    endUpdate: function() {\r\n        this.callBase();\r\n        if (this._initialized) {\r\n            this._ready(true)\r\n        }\r\n    },\r\n    _ready: function(value) {\r\n        if (0 === arguments.length) {\r\n            return this._isReady\r\n        }\r\n        this._isReady = value\r\n    },\r\n    setAria: function() {\r\n        var setAttribute = function(option) {\r\n            var attrName = \"role\" === option.name || \"id\" === option.name ? option.name : \"aria-\" + option.name;\r\n            var attrValue = option.value;\r\n            if (typeUtils.isDefined(attrValue)) {\r\n                attrValue = attrValue.toString()\r\n            } else {\r\n                attrValue = null\r\n            }\r\n            option.target.attr(attrName, attrValue)\r\n        };\r\n        if (!typeUtils.isPlainObject(arguments[0])) {\r\n            setAttribute({\r\n                name: arguments[0],\r\n                value: arguments[1],\r\n                target: arguments[2] || this._getAriaTarget()\r\n            })\r\n        } else {\r\n            var $target = arguments[1] || this._getAriaTarget();\r\n            each(arguments[0], function(key, value) {\r\n                setAttribute({\r\n                    name: key,\r\n                    value: value,\r\n                    target: $target\r\n                })\r\n            })\r\n        }\r\n    },\r\n    isReady: function() {\r\n        return this._ready()\r\n    },\r\n    repaint: function() {\r\n        this._refresh()\r\n    },\r\n    focus: function() {\r\n        eventsEngine.trigger(this._focusTarget(), \"focus\")\r\n    },\r\n    registerKeyHandler: function(key, handler) {\r\n        var currentKeys = this._supportedKeys();\r\n        var addingKeys = {};\r\n        addingKeys[key] = handler;\r\n        this._supportedKeys = function() {\r\n            return extend(currentKeys, addingKeys)\r\n        }\r\n    }\r\n});\r\nmodule.exports = Widget;\r\n"]},"metadata":{},"sourceType":"script"}