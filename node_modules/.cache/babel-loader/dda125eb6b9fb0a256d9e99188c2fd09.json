{"ast":null,"code":"/**\r\n * DevExtreme (ui/map/provider.dynamic.google.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\");\n\nvar window = require(\"../../core/utils/window\").getWindow();\n\nvar noop = require(\"../../core/utils/common\").noop;\n\nvar devices = require(\"../../core/devices\");\n\nvar Promise = require(\"../../core/polyfills/promise\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar map = require(\"../../core/utils/iterator\").map;\n\nvar DynamicProvider = require(\"./provider.dynamic\");\n\nvar errors = require(\"../widget/ui.errors\");\n\nvar Color = require(\"../../color\");\n\nvar ajax = require(\"../../core/utils/ajax\");\n\nvar isDefined = require(\"../../core/utils/type\").isDefined;\n\nvar GOOGLE_MAP_READY = \"_googleScriptReady\";\nvar GOOGLE_URL = \"https://maps.googleapis.com/maps/api/js?callback=\" + GOOGLE_MAP_READY;\nvar INFO_WINDOW_CLASS = \"gm-style-iw\";\nvar CustomMarker;\n\nvar initCustomMarkerClass = function initCustomMarkerClass() {\n  CustomMarker = function CustomMarker(options) {\n    this._position = options.position;\n    this._offset = options.offset;\n    this._$overlayContainer = $(\"<div>\").css({\n      position: \"absolute\",\n      display: \"none\",\n      cursor: \"pointer\"\n    }).append(options.html);\n    this.setMap(options.map);\n  };\n\n  CustomMarker.prototype = new google.maps.OverlayView();\n\n  CustomMarker.prototype.onAdd = function () {\n    var $pane = $(this.getPanes().overlayMouseTarget);\n    $pane.append(this._$overlayContainer);\n    this._clickListener = google.maps.event.addDomListener(this._$overlayContainer.get(0), \"click\", function (e) {\n      google.maps.event.trigger(this, \"click\");\n      e.preventDefault();\n    }.bind(this));\n    this.draw();\n  };\n\n  CustomMarker.prototype.onRemove = function () {\n    google.maps.event.removeListener(this._clickListener);\n\n    this._$overlayContainer.remove();\n  };\n\n  CustomMarker.prototype.draw = function () {\n    var position = this.getProjection().fromLatLngToDivPixel(this._position);\n\n    this._$overlayContainer.css({\n      left: position.x + this._offset.left,\n      top: position.y + this._offset.top,\n      display: \"block\"\n    });\n  };\n};\n\nvar googleMapsLoaded = function googleMapsLoaded() {\n  return window.google && window.google.maps;\n};\n\nvar googleMapsLoader;\nvar GoogleProvider = DynamicProvider.inherit({\n  _mapType: function _mapType(type) {\n    var mapTypes = {\n      hybrid: google.maps.MapTypeId.HYBRID,\n      roadmap: google.maps.MapTypeId.ROADMAP,\n      satellite: google.maps.MapTypeId.SATELLITE\n    };\n    return mapTypes[type] || mapTypes.hybrid;\n  },\n  _movementMode: function _movementMode(type) {\n    var movementTypes = {\n      driving: google.maps.TravelMode.DRIVING,\n      walking: google.maps.TravelMode.WALKING\n    };\n    return movementTypes[type] || movementTypes.driving;\n  },\n  _resolveLocation: function _resolveLocation(location) {\n    return new Promise(function (resolve) {\n      var latLng = this._getLatLng(location);\n\n      if (latLng) {\n        resolve(new google.maps.LatLng(latLng.lat, latLng.lng));\n      } else {\n        this._geocodeLocation(location).then(function (geocodedLocation) {\n          resolve(geocodedLocation);\n        });\n      }\n    }.bind(this));\n  },\n  _geocodedLocations: {},\n  _geocodeLocationImpl: function _geocodeLocationImpl(location) {\n    return new Promise(function (resolve) {\n      if (!isDefined(location)) {\n        resolve(new google.maps.LatLng(0, 0));\n        return;\n      }\n\n      var geocoder = new google.maps.Geocoder();\n      geocoder.geocode({\n        address: location\n      }, function (results, status) {\n        if (status === google.maps.GeocoderStatus.OK) {\n          resolve(results[0].geometry.location);\n        } else {\n          errors.log(\"W1006\", status);\n          resolve(new google.maps.LatLng(0, 0));\n        }\n      });\n    });\n  },\n  _normalizeLocation: function _normalizeLocation(location) {\n    return {\n      lat: location.lat(),\n      lng: location.lng()\n    };\n  },\n  _normalizeLocationRect: function _normalizeLocationRect(locationRect) {\n    return {\n      northEast: this._normalizeLocation(locationRect.getNorthEast()),\n      southWest: this._normalizeLocation(locationRect.getSouthWest())\n    };\n  },\n  _loadImpl: function _loadImpl() {\n    return new Promise(function (resolve) {\n      if (googleMapsLoaded()) {\n        resolve();\n      } else {\n        if (!googleMapsLoader) {\n          googleMapsLoader = this._loadMapScript();\n        }\n\n        googleMapsLoader.then(function () {\n          if (googleMapsLoaded()) {\n            resolve();\n            return;\n          }\n\n          this._loadMapScript().then(resolve);\n        }.bind(this));\n      }\n    }.bind(this)).then(function () {\n      initCustomMarkerClass();\n    });\n  },\n  _loadMapScript: function _loadMapScript() {\n    return new Promise(function (resolve) {\n      var key = this._keyOption(\"google\");\n\n      window[GOOGLE_MAP_READY] = resolve;\n      ajax.sendRequest({\n        url: GOOGLE_URL + (key ? \"&key=\" + key : \"\"),\n        dataType: \"script\"\n      });\n    }.bind(this)).then(function () {\n      try {\n        delete window[GOOGLE_MAP_READY];\n      } catch (e) {\n        window[GOOGLE_MAP_READY] = void 0;\n      }\n    });\n  },\n  _init: function _init() {\n    return new Promise(function (resolve) {\n      this._resolveLocation(this._option(\"center\")).then(function (center) {\n        var showDefaultUI = this._option(\"controls\");\n\n        this._map = new google.maps.Map(this._$container[0], {\n          zoom: this._option(\"zoom\"),\n          center: center,\n          disableDefaultUI: !showDefaultUI\n        });\n        var listener = google.maps.event.addListener(this._map, \"idle\", function () {\n          resolve(listener);\n        });\n      }.bind(this));\n    }.bind(this)).then(function (listener) {\n      google.maps.event.removeListener(listener);\n    });\n  },\n  _attachHandlers: function _attachHandlers() {\n    this._boundsChangeListener = google.maps.event.addListener(this._map, \"bounds_changed\", this._boundsChangeHandler.bind(this));\n    this._clickListener = google.maps.event.addListener(this._map, \"click\", this._clickActionHandler.bind(this));\n  },\n  _boundsChangeHandler: function _boundsChangeHandler() {\n    var bounds = this._map.getBounds();\n\n    this._option(\"bounds\", this._normalizeLocationRect(bounds));\n\n    var center = this._map.getCenter();\n\n    this._option(\"center\", this._normalizeLocation(center));\n\n    if (!this._preventZoomChangeEvent) {\n      this._option(\"zoom\", this._map.getZoom());\n    }\n  },\n  _clickActionHandler: function _clickActionHandler(e) {\n    this._fireClickAction({\n      location: this._normalizeLocation(e.latLng)\n    });\n  },\n  updateDimensions: function updateDimensions() {\n    var center = this._option(\"center\");\n\n    google.maps.event.trigger(this._map, \"resize\");\n\n    this._option(\"center\", center);\n\n    return this.updateCenter();\n  },\n  updateMapType: function updateMapType() {\n    this._map.setMapTypeId(this._mapType(this._option(\"type\")));\n\n    return Promise.resolve();\n  },\n  updateBounds: function updateBounds() {\n    return Promise.all([this._resolveLocation(this._option(\"bounds.northEast\")), this._resolveLocation(this._option(\"bounds.southWest\"))]).then(function (result) {\n      var bounds = new google.maps.LatLngBounds();\n      bounds.extend(result[0]);\n      bounds.extend(result[1]);\n\n      this._map.fitBounds(bounds);\n    }.bind(this));\n  },\n  updateCenter: function updateCenter() {\n    return this._resolveLocation(this._option(\"center\")).then(function (center) {\n      this._map.setCenter(center);\n\n      this._option(\"center\", this._normalizeLocation(center));\n    }.bind(this));\n  },\n  updateZoom: function updateZoom() {\n    this._map.setZoom(this._option(\"zoom\"));\n\n    return Promise.resolve();\n  },\n  updateControls: function updateControls() {\n    var showDefaultUI = this._option(\"controls\");\n\n    this._map.setOptions({\n      disableDefaultUI: !showDefaultUI\n    });\n\n    return Promise.resolve();\n  },\n  isEventsCanceled: function isEventsCanceled(e) {\n    var gestureHandling = this._map && this._map.get(\"gestureHandling\");\n\n    var isInfoWindowContent = $(e.target).closest(\".\".concat(INFO_WINDOW_CLASS)).length > 0;\n\n    if (isInfoWindowContent || \"desktop\" !== devices.real().deviceType && \"cooperative\" === gestureHandling) {\n      return false;\n    }\n\n    return this.callBase();\n  },\n  _renderMarker: function _renderMarker(options) {\n    return this._resolveLocation(options.location).then(function (location) {\n      var marker;\n\n      if (options.html) {\n        marker = new CustomMarker({\n          map: this._map,\n          position: location,\n          html: options.html,\n          offset: extend({\n            top: 0,\n            left: 0\n          }, options.htmlOffset)\n        });\n      } else {\n        marker = new google.maps.Marker({\n          position: location,\n          map: this._map,\n          icon: options.iconSrc || this._option(\"markerIconSrc\")\n        });\n      }\n\n      var infoWindow = this._renderTooltip(marker, options.tooltip);\n\n      var listener;\n\n      if (options.onClick || options.tooltip) {\n        var markerClickAction = this._mapWidget._createAction(options.onClick || noop);\n\n        var markerNormalizedLocation = this._normalizeLocation(location);\n\n        listener = google.maps.event.addListener(marker, \"click\", function () {\n          markerClickAction({\n            location: markerNormalizedLocation\n          });\n\n          if (infoWindow) {\n            infoWindow.open(this._map, marker);\n          }\n        }.bind(this));\n      }\n\n      return {\n        location: location,\n        marker: marker,\n        listener: listener\n      };\n    }.bind(this));\n  },\n  _renderTooltip: function _renderTooltip(marker, options) {\n    if (!options) {\n      return;\n    }\n\n    options = this._parseTooltipOptions(options);\n    var infoWindow = new google.maps.InfoWindow({\n      content: options.text\n    });\n\n    if (options.visible) {\n      infoWindow.open(this._map, marker);\n    }\n\n    return infoWindow;\n  },\n  _destroyMarker: function _destroyMarker(marker) {\n    marker.marker.setMap(null);\n\n    if (marker.listener) {\n      google.maps.event.removeListener(marker.listener);\n    }\n  },\n  _renderRoute: function _renderRoute(options) {\n    return Promise.all(map(options.locations, function (point) {\n      return this._resolveLocation(point);\n    }.bind(this))).then(function (locations) {\n      return new Promise(function (resolve) {\n        var origin = locations.shift();\n        var destination = locations.pop();\n        var waypoints = map(locations, function (location) {\n          return {\n            location: location,\n            stopover: true\n          };\n        });\n        var request = {\n          origin: origin,\n          destination: destination,\n          waypoints: waypoints,\n          optimizeWaypoints: true,\n          travelMode: this._movementMode(options.mode)\n        };\n        new google.maps.DirectionsService().route(request, function (response, status) {\n          if (status === google.maps.DirectionsStatus.OK) {\n            var color = new Color(options.color || this._defaultRouteColor()).toHex();\n            var directionOptions = {\n              directions: response,\n              map: this._map,\n              suppressMarkers: true,\n              preserveViewport: true,\n              polylineOptions: {\n                strokeWeight: options.weight || this._defaultRouteWeight(),\n                strokeOpacity: options.opacity || this._defaultRouteOpacity(),\n                strokeColor: color\n              }\n            };\n            var route = new google.maps.DirectionsRenderer(directionOptions);\n            var bounds = response.routes[0].bounds;\n            resolve({\n              instance: route,\n              northEast: bounds.getNorthEast(),\n              southWest: bounds.getSouthWest()\n            });\n          } else {\n            errors.log(\"W1006\", status);\n            resolve({\n              instance: new google.maps.DirectionsRenderer({})\n            });\n          }\n        }.bind(this));\n      }.bind(this));\n    }.bind(this));\n  },\n  _destroyRoute: function _destroyRoute(routeObject) {\n    routeObject.instance.setMap(null);\n  },\n  _fitBounds: function _fitBounds() {\n    this._updateBounds();\n\n    if (this._bounds && this._option(\"autoAdjust\")) {\n      var zoomBeforeFitting = this._map.getZoom();\n\n      this._preventZoomChangeEvent = true;\n\n      this._map.fitBounds(this._bounds);\n\n      this._boundsChangeHandler();\n\n      var zoomAfterFitting = this._map.getZoom();\n\n      if (zoomBeforeFitting < zoomAfterFitting) {\n        this._map.setZoom(zoomBeforeFitting);\n      } else {\n        this._option(\"zoom\", zoomAfterFitting);\n      }\n\n      delete this._preventZoomChangeEvent;\n    }\n\n    return Promise.resolve();\n  },\n  _extendBounds: function _extendBounds(location) {\n    if (this._bounds) {\n      this._bounds.extend(location);\n    } else {\n      this._bounds = new google.maps.LatLngBounds();\n\n      this._bounds.extend(location);\n    }\n  },\n  clean: function clean() {\n    if (this._map) {\n      google.maps.event.removeListener(this._boundsChangeListener);\n      google.maps.event.removeListener(this._clickListener);\n\n      this._clearMarkers();\n\n      this._clearRoutes();\n\n      delete this._map;\n\n      this._$container.empty();\n    }\n\n    return Promise.resolve();\n  }\n});\nmodule.exports = GoogleProvider;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/map/provider.dynamic.google.js"],"names":["$","require","window","getWindow","noop","devices","Promise","extend","map","DynamicProvider","errors","Color","ajax","isDefined","GOOGLE_MAP_READY","GOOGLE_URL","INFO_WINDOW_CLASS","CustomMarker","initCustomMarkerClass","options","_position","position","_offset","offset","_$overlayContainer","css","display","cursor","append","html","setMap","prototype","google","maps","OverlayView","onAdd","$pane","getPanes","overlayMouseTarget","_clickListener","event","addDomListener","get","e","trigger","preventDefault","bind","draw","onRemove","removeListener","remove","getProjection","fromLatLngToDivPixel","left","x","top","y","googleMapsLoaded","googleMapsLoader","GoogleProvider","inherit","_mapType","type","mapTypes","hybrid","MapTypeId","HYBRID","roadmap","ROADMAP","satellite","SATELLITE","_movementMode","movementTypes","driving","TravelMode","DRIVING","walking","WALKING","_resolveLocation","location","resolve","latLng","_getLatLng","LatLng","lat","lng","_geocodeLocation","then","geocodedLocation","_geocodedLocations","_geocodeLocationImpl","geocoder","Geocoder","geocode","address","results","status","GeocoderStatus","OK","geometry","log","_normalizeLocation","_normalizeLocationRect","locationRect","northEast","getNorthEast","southWest","getSouthWest","_loadImpl","_loadMapScript","key","_keyOption","sendRequest","url","dataType","_init","_option","center","showDefaultUI","_map","Map","_$container","zoom","disableDefaultUI","listener","addListener","_attachHandlers","_boundsChangeListener","_boundsChangeHandler","_clickActionHandler","bounds","getBounds","getCenter","_preventZoomChangeEvent","getZoom","_fireClickAction","updateDimensions","updateCenter","updateMapType","setMapTypeId","updateBounds","all","result","LatLngBounds","fitBounds","setCenter","updateZoom","setZoom","updateControls","setOptions","isEventsCanceled","gestureHandling","isInfoWindowContent","target","closest","concat","length","real","deviceType","callBase","_renderMarker","marker","htmlOffset","Marker","icon","iconSrc","infoWindow","_renderTooltip","tooltip","onClick","markerClickAction","_mapWidget","_createAction","markerNormalizedLocation","open","_parseTooltipOptions","InfoWindow","content","text","visible","_destroyMarker","_renderRoute","locations","point","origin","shift","destination","pop","waypoints","stopover","request","optimizeWaypoints","travelMode","mode","DirectionsService","route","response","DirectionsStatus","color","_defaultRouteColor","toHex","directionOptions","directions","suppressMarkers","preserveViewport","polylineOptions","strokeWeight","weight","_defaultRouteWeight","strokeOpacity","opacity","_defaultRouteOpacity","strokeColor","DirectionsRenderer","routes","instance","_destroyRoute","routeObject","_fitBounds","_updateBounds","_bounds","zoomBeforeFitting","zoomAfterFitting","_extendBounds","clean","_clearMarkers","_clearRoutes","empty","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/map/provider.dynamic.google.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\");\r\nvar window = require(\"../../core/utils/window\").getWindow();\r\nvar noop = require(\"../../core/utils/common\").noop;\r\nvar devices = require(\"../../core/devices\");\r\nvar Promise = require(\"../../core/polyfills/promise\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar map = require(\"../../core/utils/iterator\").map;\r\nvar DynamicProvider = require(\"./provider.dynamic\");\r\nvar errors = require(\"../widget/ui.errors\");\r\nvar Color = require(\"../../color\");\r\nvar ajax = require(\"../../core/utils/ajax\");\r\nvar isDefined = require(\"../../core/utils/type\").isDefined;\r\nvar GOOGLE_MAP_READY = \"_googleScriptReady\";\r\nvar GOOGLE_URL = \"https://maps.googleapis.com/maps/api/js?callback=\" + GOOGLE_MAP_READY;\r\nvar INFO_WINDOW_CLASS = \"gm-style-iw\";\r\nvar CustomMarker;\r\nvar initCustomMarkerClass = function() {\r\n    CustomMarker = function(options) {\r\n        this._position = options.position;\r\n        this._offset = options.offset;\r\n        this._$overlayContainer = $(\"<div>\").css({\r\n            position: \"absolute\",\r\n            display: \"none\",\r\n            cursor: \"pointer\"\r\n        }).append(options.html);\r\n        this.setMap(options.map)\r\n    };\r\n    CustomMarker.prototype = new google.maps.OverlayView;\r\n    CustomMarker.prototype.onAdd = function() {\r\n        var $pane = $(this.getPanes().overlayMouseTarget);\r\n        $pane.append(this._$overlayContainer);\r\n        this._clickListener = google.maps.event.addDomListener(this._$overlayContainer.get(0), \"click\", function(e) {\r\n            google.maps.event.trigger(this, \"click\");\r\n            e.preventDefault()\r\n        }.bind(this));\r\n        this.draw()\r\n    };\r\n    CustomMarker.prototype.onRemove = function() {\r\n        google.maps.event.removeListener(this._clickListener);\r\n        this._$overlayContainer.remove()\r\n    };\r\n    CustomMarker.prototype.draw = function() {\r\n        var position = this.getProjection().fromLatLngToDivPixel(this._position);\r\n        this._$overlayContainer.css({\r\n            left: position.x + this._offset.left,\r\n            top: position.y + this._offset.top,\r\n            display: \"block\"\r\n        })\r\n    }\r\n};\r\nvar googleMapsLoaded = function() {\r\n    return window.google && window.google.maps\r\n};\r\nvar googleMapsLoader;\r\nvar GoogleProvider = DynamicProvider.inherit({\r\n    _mapType: function(type) {\r\n        var mapTypes = {\r\n            hybrid: google.maps.MapTypeId.HYBRID,\r\n            roadmap: google.maps.MapTypeId.ROADMAP,\r\n            satellite: google.maps.MapTypeId.SATELLITE\r\n        };\r\n        return mapTypes[type] || mapTypes.hybrid\r\n    },\r\n    _movementMode: function(type) {\r\n        var movementTypes = {\r\n            driving: google.maps.TravelMode.DRIVING,\r\n            walking: google.maps.TravelMode.WALKING\r\n        };\r\n        return movementTypes[type] || movementTypes.driving\r\n    },\r\n    _resolveLocation: function(location) {\r\n        return new Promise(function(resolve) {\r\n            var latLng = this._getLatLng(location);\r\n            if (latLng) {\r\n                resolve(new google.maps.LatLng(latLng.lat, latLng.lng))\r\n            } else {\r\n                this._geocodeLocation(location).then(function(geocodedLocation) {\r\n                    resolve(geocodedLocation)\r\n                })\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _geocodedLocations: {},\r\n    _geocodeLocationImpl: function(location) {\r\n        return new Promise(function(resolve) {\r\n            if (!isDefined(location)) {\r\n                resolve(new google.maps.LatLng(0, 0));\r\n                return\r\n            }\r\n            var geocoder = new google.maps.Geocoder;\r\n            geocoder.geocode({\r\n                address: location\r\n            }, function(results, status) {\r\n                if (status === google.maps.GeocoderStatus.OK) {\r\n                    resolve(results[0].geometry.location)\r\n                } else {\r\n                    errors.log(\"W1006\", status);\r\n                    resolve(new google.maps.LatLng(0, 0))\r\n                }\r\n            })\r\n        })\r\n    },\r\n    _normalizeLocation: function(location) {\r\n        return {\r\n            lat: location.lat(),\r\n            lng: location.lng()\r\n        }\r\n    },\r\n    _normalizeLocationRect: function(locationRect) {\r\n        return {\r\n            northEast: this._normalizeLocation(locationRect.getNorthEast()),\r\n            southWest: this._normalizeLocation(locationRect.getSouthWest())\r\n        }\r\n    },\r\n    _loadImpl: function() {\r\n        return new Promise(function(resolve) {\r\n            if (googleMapsLoaded()) {\r\n                resolve()\r\n            } else {\r\n                if (!googleMapsLoader) {\r\n                    googleMapsLoader = this._loadMapScript()\r\n                }\r\n                googleMapsLoader.then(function() {\r\n                    if (googleMapsLoaded()) {\r\n                        resolve();\r\n                        return\r\n                    }\r\n                    this._loadMapScript().then(resolve)\r\n                }.bind(this))\r\n            }\r\n        }.bind(this)).then(function() {\r\n            initCustomMarkerClass()\r\n        })\r\n    },\r\n    _loadMapScript: function() {\r\n        return new Promise(function(resolve) {\r\n            var key = this._keyOption(\"google\");\r\n            window[GOOGLE_MAP_READY] = resolve;\r\n            ajax.sendRequest({\r\n                url: GOOGLE_URL + (key ? \"&key=\" + key : \"\"),\r\n                dataType: \"script\"\r\n            })\r\n        }.bind(this)).then(function() {\r\n            try {\r\n                delete window[GOOGLE_MAP_READY]\r\n            } catch (e) {\r\n                window[GOOGLE_MAP_READY] = void 0\r\n            }\r\n        })\r\n    },\r\n    _init: function() {\r\n        return new Promise(function(resolve) {\r\n            this._resolveLocation(this._option(\"center\")).then(function(center) {\r\n                var showDefaultUI = this._option(\"controls\");\r\n                this._map = new google.maps.Map(this._$container[0], {\r\n                    zoom: this._option(\"zoom\"),\r\n                    center: center,\r\n                    disableDefaultUI: !showDefaultUI\r\n                });\r\n                var listener = google.maps.event.addListener(this._map, \"idle\", function() {\r\n                    resolve(listener)\r\n                })\r\n            }.bind(this))\r\n        }.bind(this)).then(function(listener) {\r\n            google.maps.event.removeListener(listener)\r\n        })\r\n    },\r\n    _attachHandlers: function() {\r\n        this._boundsChangeListener = google.maps.event.addListener(this._map, \"bounds_changed\", this._boundsChangeHandler.bind(this));\r\n        this._clickListener = google.maps.event.addListener(this._map, \"click\", this._clickActionHandler.bind(this))\r\n    },\r\n    _boundsChangeHandler: function() {\r\n        var bounds = this._map.getBounds();\r\n        this._option(\"bounds\", this._normalizeLocationRect(bounds));\r\n        var center = this._map.getCenter();\r\n        this._option(\"center\", this._normalizeLocation(center));\r\n        if (!this._preventZoomChangeEvent) {\r\n            this._option(\"zoom\", this._map.getZoom())\r\n        }\r\n    },\r\n    _clickActionHandler: function(e) {\r\n        this._fireClickAction({\r\n            location: this._normalizeLocation(e.latLng)\r\n        })\r\n    },\r\n    updateDimensions: function() {\r\n        var center = this._option(\"center\");\r\n        google.maps.event.trigger(this._map, \"resize\");\r\n        this._option(\"center\", center);\r\n        return this.updateCenter()\r\n    },\r\n    updateMapType: function() {\r\n        this._map.setMapTypeId(this._mapType(this._option(\"type\")));\r\n        return Promise.resolve()\r\n    },\r\n    updateBounds: function() {\r\n        return Promise.all([this._resolveLocation(this._option(\"bounds.northEast\")), this._resolveLocation(this._option(\"bounds.southWest\"))]).then(function(result) {\r\n            var bounds = new google.maps.LatLngBounds;\r\n            bounds.extend(result[0]);\r\n            bounds.extend(result[1]);\r\n            this._map.fitBounds(bounds)\r\n        }.bind(this))\r\n    },\r\n    updateCenter: function() {\r\n        return this._resolveLocation(this._option(\"center\")).then(function(center) {\r\n            this._map.setCenter(center);\r\n            this._option(\"center\", this._normalizeLocation(center))\r\n        }.bind(this))\r\n    },\r\n    updateZoom: function() {\r\n        this._map.setZoom(this._option(\"zoom\"));\r\n        return Promise.resolve()\r\n    },\r\n    updateControls: function() {\r\n        var showDefaultUI = this._option(\"controls\");\r\n        this._map.setOptions({\r\n            disableDefaultUI: !showDefaultUI\r\n        });\r\n        return Promise.resolve()\r\n    },\r\n    isEventsCanceled: function(e) {\r\n        var gestureHandling = this._map && this._map.get(\"gestureHandling\");\r\n        var isInfoWindowContent = $(e.target).closest(\".\".concat(INFO_WINDOW_CLASS)).length > 0;\r\n        if (isInfoWindowContent || \"desktop\" !== devices.real().deviceType && \"cooperative\" === gestureHandling) {\r\n            return false\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _renderMarker: function(options) {\r\n        return this._resolveLocation(options.location).then(function(location) {\r\n            var marker;\r\n            if (options.html) {\r\n                marker = new CustomMarker({\r\n                    map: this._map,\r\n                    position: location,\r\n                    html: options.html,\r\n                    offset: extend({\r\n                        top: 0,\r\n                        left: 0\r\n                    }, options.htmlOffset)\r\n                })\r\n            } else {\r\n                marker = new google.maps.Marker({\r\n                    position: location,\r\n                    map: this._map,\r\n                    icon: options.iconSrc || this._option(\"markerIconSrc\")\r\n                })\r\n            }\r\n            var infoWindow = this._renderTooltip(marker, options.tooltip);\r\n            var listener;\r\n            if (options.onClick || options.tooltip) {\r\n                var markerClickAction = this._mapWidget._createAction(options.onClick || noop);\r\n                var markerNormalizedLocation = this._normalizeLocation(location);\r\n                listener = google.maps.event.addListener(marker, \"click\", function() {\r\n                    markerClickAction({\r\n                        location: markerNormalizedLocation\r\n                    });\r\n                    if (infoWindow) {\r\n                        infoWindow.open(this._map, marker)\r\n                    }\r\n                }.bind(this))\r\n            }\r\n            return {\r\n                location: location,\r\n                marker: marker,\r\n                listener: listener\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _renderTooltip: function(marker, options) {\r\n        if (!options) {\r\n            return\r\n        }\r\n        options = this._parseTooltipOptions(options);\r\n        var infoWindow = new google.maps.InfoWindow({\r\n            content: options.text\r\n        });\r\n        if (options.visible) {\r\n            infoWindow.open(this._map, marker)\r\n        }\r\n        return infoWindow\r\n    },\r\n    _destroyMarker: function(marker) {\r\n        marker.marker.setMap(null);\r\n        if (marker.listener) {\r\n            google.maps.event.removeListener(marker.listener)\r\n        }\r\n    },\r\n    _renderRoute: function(options) {\r\n        return Promise.all(map(options.locations, function(point) {\r\n            return this._resolveLocation(point)\r\n        }.bind(this))).then(function(locations) {\r\n            return new Promise(function(resolve) {\r\n                var origin = locations.shift();\r\n                var destination = locations.pop();\r\n                var waypoints = map(locations, function(location) {\r\n                    return {\r\n                        location: location,\r\n                        stopover: true\r\n                    }\r\n                });\r\n                var request = {\r\n                    origin: origin,\r\n                    destination: destination,\r\n                    waypoints: waypoints,\r\n                    optimizeWaypoints: true,\r\n                    travelMode: this._movementMode(options.mode)\r\n                };\r\n                (new google.maps.DirectionsService).route(request, function(response, status) {\r\n                    if (status === google.maps.DirectionsStatus.OK) {\r\n                        var color = new Color(options.color || this._defaultRouteColor()).toHex();\r\n                        var directionOptions = {\r\n                            directions: response,\r\n                            map: this._map,\r\n                            suppressMarkers: true,\r\n                            preserveViewport: true,\r\n                            polylineOptions: {\r\n                                strokeWeight: options.weight || this._defaultRouteWeight(),\r\n                                strokeOpacity: options.opacity || this._defaultRouteOpacity(),\r\n                                strokeColor: color\r\n                            }\r\n                        };\r\n                        var route = new google.maps.DirectionsRenderer(directionOptions);\r\n                        var bounds = response.routes[0].bounds;\r\n                        resolve({\r\n                            instance: route,\r\n                            northEast: bounds.getNorthEast(),\r\n                            southWest: bounds.getSouthWest()\r\n                        })\r\n                    } else {\r\n                        errors.log(\"W1006\", status);\r\n                        resolve({\r\n                            instance: new google.maps.DirectionsRenderer({})\r\n                        })\r\n                    }\r\n                }.bind(this))\r\n            }.bind(this))\r\n        }.bind(this))\r\n    },\r\n    _destroyRoute: function(routeObject) {\r\n        routeObject.instance.setMap(null)\r\n    },\r\n    _fitBounds: function() {\r\n        this._updateBounds();\r\n        if (this._bounds && this._option(\"autoAdjust\")) {\r\n            var zoomBeforeFitting = this._map.getZoom();\r\n            this._preventZoomChangeEvent = true;\r\n            this._map.fitBounds(this._bounds);\r\n            this._boundsChangeHandler();\r\n            var zoomAfterFitting = this._map.getZoom();\r\n            if (zoomBeforeFitting < zoomAfterFitting) {\r\n                this._map.setZoom(zoomBeforeFitting)\r\n            } else {\r\n                this._option(\"zoom\", zoomAfterFitting)\r\n            }\r\n            delete this._preventZoomChangeEvent\r\n        }\r\n        return Promise.resolve()\r\n    },\r\n    _extendBounds: function(location) {\r\n        if (this._bounds) {\r\n            this._bounds.extend(location)\r\n        } else {\r\n            this._bounds = new google.maps.LatLngBounds;\r\n            this._bounds.extend(location)\r\n        }\r\n    },\r\n    clean: function() {\r\n        if (this._map) {\r\n            google.maps.event.removeListener(this._boundsChangeListener);\r\n            google.maps.event.removeListener(this._clickListener);\r\n            this._clearMarkers();\r\n            this._clearRoutes();\r\n            delete this._map;\r\n            this._$container.empty()\r\n        }\r\n        return Promise.resolve()\r\n    }\r\n});\r\nmodule.exports = GoogleProvider;\r\n"]},"metadata":{},"sourceType":"script"}