{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/points/pie_point.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar extend = require(\"../../../core/utils/extend\").extend;\n\nvar symbolPoint = require(\"./symbol_point\");\n\nvar _extend = extend;\nvar _round = Math.round;\nvar _sqrt = Math.sqrt;\nvar _acos = Math.acos;\nvar DEG = 180 / Math.PI;\nvar _abs = Math.abs;\n\nvar vizUtils = require(\"../../core/utils\");\n\nvar _normalizeAngle = vizUtils.normalizeAngle;\nvar _getCosAndSin = vizUtils.getCosAndSin;\n\nvar _isDefined = require(\"../../../core/utils/type\").isDefined;\n\nvar getVerticallyShiftedAngularCoords = vizUtils.getVerticallyShiftedAngularCoords;\n\nvar RADIAL_LABEL_INDENT = require(\"../../components/consts\").radialLabelIndent;\n\nmodule.exports = _extend({}, symbolPoint, {\n  _updateData: function _updateData(data, argumentChanged) {\n    var that = this;\n\n    symbolPoint._updateData.call(this, data);\n\n    if (argumentChanged || !_isDefined(that._visible)) {\n      that._visible = true;\n    }\n\n    that.minValue = that.initialMinValue = that.originalMinValue = _isDefined(data.minValue) ? data.minValue : 0;\n  },\n  animate: function animate(complete, duration, delay) {\n    var that = this;\n    that.graphic.animate({\n      x: that.centerX,\n      y: that.centerY,\n      outerRadius: that.radiusOuter,\n      innerRadius: that.radiusInner,\n      startAngle: that.toAngle,\n      endAngle: that.fromAngle\n    }, {\n      delay: delay,\n      partitionDuration: duration\n    }, complete);\n  },\n  correctPosition: function correctPosition(correction) {\n    var that = this;\n    that.correctRadius(correction);\n    that.correctLabelRadius(correction.radiusOuter + RADIAL_LABEL_INDENT);\n    that.centerX = correction.centerX;\n    that.centerY = correction.centerY;\n  },\n  correctRadius: function correctRadius(correction) {\n    this.radiusInner = correction.radiusInner;\n    this.radiusOuter = correction.radiusOuter;\n  },\n  correctLabelRadius: function correctLabelRadius(radiusLabels) {\n    this.radiusLabels = radiusLabels;\n  },\n  correctValue: function correctValue(correction, percent, base) {\n    var that = this;\n    that.value = (base || that.normalInitialValue) + correction;\n    that.minValue = correction;\n    that.percent = percent;\n\n    that._label.setDataField(\"percent\", percent);\n  },\n  _updateLabelData: function _updateLabelData() {\n    this._label.setData(this._getLabelFormatObject());\n  },\n  _getShiftLabelCoords: function _getShiftLabelCoords() {\n    var that = this;\n\n    var bBox = that._label.getBoundingRect();\n\n    var coord = that._getLabelCoords(that._label);\n\n    var visibleArea = that._getVisibleArea();\n\n    if (that._isLabelDrawingWithoutPoints) {\n      return that._checkLabelPosition(coord, bBox, visibleArea);\n    } else {\n      return that._getLabelExtraCoord(coord, that._checkVerticalLabelPosition(coord, bBox, visibleArea), bBox);\n    }\n  },\n  _getLabelPosition: function _getLabelPosition(options) {\n    return options.position;\n  },\n  _getLabelCoords: function _getLabelCoords(label) {\n    var that = this;\n    var bBox = label.getBoundingRect();\n    var options = label.getLayoutOptions();\n\n    var angleFunctions = _getCosAndSin(that.middleAngle);\n\n    var position = that._getLabelPosition(options);\n\n    var radiusInner = that.radiusInner;\n    var radiusOuter = that.radiusOuter;\n    var radiusLabels = that.radiusLabels;\n    var columnsPosition = \"columns\" === position;\n    var rad;\n    var x;\n\n    if (\"inside\" === position) {\n      rad = radiusInner + (radiusOuter - radiusInner) / 2 + options.radialOffset;\n      x = that.centerX + rad * angleFunctions.cos - bBox.width / 2;\n    } else {\n      rad = radiusLabels + options.radialOffset;\n\n      if (angleFunctions.cos > .1 || columnsPosition && angleFunctions.cos >= 0) {\n        x = that.centerX + rad * angleFunctions.cos;\n      } else {\n        if (angleFunctions.cos < -.1 || columnsPosition && angleFunctions.cos < 0) {\n          x = that.centerX + rad * angleFunctions.cos - bBox.width;\n        } else {\n          x = that.centerX + rad * angleFunctions.cos - bBox.width / 2;\n        }\n      }\n    }\n\n    return {\n      x: x,\n      y: _round(that.centerY - rad * angleFunctions.sin - bBox.height / 2)\n    };\n  },\n  _correctLabelCoord: function _correctLabelCoord(coord, moveLabelsFromCenter) {\n    var that = this;\n    var label = that._label;\n    var bBox = label.getBoundingRect();\n    var labelWidth = bBox.width;\n    var options = label.getLayoutOptions();\n\n    var visibleArea = that._getVisibleArea();\n\n    var rightBorderX = visibleArea.maxX - labelWidth;\n    var leftBorderX = visibleArea.minX;\n\n    var angleOfPoint = _normalizeAngle(that.middleAngle);\n\n    var centerX = that.centerX;\n    var connectorOffset = options.connectorOffset;\n    var x = coord.x;\n\n    if (\"columns\" === options.position) {\n      if (angleOfPoint <= 90 || angleOfPoint >= 270) {\n        x = rightBorderX;\n      } else {\n        x = leftBorderX;\n      }\n\n      coord.x = x;\n    } else {\n      if (\"inside\" !== options.position && moveLabelsFromCenter) {\n        if (angleOfPoint <= 90 || angleOfPoint >= 270) {\n          if (x - connectorOffset < centerX) {\n            x = centerX + connectorOffset;\n          }\n        } else {\n          if (x + labelWidth + connectorOffset > centerX) {\n            x = centerX - labelWidth - connectorOffset;\n          }\n        }\n\n        coord.x = x;\n      }\n    }\n\n    return coord;\n  },\n  drawLabel: function drawLabel() {\n    this.translate();\n    this._isLabelDrawingWithoutPoints = true;\n\n    this._drawLabel();\n\n    this._isLabelDrawingWithoutPoints = false;\n  },\n  updateLabelCoord: function updateLabelCoord(moveLabelsFromCenter) {\n    var that = this;\n\n    var bBox = that._label.getBoundingRect();\n\n    var coord = that._correctLabelCoord(bBox, moveLabelsFromCenter);\n\n    coord = that._checkHorizontalLabelPosition(coord, bBox, that._getVisibleArea());\n\n    that._label.shift(_round(coord.x), _round(bBox.y));\n  },\n  _checkVerticalLabelPosition: function _checkVerticalLabelPosition(coord, box, visibleArea) {\n    var x = coord.x;\n    var y = coord.y;\n\n    if (coord.y + box.height > visibleArea.maxY) {\n      y = visibleArea.maxY - box.height;\n    } else {\n      if (coord.y < visibleArea.minY) {\n        y = visibleArea.minY;\n      }\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _getLabelExtraCoord: function _getLabelExtraCoord(coord, shiftCoord, box) {\n    return coord.y !== shiftCoord.y ? getVerticallyShiftedAngularCoords({\n      x: coord.x,\n      y: coord.y,\n      width: box.width,\n      height: box.height\n    }, shiftCoord.y - coord.y, {\n      x: this.centerX,\n      y: this.centerY\n    }) : coord;\n  },\n  _checkHorizontalLabelPosition: function _checkHorizontalLabelPosition(coord, box, visibleArea) {\n    var x = coord.x;\n    var y = coord.y;\n\n    if (coord.x + box.width > visibleArea.maxX) {\n      x = visibleArea.maxX - box.width;\n    } else {\n      if (coord.x < visibleArea.minX) {\n        x = visibleArea.minX;\n      }\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  applyWordWrap: function applyWordWrap(moveLabelsFromCenter) {\n    var that = this;\n    var label = that._label;\n    var box = label.getBoundingRect();\n\n    var visibleArea = that._getVisibleArea();\n\n    var position = label.getLayoutOptions().position;\n    var width = box.width;\n    var rowCountChanged = false;\n\n    if (\"columns\" === position && that.series.index > 0) {\n      width = visibleArea.maxX - that.centerX - that.radiusLabels;\n    } else {\n      if (\"inside\" === position) {\n        if (width > visibleArea.maxX - visibleArea.minX) {\n          width = visibleArea.maxX - visibleArea.minX;\n        }\n      } else {\n        if (moveLabelsFromCenter && box.x < that.centerX && box.width + box.x > that.centerX) {\n          width = Math.floor((visibleArea.maxX - visibleArea.minX) / 2);\n        } else {\n          if (box.x + width > visibleArea.maxX) {\n            width = visibleArea.maxX - box.x;\n          } else {\n            if (box.x < visibleArea.minX) {\n              width = box.x + width - visibleArea.minX;\n            }\n          }\n        }\n      }\n    }\n\n    if (width < box.width) {\n      rowCountChanged = label.fit(width);\n    }\n\n    return rowCountChanged;\n  },\n  setLabelTrackerData: function setLabelTrackerData() {\n    this._label.setTrackerData(this);\n  },\n  _checkLabelPosition: function _checkLabelPosition(coord, bBox, visibleArea) {\n    coord = this._checkHorizontalLabelPosition(coord, bBox, visibleArea);\n    return this._checkVerticalLabelPosition(coord, bBox, visibleArea);\n  },\n  _getLabelConnector: function _getLabelConnector() {\n    var that = this;\n    var rad = that.radiusOuter;\n    var seriesStyle = that._options.styles.normal;\n    var strokeWidthBy2 = seriesStyle[\"stroke-width\"] / 2;\n    var borderWidth = that.series.getOptions().containerBackgroundColor === seriesStyle.stroke ? _round(strokeWidthBy2) : _round(-strokeWidthBy2);\n\n    var angleFunctions = _getCosAndSin(_round(that.middleAngle));\n\n    return {\n      x: _round(that.centerX + (rad - borderWidth) * angleFunctions.cos),\n      y: _round(that.centerY - (rad - borderWidth) * angleFunctions.sin),\n      angle: that.middleAngle\n    };\n  },\n  _drawMarker: function _drawMarker(renderer, group, animationEnabled, firstDrawing) {\n    var that = this;\n    var radiusOuter = that.radiusOuter;\n    var radiusInner = that.radiusInner;\n    var fromAngle = that.fromAngle;\n    var toAngle = that.toAngle;\n\n    if (animationEnabled) {\n      radiusInner = radiusOuter = 0;\n\n      if (!firstDrawing) {\n        fromAngle = toAngle = that.shiftedAngle;\n      }\n    }\n\n    that.graphic = renderer.arc(that.centerX, that.centerY, radiusInner, radiusOuter, toAngle, fromAngle).attr({\n      \"stroke-linejoin\": \"round\"\n    }).smartAttr(that._getStyle()).data({\n      \"chart-data-point\": that\n    }).sharp().append(group);\n  },\n  getTooltipParams: function getTooltipParams() {\n    var that = this;\n\n    var angleFunctions = _getCosAndSin(that.middleAngle);\n\n    var radiusInner = that.radiusInner;\n    var radiusOuter = that.radiusOuter;\n    return {\n      x: that.centerX + (radiusInner + (radiusOuter - radiusInner) / 2) * angleFunctions.cos,\n      y: that.centerY - (radiusInner + (radiusOuter - radiusInner) / 2) * angleFunctions.sin,\n      offset: 0\n    };\n  },\n  _translate: function _translate() {\n    var that = this;\n    var angle = that.shiftedAngle || 0;\n    var value = that.value;\n    var minValue = that.minValue;\n\n    var translator = that._getValTranslator();\n\n    that.fromAngle = translator.translate(minValue) + angle;\n    that.toAngle = translator.translate(value) + angle;\n    that.middleAngle = translator.translate((value - minValue) / 2 + minValue) + angle;\n\n    if (!that.isVisible()) {\n      that.middleAngle = that.toAngle = that.fromAngle = that.fromAngle || angle;\n    }\n  },\n  getMarkerVisibility: function getMarkerVisibility() {\n    return true;\n  },\n  _updateMarker: function _updateMarker(animationEnabled, style, _, callback) {\n    var that = this;\n\n    if (!animationEnabled) {\n      style = _extend({\n        x: that.centerX,\n        y: that.centerY,\n        outerRadius: that.radiusOuter,\n        innerRadius: that.radiusInner,\n        startAngle: that.toAngle,\n        endAngle: that.fromAngle\n      }, style);\n    }\n\n    that.graphic.smartAttr(style).sharp();\n    callback && callback();\n  },\n  getLegendStyles: function getLegendStyles() {\n    return this._styles.legendStyles;\n  },\n  isInVisibleArea: function isInVisibleArea() {\n    return true;\n  },\n  hide: function hide() {\n    var that = this;\n\n    if (that._visible) {\n      that._visible = false;\n      that.hideTooltip();\n\n      that._options.visibilityChanged();\n    }\n  },\n  show: function show() {\n    var that = this;\n\n    if (!that._visible) {\n      that._visible = true;\n\n      that._options.visibilityChanged();\n    }\n  },\n  setInvisibility: function setInvisibility() {\n    this._label.draw(false);\n  },\n  isVisible: function isVisible() {\n    return this._visible;\n  },\n  _getFormatObject: function _getFormatObject(tooltip) {\n    var formatObject = symbolPoint._getFormatObject.call(this, tooltip);\n\n    var percent = this.percent;\n    formatObject.percent = percent;\n    formatObject.percentText = tooltip.formatValue(percent, \"percent\");\n    return formatObject;\n  },\n  getColor: function getColor() {\n    return this._styles.normal.fill;\n  },\n  coordsIn: function coordsIn(x, y) {\n    var that = this;\n    var lx = x - that.centerX;\n    var ly = y - that.centerY;\n\n    var r = _sqrt(lx * lx + ly * ly);\n\n    var fromAngle = that.fromAngle % 360;\n    var toAngle = that.toAngle % 360;\n    var angle;\n\n    if (r < that.radiusInner || r > that.radiusOuter || 0 === r) {\n      return false;\n    }\n\n    angle = _acos(lx / r) * DEG * (ly > 0 ? -1 : 1);\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    if (fromAngle === toAngle && _abs(that.toAngle - that.fromAngle) > 1e-4) {\n      return true;\n    } else {\n      return fromAngle >= toAngle ? angle <= fromAngle && angle >= toAngle : !(angle >= fromAngle && angle <= toAngle);\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/series/points/pie_point.js"],"names":["extend","require","symbolPoint","_extend","_round","Math","round","_sqrt","sqrt","_acos","acos","DEG","PI","_abs","abs","vizUtils","_normalizeAngle","normalizeAngle","_getCosAndSin","getCosAndSin","_isDefined","isDefined","getVerticallyShiftedAngularCoords","RADIAL_LABEL_INDENT","radialLabelIndent","module","exports","_updateData","data","argumentChanged","that","call","_visible","minValue","initialMinValue","originalMinValue","animate","complete","duration","delay","graphic","x","centerX","y","centerY","outerRadius","radiusOuter","innerRadius","radiusInner","startAngle","toAngle","endAngle","fromAngle","partitionDuration","correctPosition","correction","correctRadius","correctLabelRadius","radiusLabels","correctValue","percent","base","value","normalInitialValue","_label","setDataField","_updateLabelData","setData","_getLabelFormatObject","_getShiftLabelCoords","bBox","getBoundingRect","coord","_getLabelCoords","visibleArea","_getVisibleArea","_isLabelDrawingWithoutPoints","_checkLabelPosition","_getLabelExtraCoord","_checkVerticalLabelPosition","_getLabelPosition","options","position","label","getLayoutOptions","angleFunctions","middleAngle","columnsPosition","rad","radialOffset","cos","width","sin","height","_correctLabelCoord","moveLabelsFromCenter","labelWidth","rightBorderX","maxX","leftBorderX","minX","angleOfPoint","connectorOffset","drawLabel","translate","_drawLabel","updateLabelCoord","_checkHorizontalLabelPosition","shift","box","maxY","minY","shiftCoord","applyWordWrap","rowCountChanged","series","index","floor","fit","setLabelTrackerData","setTrackerData","_getLabelConnector","seriesStyle","_options","styles","normal","strokeWidthBy2","borderWidth","getOptions","containerBackgroundColor","stroke","angle","_drawMarker","renderer","group","animationEnabled","firstDrawing","shiftedAngle","arc","attr","smartAttr","_getStyle","sharp","append","getTooltipParams","offset","_translate","translator","_getValTranslator","isVisible","getMarkerVisibility","_updateMarker","style","_","callback","getLegendStyles","_styles","legendStyles","isInVisibleArea","hide","hideTooltip","visibilityChanged","show","setInvisibility","draw","_getFormatObject","tooltip","formatObject","percentText","formatValue","getColor","fill","coordsIn","lx","ly","r"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/points/pie_point.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar extend = require(\"../../../core/utils/extend\").extend;\r\nvar symbolPoint = require(\"./symbol_point\");\r\nvar _extend = extend;\r\nvar _round = Math.round;\r\nvar _sqrt = Math.sqrt;\r\nvar _acos = Math.acos;\r\nvar DEG = 180 / Math.PI;\r\nvar _abs = Math.abs;\r\nvar vizUtils = require(\"../../core/utils\");\r\nvar _normalizeAngle = vizUtils.normalizeAngle;\r\nvar _getCosAndSin = vizUtils.getCosAndSin;\r\nvar _isDefined = require(\"../../../core/utils/type\").isDefined;\r\nvar getVerticallyShiftedAngularCoords = vizUtils.getVerticallyShiftedAngularCoords;\r\nvar RADIAL_LABEL_INDENT = require(\"../../components/consts\").radialLabelIndent;\r\nmodule.exports = _extend({}, symbolPoint, {\r\n    _updateData: function(data, argumentChanged) {\r\n        var that = this;\r\n        symbolPoint._updateData.call(this, data);\r\n        if (argumentChanged || !_isDefined(that._visible)) {\r\n            that._visible = true\r\n        }\r\n        that.minValue = that.initialMinValue = that.originalMinValue = _isDefined(data.minValue) ? data.minValue : 0\r\n    },\r\n    animate: function(complete, duration, delay) {\r\n        var that = this;\r\n        that.graphic.animate({\r\n            x: that.centerX,\r\n            y: that.centerY,\r\n            outerRadius: that.radiusOuter,\r\n            innerRadius: that.radiusInner,\r\n            startAngle: that.toAngle,\r\n            endAngle: that.fromAngle\r\n        }, {\r\n            delay: delay,\r\n            partitionDuration: duration\r\n        }, complete)\r\n    },\r\n    correctPosition: function(correction) {\r\n        var that = this;\r\n        that.correctRadius(correction);\r\n        that.correctLabelRadius(correction.radiusOuter + RADIAL_LABEL_INDENT);\r\n        that.centerX = correction.centerX;\r\n        that.centerY = correction.centerY\r\n    },\r\n    correctRadius: function(correction) {\r\n        this.radiusInner = correction.radiusInner;\r\n        this.radiusOuter = correction.radiusOuter\r\n    },\r\n    correctLabelRadius: function(radiusLabels) {\r\n        this.radiusLabels = radiusLabels\r\n    },\r\n    correctValue: function(correction, percent, base) {\r\n        var that = this;\r\n        that.value = (base || that.normalInitialValue) + correction;\r\n        that.minValue = correction;\r\n        that.percent = percent;\r\n        that._label.setDataField(\"percent\", percent)\r\n    },\r\n    _updateLabelData: function() {\r\n        this._label.setData(this._getLabelFormatObject())\r\n    },\r\n    _getShiftLabelCoords: function() {\r\n        var that = this;\r\n        var bBox = that._label.getBoundingRect();\r\n        var coord = that._getLabelCoords(that._label);\r\n        var visibleArea = that._getVisibleArea();\r\n        if (that._isLabelDrawingWithoutPoints) {\r\n            return that._checkLabelPosition(coord, bBox, visibleArea)\r\n        } else {\r\n            return that._getLabelExtraCoord(coord, that._checkVerticalLabelPosition(coord, bBox, visibleArea), bBox)\r\n        }\r\n    },\r\n    _getLabelPosition: function(options) {\r\n        return options.position\r\n    },\r\n    _getLabelCoords: function(label) {\r\n        var that = this;\r\n        var bBox = label.getBoundingRect();\r\n        var options = label.getLayoutOptions();\r\n        var angleFunctions = _getCosAndSin(that.middleAngle);\r\n        var position = that._getLabelPosition(options);\r\n        var radiusInner = that.radiusInner;\r\n        var radiusOuter = that.radiusOuter;\r\n        var radiusLabels = that.radiusLabels;\r\n        var columnsPosition = \"columns\" === position;\r\n        var rad;\r\n        var x;\r\n        if (\"inside\" === position) {\r\n            rad = radiusInner + (radiusOuter - radiusInner) / 2 + options.radialOffset;\r\n            x = that.centerX + rad * angleFunctions.cos - bBox.width / 2\r\n        } else {\r\n            rad = radiusLabels + options.radialOffset;\r\n            if (angleFunctions.cos > .1 || columnsPosition && angleFunctions.cos >= 0) {\r\n                x = that.centerX + rad * angleFunctions.cos\r\n            } else {\r\n                if (angleFunctions.cos < -.1 || columnsPosition && angleFunctions.cos < 0) {\r\n                    x = that.centerX + rad * angleFunctions.cos - bBox.width\r\n                } else {\r\n                    x = that.centerX + rad * angleFunctions.cos - bBox.width / 2\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            x: x,\r\n            y: _round(that.centerY - rad * angleFunctions.sin - bBox.height / 2)\r\n        }\r\n    },\r\n    _correctLabelCoord: function(coord, moveLabelsFromCenter) {\r\n        var that = this;\r\n        var label = that._label;\r\n        var bBox = label.getBoundingRect();\r\n        var labelWidth = bBox.width;\r\n        var options = label.getLayoutOptions();\r\n        var visibleArea = that._getVisibleArea();\r\n        var rightBorderX = visibleArea.maxX - labelWidth;\r\n        var leftBorderX = visibleArea.minX;\r\n        var angleOfPoint = _normalizeAngle(that.middleAngle);\r\n        var centerX = that.centerX;\r\n        var connectorOffset = options.connectorOffset;\r\n        var x = coord.x;\r\n        if (\"columns\" === options.position) {\r\n            if (angleOfPoint <= 90 || angleOfPoint >= 270) {\r\n                x = rightBorderX\r\n            } else {\r\n                x = leftBorderX\r\n            }\r\n            coord.x = x\r\n        } else {\r\n            if (\"inside\" !== options.position && moveLabelsFromCenter) {\r\n                if (angleOfPoint <= 90 || angleOfPoint >= 270) {\r\n                    if (x - connectorOffset < centerX) {\r\n                        x = centerX + connectorOffset\r\n                    }\r\n                } else {\r\n                    if (x + labelWidth + connectorOffset > centerX) {\r\n                        x = centerX - labelWidth - connectorOffset\r\n                    }\r\n                }\r\n                coord.x = x\r\n            }\r\n        }\r\n        return coord\r\n    },\r\n    drawLabel: function() {\r\n        this.translate();\r\n        this._isLabelDrawingWithoutPoints = true;\r\n        this._drawLabel();\r\n        this._isLabelDrawingWithoutPoints = false\r\n    },\r\n    updateLabelCoord: function(moveLabelsFromCenter) {\r\n        var that = this;\r\n        var bBox = that._label.getBoundingRect();\r\n        var coord = that._correctLabelCoord(bBox, moveLabelsFromCenter);\r\n        coord = that._checkHorizontalLabelPosition(coord, bBox, that._getVisibleArea());\r\n        that._label.shift(_round(coord.x), _round(bBox.y))\r\n    },\r\n    _checkVerticalLabelPosition: function(coord, box, visibleArea) {\r\n        var x = coord.x;\r\n        var y = coord.y;\r\n        if (coord.y + box.height > visibleArea.maxY) {\r\n            y = visibleArea.maxY - box.height\r\n        } else {\r\n            if (coord.y < visibleArea.minY) {\r\n                y = visibleArea.minY\r\n            }\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _getLabelExtraCoord: function(coord, shiftCoord, box) {\r\n        return coord.y !== shiftCoord.y ? getVerticallyShiftedAngularCoords({\r\n            x: coord.x,\r\n            y: coord.y,\r\n            width: box.width,\r\n            height: box.height\r\n        }, shiftCoord.y - coord.y, {\r\n            x: this.centerX,\r\n            y: this.centerY\r\n        }) : coord\r\n    },\r\n    _checkHorizontalLabelPosition: function(coord, box, visibleArea) {\r\n        var x = coord.x;\r\n        var y = coord.y;\r\n        if (coord.x + box.width > visibleArea.maxX) {\r\n            x = visibleArea.maxX - box.width\r\n        } else {\r\n            if (coord.x < visibleArea.minX) {\r\n                x = visibleArea.minX\r\n            }\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    applyWordWrap: function(moveLabelsFromCenter) {\r\n        var that = this;\r\n        var label = that._label;\r\n        var box = label.getBoundingRect();\r\n        var visibleArea = that._getVisibleArea();\r\n        var position = label.getLayoutOptions().position;\r\n        var width = box.width;\r\n        var rowCountChanged = false;\r\n        if (\"columns\" === position && that.series.index > 0) {\r\n            width = visibleArea.maxX - that.centerX - that.radiusLabels\r\n        } else {\r\n            if (\"inside\" === position) {\r\n                if (width > visibleArea.maxX - visibleArea.minX) {\r\n                    width = visibleArea.maxX - visibleArea.minX\r\n                }\r\n            } else {\r\n                if (moveLabelsFromCenter && box.x < that.centerX && box.width + box.x > that.centerX) {\r\n                    width = Math.floor((visibleArea.maxX - visibleArea.minX) / 2)\r\n                } else {\r\n                    if (box.x + width > visibleArea.maxX) {\r\n                        width = visibleArea.maxX - box.x\r\n                    } else {\r\n                        if (box.x < visibleArea.minX) {\r\n                            width = box.x + width - visibleArea.minX\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (width < box.width) {\r\n            rowCountChanged = label.fit(width)\r\n        }\r\n        return rowCountChanged\r\n    },\r\n    setLabelTrackerData: function() {\r\n        this._label.setTrackerData(this)\r\n    },\r\n    _checkLabelPosition: function(coord, bBox, visibleArea) {\r\n        coord = this._checkHorizontalLabelPosition(coord, bBox, visibleArea);\r\n        return this._checkVerticalLabelPosition(coord, bBox, visibleArea)\r\n    },\r\n    _getLabelConnector: function() {\r\n        var that = this;\r\n        var rad = that.radiusOuter;\r\n        var seriesStyle = that._options.styles.normal;\r\n        var strokeWidthBy2 = seriesStyle[\"stroke-width\"] / 2;\r\n        var borderWidth = that.series.getOptions().containerBackgroundColor === seriesStyle.stroke ? _round(strokeWidthBy2) : _round(-strokeWidthBy2);\r\n        var angleFunctions = _getCosAndSin(_round(that.middleAngle));\r\n        return {\r\n            x: _round(that.centerX + (rad - borderWidth) * angleFunctions.cos),\r\n            y: _round(that.centerY - (rad - borderWidth) * angleFunctions.sin),\r\n            angle: that.middleAngle\r\n        }\r\n    },\r\n    _drawMarker: function(renderer, group, animationEnabled, firstDrawing) {\r\n        var that = this;\r\n        var radiusOuter = that.radiusOuter;\r\n        var radiusInner = that.radiusInner;\r\n        var fromAngle = that.fromAngle;\r\n        var toAngle = that.toAngle;\r\n        if (animationEnabled) {\r\n            radiusInner = radiusOuter = 0;\r\n            if (!firstDrawing) {\r\n                fromAngle = toAngle = that.shiftedAngle\r\n            }\r\n        }\r\n        that.graphic = renderer.arc(that.centerX, that.centerY, radiusInner, radiusOuter, toAngle, fromAngle).attr({\r\n            \"stroke-linejoin\": \"round\"\r\n        }).smartAttr(that._getStyle()).data({\r\n            \"chart-data-point\": that\r\n        }).sharp().append(group)\r\n    },\r\n    getTooltipParams: function() {\r\n        var that = this;\r\n        var angleFunctions = _getCosAndSin(that.middleAngle);\r\n        var radiusInner = that.radiusInner;\r\n        var radiusOuter = that.radiusOuter;\r\n        return {\r\n            x: that.centerX + (radiusInner + (radiusOuter - radiusInner) / 2) * angleFunctions.cos,\r\n            y: that.centerY - (radiusInner + (radiusOuter - radiusInner) / 2) * angleFunctions.sin,\r\n            offset: 0\r\n        }\r\n    },\r\n    _translate: function() {\r\n        var that = this;\r\n        var angle = that.shiftedAngle || 0;\r\n        var value = that.value;\r\n        var minValue = that.minValue;\r\n        var translator = that._getValTranslator();\r\n        that.fromAngle = translator.translate(minValue) + angle;\r\n        that.toAngle = translator.translate(value) + angle;\r\n        that.middleAngle = translator.translate((value - minValue) / 2 + minValue) + angle;\r\n        if (!that.isVisible()) {\r\n            that.middleAngle = that.toAngle = that.fromAngle = that.fromAngle || angle\r\n        }\r\n    },\r\n    getMarkerVisibility: function() {\r\n        return true\r\n    },\r\n    _updateMarker: function(animationEnabled, style, _, callback) {\r\n        var that = this;\r\n        if (!animationEnabled) {\r\n            style = _extend({\r\n                x: that.centerX,\r\n                y: that.centerY,\r\n                outerRadius: that.radiusOuter,\r\n                innerRadius: that.radiusInner,\r\n                startAngle: that.toAngle,\r\n                endAngle: that.fromAngle\r\n            }, style)\r\n        }\r\n        that.graphic.smartAttr(style).sharp();\r\n        callback && callback()\r\n    },\r\n    getLegendStyles: function() {\r\n        return this._styles.legendStyles\r\n    },\r\n    isInVisibleArea: function() {\r\n        return true\r\n    },\r\n    hide: function() {\r\n        var that = this;\r\n        if (that._visible) {\r\n            that._visible = false;\r\n            that.hideTooltip();\r\n            that._options.visibilityChanged()\r\n        }\r\n    },\r\n    show: function() {\r\n        var that = this;\r\n        if (!that._visible) {\r\n            that._visible = true;\r\n            that._options.visibilityChanged()\r\n        }\r\n    },\r\n    setInvisibility: function() {\r\n        this._label.draw(false)\r\n    },\r\n    isVisible: function() {\r\n        return this._visible\r\n    },\r\n    _getFormatObject: function(tooltip) {\r\n        var formatObject = symbolPoint._getFormatObject.call(this, tooltip);\r\n        var percent = this.percent;\r\n        formatObject.percent = percent;\r\n        formatObject.percentText = tooltip.formatValue(percent, \"percent\");\r\n        return formatObject\r\n    },\r\n    getColor: function() {\r\n        return this._styles.normal.fill\r\n    },\r\n    coordsIn: function(x, y) {\r\n        var that = this;\r\n        var lx = x - that.centerX;\r\n        var ly = y - that.centerY;\r\n        var r = _sqrt(lx * lx + ly * ly);\r\n        var fromAngle = that.fromAngle % 360;\r\n        var toAngle = that.toAngle % 360;\r\n        var angle;\r\n        if (r < that.radiusInner || r > that.radiusOuter || 0 === r) {\r\n            return false\r\n        }\r\n        angle = _acos(lx / r) * DEG * (ly > 0 ? -1 : 1);\r\n        if (angle < 0) {\r\n            angle += 360\r\n        }\r\n        if (fromAngle === toAngle && _abs(that.toAngle - that.fromAngle) > 1e-4) {\r\n            return true\r\n        } else {\r\n            return fromAngle >= toAngle ? angle <= fromAngle && angle >= toAngle : !(angle >= fromAngle && angle <= toAngle)\r\n        }\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}