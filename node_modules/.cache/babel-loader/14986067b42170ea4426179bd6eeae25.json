{"ast":null,"code":"/**\r\n * DevExtreme (events/contextmenu.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\");\n\nvar eventsEngine = require(\"../events/core/events_engine\");\n\nvar support = require(\"../core/utils/support\");\n\nvar devices = require(\"../core/devices\");\n\nvar Class = require(\"../core/class\");\n\nvar registerEvent = require(\"./core/event_registrator\");\n\nvar eventUtils = require(\"./utils\");\n\nvar holdEvent = require(\"./hold\");\n\nvar CONTEXTMENU_NAMESPACE = \"dxContexMenu\";\nvar CONTEXTMENU_NAMESPACED_EVENT_NAME = eventUtils.addNamespace(\"contextmenu\", CONTEXTMENU_NAMESPACE);\nvar HOLD_NAMESPACED_EVENT_NAME = eventUtils.addNamespace(holdEvent.name, CONTEXTMENU_NAMESPACE);\nvar CONTEXTMENU_EVENT_NAME = \"dxcontextmenu\";\nvar ContextMenu = Class.inherit({\n  setup: function setup(element) {\n    var $element = $(element);\n    eventsEngine.on($element, CONTEXTMENU_NAMESPACED_EVENT_NAME, this._contextMenuHandler.bind(this));\n\n    if (support.touch || devices.isSimulator()) {\n      eventsEngine.on($element, HOLD_NAMESPACED_EVENT_NAME, this._holdHandler.bind(this));\n    }\n  },\n  _holdHandler: function _holdHandler(e) {\n    if (eventUtils.isMouseEvent(e) && !devices.isSimulator()) {\n      return;\n    }\n\n    this._fireContextMenu(e);\n  },\n  _contextMenuHandler: function _contextMenuHandler(e) {\n    this._fireContextMenu(e);\n  },\n  _fireContextMenu: function _fireContextMenu(e) {\n    return eventUtils.fireEvent({\n      type: CONTEXTMENU_EVENT_NAME,\n      originalEvent: e\n    });\n  },\n  teardown: function teardown(element) {\n    eventsEngine.off(element, \".\" + CONTEXTMENU_NAMESPACE);\n  }\n});\nregisterEvent(CONTEXTMENU_EVENT_NAME, new ContextMenu());\nexports.name = CONTEXTMENU_EVENT_NAME;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/events/contextmenu.js"],"names":["$","require","eventsEngine","support","devices","Class","registerEvent","eventUtils","holdEvent","CONTEXTMENU_NAMESPACE","CONTEXTMENU_NAMESPACED_EVENT_NAME","addNamespace","HOLD_NAMESPACED_EVENT_NAME","name","CONTEXTMENU_EVENT_NAME","ContextMenu","inherit","setup","element","$element","on","_contextMenuHandler","bind","touch","isSimulator","_holdHandler","e","isMouseEvent","_fireContextMenu","fireEvent","type","originalEvent","teardown","off","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,kBAAD,CAAf;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,8BAAD,CAA1B;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,uBAAD,CAArB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAII,KAAK,GAAGJ,OAAO,CAAC,eAAD,CAAnB;;AACA,IAAIK,aAAa,GAAGL,OAAO,CAAC,0BAAD,CAA3B;;AACA,IAAIM,UAAU,GAAGN,OAAO,CAAC,SAAD,CAAxB;;AACA,IAAIO,SAAS,GAAGP,OAAO,CAAC,QAAD,CAAvB;;AACA,IAAIQ,qBAAqB,GAAG,cAA5B;AACA,IAAIC,iCAAiC,GAAGH,UAAU,CAACI,YAAX,CAAwB,aAAxB,EAAuCF,qBAAvC,CAAxC;AACA,IAAIG,0BAA0B,GAAGL,UAAU,CAACI,YAAX,CAAwBH,SAAS,CAACK,IAAlC,EAAwCJ,qBAAxC,CAAjC;AACA,IAAIK,sBAAsB,GAAG,eAA7B;AACA,IAAIC,WAAW,GAAGV,KAAK,CAACW,OAAN,CAAc;AAC5BC,EAAAA,KAAK,EAAE,eAASC,OAAT,EAAkB;AACrB,QAAIC,QAAQ,GAAGnB,CAAC,CAACkB,OAAD,CAAhB;AACAhB,IAAAA,YAAY,CAACkB,EAAb,CAAgBD,QAAhB,EAA0BT,iCAA1B,EAA6D,KAAKW,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA7D;;AACA,QAAInB,OAAO,CAACoB,KAAR,IAAiBnB,OAAO,CAACoB,WAAR,EAArB,EAA4C;AACxCtB,MAAAA,YAAY,CAACkB,EAAb,CAAgBD,QAAhB,EAA0BP,0BAA1B,EAAsD,KAAKa,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAAtD;AACH;AACJ,GAP2B;AAQ5BG,EAAAA,YAAY,EAAE,sBAASC,CAAT,EAAY;AACtB,QAAInB,UAAU,CAACoB,YAAX,CAAwBD,CAAxB,KAA8B,CAACtB,OAAO,CAACoB,WAAR,EAAnC,EAA0D;AACtD;AACH;;AACD,SAAKI,gBAAL,CAAsBF,CAAtB;AACH,GAb2B;AAc5BL,EAAAA,mBAAmB,EAAE,6BAASK,CAAT,EAAY;AAC7B,SAAKE,gBAAL,CAAsBF,CAAtB;AACH,GAhB2B;AAiB5BE,EAAAA,gBAAgB,EAAE,0BAASF,CAAT,EAAY;AAC1B,WAAOnB,UAAU,CAACsB,SAAX,CAAqB;AACxBC,MAAAA,IAAI,EAAEhB,sBADkB;AAExBiB,MAAAA,aAAa,EAAEL;AAFS,KAArB,CAAP;AAIH,GAtB2B;AAuB5BM,EAAAA,QAAQ,EAAE,kBAASd,OAAT,EAAkB;AACxBhB,IAAAA,YAAY,CAAC+B,GAAb,CAAiBf,OAAjB,EAA0B,MAAMT,qBAAhC;AACH;AAzB2B,CAAd,CAAlB;AA2BAH,aAAa,CAACQ,sBAAD,EAAyB,IAAIC,WAAJ,EAAzB,CAAb;AACAmB,OAAO,CAACrB,IAAR,GAAeC,sBAAf","sourcesContent":["/**\r\n * DevExtreme (events/contextmenu.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar eventsEngine = require(\"../events/core/events_engine\");\r\nvar support = require(\"../core/utils/support\");\r\nvar devices = require(\"../core/devices\");\r\nvar Class = require(\"../core/class\");\r\nvar registerEvent = require(\"./core/event_registrator\");\r\nvar eventUtils = require(\"./utils\");\r\nvar holdEvent = require(\"./hold\");\r\nvar CONTEXTMENU_NAMESPACE = \"dxContexMenu\";\r\nvar CONTEXTMENU_NAMESPACED_EVENT_NAME = eventUtils.addNamespace(\"contextmenu\", CONTEXTMENU_NAMESPACE);\r\nvar HOLD_NAMESPACED_EVENT_NAME = eventUtils.addNamespace(holdEvent.name, CONTEXTMENU_NAMESPACE);\r\nvar CONTEXTMENU_EVENT_NAME = \"dxcontextmenu\";\r\nvar ContextMenu = Class.inherit({\r\n    setup: function(element) {\r\n        var $element = $(element);\r\n        eventsEngine.on($element, CONTEXTMENU_NAMESPACED_EVENT_NAME, this._contextMenuHandler.bind(this));\r\n        if (support.touch || devices.isSimulator()) {\r\n            eventsEngine.on($element, HOLD_NAMESPACED_EVENT_NAME, this._holdHandler.bind(this))\r\n        }\r\n    },\r\n    _holdHandler: function(e) {\r\n        if (eventUtils.isMouseEvent(e) && !devices.isSimulator()) {\r\n            return\r\n        }\r\n        this._fireContextMenu(e)\r\n    },\r\n    _contextMenuHandler: function(e) {\r\n        this._fireContextMenu(e)\r\n    },\r\n    _fireContextMenu: function(e) {\r\n        return eventUtils.fireEvent({\r\n            type: CONTEXTMENU_EVENT_NAME,\r\n            originalEvent: e\r\n        })\r\n    },\r\n    teardown: function(element) {\r\n        eventsEngine.off(element, \".\" + CONTEXTMENU_NAMESPACE)\r\n    }\r\n});\r\nregisterEvent(CONTEXTMENU_EVENT_NAME, new ContextMenu);\r\nexports.name = CONTEXTMENU_EVENT_NAME;\r\n"]},"metadata":{},"sourceType":"script"}