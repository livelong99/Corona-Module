{"ast":null,"code":"/**\r\n * DevExtreme (events/pointer/touch.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar devices = require(\"../../core/devices\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar each = require(\"../../core/utils/iterator\").each;\n\nvar BaseStrategy = require(\"./base\");\n\nvar eventMap = {\n  dxpointerdown: \"touchstart\",\n  dxpointermove: \"touchmove\",\n  dxpointerup: \"touchend\",\n  dxpointercancel: \"touchcancel\",\n  dxpointerover: \"\",\n  dxpointerout: \"\",\n  dxpointerenter: \"\",\n  dxpointerleave: \"\"\n};\n\nvar normalizeTouchEvent = function normalizeTouchEvent(e) {\n  var pointers = [];\n  each(e.touches, function (_, touch) {\n    pointers.push(extend({\n      pointerId: touch.identifier\n    }, touch));\n  });\n  return {\n    pointers: pointers,\n    pointerId: e.changedTouches[0].identifier\n  };\n};\n\nvar skipTouchWithSameIdentifier = function skipTouchWithSameIdentifier(pointerEvent) {\n  return \"ios\" === devices.real().platform && (\"dxpointerdown\" === pointerEvent || \"dxpointerup\" === pointerEvent);\n};\n\nvar TouchStrategy = BaseStrategy.inherit({\n  ctor: function ctor() {\n    this.callBase.apply(this, arguments);\n    this._pointerId = 0;\n  },\n  _handler: function _handler(e) {\n    if (skipTouchWithSameIdentifier(this._eventName)) {\n      var touch = e.changedTouches[0];\n\n      if (this._pointerId === touch.identifier && 0 !== this._pointerId) {\n        return;\n      }\n\n      this._pointerId = touch.identifier;\n    }\n\n    return this.callBase.apply(this, arguments);\n  },\n  _fireEvent: function _fireEvent(args) {\n    return this.callBase(extend(normalizeTouchEvent(args.originalEvent), args));\n  }\n});\nTouchStrategy.map = eventMap;\nTouchStrategy.normalize = normalizeTouchEvent;\nmodule.exports = TouchStrategy;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/events/pointer/touch.js"],"names":["devices","require","extend","each","BaseStrategy","eventMap","dxpointerdown","dxpointermove","dxpointerup","dxpointercancel","dxpointerover","dxpointerout","dxpointerenter","dxpointerleave","normalizeTouchEvent","e","pointers","touches","_","touch","push","pointerId","identifier","changedTouches","skipTouchWithSameIdentifier","pointerEvent","real","platform","TouchStrategy","inherit","ctor","callBase","apply","arguments","_pointerId","_handler","_eventName","_fireEvent","args","originalEvent","map","normalize","module","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,yBAAD,CAAP,CAAmCC,MAAhD;;AACA,IAAIC,IAAI,GAAGF,OAAO,CAAC,2BAAD,CAAP,CAAqCE,IAAhD;;AACA,IAAIC,YAAY,GAAGH,OAAO,CAAC,QAAD,CAA1B;;AACA,IAAII,QAAQ,GAAG;AACXC,EAAAA,aAAa,EAAE,YADJ;AAEXC,EAAAA,aAAa,EAAE,WAFJ;AAGXC,EAAAA,WAAW,EAAE,UAHF;AAIXC,EAAAA,eAAe,EAAE,aAJN;AAKXC,EAAAA,aAAa,EAAE,EALJ;AAMXC,EAAAA,YAAY,EAAE,EANH;AAOXC,EAAAA,cAAc,EAAE,EAPL;AAQXC,EAAAA,cAAc,EAAE;AARL,CAAf;;AAUA,IAAIC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAASC,CAAT,EAAY;AAClC,MAAIC,QAAQ,GAAG,EAAf;AACAb,EAAAA,IAAI,CAACY,CAAC,CAACE,OAAH,EAAY,UAASC,CAAT,EAAYC,KAAZ,EAAmB;AAC/BH,IAAAA,QAAQ,CAACI,IAAT,CAAclB,MAAM,CAAC;AACjBmB,MAAAA,SAAS,EAAEF,KAAK,CAACG;AADA,KAAD,EAEjBH,KAFiB,CAApB;AAGH,GAJG,CAAJ;AAKA,SAAO;AACHH,IAAAA,QAAQ,EAAEA,QADP;AAEHK,IAAAA,SAAS,EAAEN,CAAC,CAACQ,cAAF,CAAiB,CAAjB,EAAoBD;AAF5B,GAAP;AAIH,CAXD;;AAYA,IAAIE,2BAA2B,GAAG,SAA9BA,2BAA8B,CAASC,YAAT,EAAuB;AACrD,SAAO,UAAUzB,OAAO,CAAC0B,IAAR,GAAeC,QAAzB,KAAsC,oBAAoBF,YAApB,IAAoC,kBAAkBA,YAA5F,CAAP;AACH,CAFD;;AAGA,IAAIG,aAAa,GAAGxB,YAAY,CAACyB,OAAb,CAAqB;AACrCC,EAAAA,IAAI,EAAE,gBAAW;AACb,SAAKC,QAAL,CAAcC,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACH,GAJoC;AAKrCC,EAAAA,QAAQ,EAAE,kBAASpB,CAAT,EAAY;AAClB,QAAIS,2BAA2B,CAAC,KAAKY,UAAN,CAA/B,EAAkD;AAC9C,UAAIjB,KAAK,GAAGJ,CAAC,CAACQ,cAAF,CAAiB,CAAjB,CAAZ;;AACA,UAAI,KAAKW,UAAL,KAAoBf,KAAK,CAACG,UAA1B,IAAwC,MAAM,KAAKY,UAAvD,EAAmE;AAC/D;AACH;;AACD,WAAKA,UAAL,GAAkBf,KAAK,CAACG,UAAxB;AACH;;AACD,WAAO,KAAKS,QAAL,CAAcC,KAAd,CAAoB,IAApB,EAA0BC,SAA1B,CAAP;AACH,GAdoC;AAerCI,EAAAA,UAAU,EAAE,oBAASC,IAAT,EAAe;AACvB,WAAO,KAAKP,QAAL,CAAc7B,MAAM,CAACY,mBAAmB,CAACwB,IAAI,CAACC,aAAN,CAApB,EAA0CD,IAA1C,CAApB,CAAP;AACH;AAjBoC,CAArB,CAApB;AAmBAV,aAAa,CAACY,GAAd,GAAoBnC,QAApB;AACAuB,aAAa,CAACa,SAAd,GAA0B3B,mBAA1B;AACA4B,MAAM,CAACC,OAAP,GAAiBf,aAAjB","sourcesContent":["/**\r\n * DevExtreme (events/pointer/touch.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar devices = require(\"../../core/devices\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar each = require(\"../../core/utils/iterator\").each;\r\nvar BaseStrategy = require(\"./base\");\r\nvar eventMap = {\r\n    dxpointerdown: \"touchstart\",\r\n    dxpointermove: \"touchmove\",\r\n    dxpointerup: \"touchend\",\r\n    dxpointercancel: \"touchcancel\",\r\n    dxpointerover: \"\",\r\n    dxpointerout: \"\",\r\n    dxpointerenter: \"\",\r\n    dxpointerleave: \"\"\r\n};\r\nvar normalizeTouchEvent = function(e) {\r\n    var pointers = [];\r\n    each(e.touches, function(_, touch) {\r\n        pointers.push(extend({\r\n            pointerId: touch.identifier\r\n        }, touch))\r\n    });\r\n    return {\r\n        pointers: pointers,\r\n        pointerId: e.changedTouches[0].identifier\r\n    }\r\n};\r\nvar skipTouchWithSameIdentifier = function(pointerEvent) {\r\n    return \"ios\" === devices.real().platform && (\"dxpointerdown\" === pointerEvent || \"dxpointerup\" === pointerEvent)\r\n};\r\nvar TouchStrategy = BaseStrategy.inherit({\r\n    ctor: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._pointerId = 0\r\n    },\r\n    _handler: function(e) {\r\n        if (skipTouchWithSameIdentifier(this._eventName)) {\r\n            var touch = e.changedTouches[0];\r\n            if (this._pointerId === touch.identifier && 0 !== this._pointerId) {\r\n                return\r\n            }\r\n            this._pointerId = touch.identifier\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _fireEvent: function(args) {\r\n        return this.callBase(extend(normalizeTouchEvent(args.originalEvent), args))\r\n    }\r\n});\r\nTouchStrategy.map = eventMap;\r\nTouchStrategy.normalize = normalizeTouchEvent;\r\nmodule.exports = TouchStrategy;\r\n"]},"metadata":{},"sourceType":"script"}