{"ast":null,"code":"/**\r\n * DevExtreme (viz/axes/constant_line.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createConstantLine;\n\nvar _type = require(\"../../core/utils/type\");\n\nfunction createConstantLine(axis, options) {\n  var labelOptions = options.label || {};\n  var labelPosition = labelOptions.position || \"inside\";\n  var parsedValue;\n  var valueIsParsed = false;\n\n  axis._checkAlignmentConstantLineLabels(labelOptions);\n\n  var storedCoord;\n  return {\n    options: options,\n    labelOptions: labelOptions,\n    labelPosition: labelPosition,\n    label: null,\n    line: null,\n    getParsedValue: function getParsedValue() {\n      if (!valueIsParsed) {\n        parsedValue = axis.validateUnit(options.value, \"E2105\", \"constantLine\");\n        valueIsParsed = true;\n        return parsedValue;\n      }\n\n      return parsedValue;\n    },\n    draw: function draw() {\n      if (!(0, _type.isDefined)(options.value) || axis._translator.getBusinessRange().isEmpty()) {\n        return this;\n      }\n\n      var canvas = axis._getCanvasStartEnd();\n\n      var parsedValue = this.getParsedValue();\n      this.coord = axis._getConstantLinePos(parsedValue, canvas.start, canvas.end);\n      var rootGroup = options.displayBehindSeries ? axis._axisConstantLineGroups.under : axis._axisConstantLineGroups.above;\n      var group = rootGroup[labelPosition];\n\n      if (!group) {\n        var side = axis._isHorizontal ? labelOptions.verticalAlignment : labelOptions.horizontalAlignment;\n        group = rootGroup[side];\n      }\n\n      if (!(0, _type.isDefined)(this.coord)) {\n        return this;\n      }\n\n      var path = axis._createConstantLine(this.coord, {\n        stroke: options.color,\n        \"stroke-width\": options.width,\n        dashStyle: options.dashStyle\n      });\n\n      this.line = path.append(rootGroup.inside);\n      this.label = labelOptions.visible ? axis._drawConstantLineLabels(parsedValue, labelOptions, this.coord, group) : null;\n      this.updatePosition();\n      return this;\n    },\n    removeLabel: function removeLabel() {\n      this.label && this.label.remove();\n    },\n    updatePosition: function updatePosition(animate) {\n      var canvas = axis._getCanvasStartEnd();\n\n      var coord = axis._getConstantLinePos(this.getParsedValue(), canvas.start, canvas.end);\n\n      if (!(0, _type.isDefined)(coord)) {\n        return;\n      }\n\n      this.coord = coord;\n\n      if (animate && storedCoord) {\n        this.label && this.label.attr(axis._getConstantLineLabelsCoords(storedCoord, this.labelOptions));\n        this.line && this.line.attr(axis._getConstantLineGraphicAttributes(storedCoord));\n        this.label && this.label.animate(axis._getConstantLineLabelsCoords(this.coord, this.labelOptions));\n        this.line && this.line.animate(axis._getConstantLineGraphicAttributes(this.coord));\n      } else {\n        this.label && this.label.attr(axis._getConstantLineLabelsCoords(this.coord, this.labelOptions));\n        this.line && this.line.attr(axis._getConstantLineGraphicAttributes(this.coord));\n\n        axis._rotateConstantLine(this.line, this.coord);\n      }\n    },\n    saveCoords: function saveCoords() {\n      storedCoord = this.coord;\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/axes/constant_line.js"],"names":["Object","defineProperty","exports","value","default","createConstantLine","_type","require","axis","options","labelOptions","label","labelPosition","position","parsedValue","valueIsParsed","_checkAlignmentConstantLineLabels","storedCoord","line","getParsedValue","validateUnit","draw","isDefined","_translator","getBusinessRange","isEmpty","canvas","_getCanvasStartEnd","coord","_getConstantLinePos","start","end","rootGroup","displayBehindSeries","_axisConstantLineGroups","under","above","group","side","_isHorizontal","verticalAlignment","horizontalAlignment","path","_createConstantLine","stroke","color","width","dashStyle","append","inside","visible","_drawConstantLineLabels","updatePosition","removeLabel","remove","animate","attr","_getConstantLineLabelsCoords","_getConstantLineGraphicAttributes","_rotateConstantLine","saveCoords"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/axes/constant_line.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\nexports.default = createConstantLine;\r\nvar _type = require(\"../../core/utils/type\");\r\n\r\nfunction createConstantLine(axis, options) {\r\n    var labelOptions = options.label || {};\r\n    var labelPosition = labelOptions.position || \"inside\";\r\n    var parsedValue;\r\n    var valueIsParsed = false;\r\n    axis._checkAlignmentConstantLineLabels(labelOptions);\r\n    var storedCoord;\r\n    return {\r\n        options: options,\r\n        labelOptions: labelOptions,\r\n        labelPosition: labelPosition,\r\n        label: null,\r\n        line: null,\r\n        getParsedValue: function() {\r\n            if (!valueIsParsed) {\r\n                parsedValue = axis.validateUnit(options.value, \"E2105\", \"constantLine\");\r\n                valueIsParsed = true;\r\n                return parsedValue\r\n            }\r\n            return parsedValue\r\n        },\r\n        draw: function() {\r\n            if (!(0, _type.isDefined)(options.value) || axis._translator.getBusinessRange().isEmpty()) {\r\n                return this\r\n            }\r\n            var canvas = axis._getCanvasStartEnd();\r\n            var parsedValue = this.getParsedValue();\r\n            this.coord = axis._getConstantLinePos(parsedValue, canvas.start, canvas.end);\r\n            var rootGroup = options.displayBehindSeries ? axis._axisConstantLineGroups.under : axis._axisConstantLineGroups.above;\r\n            var group = rootGroup[labelPosition];\r\n            if (!group) {\r\n                var side = axis._isHorizontal ? labelOptions.verticalAlignment : labelOptions.horizontalAlignment;\r\n                group = rootGroup[side]\r\n            }\r\n            if (!(0, _type.isDefined)(this.coord)) {\r\n                return this\r\n            }\r\n            var path = axis._createConstantLine(this.coord, {\r\n                stroke: options.color,\r\n                \"stroke-width\": options.width,\r\n                dashStyle: options.dashStyle\r\n            });\r\n            this.line = path.append(rootGroup.inside);\r\n            this.label = labelOptions.visible ? axis._drawConstantLineLabels(parsedValue, labelOptions, this.coord, group) : null;\r\n            this.updatePosition();\r\n            return this\r\n        },\r\n        removeLabel: function() {\r\n            this.label && this.label.remove()\r\n        },\r\n        updatePosition: function(animate) {\r\n            var canvas = axis._getCanvasStartEnd();\r\n            var coord = axis._getConstantLinePos(this.getParsedValue(), canvas.start, canvas.end);\r\n            if (!(0, _type.isDefined)(coord)) {\r\n                return\r\n            }\r\n            this.coord = coord;\r\n            if (animate && storedCoord) {\r\n                this.label && this.label.attr(axis._getConstantLineLabelsCoords(storedCoord, this.labelOptions));\r\n                this.line && this.line.attr(axis._getConstantLineGraphicAttributes(storedCoord));\r\n                this.label && this.label.animate(axis._getConstantLineLabelsCoords(this.coord, this.labelOptions));\r\n                this.line && this.line.animate(axis._getConstantLineGraphicAttributes(this.coord))\r\n            } else {\r\n                this.label && this.label.attr(axis._getConstantLineLabelsCoords(this.coord, this.labelOptions));\r\n                this.line && this.line.attr(axis._getConstantLineGraphicAttributes(this.coord));\r\n                axis._rotateConstantLine(this.line, this.coord)\r\n            }\r\n        },\r\n        saveCoords: function() {\r\n            storedCoord = this.coord\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}