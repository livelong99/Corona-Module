{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default function () {\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        history = _React$useState2[0],\n        setHist = _React$useState2[1];\n\n  const SetH = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var rec;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              \"method\": \"get\",\n              \"url\": \"https://corona.lmao.ninja/v2/historical\"\n            }).then(response => {\n              const Timeline = response.data;\n              return Timeline;\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 2:\n            rec = _context.sent;\n            setHist(rec);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function SetH() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  SetH();\n  return history;\n}","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/src/Reducer/History.js"],"names":["React","axios","useState","history","setHist","SetH","then","response","Timeline","data","catch","error","console","log","rec"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,YAAY;AAAA,0BACID,KAAK,CAACE,QAAN,CAAe,EAAf,CADJ;AAAA;AAAA,QAChBC,OADgB;AAAA,QACPC,OADO;;AAGvB,QAAMC,IAAI;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSJ,KAAK,CAAC;AACxB,wBAAU,KADc;AAExB,qBAAO;AAFiB,aAAD,CAAL,CAGjBK,IAHiB,CAGXC,QAAD,IAAY;AACd,oBAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAA1B;AACA,qBAAOD,QAAP;AACH,aANiB,EAOjBE,KAPiB,CAOVC,KAAD,IAAS;AACZC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACP,aATqB,CADT;;AAAA;AACHG,YAAAA,GADG;AAWbV,YAAAA,OAAO,CAACU,GAAD,CAAP;;AAXa;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJT,IAAI;AAAA;AAAA;AAAA,KAAV;;AAaAA,EAAAA,IAAI;AACJ,SAAOF,OAAP;AACH","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function () {\r\n    const [history, setHist] = React.useState([]);\r\n\r\n    const SetH = async () => {\r\n        const rec = await axios({\r\n        \"method\": \"get\",\r\n        \"url\": \"https://corona.lmao.ninja/v2/historical\"})\r\n        .then((response)=>{\r\n            const Timeline = response.data;\r\n            return Timeline;\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n    });\r\n    setHist(rec);\r\n    }\r\n    SetH();\r\n    return history;\r\n}"]},"metadata":{},"sourceType":"module"}