{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\src\\\\Components\\\\Graph.jsx\";\nimport React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Chart, ArgumentAxis, ValueAxis, AreaSeries, SplineSeries } from \"@devexpress/dx-react-chart-material-ui\";\n\nfunction Graph(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        history = _useState2[0],\n        setHist = _useState2[1];\n\n  const SetH = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var rec;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              \"method\": \"get\",\n              \"url\": \"https://corona.lmao.ninja/v2/historical\"\n            }).then(response => {\n              const Timeline = response.data;\n              return Timeline;\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 2:\n            rec = _context.sent;\n            setHist(rec);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function SetH() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  SetH();\n  const info = history.filter(rec => rec.country === props.name);\n\n  function getData(record) {\n    const Cases = record.timeline.cases;\n    const Deaths = record.timeline.deaths;\n    const Recovered = record.timeline.recovered;\n    const data = [];\n    const dates = Object.keys(Cases);\n    var i = 0;\n    var date;\n\n    for (var _i = 0, _dates = dates; _i < _dates.length; _i++) {\n      date = _dates[_i];\n\n      if (Cases[date] > 0) {\n        //if(i%10==0)\n        data.push({\n          argument: date,\n          cases: Cases[date],\n          deaths: Deaths[date],\n          recovered: Recovered[date]\n        }); //else\n        //data.push({argument:\"\" , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\n      }\n\n      i++;\n    }\n\n    return /*#__PURE__*/React.createElement(Chart, {\n      data: data,\n      width: 550,\n      height: 350,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ArgumentAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ValueAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AreaSeries, {\n      name: \"Total Cases\",\n      valueField: \"cases\",\n      argumentField: \"argument\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AreaSeries, {\n      name: \"Total Recoveries\",\n      valueField: \"recovered\",\n      argumentField: \"argument\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AreaSeries, {\n      name: \"Total Deaths\",\n      valueField: \"deaths\",\n      argumentField: \"argument\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, info.map(getData));\n}\n\nexport default Graph;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/src/Components/Graph.jsx"],"names":["React","useState","Paper","axios","Chart","ArgumentAxis","ValueAxis","AreaSeries","SplineSeries","Graph","props","history","setHist","SetH","then","response","Timeline","data","catch","error","console","log","rec","info","filter","country","name","getData","record","Cases","timeline","cases","Deaths","deaths","Recovered","recovered","dates","Object","keys","i","date","push","argument","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  AreaSeries,\r\n  SplineSeries\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\n\r\nfunction Graph(props) {\r\n\r\n  const [history, setHist] = useState([]);\r\n\r\n  const SetH = async () => {\r\n    const rec = await axios({\r\n      \"method\": \"get\",\r\n      \"url\": \"https://corona.lmao.ninja/v2/historical\"})\r\n    .then((response)=>{\r\n        const Timeline = response.data;\r\n        return Timeline;\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n  });\r\n  setHist(rec);\r\n  }\r\n  SetH();\r\n\r\n  const info = history.filter((rec)=>(rec.country===props.name));\r\n\r\n  function getData(record) {\r\n    const Cases = record.timeline.cases;\r\n    const Deaths = record.timeline.deaths;\r\n    const Recovered = record.timeline.recovered;\r\n    const data = []\r\n    const dates = Object.keys(Cases);\r\n    var i =0;\r\n    var date;\r\n    for(date of dates) {\r\n       if(Cases[date]>0){\r\n        //if(i%10==0)\r\n          data.push({argument:date , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n        //else\r\n          //data.push({argument:\"\" , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n       }\r\n       i++;\r\n    }\r\n    return (\r\n      <Chart data={data} width={550} height={350}>\r\n        <ArgumentAxis/>\r\n        <ValueAxis />\r\n\r\n        <AreaSeries\r\n            name=\"Total Cases\"\r\n            valueField=\"cases\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <AreaSeries\r\n            name=\"Total Recoveries\"\r\n            valueField=\"recovered\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <AreaSeries\r\n            name=\"Total Deaths\"\r\n            valueField=\"deaths\"\r\n            argumentField=\"argument\"\r\n          />\r\n      </Chart>\r\n    )\r\n    \r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n\r\n      {info.map(getData)}\r\n      \r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Graph;"]},"metadata":{},"sourceType":"module"}