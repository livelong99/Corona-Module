{"ast":null,"code":"/**\r\n * DevExtreme (ui/hierarchical_collection/ui.data_converter.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar Class = require(\"../../core/class\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar errors = require(\"../../ui/widget/ui.errors\");\n\nvar each = require(\"../../core/utils/iterator\").each;\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar DataConverter = Class.inherit({\n  ctor: function ctor() {\n    this._dataStructure = [];\n    this._itemsCount = 0;\n    this._visibleItemsCount = 0;\n  },\n  _indexByKey: {},\n  _convertItemsToNodes: function _convertItemsToNodes(items, parentKey) {\n    var that = this;\n    each(items, function (_, item) {\n      var parentId = typeUtils.isDefined(parentKey) ? parentKey : that._getParentId(item);\n\n      var node = that._convertItemToNode(item, parentId);\n\n      that._dataStructure.push(node);\n\n      that._checkForDuplicateId(node.internalFields.key);\n\n      that._indexByKey[node.internalFields.key] = that._dataStructure.length - 1;\n\n      if (that._itemHasChildren(item)) {\n        that._convertItemsToNodes(that._dataAccessors.getters.items(item), node.internalFields.key);\n      }\n    });\n  },\n  _checkForDuplicateId: function _checkForDuplicateId(key) {\n    if (typeUtils.isDefined(this._indexByKey[key])) {\n      throw errors.Error(\"E1040\", key);\n    }\n  },\n  _getParentId: function _getParentId(item) {\n    return \"plain\" === this._dataType ? this._dataAccessors.getters.parentKey(item) : void 0;\n  },\n  _itemHasChildren: function _itemHasChildren(item) {\n    if (\"plain\" === this._dataType) {\n      return;\n    }\n\n    var items = this._dataAccessors.getters.items(item);\n\n    return items && items.length;\n  },\n  _getUniqueKey: function _getUniqueKey(item) {\n    var keyGetter = this._dataAccessors.getters.key;\n    var itemKey = keyGetter(item);\n    var isCorrectKey = keyGetter && (itemKey || 0 === itemKey) && typeUtils.isPrimitive(itemKey);\n    return isCorrectKey ? itemKey : this.getItemsCount();\n  },\n  _convertItemToNode: function _convertItemToNode(item, parentKey) {\n    this._itemsCount++;\n    false !== item.visible && this._visibleItemsCount++;\n    var that = this;\n    var node = {\n      internalFields: {\n        disabled: that._dataAccessors.getters.disabled(item, {\n          defaultValue: false\n        }),\n        expanded: that._dataAccessors.getters.expanded(item, {\n          defaultValue: false\n        }),\n        selected: that._dataAccessors.getters.selected(item, {\n          defaultValue: false\n        }),\n        key: that._getUniqueKey(item),\n        parentKey: typeUtils.isDefined(parentKey) ? parentKey : that._rootValue,\n        item: that._makeObjectFromPrimitive(item),\n        childrenKeys: []\n      }\n    };\n    extend(node, item);\n    delete node.items;\n    return node;\n  },\n  setChildrenKeys: function setChildrenKeys() {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      if (node.internalFields.parentKey === that._rootValue) {\n        return;\n      }\n\n      var parent = that.getParentNode(node);\n      parent && parent.internalFields.childrenKeys.push(node.internalFields.key);\n    });\n  },\n  _makeObjectFromPrimitive: function _makeObjectFromPrimitive(item) {\n    if (typeUtils.isPrimitive(item)) {\n      var key = item;\n      item = {};\n\n      this._dataAccessors.setters.key(item, key);\n    }\n\n    return item;\n  },\n  _convertToPublicNode: function _convertToPublicNode(node, parent) {\n    if (!node) {\n      return null;\n    }\n\n    var publicNode = {\n      text: this._dataAccessors.getters.display(node),\n      key: node.internalFields.key,\n      selected: node.internalFields.selected,\n      expanded: node.internalFields.expanded,\n      disabled: node.internalFields.disabled,\n      parent: parent || null,\n      itemData: node.internalFields.item,\n      children: [],\n      items: []\n    };\n\n    if (publicNode.parent) {\n      publicNode.parent.children.push(publicNode);\n      publicNode.parent.items.push(publicNode);\n    }\n\n    return publicNode;\n  },\n  convertToPublicNodes: function convertToPublicNodes(data, parent) {\n    if (!data.length) {\n      return [];\n    }\n\n    var that = this;\n    var publicNodes = [];\n    each(data, function (_, node) {\n      node = typeUtils.isPrimitive(node) ? that._getByKey(node) : node;\n\n      var publicNode = that._convertToPublicNode(node, parent);\n\n      publicNode.children = that.convertToPublicNodes(node.internalFields.childrenKeys, publicNode);\n      publicNodes.push(publicNode);\n      node.internalFields.publicNode = publicNode;\n    });\n    return publicNodes;\n  },\n  setDataAccessors: function setDataAccessors(accessors) {\n    this._dataAccessors = accessors;\n  },\n  _getByKey: function _getByKey(key) {\n    return this._dataStructure[this.getIndexByKey(key)] || null;\n  },\n  getParentNode: function getParentNode(node) {\n    return this._getByKey(node.internalFields.parentKey);\n  },\n  getByKey: function getByKey(data, key) {\n    var result = null;\n    var that = this;\n\n    var getByKey = function getByKey(data, key) {\n      each(data, function (_, element) {\n        var currentElementKey = element.internalFields && element.internalFields.key || that._dataAccessors.getters.key(element);\n\n        if (currentElementKey.toString() === key.toString()) {\n          result = element;\n          return false;\n        }\n      });\n      return result;\n    };\n\n    return getByKey(data, key);\n  },\n  getItemsCount: function getItemsCount() {\n    return this._itemsCount;\n  },\n  getVisibleItemsCount: function getVisibleItemsCount() {\n    return this._visibleItemsCount;\n  },\n  updateIndexByKey: function updateIndexByKey() {\n    var that = this;\n    this._indexByKey = {};\n    each(this._dataStructure, function (index, node) {\n      that._checkForDuplicateId(node.internalFields.key);\n\n      that._indexByKey[node.internalFields.key] = index;\n    });\n  },\n  updateChildrenKeys: function updateChildrenKeys() {\n    this._indexByKey = {};\n    this.removeChildrenKeys();\n    this.updateIndexByKey();\n    this.setChildrenKeys();\n  },\n  removeChildrenKeys: function removeChildrenKeys() {\n    this._indexByKey = {};\n    each(this._dataStructure, function (index, node) {\n      node.internalFields.childrenKeys = [];\n    });\n  },\n  getIndexByKey: function getIndexByKey(key) {\n    return this._indexByKey[key];\n  },\n  createPlainStructure: function createPlainStructure(items, rootValue, dataType) {\n    this._itemsCount = 0;\n    this._visibleItemsCount = 0;\n    this._rootValue = rootValue;\n    this._dataType = dataType;\n    this._indexByKey = {};\n\n    this._convertItemsToNodes(items);\n\n    this.setChildrenKeys();\n    return this._dataStructure;\n  }\n});\nmodule.exports = DataConverter;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/hierarchical_collection/ui.data_converter.js"],"names":["Class","require","extend","errors","each","typeUtils","DataConverter","inherit","ctor","_dataStructure","_itemsCount","_visibleItemsCount","_indexByKey","_convertItemsToNodes","items","parentKey","that","_","item","parentId","isDefined","_getParentId","node","_convertItemToNode","push","_checkForDuplicateId","internalFields","key","length","_itemHasChildren","_dataAccessors","getters","Error","_dataType","_getUniqueKey","keyGetter","itemKey","isCorrectKey","isPrimitive","getItemsCount","visible","disabled","defaultValue","expanded","selected","_rootValue","_makeObjectFromPrimitive","childrenKeys","setChildrenKeys","parent","getParentNode","setters","_convertToPublicNode","publicNode","text","display","itemData","children","convertToPublicNodes","data","publicNodes","_getByKey","setDataAccessors","accessors","getIndexByKey","getByKey","result","element","currentElementKey","toString","getVisibleItemsCount","updateIndexByKey","index","updateChildrenKeys","removeChildrenKeys","createPlainStructure","rootValue","dataType","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/hierarchical_collection/ui.data_converter.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar Class = require(\"../../core/class\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar errors = require(\"../../ui/widget/ui.errors\");\r\nvar each = require(\"../../core/utils/iterator\").each;\r\nvar typeUtils = require(\"../../core/utils/type\");\r\nvar DataConverter = Class.inherit({\r\n    ctor: function() {\r\n        this._dataStructure = [];\r\n        this._itemsCount = 0;\r\n        this._visibleItemsCount = 0\r\n    },\r\n    _indexByKey: {},\r\n    _convertItemsToNodes: function(items, parentKey) {\r\n        var that = this;\r\n        each(items, function(_, item) {\r\n            var parentId = typeUtils.isDefined(parentKey) ? parentKey : that._getParentId(item);\r\n            var node = that._convertItemToNode(item, parentId);\r\n            that._dataStructure.push(node);\r\n            that._checkForDuplicateId(node.internalFields.key);\r\n            that._indexByKey[node.internalFields.key] = that._dataStructure.length - 1;\r\n            if (that._itemHasChildren(item)) {\r\n                that._convertItemsToNodes(that._dataAccessors.getters.items(item), node.internalFields.key)\r\n            }\r\n        })\r\n    },\r\n    _checkForDuplicateId: function(key) {\r\n        if (typeUtils.isDefined(this._indexByKey[key])) {\r\n            throw errors.Error(\"E1040\", key)\r\n        }\r\n    },\r\n    _getParentId: function(item) {\r\n        return \"plain\" === this._dataType ? this._dataAccessors.getters.parentKey(item) : void 0\r\n    },\r\n    _itemHasChildren: function(item) {\r\n        if (\"plain\" === this._dataType) {\r\n            return\r\n        }\r\n        var items = this._dataAccessors.getters.items(item);\r\n        return items && items.length\r\n    },\r\n    _getUniqueKey: function(item) {\r\n        var keyGetter = this._dataAccessors.getters.key;\r\n        var itemKey = keyGetter(item);\r\n        var isCorrectKey = keyGetter && (itemKey || 0 === itemKey) && typeUtils.isPrimitive(itemKey);\r\n        return isCorrectKey ? itemKey : this.getItemsCount()\r\n    },\r\n    _convertItemToNode: function(item, parentKey) {\r\n        this._itemsCount++;\r\n        false !== item.visible && this._visibleItemsCount++;\r\n        var that = this;\r\n        var node = {\r\n            internalFields: {\r\n                disabled: that._dataAccessors.getters.disabled(item, {\r\n                    defaultValue: false\r\n                }),\r\n                expanded: that._dataAccessors.getters.expanded(item, {\r\n                    defaultValue: false\r\n                }),\r\n                selected: that._dataAccessors.getters.selected(item, {\r\n                    defaultValue: false\r\n                }),\r\n                key: that._getUniqueKey(item),\r\n                parentKey: typeUtils.isDefined(parentKey) ? parentKey : that._rootValue,\r\n                item: that._makeObjectFromPrimitive(item),\r\n                childrenKeys: []\r\n            }\r\n        };\r\n        extend(node, item);\r\n        delete node.items;\r\n        return node\r\n    },\r\n    setChildrenKeys: function() {\r\n        var that = this;\r\n        each(this._dataStructure, function(_, node) {\r\n            if (node.internalFields.parentKey === that._rootValue) {\r\n                return\r\n            }\r\n            var parent = that.getParentNode(node);\r\n            parent && parent.internalFields.childrenKeys.push(node.internalFields.key)\r\n        })\r\n    },\r\n    _makeObjectFromPrimitive: function(item) {\r\n        if (typeUtils.isPrimitive(item)) {\r\n            var key = item;\r\n            item = {};\r\n            this._dataAccessors.setters.key(item, key)\r\n        }\r\n        return item\r\n    },\r\n    _convertToPublicNode: function(node, parent) {\r\n        if (!node) {\r\n            return null\r\n        }\r\n        var publicNode = {\r\n            text: this._dataAccessors.getters.display(node),\r\n            key: node.internalFields.key,\r\n            selected: node.internalFields.selected,\r\n            expanded: node.internalFields.expanded,\r\n            disabled: node.internalFields.disabled,\r\n            parent: parent || null,\r\n            itemData: node.internalFields.item,\r\n            children: [],\r\n            items: []\r\n        };\r\n        if (publicNode.parent) {\r\n            publicNode.parent.children.push(publicNode);\r\n            publicNode.parent.items.push(publicNode)\r\n        }\r\n        return publicNode\r\n    },\r\n    convertToPublicNodes: function(data, parent) {\r\n        if (!data.length) {\r\n            return []\r\n        }\r\n        var that = this;\r\n        var publicNodes = [];\r\n        each(data, function(_, node) {\r\n            node = typeUtils.isPrimitive(node) ? that._getByKey(node) : node;\r\n            var publicNode = that._convertToPublicNode(node, parent);\r\n            publicNode.children = that.convertToPublicNodes(node.internalFields.childrenKeys, publicNode);\r\n            publicNodes.push(publicNode);\r\n            node.internalFields.publicNode = publicNode\r\n        });\r\n        return publicNodes\r\n    },\r\n    setDataAccessors: function(accessors) {\r\n        this._dataAccessors = accessors\r\n    },\r\n    _getByKey: function(key) {\r\n        return this._dataStructure[this.getIndexByKey(key)] || null\r\n    },\r\n    getParentNode: function(node) {\r\n        return this._getByKey(node.internalFields.parentKey)\r\n    },\r\n    getByKey: function getByKey(data, key) {\r\n        var result = null;\r\n        var that = this;\r\n        var getByKey = function(data, key) {\r\n            each(data, function(_, element) {\r\n                var currentElementKey = element.internalFields && element.internalFields.key || that._dataAccessors.getters.key(element);\r\n                if (currentElementKey.toString() === key.toString()) {\r\n                    result = element;\r\n                    return false\r\n                }\r\n            });\r\n            return result\r\n        };\r\n        return getByKey(data, key)\r\n    },\r\n    getItemsCount: function() {\r\n        return this._itemsCount\r\n    },\r\n    getVisibleItemsCount: function() {\r\n        return this._visibleItemsCount\r\n    },\r\n    updateIndexByKey: function() {\r\n        var that = this;\r\n        this._indexByKey = {};\r\n        each(this._dataStructure, function(index, node) {\r\n            that._checkForDuplicateId(node.internalFields.key);\r\n            that._indexByKey[node.internalFields.key] = index\r\n        })\r\n    },\r\n    updateChildrenKeys: function() {\r\n        this._indexByKey = {};\r\n        this.removeChildrenKeys();\r\n        this.updateIndexByKey();\r\n        this.setChildrenKeys()\r\n    },\r\n    removeChildrenKeys: function() {\r\n        this._indexByKey = {};\r\n        each(this._dataStructure, function(index, node) {\r\n            node.internalFields.childrenKeys = []\r\n        })\r\n    },\r\n    getIndexByKey: function(key) {\r\n        return this._indexByKey[key]\r\n    },\r\n    createPlainStructure: function(items, rootValue, dataType) {\r\n        this._itemsCount = 0;\r\n        this._visibleItemsCount = 0;\r\n        this._rootValue = rootValue;\r\n        this._dataType = dataType;\r\n        this._indexByKey = {};\r\n        this._convertItemsToNodes(items);\r\n        this.setChildrenKeys();\r\n        return this._dataStructure\r\n    }\r\n});\r\nmodule.exports = DataConverter;\r\n"]},"metadata":{},"sourceType":"script"}