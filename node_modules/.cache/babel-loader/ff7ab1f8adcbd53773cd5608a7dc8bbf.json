{"ast":null,"code":"/**\r\n * DevExtreme (ui/date_box/ui.time_view.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _editor = require(\"../editor/editor\");\n\nvar _editor2 = _interopRequireDefault(_editor);\n\nvar _number_box = require(\"../number_box\");\n\nvar _number_box2 = _interopRequireDefault(_number_box);\n\nvar _select_box = require(\"../select_box\");\n\nvar _select_box2 = _interopRequireDefault(_select_box);\n\nvar _box = require(\"../box\");\n\nvar _box2 = _interopRequireDefault(_box);\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _component_registrator = require(\"../../core/component_registrator\");\n\nvar _component_registrator2 = _interopRequireDefault(_component_registrator);\n\nvar _date = require(\"../../localization/date\");\n\nvar _ui = require(\"./ui.date_utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar TIMEVIEW_CLASS = \"dx-timeview\";\nvar TIMEVIEW_CLOCK_CLASS = \"dx-timeview-clock\";\nvar TIMEVIEW_FIELD_CLASS = \"dx-timeview-field\";\nvar TIMEVIEW_HOURARROW_CLASS = \"dx-timeview-hourarrow\";\nvar TIMEVIEW_TIME_SEPARATOR_CLASS = \"dx-timeview-time-separator\";\nvar TIMEVIEW_FORMAT12_CLASS = \"dx-timeview-format12\";\nvar TIMEVIEW_FORMAT12_AM = -1;\nvar TIMEVIEW_FORMAT12_PM = 1;\nvar TIMEVIEW_MINUTEARROW_CLASS = \"dx-timeview-minutearrow\";\n\nvar rotateArrow = function rotateArrow($arrow, angle, offset) {\n  cssRotate($arrow, angle, offset);\n};\n\nvar cssRotate = function cssRotate($arrow, angle, offset) {\n  $arrow.css(\"transform\", \"rotate(\" + angle + \"deg) translate(0,\" + offset + \"px)\");\n};\n\nvar TimeView = _editor2.default.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return (0, _extend.extend)(this.callBase(), {\n      value: new Date(Date.now()),\n      use24HourFormat: true,\n      _showClock: true,\n      _arrowOffset: 0,\n      stylingMode: void 0\n    });\n  },\n  _defaultOptionsRules: function _defaultOptionsRules() {\n    return this.callBase().concat([{\n      device: {\n        platform: \"android\"\n      },\n      options: {\n        _arrowOffset: 15\n      }\n    }, {\n      device: {\n        platform: \"generic\"\n      },\n      options: {\n        _arrowOffset: 5\n      }\n    }]);\n  },\n  _getValue: function _getValue() {\n    return this.option(\"value\") || new Date();\n  },\n  _init: function _init() {\n    this.callBase();\n    this.$element().addClass(TIMEVIEW_CLASS);\n  },\n  _render: function _render() {\n    this.callBase();\n\n    this._renderBox();\n\n    this._updateTime();\n  },\n  _renderBox: function _renderBox() {\n    var $box = (0, _renderer2.default)(\"<div>\").appendTo(this.$element());\n    var items = [];\n\n    if (this.option(\"_showClock\")) {\n      items.push({\n        ratio: 1,\n        shrink: 0,\n        baseSize: \"auto\",\n        template: this._renderClock.bind(this)\n      });\n    }\n\n    items.push({\n      ratio: 0,\n      shrink: 0,\n      baseSize: 50,\n      template: this._renderField.bind(this)\n    });\n\n    this._createComponent($box, _box2.default, {\n      height: \"100%\",\n      width: \"100%\",\n      direction: \"col\",\n      items: items\n    });\n  },\n  _renderClock: function _renderClock(_, __, container) {\n    this._$hourArrow = (0, _renderer2.default)(\"<div>\").addClass(TIMEVIEW_HOURARROW_CLASS);\n    this._$minuteArrow = (0, _renderer2.default)(\"<div>\").addClass(TIMEVIEW_MINUTEARROW_CLASS);\n    var $container = (0, _renderer2.default)(container);\n    $container.addClass(TIMEVIEW_CLOCK_CLASS).append(this._$hourArrow).append(this._$minuteArrow);\n    this.setAria(\"role\", \"presentation\", $container);\n  },\n  _updateClock: function _updateClock() {\n    var time = this._getValue();\n\n    var hourArrowAngle = time.getHours() / 12 * 360 + time.getMinutes() / 60 * 30;\n    var minuteArrowAngle = time.getMinutes() / 60 * 360;\n    rotateArrow(this._$hourArrow, hourArrowAngle, this.option(\"_arrowOffset\"));\n    rotateArrow(this._$minuteArrow, minuteArrowAngle, this.option(\"_arrowOffset\"));\n  },\n  _getBoxItems: function _getBoxItems(is12HourFormat) {\n    var _this = this;\n\n    var items = [{\n      ratio: 0,\n      shrink: 0,\n      baseSize: \"auto\",\n      template: function template() {\n        return _this._hourBox.$element();\n      }\n    }, {\n      ratio: 0,\n      shrink: 0,\n      baseSize: \"auto\",\n      template: (0, _renderer2.default)(\"<div>\").addClass(TIMEVIEW_TIME_SEPARATOR_CLASS).text((0, _date.getTimeSeparator)())\n    }, {\n      ratio: 0,\n      shrink: 0,\n      baseSize: \"auto\",\n      template: function template() {\n        return _this._minuteBox.$element();\n      }\n    }];\n\n    if (is12HourFormat) {\n      items.push({\n        ratio: 0,\n        shrink: 0,\n        baseSize: \"auto\",\n        template: function template() {\n          return _this._format12.$element();\n        }\n      });\n    }\n\n    return items;\n  },\n  _renderField: function _renderField() {\n    var is12HourFormat = !this.option(\"use24HourFormat\");\n\n    this._createHourBox();\n\n    this._createMinuteBox();\n\n    if (is12HourFormat) {\n      this._createFormat12Box();\n    }\n\n    return this._createComponent((0, _renderer2.default)(\"<div>\").addClass(TIMEVIEW_FIELD_CLASS), _box2.default, {\n      direction: \"row\",\n      align: \"center\",\n      crossAlign: \"center\",\n      items: this._getBoxItems(is12HourFormat)\n    }).$element();\n  },\n  _attachKeyboardProcessorToEditor: function _attachKeyboardProcessorToEditor(editor) {\n    var keyboardProcessor = editor._keyboardProcessor;\n\n    if (keyboardProcessor) {\n      keyboardProcessor.attachChildProcessor().reinitialize(this._keyboardHandler, this);\n    }\n  },\n  _createHourBox: function _createHourBox() {\n    var editor = this._hourBox = this._createComponent((0, _renderer2.default)(\"<div>\"), _number_box2.default, (0, _extend.extend)({\n      min: -1,\n      max: 24,\n      value: this._getValue().getHours(),\n      onValueChanged: this._onHourBoxValueChanged.bind(this)\n    }, this._getNumberBoxConfig()));\n\n    editor.setAria(\"label\", \"hours\");\n\n    this._attachKeyboardProcessorToEditor(editor);\n  },\n  _isPM: function _isPM() {\n    return !this.option(\"use24HourFormat\") && 1 === this._format12.option(\"value\");\n  },\n  _onHourBoxValueChanged: function _onHourBoxValueChanged(args) {\n    var currentValue = this._getValue();\n\n    var newValue = new Date(currentValue);\n\n    var newHours = this._convertMaxHourToMin(args.value);\n\n    if (this._isPM()) {\n      newHours += 12;\n    }\n\n    newValue.setHours(newHours);\n    (0, _ui.normalizeTime)(newValue);\n    this.option(\"value\", newValue);\n  },\n  _convertMaxHourToMin: function _convertMaxHourToMin(hours) {\n    var maxHoursValue = this.option(\"use24HourFormat\") ? 24 : 12;\n    return (maxHoursValue + hours) % maxHoursValue;\n  },\n  _createMinuteBox: function _createMinuteBox() {\n    var _this2 = this;\n\n    var editor = this._minuteBox = this._createComponent((0, _renderer2.default)(\"<div>\"), _number_box2.default, (0, _extend.extend)({\n      min: -1,\n      max: 60,\n      value: this._getValue().getMinutes(),\n      onValueChanged: function onValueChanged(_ref) {\n        var value = _ref.value,\n            component = _ref.component;\n        var newMinutes = (60 + value) % 60;\n        component.option(\"value\", newMinutes);\n        var time = new Date(_this2._getValue());\n        time.setMinutes(newMinutes);\n        (0, _ui.normalizeTime)(time);\n\n        _this2.option(\"value\", time);\n      }\n    }, this._getNumberBoxConfig()));\n\n    editor.setAria(\"label\", \"minutes\");\n\n    this._attachKeyboardProcessorToEditor(editor);\n  },\n  _createFormat12Box: function _createFormat12Box() {\n    var _this3 = this;\n\n    var periodNames = (0, _date.getPeriodNames)();\n\n    var editor = this._format12 = this._createComponent((0, _renderer2.default)(\"<div>\").addClass(TIMEVIEW_FORMAT12_CLASS), _select_box2.default, {\n      items: [{\n        value: TIMEVIEW_FORMAT12_AM,\n        text: periodNames[0]\n      }, {\n        value: TIMEVIEW_FORMAT12_PM,\n        text: periodNames[1]\n      }],\n      valueExpr: \"value\",\n      displayExpr: \"text\",\n      onValueChanged: function onValueChanged(_ref2) {\n        var value = _ref2.value;\n\n        var hours = _this3._getValue().getHours();\n\n        var time = new Date(_this3._getValue());\n        var newHours = (hours + 12 * value) % 24;\n        time.setHours(newHours);\n\n        _this3.option(\"value\", time);\n      },\n      value: this._getValue().getHours() >= 12 ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM,\n      stylingMode: this.option(\"stylingMode\")\n    });\n\n    this._attachKeyboardProcessorToEditor(editor);\n\n    editor.setAria(\"label\", \"type\");\n  },\n  _refreshFormat12: function _refreshFormat12() {\n    if (this.option(\"use24HourFormat\")) {\n      return;\n    }\n\n    var value = this._getValue();\n\n    var hours = value.getHours();\n    var isPM = hours >= 12;\n    var newValue = isPM ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM;\n\n    this._silentEditorValueUpdate(this._format12, newValue);\n  },\n  _silentEditorValueUpdate: function _silentEditorValueUpdate(editor, value) {\n    if (editor) {\n      editor._suppressValueChangeAction();\n\n      editor.option(\"value\", value);\n\n      editor._resumeValueChangeAction();\n    }\n  },\n  _getNumberBoxConfig: function _getNumberBoxConfig() {\n    return {\n      showSpinButtons: true,\n      displayValueFormatter: function displayValueFormatter(value) {\n        return (value < 10 ? \"0\" : \"\") + value;\n      },\n      stylingMode: this.option(\"stylingMode\")\n    };\n  },\n  _normalizeHours: function _normalizeHours(hours) {\n    return this.option(\"use24HourFormat\") ? hours : hours % 12 || 12;\n  },\n  _updateField: function _updateField() {\n    var hours = this._normalizeHours(this._getValue().getHours());\n\n    this._silentEditorValueUpdate(this._hourBox, hours);\n\n    this._silentEditorValueUpdate(this._minuteBox, this._getValue().getMinutes());\n\n    this._refreshFormat12();\n  },\n  _updateTime: function _updateTime() {\n    if (this.option(\"_showClock\")) {\n      this._updateClock();\n    }\n\n    this._updateField();\n  },\n  _visibilityChanged: function _visibilityChanged(visible) {\n    if (visible) {\n      this._updateTime();\n    }\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"value\":\n        this._updateTime();\n\n        this.callBase(args);\n        break;\n\n      case \"_arrowOffset\":\n        break;\n\n      case \"use24HourFormat\":\n      case \"_showClock\":\n      case \"stylingMode\":\n        this._invalidate();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\n\n(0, _component_registrator2.default)(\"dxTimeView\", TimeView);\nmodule.exports = TimeView;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/date_box/ui.time_view.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_editor","_editor2","_number_box","_number_box2","_select_box","_select_box2","_box","_box2","_extend","_component_registrator","_component_registrator2","_date","_ui","obj","__esModule","TIMEVIEW_CLASS","TIMEVIEW_CLOCK_CLASS","TIMEVIEW_FIELD_CLASS","TIMEVIEW_HOURARROW_CLASS","TIMEVIEW_TIME_SEPARATOR_CLASS","TIMEVIEW_FORMAT12_CLASS","TIMEVIEW_FORMAT12_AM","TIMEVIEW_FORMAT12_PM","TIMEVIEW_MINUTEARROW_CLASS","rotateArrow","$arrow","angle","offset","cssRotate","css","TimeView","default","inherit","_getDefaultOptions","extend","callBase","value","Date","now","use24HourFormat","_showClock","_arrowOffset","stylingMode","_defaultOptionsRules","concat","device","platform","options","_getValue","option","_init","$element","addClass","_render","_renderBox","_updateTime","$box","appendTo","items","push","ratio","shrink","baseSize","template","_renderClock","bind","_renderField","_createComponent","height","width","direction","_","__","container","_$hourArrow","_$minuteArrow","$container","append","setAria","_updateClock","time","hourArrowAngle","getHours","getMinutes","minuteArrowAngle","_getBoxItems","is12HourFormat","_this","_hourBox","text","getTimeSeparator","_minuteBox","_format12","_createHourBox","_createMinuteBox","_createFormat12Box","align","crossAlign","_attachKeyboardProcessorToEditor","editor","keyboardProcessor","_keyboardProcessor","attachChildProcessor","reinitialize","_keyboardHandler","min","max","onValueChanged","_onHourBoxValueChanged","_getNumberBoxConfig","_isPM","args","currentValue","newValue","newHours","_convertMaxHourToMin","setHours","normalizeTime","hours","maxHoursValue","_this2","_ref","component","newMinutes","setMinutes","_this3","periodNames","getPeriodNames","valueExpr","displayExpr","_ref2","_refreshFormat12","isPM","_silentEditorValueUpdate","_suppressValueChangeAction","_resumeValueChangeAction","showSpinButtons","displayValueFormatter","_normalizeHours","_updateField","_visibilityChanged","visible","_optionChanged","name","_invalidate","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/date_box/ui.time_view.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _editor = require(\"../editor/editor\");\r\nvar _editor2 = _interopRequireDefault(_editor);\r\nvar _number_box = require(\"../number_box\");\r\nvar _number_box2 = _interopRequireDefault(_number_box);\r\nvar _select_box = require(\"../select_box\");\r\nvar _select_box2 = _interopRequireDefault(_select_box);\r\nvar _box = require(\"../box\");\r\nvar _box2 = _interopRequireDefault(_box);\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _component_registrator = require(\"../../core/component_registrator\");\r\nvar _component_registrator2 = _interopRequireDefault(_component_registrator);\r\nvar _date = require(\"../../localization/date\");\r\nvar _ui = require(\"./ui.date_utils\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TIMEVIEW_CLASS = \"dx-timeview\";\r\nvar TIMEVIEW_CLOCK_CLASS = \"dx-timeview-clock\";\r\nvar TIMEVIEW_FIELD_CLASS = \"dx-timeview-field\";\r\nvar TIMEVIEW_HOURARROW_CLASS = \"dx-timeview-hourarrow\";\r\nvar TIMEVIEW_TIME_SEPARATOR_CLASS = \"dx-timeview-time-separator\";\r\nvar TIMEVIEW_FORMAT12_CLASS = \"dx-timeview-format12\";\r\nvar TIMEVIEW_FORMAT12_AM = -1;\r\nvar TIMEVIEW_FORMAT12_PM = 1;\r\nvar TIMEVIEW_MINUTEARROW_CLASS = \"dx-timeview-minutearrow\";\r\nvar rotateArrow = function($arrow, angle, offset) {\r\n    cssRotate($arrow, angle, offset)\r\n};\r\nvar cssRotate = function($arrow, angle, offset) {\r\n    $arrow.css(\"transform\", \"rotate(\" + angle + \"deg) translate(0,\" + offset + \"px)\")\r\n};\r\nvar TimeView = _editor2.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            value: new Date(Date.now()),\r\n            use24HourFormat: true,\r\n            _showClock: true,\r\n            _arrowOffset: 0,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                _arrowOffset: 15\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                _arrowOffset: 5\r\n            }\r\n        }])\r\n    },\r\n    _getValue: function() {\r\n        return this.option(\"value\") || new Date\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(TIMEVIEW_CLASS)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderBox();\r\n        this._updateTime()\r\n    },\r\n    _renderBox: function() {\r\n        var $box = (0, _renderer2.default)(\"<div>\").appendTo(this.$element());\r\n        var items = [];\r\n        if (this.option(\"_showClock\")) {\r\n            items.push({\r\n                ratio: 1,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                template: this._renderClock.bind(this)\r\n            })\r\n        }\r\n        items.push({\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: 50,\r\n            template: this._renderField.bind(this)\r\n        });\r\n        this._createComponent($box, _box2.default, {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            direction: \"col\",\r\n            items: items\r\n        })\r\n    },\r\n    _renderClock: function(_, __, container) {\r\n        this._$hourArrow = (0, _renderer2.default)(\"<div>\").addClass(TIMEVIEW_HOURARROW_CLASS);\r\n        this._$minuteArrow = (0, _renderer2.default)(\"<div>\").addClass(TIMEVIEW_MINUTEARROW_CLASS);\r\n        var $container = (0, _renderer2.default)(container);\r\n        $container.addClass(TIMEVIEW_CLOCK_CLASS).append(this._$hourArrow).append(this._$minuteArrow);\r\n        this.setAria(\"role\", \"presentation\", $container)\r\n    },\r\n    _updateClock: function() {\r\n        var time = this._getValue();\r\n        var hourArrowAngle = time.getHours() / 12 * 360 + time.getMinutes() / 60 * 30;\r\n        var minuteArrowAngle = time.getMinutes() / 60 * 360;\r\n        rotateArrow(this._$hourArrow, hourArrowAngle, this.option(\"_arrowOffset\"));\r\n        rotateArrow(this._$minuteArrow, minuteArrowAngle, this.option(\"_arrowOffset\"))\r\n    },\r\n    _getBoxItems: function(is12HourFormat) {\r\n        var _this = this;\r\n        var items = [{\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: function() {\r\n                return _this._hourBox.$element()\r\n            }\r\n        }, {\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: (0, _renderer2.default)(\"<div>\").addClass(TIMEVIEW_TIME_SEPARATOR_CLASS).text((0, _date.getTimeSeparator)())\r\n        }, {\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: function() {\r\n                return _this._minuteBox.$element()\r\n            }\r\n        }];\r\n        if (is12HourFormat) {\r\n            items.push({\r\n                ratio: 0,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                template: function() {\r\n                    return _this._format12.$element()\r\n                }\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    _renderField: function() {\r\n        var is12HourFormat = !this.option(\"use24HourFormat\");\r\n        this._createHourBox();\r\n        this._createMinuteBox();\r\n        if (is12HourFormat) {\r\n            this._createFormat12Box()\r\n        }\r\n        return this._createComponent((0, _renderer2.default)(\"<div>\").addClass(TIMEVIEW_FIELD_CLASS), _box2.default, {\r\n            direction: \"row\",\r\n            align: \"center\",\r\n            crossAlign: \"center\",\r\n            items: this._getBoxItems(is12HourFormat)\r\n        }).$element()\r\n    },\r\n    _attachKeyboardProcessorToEditor: function(editor) {\r\n        var keyboardProcessor = editor._keyboardProcessor;\r\n        if (keyboardProcessor) {\r\n            keyboardProcessor.attachChildProcessor().reinitialize(this._keyboardHandler, this)\r\n        }\r\n    },\r\n    _createHourBox: function() {\r\n        var editor = this._hourBox = this._createComponent((0, _renderer2.default)(\"<div>\"), _number_box2.default, (0, _extend.extend)({\r\n            min: -1,\r\n            max: 24,\r\n            value: this._getValue().getHours(),\r\n            onValueChanged: this._onHourBoxValueChanged.bind(this)\r\n        }, this._getNumberBoxConfig()));\r\n        editor.setAria(\"label\", \"hours\");\r\n        this._attachKeyboardProcessorToEditor(editor)\r\n    },\r\n    _isPM: function() {\r\n        return !this.option(\"use24HourFormat\") && 1 === this._format12.option(\"value\")\r\n    },\r\n    _onHourBoxValueChanged: function(args) {\r\n        var currentValue = this._getValue();\r\n        var newValue = new Date(currentValue);\r\n        var newHours = this._convertMaxHourToMin(args.value);\r\n        if (this._isPM()) {\r\n            newHours += 12\r\n        }\r\n        newValue.setHours(newHours);\r\n        (0, _ui.normalizeTime)(newValue);\r\n        this.option(\"value\", newValue)\r\n    },\r\n    _convertMaxHourToMin: function(hours) {\r\n        var maxHoursValue = this.option(\"use24HourFormat\") ? 24 : 12;\r\n        return (maxHoursValue + hours) % maxHoursValue\r\n    },\r\n    _createMinuteBox: function() {\r\n        var _this2 = this;\r\n        var editor = this._minuteBox = this._createComponent((0, _renderer2.default)(\"<div>\"), _number_box2.default, (0, _extend.extend)({\r\n            min: -1,\r\n            max: 60,\r\n            value: this._getValue().getMinutes(),\r\n            onValueChanged: function(_ref) {\r\n                var value = _ref.value,\r\n                    component = _ref.component;\r\n                var newMinutes = (60 + value) % 60;\r\n                component.option(\"value\", newMinutes);\r\n                var time = new Date(_this2._getValue());\r\n                time.setMinutes(newMinutes);\r\n                (0, _ui.normalizeTime)(time);\r\n                _this2.option(\"value\", time)\r\n            }\r\n        }, this._getNumberBoxConfig()));\r\n        editor.setAria(\"label\", \"minutes\");\r\n        this._attachKeyboardProcessorToEditor(editor)\r\n    },\r\n    _createFormat12Box: function() {\r\n        var _this3 = this;\r\n        var periodNames = (0, _date.getPeriodNames)();\r\n        var editor = this._format12 = this._createComponent((0, _renderer2.default)(\"<div>\").addClass(TIMEVIEW_FORMAT12_CLASS), _select_box2.default, {\r\n            items: [{\r\n                value: TIMEVIEW_FORMAT12_AM,\r\n                text: periodNames[0]\r\n            }, {\r\n                value: TIMEVIEW_FORMAT12_PM,\r\n                text: periodNames[1]\r\n            }],\r\n            valueExpr: \"value\",\r\n            displayExpr: \"text\",\r\n            onValueChanged: function(_ref2) {\r\n                var value = _ref2.value;\r\n                var hours = _this3._getValue().getHours();\r\n                var time = new Date(_this3._getValue());\r\n                var newHours = (hours + 12 * value) % 24;\r\n                time.setHours(newHours);\r\n                _this3.option(\"value\", time)\r\n            },\r\n            value: this._getValue().getHours() >= 12 ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM,\r\n            stylingMode: this.option(\"stylingMode\")\r\n        });\r\n        this._attachKeyboardProcessorToEditor(editor);\r\n        editor.setAria(\"label\", \"type\")\r\n    },\r\n    _refreshFormat12: function() {\r\n        if (this.option(\"use24HourFormat\")) {\r\n            return\r\n        }\r\n        var value = this._getValue();\r\n        var hours = value.getHours();\r\n        var isPM = hours >= 12;\r\n        var newValue = isPM ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM;\r\n        this._silentEditorValueUpdate(this._format12, newValue)\r\n    },\r\n    _silentEditorValueUpdate: function(editor, value) {\r\n        if (editor) {\r\n            editor._suppressValueChangeAction();\r\n            editor.option(\"value\", value);\r\n            editor._resumeValueChangeAction()\r\n        }\r\n    },\r\n    _getNumberBoxConfig: function() {\r\n        return {\r\n            showSpinButtons: true,\r\n            displayValueFormatter: function(value) {\r\n                return (value < 10 ? \"0\" : \"\") + value\r\n            },\r\n            stylingMode: this.option(\"stylingMode\")\r\n        }\r\n    },\r\n    _normalizeHours: function(hours) {\r\n        return this.option(\"use24HourFormat\") ? hours : hours % 12 || 12\r\n    },\r\n    _updateField: function() {\r\n        var hours = this._normalizeHours(this._getValue().getHours());\r\n        this._silentEditorValueUpdate(this._hourBox, hours);\r\n        this._silentEditorValueUpdate(this._minuteBox, this._getValue().getMinutes());\r\n        this._refreshFormat12()\r\n    },\r\n    _updateTime: function() {\r\n        if (this.option(\"_showClock\")) {\r\n            this._updateClock()\r\n        }\r\n        this._updateField()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._updateTime()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._updateTime();\r\n                this.callBase(args);\r\n                break;\r\n            case \"_arrowOffset\":\r\n                break;\r\n            case \"use24HourFormat\":\r\n            case \"_showClock\":\r\n            case \"stylingMode\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\n(0, _component_registrator2.default)(\"dxTimeView\", TimeView);\r\nmodule.exports = TimeView;\r\n"]},"metadata":{},"sourceType":"script"}