{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\src\\\\Components\\\\Graph.jsx\";\nimport React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Chart, ArgumentAxis, ValueAxis, LineSeries, Legend, ZoomAndPan, Title } from \"@devexpress/dx-react-chart-material-ui\";\nimport red from \"../Images/Red.svg\";\nimport green from \"../Images/green.jpg\";\nimport blue from \"../Images/blue.png\";\n\nfunction Graph(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        history = _useState2[0],\n        setHist = _useState2[1];\n\n  const SetH = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var rec;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              \"method\": \"get\",\n              \"url\": \"https://corona.lmao.ninja/v2/historical\"\n            }).then(response => {\n              const Timeline = response.data;\n              return Timeline;\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 2:\n            rec = _context.sent;\n            setHist(rec);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function SetH() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  SetH();\n  const info = history.filter(rec => rec.country === props.name);\n\n  const SpecialMarkerComponent = ({\n    name,\n    color\n  }) => {\n    const Icon = name === 'Total Deaths' ? red : blue; // xlinkHref is use for safari\n\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      width: 18,\n      height: 18,\n      viewBox: Icon.viewBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"use\", {\n      fill: color,\n      xlinkHref: \"#\".concat(Icon.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  function getData(record) {\n    const Cases = record.timeline.cases;\n    const Deaths = record.timeline.deaths;\n    const Recovered = record.timeline.recovered;\n    const data = [];\n    const dates = Object.keys(Cases);\n    var i = 0;\n    var k = dates.length / 10;\n    var date;\n\n    for (var _i = 0, _dates = dates; _i < _dates.length; _i++) {\n      date = _dates[_i];\n\n      if (Cases[date] > 0) {\n        if (i % (k - 1) === 0) data.push({\n          argument: date.substring(0, 4),\n          cases: Cases[date],\n          deaths: Deaths[date],\n          recovered: Recovered[date]\n        }); //else\n        //data.push({argument:\"\" , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\n      }\n\n      i++;\n    }\n\n    date = dates[dates.length - 1];\n    data.push({\n      argument: date,\n      cases: Cases[date],\n      deaths: Deaths[date],\n      recovered: Recovered[date]\n    });\n    return /*#__PURE__*/React.createElement(Chart, {\n      data: data,\n      width: 800,\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ArgumentAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ValueAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Title, {\n      text: \"Corona Record in \" + props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(LineSeries, {\n      name: \"Total Cases\",\n      valueField: \"cases\",\n      argumentField: \"argument\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(LineSeries, {\n      name: \"Total Deaths\",\n      valueField: \"deaths\",\n      argumentField: \"argument\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(LineSeries, {\n      name: \"Total Recoveries\",\n      valueField: \"recovered\",\n      argumentField: \"argument\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ZoomAndPan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, info.map(getData));\n}\n\nexport default Graph;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/src/Components/Graph.jsx"],"names":["React","useState","Paper","axios","Chart","ArgumentAxis","ValueAxis","LineSeries","Legend","ZoomAndPan","Title","green","blue","Graph","props","history","setHist","SetH","then","response","Timeline","data","catch","error","console","log","rec","info","filter","country","name","SpecialMarkerComponent","color","Icon","red","viewBox","id","getData","record","Cases","timeline","cases","Deaths","deaths","Recovered","recovered","dates","Object","keys","i","k","length","date","push","argument","substring","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  LineSeries,\r\n  Legend,\r\n  ZoomAndPan,\r\n  Title\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\nimport red from \"../Images/Red.svg\";\r\nimport green from \"../Images/green.jpg\";\r\nimport blue from \"../Images/blue.png\";\r\n\r\n\r\nfunction Graph(props) {\r\n\r\n  const [history, setHist] = useState([]);\r\n\r\n  const SetH = async () => {\r\n    const rec = await axios({\r\n      \"method\": \"get\",\r\n      \"url\": \"https://corona.lmao.ninja/v2/historical\"})\r\n    .then((response)=>{\r\n        const Timeline = response.data;\r\n        return Timeline;\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n  });\r\n  setHist(rec);\r\n  }\r\n  SetH();\r\n\r\n  const info = history.filter((rec)=>(rec.country===props.name));\r\n\r\n  const SpecialMarkerComponent = ({ name, color }) => {\r\n    const Icon = name === 'Total Deaths' ? red : blue;\r\n\r\n    // xlinkHref is use for safari\r\n    return (\r\n      <svg width={18} height={18} viewBox={Icon.viewBox}>\r\n        <use fill={color} xlinkHref={`#${Icon.id}`} />\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  function getData(record) {\r\n    const Cases = record.timeline.cases;\r\n    const Deaths = record.timeline.deaths;\r\n    const Recovered = record.timeline.recovered;\r\n    const data = []\r\n    const dates = Object.keys(Cases);\r\n    var i =0;\r\n    var k = dates.length/10;\r\n    var date;\r\n    for(date of dates) {\r\n       if(Cases[date]>0){\r\n        if(i%(k-1)===0)\r\n          data.push({argument:date.substring(0,4) , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n        //else\r\n          //data.push({argument:\"\" , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n       }\r\n       i++;\r\n    }\r\n    date = dates[dates.length-1];\r\n    data.push({argument:date , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n    return (\r\n      <Chart data={data} width={800} height={400}>\r\n        <ArgumentAxis/>\r\n        <ValueAxis />\r\n        <Title text={\"Corona Record in \" + props.name} />\r\n\r\n        <LineSeries\r\n            name=\"Total Cases\"\r\n            valueField=\"cases\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <LineSeries\r\n            name=\"Total Deaths\"\r\n            valueField=\"deaths\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <LineSeries\r\n            name=\"Total Recoveries\"\r\n            valueField=\"recovered\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <Legend />\r\n          <ZoomAndPan />\r\n      </Chart>\r\n    )\r\n    \r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n\r\n      {info.map(getData)}\r\n      \r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Graph;"]},"metadata":{},"sourceType":"module"}