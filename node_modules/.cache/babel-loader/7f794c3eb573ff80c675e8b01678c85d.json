{"ast":null,"code":"/**\r\n * DevExtreme (exporter/svg_creator.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\");\n\nvar ajax = require(\"../core/utils/ajax\");\n\nvar window = require(\"../core/utils/window\").getWindow();\n\nvar isFunction = require(\"../core/utils/type\").isFunction;\n\nvar each = require(\"../core/utils/iterator\").each;\n\nvar svgUtils = require(\"../core/utils/svg\");\n\nvar deferredUtils = require(\"../core/utils/deferred\");\n\nvar when = deferredUtils.when;\nvar Deferred = deferredUtils.Deferred;\nexports.svgCreator = {\n  _markup: \"\",\n  _imageArray: {},\n  _imageDeferreds: [],\n  _getBinaryFile: function _getBinaryFile(src, callback) {\n    ajax.sendRequest({\n      url: src,\n      method: \"GET\",\n      responseType: \"arraybuffer\"\n    }).done(callback).fail(function () {\n      callback(false);\n    });\n  },\n  _loadImages: function _loadImages() {\n    var that = this;\n    each(that._imageArray, function (src) {\n      var deferred = new Deferred();\n\n      that._imageDeferreds.push(deferred);\n\n      that._getBinaryFile(src, function (response) {\n        if (!response) {\n          delete that._imageArray[src];\n          deferred.resolve();\n          return;\n        }\n\n        var i;\n        var binary = \"\";\n        var bytes = new Uint8Array(response);\n        var length = bytes.byteLength;\n\n        for (i = 0; i < length; i++) {\n          binary += String.fromCharCode(bytes[i]);\n        }\n\n        that._imageArray[src] = \"data:image/png;base64,\" + window.btoa(binary);\n        deferred.resolve();\n      });\n    });\n  },\n  _parseImages: function _parseImages(element) {\n    var href;\n    var that = this;\n\n    if (\"image\" === element.tagName) {\n      href = $(element).attr(\"href\") || $(element).attr(\"xlink:href\");\n\n      if (!that._imageArray[href]) {\n        that._imageArray[href] = \"\";\n      }\n    }\n\n    each(element.childNodes, function (_, element) {\n      that._parseImages(element);\n    });\n  },\n  _prepareImages: function _prepareImages(svgElem) {\n    this._parseImages(svgElem);\n\n    this._loadImages();\n\n    return when.apply($, this._imageDeferreds);\n  },\n  getData: function getData(data, options) {\n    var markup;\n    var that = this;\n    var xmlVersion = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>';\n    var svgElem = svgUtils.getSvgElement(data);\n    var $svgObject = $(svgElem);\n    markup = xmlVersion + svgUtils.getSvgMarkup($svgObject.get(0), options.backgroundColor);\n    return that._prepareImages(svgElem).then(function () {\n      each(that._imageArray, function (href, dataURI) {\n        var regexpString = \"href=['|\\\"]\".concat(href, \"['|\\\"]\");\n        markup = markup.replace(new RegExp(regexpString, \"gi\"), 'href=\"'.concat(dataURI, '\"'));\n      });\n      return isFunction(window.Blob) ? that._getBlob(markup) : that._getBase64(markup);\n    });\n  },\n  _getBlob: function _getBlob(markup) {\n    return new window.Blob([markup], {\n      type: \"image/svg+xml\"\n    });\n  },\n  _getBase64: function _getBase64(markup) {\n    return window.btoa(markup);\n  }\n};\n\nexports.getData = function (data, options) {\n  return exports.svgCreator.getData(data, options);\n};","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/exporter/svg_creator.js"],"names":["$","require","ajax","window","getWindow","isFunction","each","svgUtils","deferredUtils","when","Deferred","exports","svgCreator","_markup","_imageArray","_imageDeferreds","_getBinaryFile","src","callback","sendRequest","url","method","responseType","done","fail","_loadImages","that","deferred","push","response","resolve","i","binary","bytes","Uint8Array","length","byteLength","String","fromCharCode","btoa","_parseImages","element","href","tagName","attr","childNodes","_","_prepareImages","svgElem","apply","getData","data","options","markup","xmlVersion","getSvgElement","$svgObject","getSvgMarkup","get","backgroundColor","then","dataURI","regexpString","concat","replace","RegExp","Blob","_getBlob","_getBase64","type"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (exporter/svg_creator.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar ajax = require(\"../core/utils/ajax\");\r\nvar window = require(\"../core/utils/window\").getWindow();\r\nvar isFunction = require(\"../core/utils/type\").isFunction;\r\nvar each = require(\"../core/utils/iterator\").each;\r\nvar svgUtils = require(\"../core/utils/svg\");\r\nvar deferredUtils = require(\"../core/utils/deferred\");\r\nvar when = deferredUtils.when;\r\nvar Deferred = deferredUtils.Deferred;\r\nexports.svgCreator = {\r\n    _markup: \"\",\r\n    _imageArray: {},\r\n    _imageDeferreds: [],\r\n    _getBinaryFile: function(src, callback) {\r\n        ajax.sendRequest({\r\n            url: src,\r\n            method: \"GET\",\r\n            responseType: \"arraybuffer\"\r\n        }).done(callback).fail(function() {\r\n            callback(false)\r\n        })\r\n    },\r\n    _loadImages: function() {\r\n        var that = this;\r\n        each(that._imageArray, function(src) {\r\n            var deferred = new Deferred;\r\n            that._imageDeferreds.push(deferred);\r\n            that._getBinaryFile(src, function(response) {\r\n                if (!response) {\r\n                    delete that._imageArray[src];\r\n                    deferred.resolve();\r\n                    return\r\n                }\r\n                var i;\r\n                var binary = \"\";\r\n                var bytes = new Uint8Array(response);\r\n                var length = bytes.byteLength;\r\n                for (i = 0; i < length; i++) {\r\n                    binary += String.fromCharCode(bytes[i])\r\n                }\r\n                that._imageArray[src] = \"data:image/png;base64,\" + window.btoa(binary);\r\n                deferred.resolve()\r\n            })\r\n        })\r\n    },\r\n    _parseImages: function(element) {\r\n        var href;\r\n        var that = this;\r\n        if (\"image\" === element.tagName) {\r\n            href = $(element).attr(\"href\") || $(element).attr(\"xlink:href\");\r\n            if (!that._imageArray[href]) {\r\n                that._imageArray[href] = \"\"\r\n            }\r\n        }\r\n        each(element.childNodes, function(_, element) {\r\n            that._parseImages(element)\r\n        })\r\n    },\r\n    _prepareImages: function(svgElem) {\r\n        this._parseImages(svgElem);\r\n        this._loadImages();\r\n        return when.apply($, this._imageDeferreds)\r\n    },\r\n    getData: function(data, options) {\r\n        var markup;\r\n        var that = this;\r\n        var xmlVersion = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>';\r\n        var svgElem = svgUtils.getSvgElement(data);\r\n        var $svgObject = $(svgElem);\r\n        markup = xmlVersion + svgUtils.getSvgMarkup($svgObject.get(0), options.backgroundColor);\r\n        return that._prepareImages(svgElem).then(function() {\r\n            each(that._imageArray, function(href, dataURI) {\r\n                var regexpString = \"href=['|\\\"]\".concat(href, \"['|\\\"]\");\r\n                markup = markup.replace(new RegExp(regexpString, \"gi\"), 'href=\"'.concat(dataURI, '\"'))\r\n            });\r\n            return isFunction(window.Blob) ? that._getBlob(markup) : that._getBase64(markup)\r\n        })\r\n    },\r\n    _getBlob: function(markup) {\r\n        return new window.Blob([markup], {\r\n            type: \"image/svg+xml\"\r\n        })\r\n    },\r\n    _getBase64: function(markup) {\r\n        return window.btoa(markup)\r\n    }\r\n};\r\nexports.getData = function(data, options) {\r\n    return exports.svgCreator.getData(data, options)\r\n};\r\n"]},"metadata":{},"sourceType":"script"}