{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/window.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar domAdapter = require(\"../dom_adapter\");\n\nvar _hasWindow = \"undefined\" !== typeof window;\n\nvar windowObject = _hasWindow && window;\n\nif (!windowObject) {\n  windowObject = {};\n  windowObject.window = windowObject;\n}\n\nmodule.exports = {\n  hasWindow: function hasWindow() {\n    return _hasWindow;\n  },\n  getWindow: function getWindow() {\n    return windowObject;\n  },\n  hasProperty: function hasProperty(prop) {\n    return this.hasWindow() && prop in windowObject;\n  },\n  defaultScreenFactorFunc: function defaultScreenFactorFunc(width) {\n    if (width < 768) {\n      return \"xs\";\n    } else {\n      if (width < 992) {\n        return \"sm\";\n      } else {\n        if (width < 1200) {\n          return \"md\";\n        } else {\n          return \"lg\";\n        }\n      }\n    }\n  },\n  getCurrentScreenFactor: function getCurrentScreenFactor(screenFactorCallback) {\n    var screenFactorFunc = screenFactorCallback || this.defaultScreenFactorFunc;\n    var windowWidth = domAdapter.getDocumentElement().clientWidth;\n    return screenFactorFunc(windowWidth);\n  },\n  getNavigator: function getNavigator() {\n    return this.hasWindow() ? windowObject.navigator : {\n      userAgent: \"\"\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/core/utils/window.js"],"names":["domAdapter","require","_hasWindow","window","windowObject","module","exports","hasWindow","getWindow","hasProperty","prop","defaultScreenFactorFunc","width","getCurrentScreenFactor","screenFactorCallback","screenFactorFunc","windowWidth","getDocumentElement","clientWidth","getNavigator","navigator","userAgent"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AACA,IAAIC,UAAU,GAAG,gBAAgB,OAAOC,MAAxC;;AACA,IAAIC,YAAY,GAAGF,UAAU,IAAIC,MAAjC;;AACA,IAAI,CAACC,YAAL,EAAmB;AACfA,EAAAA,YAAY,GAAG,EAAf;AACAA,EAAAA,YAAY,CAACD,MAAb,GAAsBC,YAAtB;AACH;;AACDC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,SAAS,EAAE,qBAAW;AAClB,WAAOL,UAAP;AACH,GAHY;AAIbM,EAAAA,SAAS,EAAE,qBAAW;AAClB,WAAOJ,YAAP;AACH,GANY;AAObK,EAAAA,WAAW,EAAE,qBAASC,IAAT,EAAe;AACxB,WAAO,KAAKH,SAAL,MAAoBG,IAAI,IAAIN,YAAnC;AACH,GATY;AAUbO,EAAAA,uBAAuB,EAAE,iCAASC,KAAT,EAAgB;AACrC,QAAIA,KAAK,GAAG,GAAZ,EAAiB;AACb,aAAO,IAAP;AACH,KAFD,MAEO;AACH,UAAIA,KAAK,GAAG,GAAZ,EAAiB;AACb,eAAO,IAAP;AACH,OAFD,MAEO;AACH,YAAIA,KAAK,GAAG,IAAZ,EAAkB;AACd,iBAAO,IAAP;AACH,SAFD,MAEO;AACH,iBAAO,IAAP;AACH;AACJ;AACJ;AACJ,GAxBY;AAyBbC,EAAAA,sBAAsB,EAAE,gCAASC,oBAAT,EAA+B;AACnD,QAAIC,gBAAgB,GAAGD,oBAAoB,IAAI,KAAKH,uBAApD;AACA,QAAIK,WAAW,GAAGhB,UAAU,CAACiB,kBAAX,GAAgCC,WAAlD;AACA,WAAOH,gBAAgB,CAACC,WAAD,CAAvB;AACH,GA7BY;AA8BbG,EAAAA,YAAY,EAAE,wBAAW;AACrB,WAAO,KAAKZ,SAAL,KAAmBH,YAAY,CAACgB,SAAhC,GAA4C;AAC/CC,MAAAA,SAAS,EAAE;AADoC,KAAnD;AAGH;AAlCY,CAAjB","sourcesContent":["/**\r\n * DevExtreme (core/utils/window.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar domAdapter = require(\"../dom_adapter\");\r\nvar _hasWindow = \"undefined\" !== typeof window;\r\nvar windowObject = _hasWindow && window;\r\nif (!windowObject) {\r\n    windowObject = {};\r\n    windowObject.window = windowObject\r\n}\r\nmodule.exports = {\r\n    hasWindow: function() {\r\n        return _hasWindow\r\n    },\r\n    getWindow: function() {\r\n        return windowObject\r\n    },\r\n    hasProperty: function(prop) {\r\n        return this.hasWindow() && prop in windowObject\r\n    },\r\n    defaultScreenFactorFunc: function(width) {\r\n        if (width < 768) {\r\n            return \"xs\"\r\n        } else {\r\n            if (width < 992) {\r\n                return \"sm\"\r\n            } else {\r\n                if (width < 1200) {\r\n                    return \"md\"\r\n                } else {\r\n                    return \"lg\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    getCurrentScreenFactor: function(screenFactorCallback) {\r\n        var screenFactorFunc = screenFactorCallback || this.defaultScreenFactorFunc;\r\n        var windowWidth = domAdapter.getDocumentElement().clientWidth;\r\n        return screenFactorFunc(windowWidth)\r\n    },\r\n    getNavigator: function() {\r\n        return this.hasWindow() ? windowObject.navigator : {\r\n            userAgent: \"\"\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}