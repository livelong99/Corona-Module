{"ast":null,"code":"/**\r\n * DevExtreme (viz/chart_components/layout_manager.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar layoutElementModule = require(\"../core/layout_element\");\n\nvar _isNumber = require(\"../../core/utils/type\").isNumeric;\n\nvar _min = Math.min;\nvar _max = Math.max;\nvar _floor = Math.floor;\nvar _sqrt = Math.sqrt;\n\nvar consts = require(\"../components/consts\");\n\nvar RADIAL_LABEL_INDENT = consts.radialLabelIndent;\n\nfunction getNearestCoord(firstCoord, secondCoord, pointCenterCoord) {\n  var nearestCoord;\n\n  if (pointCenterCoord < firstCoord) {\n    nearestCoord = firstCoord;\n  } else {\n    if (secondCoord < pointCenterCoord) {\n      nearestCoord = secondCoord;\n    } else {\n      nearestCoord = pointCenterCoord;\n    }\n  }\n\n  return nearestCoord;\n}\n\nfunction getLabelLayout(point) {\n  if (point._label.isVisible() && \"inside\" !== point._label.getLayoutOptions().position) {\n    return point._label.getBoundingRect();\n  }\n}\n\nfunction getPieRadius(series, paneCenterX, paneCenterY, accessibleRadius, minR) {\n  series.some(function (singleSeries) {\n    return singleSeries.getVisiblePoints().reduce(function (radiusIsFound, point) {\n      var labelBBox = getLabelLayout(point);\n\n      if (labelBBox) {\n        var xCoords = getNearestCoord(labelBBox.x, labelBBox.x + labelBBox.width, paneCenterX);\n        var yCoords = getNearestCoord(labelBBox.y, labelBBox.y + labelBBox.height, paneCenterY);\n        accessibleRadius = _min(_max(getLengthFromCenter(xCoords, yCoords, paneCenterX, paneCenterY) - RADIAL_LABEL_INDENT, minR), accessibleRadius);\n        radiusIsFound = true;\n      }\n\n      return radiusIsFound;\n    }, false);\n  });\n  return accessibleRadius;\n}\n\nfunction getSizeLabels(series) {\n  return series.reduce(function (res, singleSeries) {\n    var maxWidth = singleSeries.getVisiblePoints().reduce(function (width, point) {\n      var labelBBox = getLabelLayout(point);\n\n      if (labelBBox && labelBBox.width > width) {\n        width = labelBBox.width;\n      }\n\n      return width;\n    }, 0);\n    var rWidth = maxWidth;\n\n    if (maxWidth) {\n      res.outerLabelsCount++;\n\n      if (res.outerLabelsCount > 1) {\n        maxWidth += consts.pieLabelSpacing;\n      }\n\n      rWidth += consts.pieLabelSpacing;\n    }\n\n    res.sizes.push(maxWidth);\n    res.rSizes.push(rWidth);\n    res.common += maxWidth;\n    return res;\n  }, {\n    sizes: [],\n    rSizes: [],\n    common: 0,\n    outerLabelsCount: 0\n  });\n}\n\nfunction correctLabelRadius(labelSizes, radius, series, canvas, averageWidthLabels, centerX) {\n  var curRadius;\n  var i;\n  var runningWidth = 0;\n  var sizes = labelSizes.sizes;\n  var rSizes = labelSizes.rSizes;\n\n  for (i = 0; i < series.length; i++) {\n    if (0 === sizes[i]) {\n      curRadius && (curRadius += rSizes[i - 1]);\n      continue;\n    }\n\n    curRadius = _floor(curRadius ? curRadius + rSizes[i - 1] : radius);\n    series[i].correctLabelRadius(curRadius);\n    runningWidth += averageWidthLabels || sizes[i];\n    rSizes[i] = averageWidthLabels || rSizes[i];\n    series[i].setVisibleArea({\n      left: _floor(centerX - radius - runningWidth),\n      right: _floor(canvas.width - (centerX + radius + runningWidth)),\n      top: canvas.top,\n      bottom: canvas.bottom,\n      width: canvas.width,\n      height: canvas.height\n    });\n  }\n}\n\nfunction getLengthFromCenter(x, y, paneCenterX, paneCenterY) {\n  return _sqrt((x - paneCenterX) * (x - paneCenterX) + (y - paneCenterY) * (y - paneCenterY));\n}\n\nfunction getInnerRadius(series) {\n  var innerRadius;\n\n  if (\"pie\" === series.type) {\n    innerRadius = 0;\n  } else {\n    innerRadius = _isNumber(series.innerRadius) ? Number(series.innerRadius) : .5;\n    innerRadius = innerRadius < .2 ? .2 : innerRadius;\n    innerRadius = innerRadius > .8 ? .8 : innerRadius;\n  }\n\n  return innerRadius;\n}\n\nvar inverseAlign = {\n  left: \"right\",\n  right: \"left\",\n  top: \"bottom\",\n  bottom: \"top\",\n  center: \"center\"\n};\n\nfunction downSize(canvas, layoutOptions) {\n  canvas[layoutOptions.cutLayoutSide] += \"horizontal\" === layoutOptions.cutSide ? layoutOptions.width : layoutOptions.height;\n}\n\nfunction getOffset(layoutOptions, offsets) {\n  var side = layoutOptions.cutLayoutSide;\n  var offset = {\n    horizontal: 0,\n    vertical: 0\n  };\n\n  switch (side) {\n    case \"top\":\n    case \"left\":\n      offset[layoutOptions.cutSide] = -offsets[side];\n      break;\n\n    case \"bottom\":\n    case \"right\":\n      offset[layoutOptions.cutSide] = offsets[side];\n  }\n\n  return offset;\n}\n\nfunction LayoutManager() {}\n\nfunction toLayoutElementCoords(canvas) {\n  return new layoutElementModule.WrapperLayoutElement(null, {\n    x: canvas.left,\n    y: canvas.top,\n    width: canvas.width - canvas.left - canvas.right,\n    height: canvas.height - canvas.top - canvas.bottom\n  });\n}\n\nfunction getAverageLabelWidth(centerX, radius, canvas, sizeLabels) {\n  return (centerX - radius - RADIAL_LABEL_INDENT - canvas.left) / sizeLabels.outerLabelsCount;\n}\n\nfunction getFullRadiusWithLabels(centerX, canvas, sizeLabels) {\n  return centerX - canvas.left - (sizeLabels.outerLabelsCount > 0 ? sizeLabels.common + RADIAL_LABEL_INDENT : 0);\n}\n\nfunction correctAvailableRadius(availableRadius, canvas, series, minR, paneCenterX, paneCenterY) {\n  var sizeLabels = getSizeLabels(series);\n  var averageWidthLabels;\n  var fullRadiusWithLabels = getFullRadiusWithLabels(paneCenterX, canvas, sizeLabels);\n\n  if (fullRadiusWithLabels < minR) {\n    availableRadius = minR;\n    averageWidthLabels = getAverageLabelWidth(paneCenterX, availableRadius, canvas, sizeLabels);\n  } else {\n    availableRadius = _min(getPieRadius(series, paneCenterX, paneCenterY, availableRadius, minR), fullRadiusWithLabels);\n  }\n\n  correctLabelRadius(sizeLabels, availableRadius + RADIAL_LABEL_INDENT, series, canvas, averageWidthLabels, paneCenterX);\n  return availableRadius;\n}\n\nLayoutManager.prototype = {\n  constructor: LayoutManager,\n  setOptions: function setOptions(options) {\n    this._options = options;\n  },\n  applyPieChartSeriesLayout: function applyPieChartSeriesLayout(canvas, series, hideLayoutLabels) {\n    var paneSpaceHeight = canvas.height - canvas.top - canvas.bottom;\n    var paneSpaceWidth = canvas.width - canvas.left - canvas.right;\n    var paneCenterX = paneSpaceWidth / 2 + canvas.left;\n    var paneCenterY = paneSpaceHeight / 2 + canvas.top;\n    var piePercentage = this._options.piePercentage;\n    var availableRadius;\n    var minR;\n\n    if (_isNumber(piePercentage)) {\n      availableRadius = minR = piePercentage * _min(canvas.height, canvas.width) / 2;\n    } else {\n      availableRadius = _min(paneSpaceWidth, paneSpaceHeight) / 2;\n      minR = this._options.minPiePercentage * availableRadius;\n    }\n\n    if (!hideLayoutLabels) {\n      availableRadius = correctAvailableRadius(availableRadius, canvas, series, minR, paneCenterX, paneCenterY);\n    }\n\n    return {\n      centerX: _floor(paneCenterX),\n      centerY: _floor(paneCenterY),\n      radiusInner: _floor(availableRadius * getInnerRadius(series[0])),\n      radiusOuter: _floor(availableRadius)\n    };\n  },\n  applyEqualPieChartLayout: function applyEqualPieChartLayout(series, layout) {\n    var radius = layout.radius;\n    return {\n      centerX: _floor(layout.x),\n      centerY: _floor(layout.y),\n      radiusInner: _floor(radius * getInnerRadius(series[0])),\n      radiusOuter: _floor(radius)\n    };\n  },\n  correctPieLabelRadius: function correctPieLabelRadius(series, layout, canvas) {\n    var sizeLabels = getSizeLabels(series);\n    var averageWidthLabels;\n    var radius = layout.radiusOuter + RADIAL_LABEL_INDENT;\n    var availableLabelWidth = layout.centerX - canvas.left - radius;\n\n    if (sizeLabels.common + RADIAL_LABEL_INDENT > availableLabelWidth) {\n      averageWidthLabels = getAverageLabelWidth(layout.centerX, layout.radiusOuter, canvas, sizeLabels);\n    }\n\n    correctLabelRadius(sizeLabels, radius, series, canvas, averageWidthLabels, layout.centerX);\n  },\n  needMoreSpaceForPanesCanvas: function needMoreSpaceForPanesCanvas(panes, rotated, fixedSizeCallback) {\n    var options = this._options;\n    var width = options.width;\n    var height = options.height;\n    var piePercentage = options.piePercentage;\n\n    var percentageIsValid = _isNumber(piePercentage);\n\n    var needHorizontalSpace = 0;\n    var needVerticalSpace = 0;\n    panes.forEach(function (pane) {\n      var paneCanvas = pane.canvas;\n      var minSize = percentageIsValid ? _min(paneCanvas.width, paneCanvas.height) * piePercentage : void 0;\n      var paneSized = fixedSizeCallback ? fixedSizeCallback(pane) : {\n        width: false,\n        height: false\n      };\n      var needPaneHorizontalSpace = !paneSized.width ? (percentageIsValid ? minSize : width) - (paneCanvas.width - paneCanvas.left - paneCanvas.right) : 0;\n      var needPaneVerticalSpace = !paneSized.height ? (percentageIsValid ? minSize : height) - (paneCanvas.height - paneCanvas.top - paneCanvas.bottom) : 0;\n\n      if (rotated) {\n        needHorizontalSpace += needPaneHorizontalSpace > 0 ? needPaneHorizontalSpace : 0;\n        needVerticalSpace = _max(needPaneVerticalSpace > 0 ? needPaneVerticalSpace : 0, needVerticalSpace);\n      } else {\n        needHorizontalSpace = _max(needPaneHorizontalSpace > 0 ? needPaneHorizontalSpace : 0, needHorizontalSpace);\n        needVerticalSpace += needPaneVerticalSpace > 0 ? needPaneVerticalSpace : 0;\n      }\n    });\n    return needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\n      width: needHorizontalSpace,\n      height: needVerticalSpace\n    } : false;\n  },\n  layoutElements: function layoutElements(elements, canvas, funcAxisDrawer, panes, rotated) {\n    this._elements = elements;\n\n    this._probeDrawing(canvas);\n\n    this._drawElements(canvas);\n\n    funcAxisDrawer();\n\n    this._processAdaptiveLayout(panes, rotated, canvas, funcAxisDrawer);\n\n    this._positionElements(canvas);\n  },\n  _processAdaptiveLayout: function _processAdaptiveLayout(panes, rotated, canvas, funcAxisDrawer) {\n    var that = this;\n    var size = that.needMoreSpaceForPanesCanvas(panes, rotated);\n    var items = this._elements;\n\n    if (!size) {\n      return;\n    }\n\n    function processCanvases(item, layoutOptions, side) {\n      if (!item.getLayoutOptions()[side]) {\n        canvas[layoutOptions.cutLayoutSide] -= layoutOptions[side];\n        size[side] = size[side] - layoutOptions[side];\n      }\n    }\n\n    items.slice().reverse().forEach(function (item) {\n      var layoutOptions = item.getLayoutOptions();\n      var needRedraw = false;\n      var sizeObject;\n      var cutSide;\n\n      if (!layoutOptions) {\n        return;\n      }\n\n      sizeObject = extend({}, layoutOptions);\n      needRedraw = \"vertical\" === layoutOptions.cutSide && size.width < 0 || \"horizontal\" === layoutOptions.cutSide && size.height < 0 || \"vertical\" === layoutOptions.cutSide && size.height > 0 || \"horizontal\" === layoutOptions.cutSide && size.width > 0;\n      cutSide = \"horizontal\" === layoutOptions.cutSide ? \"width\" : \"height\";\n\n      if (needRedraw) {\n        var width = sizeObject.width - size.width;\n        var height = sizeObject.height - size.height;\n\n        if (\"height\" === cutSide && size.width < 0) {\n          width = canvas.width - canvas.left - canvas.right;\n        }\n\n        if (\"width\" === cutSide && size.height < 0) {\n          height = canvas.height - canvas.top - canvas.bottom;\n        }\n\n        item.draw(width, height);\n      }\n\n      processCanvases(item, layoutOptions, cutSide);\n    });\n    funcAxisDrawer(size);\n  },\n  _probeDrawing: function _probeDrawing(canvas) {\n    var that = this;\n\n    this._elements.forEach(function (item) {\n      var layoutOptions = item.getLayoutOptions();\n      var sizeObject;\n\n      if (!layoutOptions) {\n        return;\n      }\n\n      sizeObject = {\n        width: canvas.width - canvas.left - canvas.right,\n        height: canvas.height - canvas.top - canvas.bottom\n      };\n\n      if (\"vertical\" === layoutOptions.cutSide) {\n        sizeObject.height -= that._options.height;\n      } else {\n        sizeObject.width -= that._options.width;\n      }\n\n      item.probeDraw(sizeObject.width, sizeObject.height);\n      downSize(canvas, item.getLayoutOptions());\n    });\n  },\n  _drawElements: function _drawElements(canvas) {\n    this._elements.slice().reverse().forEach(function (item) {\n      var layoutOptions = item.getLayoutOptions();\n      var sizeObject;\n      var cutSide;\n      var length;\n\n      if (!layoutOptions) {\n        return;\n      }\n\n      sizeObject = {\n        width: canvas.width - canvas.left - canvas.right,\n        height: canvas.height - canvas.top - canvas.bottom\n      };\n      cutSide = layoutOptions.cutSide;\n      length = \"horizontal\" === cutSide ? \"width\" : \"height\";\n      sizeObject[length] = layoutOptions[length];\n      item.draw(sizeObject.width, sizeObject.height);\n    });\n  },\n  _positionElements: function _positionElements(canvas) {\n    var offsets = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n\n    this._elements.slice().reverse().forEach(function (item) {\n      var layoutOptions = item.getLayoutOptions();\n      var position;\n      var cutSide;\n      var my;\n\n      if (!layoutOptions) {\n        return;\n      }\n\n      position = layoutOptions.position;\n      cutSide = layoutOptions.cutSide;\n      my = {\n        horizontal: position.horizontal,\n        vertical: position.vertical\n      };\n      my[cutSide] = inverseAlign[my[cutSide]];\n      item.position({\n        of: toLayoutElementCoords(canvas),\n        my: my,\n        at: position,\n        offset: getOffset(layoutOptions, offsets)\n      });\n      offsets[layoutOptions.cutLayoutSide] += layoutOptions[\"horizontal\" === layoutOptions.cutSide ? \"width\" : \"height\"];\n    });\n  }\n};\nexports.LayoutManager = LayoutManager;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/chart_components/layout_manager.js"],"names":["extend","require","layoutElementModule","_isNumber","isNumeric","_min","Math","min","_max","max","_floor","floor","_sqrt","sqrt","consts","RADIAL_LABEL_INDENT","radialLabelIndent","getNearestCoord","firstCoord","secondCoord","pointCenterCoord","nearestCoord","getLabelLayout","point","_label","isVisible","getLayoutOptions","position","getBoundingRect","getPieRadius","series","paneCenterX","paneCenterY","accessibleRadius","minR","some","singleSeries","getVisiblePoints","reduce","radiusIsFound","labelBBox","xCoords","x","width","yCoords","y","height","getLengthFromCenter","getSizeLabels","res","maxWidth","rWidth","outerLabelsCount","pieLabelSpacing","sizes","push","rSizes","common","correctLabelRadius","labelSizes","radius","canvas","averageWidthLabels","centerX","curRadius","i","runningWidth","length","setVisibleArea","left","right","top","bottom","getInnerRadius","innerRadius","type","Number","inverseAlign","center","downSize","layoutOptions","cutLayoutSide","cutSide","getOffset","offsets","side","offset","horizontal","vertical","LayoutManager","toLayoutElementCoords","WrapperLayoutElement","getAverageLabelWidth","sizeLabels","getFullRadiusWithLabels","correctAvailableRadius","availableRadius","fullRadiusWithLabels","prototype","constructor","setOptions","options","_options","applyPieChartSeriesLayout","hideLayoutLabels","paneSpaceHeight","paneSpaceWidth","piePercentage","minPiePercentage","centerY","radiusInner","radiusOuter","applyEqualPieChartLayout","layout","correctPieLabelRadius","availableLabelWidth","needMoreSpaceForPanesCanvas","panes","rotated","fixedSizeCallback","percentageIsValid","needHorizontalSpace","needVerticalSpace","forEach","pane","paneCanvas","minSize","paneSized","needPaneHorizontalSpace","needPaneVerticalSpace","layoutElements","elements","funcAxisDrawer","_elements","_probeDrawing","_drawElements","_processAdaptiveLayout","_positionElements","that","size","items","processCanvases","item","slice","reverse","needRedraw","sizeObject","draw","probeDraw","my","of","at","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/chart_components/layout_manager.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar layoutElementModule = require(\"../core/layout_element\");\r\nvar _isNumber = require(\"../../core/utils/type\").isNumeric;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar _floor = Math.floor;\r\nvar _sqrt = Math.sqrt;\r\nvar consts = require(\"../components/consts\");\r\nvar RADIAL_LABEL_INDENT = consts.radialLabelIndent;\r\n\r\nfunction getNearestCoord(firstCoord, secondCoord, pointCenterCoord) {\r\n    var nearestCoord;\r\n    if (pointCenterCoord < firstCoord) {\r\n        nearestCoord = firstCoord\r\n    } else {\r\n        if (secondCoord < pointCenterCoord) {\r\n            nearestCoord = secondCoord\r\n        } else {\r\n            nearestCoord = pointCenterCoord\r\n        }\r\n    }\r\n    return nearestCoord\r\n}\r\n\r\nfunction getLabelLayout(point) {\r\n    if (point._label.isVisible() && \"inside\" !== point._label.getLayoutOptions().position) {\r\n        return point._label.getBoundingRect()\r\n    }\r\n}\r\n\r\nfunction getPieRadius(series, paneCenterX, paneCenterY, accessibleRadius, minR) {\r\n    series.some(function(singleSeries) {\r\n        return singleSeries.getVisiblePoints().reduce(function(radiusIsFound, point) {\r\n            var labelBBox = getLabelLayout(point);\r\n            if (labelBBox) {\r\n                var xCoords = getNearestCoord(labelBBox.x, labelBBox.x + labelBBox.width, paneCenterX);\r\n                var yCoords = getNearestCoord(labelBBox.y, labelBBox.y + labelBBox.height, paneCenterY);\r\n                accessibleRadius = _min(_max(getLengthFromCenter(xCoords, yCoords, paneCenterX, paneCenterY) - RADIAL_LABEL_INDENT, minR), accessibleRadius);\r\n                radiusIsFound = true\r\n            }\r\n            return radiusIsFound\r\n        }, false)\r\n    });\r\n    return accessibleRadius\r\n}\r\n\r\nfunction getSizeLabels(series) {\r\n    return series.reduce(function(res, singleSeries) {\r\n        var maxWidth = singleSeries.getVisiblePoints().reduce(function(width, point) {\r\n            var labelBBox = getLabelLayout(point);\r\n            if (labelBBox && labelBBox.width > width) {\r\n                width = labelBBox.width\r\n            }\r\n            return width\r\n        }, 0);\r\n        var rWidth = maxWidth;\r\n        if (maxWidth) {\r\n            res.outerLabelsCount++;\r\n            if (res.outerLabelsCount > 1) {\r\n                maxWidth += consts.pieLabelSpacing\r\n            }\r\n            rWidth += consts.pieLabelSpacing\r\n        }\r\n        res.sizes.push(maxWidth);\r\n        res.rSizes.push(rWidth);\r\n        res.common += maxWidth;\r\n        return res\r\n    }, {\r\n        sizes: [],\r\n        rSizes: [],\r\n        common: 0,\r\n        outerLabelsCount: 0\r\n    })\r\n}\r\n\r\nfunction correctLabelRadius(labelSizes, radius, series, canvas, averageWidthLabels, centerX) {\r\n    var curRadius;\r\n    var i;\r\n    var runningWidth = 0;\r\n    var sizes = labelSizes.sizes;\r\n    var rSizes = labelSizes.rSizes;\r\n    for (i = 0; i < series.length; i++) {\r\n        if (0 === sizes[i]) {\r\n            curRadius && (curRadius += rSizes[i - 1]);\r\n            continue\r\n        }\r\n        curRadius = _floor(curRadius ? curRadius + rSizes[i - 1] : radius);\r\n        series[i].correctLabelRadius(curRadius);\r\n        runningWidth += averageWidthLabels || sizes[i];\r\n        rSizes[i] = averageWidthLabels || rSizes[i];\r\n        series[i].setVisibleArea({\r\n            left: _floor(centerX - radius - runningWidth),\r\n            right: _floor(canvas.width - (centerX + radius + runningWidth)),\r\n            top: canvas.top,\r\n            bottom: canvas.bottom,\r\n            width: canvas.width,\r\n            height: canvas.height\r\n        })\r\n    }\r\n}\r\n\r\nfunction getLengthFromCenter(x, y, paneCenterX, paneCenterY) {\r\n    return _sqrt((x - paneCenterX) * (x - paneCenterX) + (y - paneCenterY) * (y - paneCenterY))\r\n}\r\n\r\nfunction getInnerRadius(series) {\r\n    var innerRadius;\r\n    if (\"pie\" === series.type) {\r\n        innerRadius = 0\r\n    } else {\r\n        innerRadius = _isNumber(series.innerRadius) ? Number(series.innerRadius) : .5;\r\n        innerRadius = innerRadius < .2 ? .2 : innerRadius;\r\n        innerRadius = innerRadius > .8 ? .8 : innerRadius\r\n    }\r\n    return innerRadius\r\n}\r\nvar inverseAlign = {\r\n    left: \"right\",\r\n    right: \"left\",\r\n    top: \"bottom\",\r\n    bottom: \"top\",\r\n    center: \"center\"\r\n};\r\n\r\nfunction downSize(canvas, layoutOptions) {\r\n    canvas[layoutOptions.cutLayoutSide] += \"horizontal\" === layoutOptions.cutSide ? layoutOptions.width : layoutOptions.height\r\n}\r\n\r\nfunction getOffset(layoutOptions, offsets) {\r\n    var side = layoutOptions.cutLayoutSide;\r\n    var offset = {\r\n        horizontal: 0,\r\n        vertical: 0\r\n    };\r\n    switch (side) {\r\n        case \"top\":\r\n        case \"left\":\r\n            offset[layoutOptions.cutSide] = -offsets[side];\r\n            break;\r\n        case \"bottom\":\r\n        case \"right\":\r\n            offset[layoutOptions.cutSide] = offsets[side]\r\n    }\r\n    return offset\r\n}\r\n\r\nfunction LayoutManager() {}\r\n\r\nfunction toLayoutElementCoords(canvas) {\r\n    return new layoutElementModule.WrapperLayoutElement(null, {\r\n        x: canvas.left,\r\n        y: canvas.top,\r\n        width: canvas.width - canvas.left - canvas.right,\r\n        height: canvas.height - canvas.top - canvas.bottom\r\n    })\r\n}\r\n\r\nfunction getAverageLabelWidth(centerX, radius, canvas, sizeLabels) {\r\n    return (centerX - radius - RADIAL_LABEL_INDENT - canvas.left) / sizeLabels.outerLabelsCount\r\n}\r\n\r\nfunction getFullRadiusWithLabels(centerX, canvas, sizeLabels) {\r\n    return centerX - canvas.left - (sizeLabels.outerLabelsCount > 0 ? sizeLabels.common + RADIAL_LABEL_INDENT : 0)\r\n}\r\n\r\nfunction correctAvailableRadius(availableRadius, canvas, series, minR, paneCenterX, paneCenterY) {\r\n    var sizeLabels = getSizeLabels(series);\r\n    var averageWidthLabels;\r\n    var fullRadiusWithLabels = getFullRadiusWithLabels(paneCenterX, canvas, sizeLabels);\r\n    if (fullRadiusWithLabels < minR) {\r\n        availableRadius = minR;\r\n        averageWidthLabels = getAverageLabelWidth(paneCenterX, availableRadius, canvas, sizeLabels)\r\n    } else {\r\n        availableRadius = _min(getPieRadius(series, paneCenterX, paneCenterY, availableRadius, minR), fullRadiusWithLabels)\r\n    }\r\n    correctLabelRadius(sizeLabels, availableRadius + RADIAL_LABEL_INDENT, series, canvas, averageWidthLabels, paneCenterX);\r\n    return availableRadius\r\n}\r\nLayoutManager.prototype = {\r\n    constructor: LayoutManager,\r\n    setOptions: function(options) {\r\n        this._options = options\r\n    },\r\n    applyPieChartSeriesLayout: function(canvas, series, hideLayoutLabels) {\r\n        var paneSpaceHeight = canvas.height - canvas.top - canvas.bottom;\r\n        var paneSpaceWidth = canvas.width - canvas.left - canvas.right;\r\n        var paneCenterX = paneSpaceWidth / 2 + canvas.left;\r\n        var paneCenterY = paneSpaceHeight / 2 + canvas.top;\r\n        var piePercentage = this._options.piePercentage;\r\n        var availableRadius;\r\n        var minR;\r\n        if (_isNumber(piePercentage)) {\r\n            availableRadius = minR = piePercentage * _min(canvas.height, canvas.width) / 2\r\n        } else {\r\n            availableRadius = _min(paneSpaceWidth, paneSpaceHeight) / 2;\r\n            minR = this._options.minPiePercentage * availableRadius\r\n        }\r\n        if (!hideLayoutLabels) {\r\n            availableRadius = correctAvailableRadius(availableRadius, canvas, series, minR, paneCenterX, paneCenterY)\r\n        }\r\n        return {\r\n            centerX: _floor(paneCenterX),\r\n            centerY: _floor(paneCenterY),\r\n            radiusInner: _floor(availableRadius * getInnerRadius(series[0])),\r\n            radiusOuter: _floor(availableRadius)\r\n        }\r\n    },\r\n    applyEqualPieChartLayout: function(series, layout) {\r\n        var radius = layout.radius;\r\n        return {\r\n            centerX: _floor(layout.x),\r\n            centerY: _floor(layout.y),\r\n            radiusInner: _floor(radius * getInnerRadius(series[0])),\r\n            radiusOuter: _floor(radius)\r\n        }\r\n    },\r\n    correctPieLabelRadius: function(series, layout, canvas) {\r\n        var sizeLabels = getSizeLabels(series);\r\n        var averageWidthLabels;\r\n        var radius = layout.radiusOuter + RADIAL_LABEL_INDENT;\r\n        var availableLabelWidth = layout.centerX - canvas.left - radius;\r\n        if (sizeLabels.common + RADIAL_LABEL_INDENT > availableLabelWidth) {\r\n            averageWidthLabels = getAverageLabelWidth(layout.centerX, layout.radiusOuter, canvas, sizeLabels)\r\n        }\r\n        correctLabelRadius(sizeLabels, radius, series, canvas, averageWidthLabels, layout.centerX)\r\n    },\r\n    needMoreSpaceForPanesCanvas: function(panes, rotated, fixedSizeCallback) {\r\n        var options = this._options;\r\n        var width = options.width;\r\n        var height = options.height;\r\n        var piePercentage = options.piePercentage;\r\n        var percentageIsValid = _isNumber(piePercentage);\r\n        var needHorizontalSpace = 0;\r\n        var needVerticalSpace = 0;\r\n        panes.forEach(function(pane) {\r\n            var paneCanvas = pane.canvas;\r\n            var minSize = percentageIsValid ? _min(paneCanvas.width, paneCanvas.height) * piePercentage : void 0;\r\n            var paneSized = fixedSizeCallback ? fixedSizeCallback(pane) : {\r\n                width: false,\r\n                height: false\r\n            };\r\n            var needPaneHorizontalSpace = !paneSized.width ? (percentageIsValid ? minSize : width) - (paneCanvas.width - paneCanvas.left - paneCanvas.right) : 0;\r\n            var needPaneVerticalSpace = !paneSized.height ? (percentageIsValid ? minSize : height) - (paneCanvas.height - paneCanvas.top - paneCanvas.bottom) : 0;\r\n            if (rotated) {\r\n                needHorizontalSpace += needPaneHorizontalSpace > 0 ? needPaneHorizontalSpace : 0;\r\n                needVerticalSpace = _max(needPaneVerticalSpace > 0 ? needPaneVerticalSpace : 0, needVerticalSpace)\r\n            } else {\r\n                needHorizontalSpace = _max(needPaneHorizontalSpace > 0 ? needPaneHorizontalSpace : 0, needHorizontalSpace);\r\n                needVerticalSpace += needPaneVerticalSpace > 0 ? needPaneVerticalSpace : 0\r\n            }\r\n        });\r\n        return needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\r\n            width: needHorizontalSpace,\r\n            height: needVerticalSpace\r\n        } : false\r\n    },\r\n    layoutElements: function(elements, canvas, funcAxisDrawer, panes, rotated) {\r\n        this._elements = elements;\r\n        this._probeDrawing(canvas);\r\n        this._drawElements(canvas);\r\n        funcAxisDrawer();\r\n        this._processAdaptiveLayout(panes, rotated, canvas, funcAxisDrawer);\r\n        this._positionElements(canvas)\r\n    },\r\n    _processAdaptiveLayout: function(panes, rotated, canvas, funcAxisDrawer) {\r\n        var that = this;\r\n        var size = that.needMoreSpaceForPanesCanvas(panes, rotated);\r\n        var items = this._elements;\r\n        if (!size) {\r\n            return\r\n        }\r\n\r\n        function processCanvases(item, layoutOptions, side) {\r\n            if (!item.getLayoutOptions()[side]) {\r\n                canvas[layoutOptions.cutLayoutSide] -= layoutOptions[side];\r\n                size[side] = size[side] - layoutOptions[side]\r\n            }\r\n        }\r\n        items.slice().reverse().forEach(function(item) {\r\n            var layoutOptions = item.getLayoutOptions();\r\n            var needRedraw = false;\r\n            var sizeObject;\r\n            var cutSide;\r\n            if (!layoutOptions) {\r\n                return\r\n            }\r\n            sizeObject = extend({}, layoutOptions);\r\n            needRedraw = \"vertical\" === layoutOptions.cutSide && size.width < 0 || \"horizontal\" === layoutOptions.cutSide && size.height < 0 || \"vertical\" === layoutOptions.cutSide && size.height > 0 || \"horizontal\" === layoutOptions.cutSide && size.width > 0;\r\n            cutSide = \"horizontal\" === layoutOptions.cutSide ? \"width\" : \"height\";\r\n            if (needRedraw) {\r\n                var width = sizeObject.width - size.width;\r\n                var height = sizeObject.height - size.height;\r\n                if (\"height\" === cutSide && size.width < 0) {\r\n                    width = canvas.width - canvas.left - canvas.right\r\n                }\r\n                if (\"width\" === cutSide && size.height < 0) {\r\n                    height = canvas.height - canvas.top - canvas.bottom\r\n                }\r\n                item.draw(width, height)\r\n            }\r\n            processCanvases(item, layoutOptions, cutSide)\r\n        });\r\n        funcAxisDrawer(size)\r\n    },\r\n    _probeDrawing: function(canvas) {\r\n        var that = this;\r\n        this._elements.forEach(function(item) {\r\n            var layoutOptions = item.getLayoutOptions();\r\n            var sizeObject;\r\n            if (!layoutOptions) {\r\n                return\r\n            }\r\n            sizeObject = {\r\n                width: canvas.width - canvas.left - canvas.right,\r\n                height: canvas.height - canvas.top - canvas.bottom\r\n            };\r\n            if (\"vertical\" === layoutOptions.cutSide) {\r\n                sizeObject.height -= that._options.height\r\n            } else {\r\n                sizeObject.width -= that._options.width\r\n            }\r\n            item.probeDraw(sizeObject.width, sizeObject.height);\r\n            downSize(canvas, item.getLayoutOptions())\r\n        })\r\n    },\r\n    _drawElements: function(canvas) {\r\n        this._elements.slice().reverse().forEach(function(item) {\r\n            var layoutOptions = item.getLayoutOptions();\r\n            var sizeObject;\r\n            var cutSide;\r\n            var length;\r\n            if (!layoutOptions) {\r\n                return\r\n            }\r\n            sizeObject = {\r\n                width: canvas.width - canvas.left - canvas.right,\r\n                height: canvas.height - canvas.top - canvas.bottom\r\n            };\r\n            cutSide = layoutOptions.cutSide;\r\n            length = \"horizontal\" === cutSide ? \"width\" : \"height\";\r\n            sizeObject[length] = layoutOptions[length];\r\n            item.draw(sizeObject.width, sizeObject.height)\r\n        })\r\n    },\r\n    _positionElements: function(canvas) {\r\n        var offsets = {\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n        this._elements.slice().reverse().forEach(function(item) {\r\n            var layoutOptions = item.getLayoutOptions();\r\n            var position;\r\n            var cutSide;\r\n            var my;\r\n            if (!layoutOptions) {\r\n                return\r\n            }\r\n            position = layoutOptions.position;\r\n            cutSide = layoutOptions.cutSide;\r\n            my = {\r\n                horizontal: position.horizontal,\r\n                vertical: position.vertical\r\n            };\r\n            my[cutSide] = inverseAlign[my[cutSide]];\r\n            item.position({\r\n                of: toLayoutElementCoords(canvas),\r\n                my: my,\r\n                at: position,\r\n                offset: getOffset(layoutOptions, offsets)\r\n            });\r\n            offsets[layoutOptions.cutLayoutSide] += layoutOptions[\"horizontal\" === layoutOptions.cutSide ? \"width\" : \"height\"]\r\n        })\r\n    }\r\n};\r\nexports.LayoutManager = LayoutManager;\r\n"]},"metadata":{},"sourceType":"script"}