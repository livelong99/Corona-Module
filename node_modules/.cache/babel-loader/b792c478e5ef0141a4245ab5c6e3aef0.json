{"ast":null,"code":"/**\r\n * DevExtreme (viz/translators/interval_translator.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar isNumber = typeUtils.isNumeric;\nvar isDefined = typeUtils.isDefined;\n\nvar dateUtils = require(\"../../core/utils/date\");\n\nvar addInterval = dateUtils.addInterval;\nvar dateToMilliseconds = dateUtils.dateToMilliseconds;\nvar floor = Math.floor;\n\nvar adjust = require(\"../../core/utils/math\").adjust;\n\nmodule.exports = {\n  _intervalize: function _intervalize(value, interval) {\n    if (!isDefined(value)) {\n      return;\n    }\n\n    if (\"datetime\" === this._businessRange.dataType) {\n      if (isNumber(value)) {\n        value = new Date(value);\n      } else {\n        value = new Date(value.getTime());\n      }\n\n      value = dateUtils.correctDateWithUnitBeginning(value, interval);\n    } else {\n      value = adjust(floor(adjust(value / interval)) * interval, interval);\n    }\n\n    return value;\n  },\n  translate: function translate(bp, direction, interval) {\n    var that = this;\n    var specialValue = that.translateSpecialCase(bp);\n\n    if (isDefined(specialValue)) {\n      return Math.round(specialValue);\n    }\n\n    interval = interval || that._options.interval;\n\n    if (!that.isValid(bp, interval)) {\n      return null;\n    }\n\n    return that.to(bp, direction, interval);\n  },\n  getInterval: function getInterval() {\n    return Math.round(this._canvasOptions.ratioOfCanvasRange * (this._businessRange.interval || Math.abs(this._canvasOptions.rangeMax - this._canvasOptions.rangeMin)));\n  },\n  zoom: function zoom() {},\n  getMinScale: function getMinScale() {},\n  getScale: function getScale() {},\n  _parse: function _parse(value) {\n    return \"datetime\" === this._businessRange.dataType ? new Date(value) : Number(value);\n  },\n  _fromValue: function _fromValue(value) {\n    return this._parse(value);\n  },\n  _toValue: function _toValue(value) {\n    return this._parse(value);\n  },\n  isValid: function isValid(value, interval) {\n    var that = this;\n    var co = that._canvasOptions;\n    var rangeMin = co.rangeMin;\n    var rangeMax = co.rangeMax;\n    interval = interval || that._options.interval;\n\n    if (null === value || isNaN(value)) {\n      return false;\n    }\n\n    value = \"datetime\" === that._businessRange.dataType && isNumber(value) ? new Date(value) : value;\n\n    if (interval !== that._options.interval) {\n      rangeMin = that._intervalize(rangeMin, interval);\n      rangeMax = that._intervalize(rangeMax, interval);\n    }\n\n    if (value.valueOf() < rangeMin || value.valueOf() >= addInterval(rangeMax, interval)) {\n      return false;\n    }\n\n    return true;\n  },\n  to: function to(bp, direction, interval) {\n    var that = this;\n    interval = interval || that._options.interval;\n\n    var v1 = that._intervalize(bp, interval);\n\n    var v2 = addInterval(v1, interval);\n\n    var res = that._to(v1);\n\n    var p2 = that._to(v2);\n\n    if (!direction) {\n      res = floor((res + p2) / 2);\n    } else {\n      if (direction > 0) {\n        res = p2;\n      }\n    }\n\n    return res;\n  },\n  _to: function _to(value) {\n    var co = this._canvasOptions;\n    var rMin = co.rangeMinVisible;\n    var rMax = co.rangeMaxVisible;\n    var offset = value - rMin;\n\n    if (value < rMin) {\n      offset = 0;\n    } else {\n      if (value > rMax) {\n        offset = addInterval(rMax, this._options.interval) - rMin;\n      }\n    }\n\n    return this._conversionValue(this._calculateProjection(offset * this._canvasOptions.ratioOfCanvasRange));\n  },\n  from: function from(position, direction) {\n    var that = this;\n    var origInterval = that._options.interval;\n    var interval = origInterval;\n    var co = that._canvasOptions;\n    var rMin = co.rangeMinVisible;\n    var rMax = co.rangeMaxVisible;\n    var value;\n\n    if (\"datetime\" === that._businessRange.dataType) {\n      interval = dateToMilliseconds(origInterval);\n    }\n\n    value = that._calculateUnProjection((position - that._canvasOptions.startPoint) / that._canvasOptions.ratioOfCanvasRange);\n    value = that._intervalize(addInterval(value, interval / 2, direction > 0), origInterval);\n\n    if (value < rMin) {\n      value = rMin;\n    } else {\n      if (value > rMax) {\n        value = rMax;\n      }\n    }\n\n    return value;\n  },\n  _add: function _add() {\n    return NaN;\n  },\n  isValueProlonged: true\n};","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/translators/interval_translator.js"],"names":["typeUtils","require","isNumber","isNumeric","isDefined","dateUtils","addInterval","dateToMilliseconds","floor","Math","adjust","module","exports","_intervalize","value","interval","_businessRange","dataType","Date","getTime","correctDateWithUnitBeginning","translate","bp","direction","that","specialValue","translateSpecialCase","round","_options","isValid","to","getInterval","_canvasOptions","ratioOfCanvasRange","abs","rangeMax","rangeMin","zoom","getMinScale","getScale","_parse","Number","_fromValue","_toValue","co","isNaN","valueOf","v1","v2","res","_to","p2","rMin","rangeMinVisible","rMax","rangeMaxVisible","offset","_conversionValue","_calculateProjection","from","position","origInterval","_calculateUnProjection","startPoint","_add","NaN","isValueProlonged"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/translators/interval_translator.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar typeUtils = require(\"../../core/utils/type\");\r\nvar isNumber = typeUtils.isNumeric;\r\nvar isDefined = typeUtils.isDefined;\r\nvar dateUtils = require(\"../../core/utils/date\");\r\nvar addInterval = dateUtils.addInterval;\r\nvar dateToMilliseconds = dateUtils.dateToMilliseconds;\r\nvar floor = Math.floor;\r\nvar adjust = require(\"../../core/utils/math\").adjust;\r\nmodule.exports = {\r\n    _intervalize: function(value, interval) {\r\n        if (!isDefined(value)) {\r\n            return\r\n        }\r\n        if (\"datetime\" === this._businessRange.dataType) {\r\n            if (isNumber(value)) {\r\n                value = new Date(value)\r\n            } else {\r\n                value = new Date(value.getTime())\r\n            }\r\n            value = dateUtils.correctDateWithUnitBeginning(value, interval)\r\n        } else {\r\n            value = adjust(floor(adjust(value / interval)) * interval, interval)\r\n        }\r\n        return value\r\n    },\r\n    translate: function(bp, direction, interval) {\r\n        var that = this;\r\n        var specialValue = that.translateSpecialCase(bp);\r\n        if (isDefined(specialValue)) {\r\n            return Math.round(specialValue)\r\n        }\r\n        interval = interval || that._options.interval;\r\n        if (!that.isValid(bp, interval)) {\r\n            return null\r\n        }\r\n        return that.to(bp, direction, interval)\r\n    },\r\n    getInterval: function() {\r\n        return Math.round(this._canvasOptions.ratioOfCanvasRange * (this._businessRange.interval || Math.abs(this._canvasOptions.rangeMax - this._canvasOptions.rangeMin)))\r\n    },\r\n    zoom: function() {},\r\n    getMinScale: function() {},\r\n    getScale: function() {},\r\n    _parse: function(value) {\r\n        return \"datetime\" === this._businessRange.dataType ? new Date(value) : Number(value)\r\n    },\r\n    _fromValue: function(value) {\r\n        return this._parse(value)\r\n    },\r\n    _toValue: function(value) {\r\n        return this._parse(value)\r\n    },\r\n    isValid: function(value, interval) {\r\n        var that = this;\r\n        var co = that._canvasOptions;\r\n        var rangeMin = co.rangeMin;\r\n        var rangeMax = co.rangeMax;\r\n        interval = interval || that._options.interval;\r\n        if (null === value || isNaN(value)) {\r\n            return false\r\n        }\r\n        value = \"datetime\" === that._businessRange.dataType && isNumber(value) ? new Date(value) : value;\r\n        if (interval !== that._options.interval) {\r\n            rangeMin = that._intervalize(rangeMin, interval);\r\n            rangeMax = that._intervalize(rangeMax, interval)\r\n        }\r\n        if (value.valueOf() < rangeMin || value.valueOf() >= addInterval(rangeMax, interval)) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    to: function(bp, direction, interval) {\r\n        var that = this;\r\n        interval = interval || that._options.interval;\r\n        var v1 = that._intervalize(bp, interval);\r\n        var v2 = addInterval(v1, interval);\r\n        var res = that._to(v1);\r\n        var p2 = that._to(v2);\r\n        if (!direction) {\r\n            res = floor((res + p2) / 2)\r\n        } else {\r\n            if (direction > 0) {\r\n                res = p2\r\n            }\r\n        }\r\n        return res\r\n    },\r\n    _to: function(value) {\r\n        var co = this._canvasOptions;\r\n        var rMin = co.rangeMinVisible;\r\n        var rMax = co.rangeMaxVisible;\r\n        var offset = value - rMin;\r\n        if (value < rMin) {\r\n            offset = 0\r\n        } else {\r\n            if (value > rMax) {\r\n                offset = addInterval(rMax, this._options.interval) - rMin\r\n            }\r\n        }\r\n        return this._conversionValue(this._calculateProjection(offset * this._canvasOptions.ratioOfCanvasRange))\r\n    },\r\n    from: function(position, direction) {\r\n        var that = this;\r\n        var origInterval = that._options.interval;\r\n        var interval = origInterval;\r\n        var co = that._canvasOptions;\r\n        var rMin = co.rangeMinVisible;\r\n        var rMax = co.rangeMaxVisible;\r\n        var value;\r\n        if (\"datetime\" === that._businessRange.dataType) {\r\n            interval = dateToMilliseconds(origInterval)\r\n        }\r\n        value = that._calculateUnProjection((position - that._canvasOptions.startPoint) / that._canvasOptions.ratioOfCanvasRange);\r\n        value = that._intervalize(addInterval(value, interval / 2, direction > 0), origInterval);\r\n        if (value < rMin) {\r\n            value = rMin\r\n        } else {\r\n            if (value > rMax) {\r\n                value = rMax\r\n            }\r\n        }\r\n        return value\r\n    },\r\n    _add: function() {\r\n        return NaN\r\n    },\r\n    isValueProlonged: true\r\n};\r\n"]},"metadata":{},"sourceType":"script"}