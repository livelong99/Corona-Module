{"ast":null,"code":"/**\r\n * DevExtreme (animation/position.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\");\n\nvar commonUtils = require(\"../core/utils/common\");\n\nvar each = require(\"../core/utils/iterator\").each;\n\nvar windowUtils = require(\"../core/utils/window\");\n\nvar window = windowUtils.getWindow();\n\nvar domAdapter = require(\"../core/dom_adapter\");\n\nvar isWindow = require(\"../core/utils/type\").isWindow;\n\nvar extend = require(\"../core/utils/extend\").extend;\n\nvar browser = require(\"../core/utils/browser\");\n\nvar translator = require(\"./translator\");\n\nvar support = require(\"../core/utils/support\");\n\nvar horzRe = /left|right/;\nvar vertRe = /top|bottom/;\nvar collisionRe = /fit|flip|none/;\nvar IS_SAFARI = browser.safari;\n\nvar normalizeAlign = function normalizeAlign(raw) {\n  var result = {\n    h: \"center\",\n    v: \"center\"\n  };\n  var pair = commonUtils.splitPair(raw);\n\n  if (pair) {\n    each(pair, function () {\n      var w = String(this).toLowerCase();\n\n      if (horzRe.test(w)) {\n        result.h = w;\n      } else {\n        if (vertRe.test(w)) {\n          result.v = w;\n        }\n      }\n    });\n  }\n\n  return result;\n};\n\nvar normalizeOffset = function normalizeOffset(raw) {\n  return commonUtils.pairToObject(raw);\n};\n\nvar normalizeCollision = function normalizeCollision(raw) {\n  var pair = commonUtils.splitPair(raw);\n  var h = String(pair && pair[0]).toLowerCase();\n  var v = String(pair && pair[1]).toLowerCase();\n\n  if (!collisionRe.test(h)) {\n    h = \"none\";\n  }\n\n  if (!collisionRe.test(v)) {\n    v = h;\n  }\n\n  return {\n    h: h,\n    v: v\n  };\n};\n\nvar getAlignFactor = function getAlignFactor(align) {\n  switch (align) {\n    case \"center\":\n      return .5;\n\n    case \"right\":\n    case \"bottom\":\n      return 1;\n\n    default:\n      return 0;\n  }\n};\n\nvar inverseAlign = function inverseAlign(align) {\n  switch (align) {\n    case \"left\":\n      return \"right\";\n\n    case \"right\":\n      return \"left\";\n\n    case \"top\":\n      return \"bottom\";\n\n    case \"bottom\":\n      return \"top\";\n\n    default:\n      return align;\n  }\n};\n\nvar calculateOversize = function calculateOversize(data, bounds) {\n  var oversize = 0;\n\n  if (data.myLocation < bounds.min) {\n    oversize += bounds.min - data.myLocation;\n  }\n\n  if (data.myLocation > bounds.max) {\n    oversize += data.myLocation - bounds.max;\n  }\n\n  return oversize;\n};\n\nvar collisionSide = function collisionSide(direction, data, bounds) {\n  if (data.myLocation < bounds.min) {\n    return \"h\" === direction ? \"left\" : \"top\";\n  }\n\n  if (data.myLocation > bounds.max) {\n    return \"h\" === direction ? \"right\" : \"bottom\";\n  }\n\n  return \"none\";\n};\n\nvar initMyLocation = function initMyLocation(data) {\n  data.myLocation = data.atLocation + getAlignFactor(data.atAlign) * data.atSize - getAlignFactor(data.myAlign) * data.mySize + data.offset;\n};\n\nvar collisionResolvers = {\n  fit: function fit(data, bounds) {\n    var result = false;\n\n    if (data.myLocation > bounds.max) {\n      data.myLocation = bounds.max;\n      result = true;\n    }\n\n    if (data.myLocation < bounds.min) {\n      data.myLocation = bounds.min;\n      result = true;\n    }\n\n    data.fit = result;\n  },\n  flip: function flip(data, bounds) {\n    data.flip = false;\n\n    if (\"center\" === data.myAlign && \"center\" === data.atAlign) {\n      return;\n    }\n\n    if (data.myLocation < bounds.min || data.myLocation > bounds.max) {\n      var inverseData = extend({}, data, {\n        myAlign: inverseAlign(data.myAlign),\n        atAlign: inverseAlign(data.atAlign),\n        offset: -data.offset\n      });\n      initMyLocation(inverseData);\n      inverseData.oversize = calculateOversize(inverseData, bounds);\n\n      if (inverseData.myLocation >= bounds.min && inverseData.myLocation <= bounds.max || data.oversize > inverseData.oversize) {\n        data.myLocation = inverseData.myLocation;\n        data.oversize = inverseData.oversize;\n        data.flip = true;\n      }\n    }\n  },\n  flipfit: function flipfit(data, bounds) {\n    this.flip(data, bounds);\n    this.fit(data, bounds);\n  },\n  none: function none(data) {\n    data.oversize = 0;\n  }\n};\nvar scrollbarWidth;\n\nvar calculateScrollbarWidth = function calculateScrollbarWidth() {\n  var $scrollDiv = $(\"<div>\").css({\n    width: 100,\n    height: 100,\n    overflow: \"scroll\",\n    position: \"absolute\",\n    top: -9999\n  }).appendTo($(\"body\"));\n  var result = $scrollDiv.get(0).offsetWidth - $scrollDiv.get(0).clientWidth;\n  $scrollDiv.remove();\n  scrollbarWidth = result;\n};\n\nvar defaultPositionResult = {\n  h: {\n    location: 0,\n    flip: false,\n    fit: false,\n    oversize: 0\n  },\n  v: {\n    location: 0,\n    flip: false,\n    fit: false,\n    oversize: 0\n  }\n};\n\nvar calculatePosition = function calculatePosition(what, options) {\n  var $what = $(what);\n  var currentOffset = $what.offset();\n  var result = extend(true, {}, defaultPositionResult, {\n    h: {\n      location: currentOffset.left\n    },\n    v: {\n      location: currentOffset.top\n    }\n  });\n\n  if (!options) {\n    return result;\n  }\n\n  var my = normalizeAlign(options.my);\n  var at = normalizeAlign(options.at);\n  var of = $(options.of).length && options.of || window;\n  var offset = normalizeOffset(options.offset);\n  var collision = normalizeCollision(options.collision);\n  var boundary = options.boundary;\n  var boundaryOffset = normalizeOffset(options.boundaryOffset);\n  var h = {\n    mySize: $what.outerWidth(),\n    myAlign: my.h,\n    atAlign: at.h,\n    offset: offset.h,\n    collision: collision.h,\n    boundaryOffset: boundaryOffset.h\n  };\n  var v = {\n    mySize: $what.outerHeight(),\n    myAlign: my.v,\n    atAlign: at.v,\n    offset: offset.v,\n    collision: collision.v,\n    boundaryOffset: boundaryOffset.v\n  };\n\n  if (of.preventDefault) {\n    h.atLocation = of.pageX;\n    v.atLocation = of.pageY;\n    h.atSize = 0;\n    v.atSize = 0;\n  } else {\n    of = $(of);\n\n    if (isWindow(of[0])) {\n      h.atLocation = of.scrollLeft();\n      v.atLocation = of.scrollTop();\n      h.atSize = of[0].innerWidth >= of[0].outerWidth ? of[0].innerWidth : of.width();\n      v.atSize = of[0].innerHeight >= of[0].outerHeight || IS_SAFARI ? of[0].innerHeight : of.height();\n    } else {\n      if (9 === of[0].nodeType) {\n        h.atLocation = 0;\n        v.atLocation = 0;\n        h.atSize = of.width();\n        v.atSize = of.height();\n      } else {\n        var o = of.offset();\n        h.atLocation = o.left;\n        v.atLocation = o.top;\n        h.atSize = of.outerWidth();\n        v.atSize = of.outerHeight();\n      }\n    }\n  }\n\n  initMyLocation(h);\n  initMyLocation(v);\n\n  var bounds = function () {\n    var win = $(window);\n    var windowWidth = win.width();\n    var windowHeight = win.height();\n    var left = win.scrollLeft();\n    var top = win.scrollTop();\n    var documentElement = domAdapter.getDocumentElement();\n    var hZoomLevel = support.touch ? documentElement.clientWidth / windowWidth : 1;\n    var vZoomLevel = support.touch ? documentElement.clientHeight / windowHeight : 1;\n\n    if (void 0 === scrollbarWidth) {\n      calculateScrollbarWidth();\n    }\n\n    var boundaryWidth = windowWidth;\n    var boundaryHeight = windowHeight;\n\n    if (boundary) {\n      var $boundary = $(boundary);\n      var boundaryPosition = $boundary.offset();\n      left = boundaryPosition.left;\n      top = boundaryPosition.top;\n      boundaryWidth = $boundary.width();\n      boundaryHeight = $boundary.height();\n    }\n\n    return {\n      h: {\n        min: left + h.boundaryOffset,\n        max: left + boundaryWidth / hZoomLevel - h.mySize - h.boundaryOffset\n      },\n      v: {\n        min: top + v.boundaryOffset,\n        max: top + boundaryHeight / vZoomLevel - v.mySize - v.boundaryOffset\n      }\n    };\n  }();\n\n  h.oversize = calculateOversize(h, bounds.h);\n  v.oversize = calculateOversize(v, bounds.v);\n  h.collisionSide = collisionSide(\"h\", h, bounds.h);\n  v.collisionSide = collisionSide(\"v\", v, bounds.v);\n\n  if (collisionResolvers[h.collision]) {\n    collisionResolvers[h.collision](h, bounds.h);\n  }\n\n  if (collisionResolvers[v.collision]) {\n    collisionResolvers[v.collision](v, bounds.v);\n  }\n\n  var preciser = function preciser(number) {\n    return options.precise ? number : Math.round(number);\n  };\n\n  extend(true, result, {\n    h: {\n      location: preciser(h.myLocation),\n      oversize: preciser(h.oversize),\n      fit: h.fit,\n      flip: h.flip,\n      collisionSide: h.collisionSide\n    },\n    v: {\n      location: preciser(v.myLocation),\n      oversize: preciser(v.oversize),\n      fit: v.fit,\n      flip: v.flip,\n      collisionSide: v.collisionSide\n    },\n    precise: options.precise\n  });\n  return result;\n};\n\nvar position = function position(what, options) {\n  var $what = $(what);\n\n  if (!options) {\n    return $what.offset();\n  }\n\n  translator.resetPosition($what, true);\n  var offset = $what.offset();\n  var targetPosition = options.h && options.v ? options : calculatePosition($what, options);\n\n  var preciser = function preciser(number) {\n    return options.precise ? number : Math.round(number);\n  };\n\n  translator.move($what, {\n    left: targetPosition.h.location - preciser(offset.left),\n    top: targetPosition.v.location - preciser(offset.top)\n  });\n  return targetPosition;\n};\n\nvar offset = function offset(element) {\n  element = $(element).get(0);\n\n  if (isWindow(element)) {\n    return null;\n  } else {\n    if (element && \"pageY\" in element && \"pageX\" in element) {\n      return {\n        top: element.pageY,\n        left: element.pageX\n      };\n    }\n  }\n\n  return $(element).offset();\n};\n\nif (!position.inverseAlign) {\n  position.inverseAlign = inverseAlign;\n}\n\nif (!position.normalizeAlign) {\n  position.normalizeAlign = normalizeAlign;\n}\n\nmodule.exports = {\n  calculateScrollbarWidth: calculateScrollbarWidth,\n  calculate: calculatePosition,\n  setup: position,\n  offset: offset\n};","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/animation/position.js"],"names":["$","require","commonUtils","each","windowUtils","window","getWindow","domAdapter","isWindow","extend","browser","translator","support","horzRe","vertRe","collisionRe","IS_SAFARI","safari","normalizeAlign","raw","result","h","v","pair","splitPair","w","String","toLowerCase","test","normalizeOffset","pairToObject","normalizeCollision","getAlignFactor","align","inverseAlign","calculateOversize","data","bounds","oversize","myLocation","min","max","collisionSide","direction","initMyLocation","atLocation","atAlign","atSize","myAlign","mySize","offset","collisionResolvers","fit","flip","inverseData","flipfit","none","scrollbarWidth","calculateScrollbarWidth","$scrollDiv","css","width","height","overflow","position","top","appendTo","get","offsetWidth","clientWidth","remove","defaultPositionResult","location","calculatePosition","what","options","$what","currentOffset","left","my","at","of","length","collision","boundary","boundaryOffset","outerWidth","outerHeight","preventDefault","pageX","pageY","scrollLeft","scrollTop","innerWidth","innerHeight","nodeType","o","win","windowWidth","windowHeight","documentElement","getDocumentElement","hZoomLevel","touch","vZoomLevel","clientHeight","boundaryWidth","boundaryHeight","$boundary","boundaryPosition","preciser","number","precise","Math","round","resetPosition","targetPosition","move","element","module","exports","calculate","setup"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (animation/position.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar commonUtils = require(\"../core/utils/common\");\r\nvar each = require(\"../core/utils/iterator\").each;\r\nvar windowUtils = require(\"../core/utils/window\");\r\nvar window = windowUtils.getWindow();\r\nvar domAdapter = require(\"../core/dom_adapter\");\r\nvar isWindow = require(\"../core/utils/type\").isWindow;\r\nvar extend = require(\"../core/utils/extend\").extend;\r\nvar browser = require(\"../core/utils/browser\");\r\nvar translator = require(\"./translator\");\r\nvar support = require(\"../core/utils/support\");\r\nvar horzRe = /left|right/;\r\nvar vertRe = /top|bottom/;\r\nvar collisionRe = /fit|flip|none/;\r\nvar IS_SAFARI = browser.safari;\r\nvar normalizeAlign = function(raw) {\r\n    var result = {\r\n        h: \"center\",\r\n        v: \"center\"\r\n    };\r\n    var pair = commonUtils.splitPair(raw);\r\n    if (pair) {\r\n        each(pair, function() {\r\n            var w = String(this).toLowerCase();\r\n            if (horzRe.test(w)) {\r\n                result.h = w\r\n            } else {\r\n                if (vertRe.test(w)) {\r\n                    result.v = w\r\n                }\r\n            }\r\n        })\r\n    }\r\n    return result\r\n};\r\nvar normalizeOffset = function(raw) {\r\n    return commonUtils.pairToObject(raw)\r\n};\r\nvar normalizeCollision = function(raw) {\r\n    var pair = commonUtils.splitPair(raw);\r\n    var h = String(pair && pair[0]).toLowerCase();\r\n    var v = String(pair && pair[1]).toLowerCase();\r\n    if (!collisionRe.test(h)) {\r\n        h = \"none\"\r\n    }\r\n    if (!collisionRe.test(v)) {\r\n        v = h\r\n    }\r\n    return {\r\n        h: h,\r\n        v: v\r\n    }\r\n};\r\nvar getAlignFactor = function(align) {\r\n    switch (align) {\r\n        case \"center\":\r\n            return .5;\r\n        case \"right\":\r\n        case \"bottom\":\r\n            return 1;\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar inverseAlign = function(align) {\r\n    switch (align) {\r\n        case \"left\":\r\n            return \"right\";\r\n        case \"right\":\r\n            return \"left\";\r\n        case \"top\":\r\n            return \"bottom\";\r\n        case \"bottom\":\r\n            return \"top\";\r\n        default:\r\n            return align\r\n    }\r\n};\r\nvar calculateOversize = function(data, bounds) {\r\n    var oversize = 0;\r\n    if (data.myLocation < bounds.min) {\r\n        oversize += bounds.min - data.myLocation\r\n    }\r\n    if (data.myLocation > bounds.max) {\r\n        oversize += data.myLocation - bounds.max\r\n    }\r\n    return oversize\r\n};\r\nvar collisionSide = function(direction, data, bounds) {\r\n    if (data.myLocation < bounds.min) {\r\n        return \"h\" === direction ? \"left\" : \"top\"\r\n    }\r\n    if (data.myLocation > bounds.max) {\r\n        return \"h\" === direction ? \"right\" : \"bottom\"\r\n    }\r\n    return \"none\"\r\n};\r\nvar initMyLocation = function(data) {\r\n    data.myLocation = data.atLocation + getAlignFactor(data.atAlign) * data.atSize - getAlignFactor(data.myAlign) * data.mySize + data.offset\r\n};\r\nvar collisionResolvers = {\r\n    fit: function(data, bounds) {\r\n        var result = false;\r\n        if (data.myLocation > bounds.max) {\r\n            data.myLocation = bounds.max;\r\n            result = true\r\n        }\r\n        if (data.myLocation < bounds.min) {\r\n            data.myLocation = bounds.min;\r\n            result = true\r\n        }\r\n        data.fit = result\r\n    },\r\n    flip: function(data, bounds) {\r\n        data.flip = false;\r\n        if (\"center\" === data.myAlign && \"center\" === data.atAlign) {\r\n            return\r\n        }\r\n        if (data.myLocation < bounds.min || data.myLocation > bounds.max) {\r\n            var inverseData = extend({}, data, {\r\n                myAlign: inverseAlign(data.myAlign),\r\n                atAlign: inverseAlign(data.atAlign),\r\n                offset: -data.offset\r\n            });\r\n            initMyLocation(inverseData);\r\n            inverseData.oversize = calculateOversize(inverseData, bounds);\r\n            if (inverseData.myLocation >= bounds.min && inverseData.myLocation <= bounds.max || data.oversize > inverseData.oversize) {\r\n                data.myLocation = inverseData.myLocation;\r\n                data.oversize = inverseData.oversize;\r\n                data.flip = true\r\n            }\r\n        }\r\n    },\r\n    flipfit: function(data, bounds) {\r\n        this.flip(data, bounds);\r\n        this.fit(data, bounds)\r\n    },\r\n    none: function(data) {\r\n        data.oversize = 0\r\n    }\r\n};\r\nvar scrollbarWidth;\r\nvar calculateScrollbarWidth = function() {\r\n    var $scrollDiv = $(\"<div>\").css({\r\n        width: 100,\r\n        height: 100,\r\n        overflow: \"scroll\",\r\n        position: \"absolute\",\r\n        top: -9999\r\n    }).appendTo($(\"body\"));\r\n    var result = $scrollDiv.get(0).offsetWidth - $scrollDiv.get(0).clientWidth;\r\n    $scrollDiv.remove();\r\n    scrollbarWidth = result\r\n};\r\nvar defaultPositionResult = {\r\n    h: {\r\n        location: 0,\r\n        flip: false,\r\n        fit: false,\r\n        oversize: 0\r\n    },\r\n    v: {\r\n        location: 0,\r\n        flip: false,\r\n        fit: false,\r\n        oversize: 0\r\n    }\r\n};\r\nvar calculatePosition = function(what, options) {\r\n    var $what = $(what);\r\n    var currentOffset = $what.offset();\r\n    var result = extend(true, {}, defaultPositionResult, {\r\n        h: {\r\n            location: currentOffset.left\r\n        },\r\n        v: {\r\n            location: currentOffset.top\r\n        }\r\n    });\r\n    if (!options) {\r\n        return result\r\n    }\r\n    var my = normalizeAlign(options.my);\r\n    var at = normalizeAlign(options.at);\r\n    var of = $(options.of).length && options.of || window;\r\n    var offset = normalizeOffset(options.offset);\r\n    var collision = normalizeCollision(options.collision);\r\n    var boundary = options.boundary;\r\n    var boundaryOffset = normalizeOffset(options.boundaryOffset);\r\n    var h = {\r\n        mySize: $what.outerWidth(),\r\n        myAlign: my.h,\r\n        atAlign: at.h,\r\n        offset: offset.h,\r\n        collision: collision.h,\r\n        boundaryOffset: boundaryOffset.h\r\n    };\r\n    var v = {\r\n        mySize: $what.outerHeight(),\r\n        myAlign: my.v,\r\n        atAlign: at.v,\r\n        offset: offset.v,\r\n        collision: collision.v,\r\n        boundaryOffset: boundaryOffset.v\r\n    };\r\n    if ( of .preventDefault) {\r\n        h.atLocation = of .pageX;\r\n        v.atLocation = of .pageY;\r\n        h.atSize = 0;\r\n        v.atSize = 0\r\n    } else {\r\n        of = $( of );\r\n        if (isWindow( of [0])) {\r\n            h.atLocation = of .scrollLeft();\r\n            v.atLocation = of .scrollTop();\r\n            h.atSize = of [0].innerWidth >= of [0].outerWidth ? of [0].innerWidth : of .width();\r\n            v.atSize = of [0].innerHeight >= of [0].outerHeight || IS_SAFARI ? of [0].innerHeight : of .height()\r\n        } else {\r\n            if (9 === of [0].nodeType) {\r\n                h.atLocation = 0;\r\n                v.atLocation = 0;\r\n                h.atSize = of .width();\r\n                v.atSize = of .height()\r\n            } else {\r\n                var o = of .offset();\r\n                h.atLocation = o.left;\r\n                v.atLocation = o.top;\r\n                h.atSize = of .outerWidth();\r\n                v.atSize = of .outerHeight()\r\n            }\r\n        }\r\n    }\r\n    initMyLocation(h);\r\n    initMyLocation(v);\r\n    var bounds = function() {\r\n        var win = $(window);\r\n        var windowWidth = win.width();\r\n        var windowHeight = win.height();\r\n        var left = win.scrollLeft();\r\n        var top = win.scrollTop();\r\n        var documentElement = domAdapter.getDocumentElement();\r\n        var hZoomLevel = support.touch ? documentElement.clientWidth / windowWidth : 1;\r\n        var vZoomLevel = support.touch ? documentElement.clientHeight / windowHeight : 1;\r\n        if (void 0 === scrollbarWidth) {\r\n            calculateScrollbarWidth()\r\n        }\r\n        var boundaryWidth = windowWidth;\r\n        var boundaryHeight = windowHeight;\r\n        if (boundary) {\r\n            var $boundary = $(boundary);\r\n            var boundaryPosition = $boundary.offset();\r\n            left = boundaryPosition.left;\r\n            top = boundaryPosition.top;\r\n            boundaryWidth = $boundary.width();\r\n            boundaryHeight = $boundary.height()\r\n        }\r\n        return {\r\n            h: {\r\n                min: left + h.boundaryOffset,\r\n                max: left + boundaryWidth / hZoomLevel - h.mySize - h.boundaryOffset\r\n            },\r\n            v: {\r\n                min: top + v.boundaryOffset,\r\n                max: top + boundaryHeight / vZoomLevel - v.mySize - v.boundaryOffset\r\n            }\r\n        }\r\n    }();\r\n    h.oversize = calculateOversize(h, bounds.h);\r\n    v.oversize = calculateOversize(v, bounds.v);\r\n    h.collisionSide = collisionSide(\"h\", h, bounds.h);\r\n    v.collisionSide = collisionSide(\"v\", v, bounds.v);\r\n    if (collisionResolvers[h.collision]) {\r\n        collisionResolvers[h.collision](h, bounds.h)\r\n    }\r\n    if (collisionResolvers[v.collision]) {\r\n        collisionResolvers[v.collision](v, bounds.v)\r\n    }\r\n    var preciser = function(number) {\r\n        return options.precise ? number : Math.round(number)\r\n    };\r\n    extend(true, result, {\r\n        h: {\r\n            location: preciser(h.myLocation),\r\n            oversize: preciser(h.oversize),\r\n            fit: h.fit,\r\n            flip: h.flip,\r\n            collisionSide: h.collisionSide\r\n        },\r\n        v: {\r\n            location: preciser(v.myLocation),\r\n            oversize: preciser(v.oversize),\r\n            fit: v.fit,\r\n            flip: v.flip,\r\n            collisionSide: v.collisionSide\r\n        },\r\n        precise: options.precise\r\n    });\r\n    return result\r\n};\r\nvar position = function(what, options) {\r\n    var $what = $(what);\r\n    if (!options) {\r\n        return $what.offset()\r\n    }\r\n    translator.resetPosition($what, true);\r\n    var offset = $what.offset();\r\n    var targetPosition = options.h && options.v ? options : calculatePosition($what, options);\r\n    var preciser = function(number) {\r\n        return options.precise ? number : Math.round(number)\r\n    };\r\n    translator.move($what, {\r\n        left: targetPosition.h.location - preciser(offset.left),\r\n        top: targetPosition.v.location - preciser(offset.top)\r\n    });\r\n    return targetPosition\r\n};\r\nvar offset = function(element) {\r\n    element = $(element).get(0);\r\n    if (isWindow(element)) {\r\n        return null\r\n    } else {\r\n        if (element && \"pageY\" in element && \"pageX\" in element) {\r\n            return {\r\n                top: element.pageY,\r\n                left: element.pageX\r\n            }\r\n        }\r\n    }\r\n    return $(element).offset()\r\n};\r\nif (!position.inverseAlign) {\r\n    position.inverseAlign = inverseAlign\r\n}\r\nif (!position.normalizeAlign) {\r\n    position.normalizeAlign = normalizeAlign\r\n}\r\nmodule.exports = {\r\n    calculateScrollbarWidth: calculateScrollbarWidth,\r\n    calculate: calculatePosition,\r\n    setup: position,\r\n    offset: offset\r\n};\r\n"]},"metadata":{},"sourceType":"script"}