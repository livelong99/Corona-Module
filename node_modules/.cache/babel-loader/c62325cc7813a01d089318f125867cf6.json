{"ast":null,"code":"/**\r\n * DevExtreme (ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar Class = require(\"../../core/class\");\n\nvar commonUtils = require(\"../../core/utils/common\");\n\nvar iteratorUtils = require(\"../../core/utils/iterator\");\n\nvar each = require(\"../../core/utils/iterator\").each;\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar errors = require(\"../../ui/widget/ui.errors\");\n\nvar getOperationBySearchMode = require(\"../../ui/widget/ui.search_box_mixin\").getOperationBySearchMode;\n\nvar inArray = require(\"../../core/utils/array\").inArray;\n\nvar query = require(\"../../data/query\");\n\nvar storeHelper = require(\"../../data/store_helper\");\n\nvar HierarchicalDataConverter = require(\"./ui.data_converter\");\n\nvar EXPANDED = \"expanded\";\nvar SELECTED = \"selected\";\nvar DISABLED = \"disabled\";\nvar DataAdapter = Class.inherit({\n  ctor: function ctor(options) {\n    this.options = {};\n    extend(this.options, this._defaultOptions(), options);\n    this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\n    this._selectedNodesKeys = [];\n    this._expandedNodesKeys = [];\n    this._dataStructure = [];\n\n    this._createInternalDataStructure();\n\n    this.getTreeNodes();\n  },\n  setOption: function setOption(name, value) {\n    this.options[name] = value;\n\n    if (\"recursiveSelection\" === name) {\n      this._updateSelection();\n    }\n  },\n  _defaultOptions: function _defaultOptions() {\n    return {\n      dataAccessors: void 0,\n      items: [],\n      multipleSelection: true,\n      recursiveSelection: false,\n      recursiveExpansion: false,\n      rootValue: 0,\n      searchValue: \"\",\n      dataType: \"tree\",\n      searchMode: \"contains\",\n      dataConverter: new HierarchicalDataConverter(),\n      onNodeChanged: commonUtils.noop,\n      sort: null\n    };\n  },\n  _createInternalDataStructure: function _createInternalDataStructure() {\n    this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\n    this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\n    this.options.dataConverter._dataStructure = this._dataStructure;\n\n    this._updateSelection();\n\n    this._updateExpansion();\n  },\n  _updateSelection: function _updateSelection() {\n    if (this.options.recursiveSelection) {\n      this._setChildrenSelection();\n\n      this._setParentSelection();\n    }\n\n    this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED);\n  },\n  _updateExpansion: function _updateExpansion(key) {\n    if (this.options.recursiveExpansion) {\n      key ? this._updateOneBranch(key) : this._setParentExpansion();\n    }\n\n    this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED);\n  },\n  _updateNodesKeysArray: function _updateNodesKeysArray(property) {\n    var that = this;\n    var array = [];\n    each(that._getDataBySelectionMode(), function (_, node) {\n      if (!that._isNodeVisible(node)) {\n        return;\n      }\n\n      if (node.internalFields[property]) {\n        if (property === EXPANDED || that.options.multipleSelection) {\n          array.push(node.internalFields.key);\n        } else {\n          array.length && that.toggleSelection(array[0], false, true);\n          array = [node.internalFields.key];\n        }\n      }\n    });\n    return array;\n  },\n  _getDataBySelectionMode: function _getDataBySelectionMode() {\n    return this.options.multipleSelection ? this.getData() : this.getFullData();\n  },\n  _isNodeVisible: function _isNodeVisible(node) {\n    return false !== node.internalFields.item.visible;\n  },\n  _getByKey: function _getByKey(data, key) {\n    return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key);\n  },\n  _setChildrenSelection: function _setChildrenSelection() {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      if (!node.internalFields.childrenKeys.length) {\n        return;\n      }\n\n      var isSelected = node.internalFields.selected;\n      true === isSelected && that._toggleChildrenSelection(node, isSelected);\n    });\n  },\n  _setParentSelection: function _setParentSelection() {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      var parent = that.options.dataConverter.getParentNode(node);\n\n      if (parent && node.internalFields.parentKey !== that.options.rootValue) {\n        that._iterateParents(node, function (parent) {\n          var newParentState = that._calculateSelectedState(parent);\n\n          that._setFieldState(parent, SELECTED, newParentState);\n        });\n      }\n    });\n  },\n  _setParentExpansion: function _setParentExpansion() {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      if (!node.internalFields.expanded) {\n        return;\n      }\n\n      that._updateOneBranch(node.internalFields.key);\n    });\n  },\n  _updateOneBranch: function _updateOneBranch(key) {\n    var that = this;\n    var node = this.getNodeByKey(key);\n\n    that._iterateParents(node, function (parent) {\n      that._setFieldState(parent, EXPANDED, true);\n    });\n  },\n  _iterateChildren: function _iterateChildren(node, recursive, callback, processedKeys) {\n    if (!typeUtils.isFunction(callback)) {\n      return;\n    }\n\n    var that = this;\n    var nodeKey = node.internalFields.key;\n    processedKeys = processedKeys || [];\n\n    if (processedKeys.indexOf(nodeKey) === -1) {\n      processedKeys.push(nodeKey);\n      each(node.internalFields.childrenKeys, function (_, key) {\n        var child = that.getNodeByKey(key);\n        callback(child);\n\n        if (child.internalFields.childrenKeys.length && recursive) {\n          that._iterateChildren(child, recursive, callback, processedKeys);\n        }\n      });\n    }\n  },\n  _iterateParents: function _iterateParents(node, callback, processedKeys) {\n    if (node.internalFields.parentKey === this.options.rootValue || !typeUtils.isFunction(callback)) {\n      return;\n    }\n\n    processedKeys = processedKeys || [];\n    var key = node.internalFields.key;\n\n    if (processedKeys.indexOf(key) === -1) {\n      processedKeys.push(key);\n      var parent = this.options.dataConverter.getParentNode(node);\n\n      if (parent) {\n        callback(parent);\n\n        if (parent.internalFields.parentKey !== this.options.rootValue) {\n          this._iterateParents(parent, callback, processedKeys);\n        }\n      }\n    }\n  },\n  _calculateSelectedState: function _calculateSelectedState(node) {\n    var itemsCount = node.internalFields.childrenKeys.length;\n    var selectedItemsCount = 0;\n    var invisibleItemsCount = 0;\n    var result = false;\n\n    for (var i = 0; i <= itemsCount - 1; i++) {\n      var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]);\n      var isChildInvisible = false === childNode.internalFields.item.visible;\n      var childState = childNode.internalFields.selected;\n\n      if (isChildInvisible) {\n        invisibleItemsCount++;\n        continue;\n      }\n\n      if (childState) {\n        selectedItemsCount++;\n      } else {\n        if (void 0 === childState) {\n          selectedItemsCount += .5;\n        }\n      }\n    }\n\n    if (selectedItemsCount) {\n      result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0;\n    }\n\n    return result;\n  },\n  _toggleChildrenSelection: function _toggleChildrenSelection(node, state) {\n    var that = this;\n\n    this._iterateChildren(node, true, function (child) {\n      if (that._isNodeVisible(child)) {\n        that._setFieldState(child, SELECTED, state);\n      }\n    });\n  },\n  _setFieldState: function _setFieldState(node, field, state) {\n    if (node.internalFields[field] === state) {\n      return;\n    }\n\n    node.internalFields[field] = state;\n\n    if (node.internalFields.publicNode) {\n      node.internalFields.publicNode[field] = state;\n    }\n\n    this.options.dataAccessors.setters[field](node.internalFields.item, state);\n    this.options.onNodeChanged(node);\n  },\n  _markChildren: function _markChildren(keys) {\n    var that = this;\n    each(keys, function (_, key) {\n      var index = that.getIndexByKey(key);\n      var node = that.getNodeByKey(key);\n      that._dataStructure[index] = 0;\n      node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys);\n    });\n  },\n  _removeNode: function _removeNode(key) {\n    var node = this.getNodeByKey(key);\n    this._dataStructure[this.getIndexByKey(key)] = 0;\n\n    this._markChildren(node.internalFields.childrenKeys);\n\n    var that = this;\n    var counter = 0;\n    var items = extend([], this._dataStructure);\n    each(items, function (index, item) {\n      if (!item) {\n        that._dataStructure.splice(index - counter, 1);\n\n        counter++;\n      }\n    });\n  },\n  _addNode: function _addNode(item) {\n    var dataConverter = this.options.dataConverter;\n\n    var node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\n\n    this._dataStructure = this._dataStructure.concat(node);\n    this._initialDataStructure = this._initialDataStructure.concat(node);\n    dataConverter._dataStructure = dataConverter._dataStructure.concat(node);\n  },\n  _updateFields: function _updateFields() {\n    this.options.dataConverter.updateChildrenKeys();\n\n    this._updateSelection();\n\n    this._updateExpansion();\n  },\n  getSelectedNodesKeys: function getSelectedNodesKeys() {\n    return this._selectedNodesKeys;\n  },\n  getExpandedNodesKeys: function getExpandedNodesKeys() {\n    return this._expandedNodesKeys;\n  },\n  getData: function getData() {\n    return this._dataStructure;\n  },\n  getFullData: function getFullData() {\n    return this._initialDataStructure;\n  },\n  getNodeByItem: function getNodeByItem(item) {\n    var result = null;\n    each(this._dataStructure, function (_, node) {\n      if (node.internalFields.item === item) {\n        result = node;\n        return false;\n      }\n    });\n    return result;\n  },\n  getNodesByItems: function getNodesByItems(items) {\n    var that = this;\n    var nodes = [];\n    each(items, function (_, item) {\n      var node = that.getNodeByItem(item);\n      node && nodes.push(node);\n    });\n    return nodes;\n  },\n  getNodeByKey: function getNodeByKey(key, data) {\n    return this._getByKey(data || this._getDataBySelectionMode(), key);\n  },\n  getTreeNodes: function getTreeNodes() {\n    return this.options.dataConverter.convertToPublicNodes(this.getRootNodes());\n  },\n  getItemsCount: function getItemsCount() {\n    return this.options.dataConverter.getItemsCount();\n  },\n  getVisibleItemsCount: function getVisibleItemsCount() {\n    return this.options.dataConverter.getVisibleItemsCount();\n  },\n  getPublicNode: function getPublicNode(node) {\n    return node.internalFields.publicNode;\n  },\n  getRootNodes: function getRootNodes() {\n    return this.getChildrenNodes(this.options.rootValue);\n  },\n  getChildrenNodes: function getChildrenNodes(parentKey) {\n    return query(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray();\n  },\n  getIndexByKey: function getIndexByKey(key) {\n    return this.options.dataConverter.getIndexByKey(key);\n  },\n  addItem: function addItem(item) {\n    this._addNode(item);\n\n    this._updateFields();\n  },\n  removeItem: function removeItem(key) {\n    this._removeNode(key);\n\n    this._updateFields();\n  },\n  toggleSelection: function toggleSelection(key, state, selectRecursive) {\n    var isSingleModeUnselect = this._isSingleModeUnselect(state);\n\n    var node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\n\n    this._setFieldState(node, SELECTED, state);\n\n    if (this.options.recursiveSelection && !selectRecursive) {\n      state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\n\n      this._setParentSelection();\n    }\n\n    this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED);\n  },\n  _isSingleModeUnselect: function _isSingleModeUnselect(selectionState) {\n    return !this.options.multipleSelection && !selectionState;\n  },\n  toggleNodeDisabledState: function toggleNodeDisabledState(key, state) {\n    var node = this.getNodeByKey(key);\n\n    this._setFieldState(node, DISABLED, state);\n  },\n  toggleSelectAll: function toggleSelectAll(state) {\n    if (!typeUtils.isDefined(state)) {\n      return;\n    }\n\n    var that = this;\n    var lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1];\n    var dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\n    each(dataStructure, function (index, node) {\n      if (!that._isNodeVisible(node)) {\n        return;\n      }\n\n      that._setFieldState(node, SELECTED, state);\n    });\n    that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\n\n    if (!state && that.options.selectionRequired) {\n      that.toggleSelection(lastSelectedKey, true);\n    }\n  },\n  isAllSelected: function isAllSelected() {\n    if (this.getSelectedNodesKeys().length) {\n      return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0;\n    } else {\n      return false;\n    }\n  },\n  toggleExpansion: function toggleExpansion(key, state) {\n    var node = this.getNodeByKey(key);\n\n    this._setFieldState(node, EXPANDED, state);\n\n    if (state) {\n      this._updateExpansion(key);\n    }\n\n    this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED);\n  },\n  isFiltered: function isFiltered(item) {\n    return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length;\n  },\n  _createCriteria: function _createCriteria(selector, value, operation) {\n    var searchFilter = [];\n\n    if (!Array.isArray(selector)) {\n      return [selector, operation, value];\n    }\n\n    iteratorUtils.each(selector, function (i, item) {\n      searchFilter.push([item, operation, value], \"or\");\n    });\n    searchFilter.pop();\n    return searchFilter;\n  },\n  _filterDataStructure: function _filterDataStructure(filterValue, dataStructure) {\n    var selector = this.options.searchExpr || this.options.dataAccessors.getters.display;\n    var operation = getOperationBySearchMode(this.options.searchMode);\n\n    var criteria = this._createCriteria(selector, filterValue, operation);\n\n    dataStructure = dataStructure || this._initialDataStructure;\n    return query(dataStructure).filter(criteria).toArray();\n  },\n  search: function search(searchValue) {\n    var that = this;\n\n    var matches = this._filterDataStructure(searchValue);\n\n    var dataConverter = this.options.dataConverter;\n\n    function lookForParents(matches, index) {\n      var length = matches.length;\n\n      while (index < length) {\n        var node = matches[index];\n\n        if (node.internalFields.parentKey === that.options.rootValue) {\n          index++;\n          continue;\n        }\n\n        var parent = dataConverter.getParentNode(node);\n\n        if (!parent) {\n          errors.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\n          index++;\n          continue;\n        }\n\n        if (!parent.internalFields.expanded) {\n          that._setFieldState(parent, EXPANDED, true);\n        }\n\n        if (inArray(parent, matches) > -1) {\n          index++;\n          continue;\n        }\n\n        matches.splice(index, 0, parent);\n        lookForParents(matches, index);\n      }\n    }\n\n    lookForParents(matches, 0);\n\n    if (this.options.sort) {\n      matches = storeHelper.queryByOptions(query(matches), {\n        sort: this.options.sort\n      }).toArray();\n    }\n\n    dataConverter._indexByKey = {};\n    each(matches, function (index, node) {\n      node.internalFields.childrenKeys = [];\n      dataConverter._indexByKey[node.internalFields.key] = index;\n    });\n    dataConverter._dataStructure = matches;\n    dataConverter.setChildrenKeys();\n    return dataConverter._dataStructure;\n  }\n});\nmodule.exports = DataAdapter;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/hierarchical_collection/ui.data_adapter.js"],"names":["Class","require","commonUtils","iteratorUtils","each","typeUtils","extend","errors","getOperationBySearchMode","inArray","query","storeHelper","HierarchicalDataConverter","EXPANDED","SELECTED","DISABLED","DataAdapter","inherit","ctor","options","_defaultOptions","dataConverter","setDataAccessors","dataAccessors","_selectedNodesKeys","_expandedNodesKeys","_dataStructure","_createInternalDataStructure","getTreeNodes","setOption","name","value","_updateSelection","items","multipleSelection","recursiveSelection","recursiveExpansion","rootValue","searchValue","dataType","searchMode","onNodeChanged","noop","sort","_initialDataStructure","createPlainStructure","length","search","_updateExpansion","_setChildrenSelection","_setParentSelection","_updateNodesKeysArray","key","_updateOneBranch","_setParentExpansion","property","that","array","_getDataBySelectionMode","_","node","_isNodeVisible","internalFields","push","toggleSelection","getData","getFullData","item","visible","_getByKey","data","getByKey","childrenKeys","isSelected","selected","_toggleChildrenSelection","parent","getParentNode","parentKey","_iterateParents","newParentState","_calculateSelectedState","_setFieldState","expanded","getNodeByKey","_iterateChildren","recursive","callback","processedKeys","isFunction","nodeKey","indexOf","child","itemsCount","selectedItemsCount","invisibleItemsCount","result","i","childNode","isChildInvisible","childState","state","field","publicNode","setters","_markChildren","keys","index","getIndexByKey","_removeNode","counter","splice","_addNode","_convertItemToNode","getters","concat","_updateFields","updateChildrenKeys","getSelectedNodesKeys","getExpandedNodesKeys","getNodeByItem","getNodesByItems","nodes","convertToPublicNodes","getRootNodes","getItemsCount","getVisibleItemsCount","getPublicNode","getChildrenNodes","filter","toArray","addItem","removeItem","selectRecursive","isSingleModeUnselect","_isSingleModeUnselect","selectionState","toggleNodeDisabledState","toggleSelectAll","isDefined","lastSelectedKey","dataStructure","selectionRequired","isAllSelected","toggleExpansion","isFiltered","_filterDataStructure","_createCriteria","selector","operation","searchFilter","Array","isArray","pop","filterValue","searchExpr","display","criteria","matches","lookForParents","log","queryByOptions","_indexByKey","setChildrenKeys","module","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAAnB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,yBAAD,CAAzB;;AACA,IAAIE,aAAa,GAAGF,OAAO,CAAC,2BAAD,CAA3B;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,2BAAD,CAAP,CAAqCG,IAAhD;;AACA,IAAIC,SAAS,GAAGJ,OAAO,CAAC,uBAAD,CAAvB;;AACA,IAAIK,MAAM,GAAGL,OAAO,CAAC,yBAAD,CAAP,CAAmCK,MAAhD;;AACA,IAAIC,MAAM,GAAGN,OAAO,CAAC,2BAAD,CAApB;;AACA,IAAIO,wBAAwB,GAAGP,OAAO,CAAC,qCAAD,CAAP,CAA+CO,wBAA9E;;AACA,IAAIC,OAAO,GAAGR,OAAO,CAAC,wBAAD,CAAP,CAAkCQ,OAAhD;;AACA,IAAIC,KAAK,GAAGT,OAAO,CAAC,kBAAD,CAAnB;;AACA,IAAIU,WAAW,GAAGV,OAAO,CAAC,yBAAD,CAAzB;;AACA,IAAIW,yBAAyB,GAAGX,OAAO,CAAC,qBAAD,CAAvC;;AACA,IAAIY,QAAQ,GAAG,UAAf;AACA,IAAIC,QAAQ,GAAG,UAAf;AACA,IAAIC,QAAQ,GAAG,UAAf;AACA,IAAIC,WAAW,GAAGhB,KAAK,CAACiB,OAAN,CAAc;AAC5BC,EAAAA,IAAI,EAAE,cAASC,OAAT,EAAkB;AACpB,SAAKA,OAAL,GAAe,EAAf;AACAb,IAAAA,MAAM,CAAC,KAAKa,OAAN,EAAe,KAAKC,eAAL,EAAf,EAAuCD,OAAvC,CAAN;AACA,SAAKA,OAAL,CAAaE,aAAb,CAA2BC,gBAA3B,CAA4C,KAAKH,OAAL,CAAaI,aAAzD;AACA,SAAKC,kBAAL,GAA0B,EAA1B;AACA,SAAKC,kBAAL,GAA0B,EAA1B;AACA,SAAKC,cAAL,GAAsB,EAAtB;;AACA,SAAKC,4BAAL;;AACA,SAAKC,YAAL;AACH,GAV2B;AAW5BC,EAAAA,SAAS,EAAE,mBAASC,IAAT,EAAeC,KAAf,EAAsB;AAC7B,SAAKZ,OAAL,CAAaW,IAAb,IAAqBC,KAArB;;AACA,QAAI,yBAAyBD,IAA7B,EAAmC;AAC/B,WAAKE,gBAAL;AACH;AACJ,GAhB2B;AAiB5BZ,EAAAA,eAAe,EAAE,2BAAW;AACxB,WAAO;AACHG,MAAAA,aAAa,EAAE,KAAK,CADjB;AAEHU,MAAAA,KAAK,EAAE,EAFJ;AAGHC,MAAAA,iBAAiB,EAAE,IAHhB;AAIHC,MAAAA,kBAAkB,EAAE,KAJjB;AAKHC,MAAAA,kBAAkB,EAAE,KALjB;AAMHC,MAAAA,SAAS,EAAE,CANR;AAOHC,MAAAA,WAAW,EAAE,EAPV;AAQHC,MAAAA,QAAQ,EAAE,MARP;AASHC,MAAAA,UAAU,EAAE,UATT;AAUHnB,MAAAA,aAAa,EAAE,IAAIT,yBAAJ,EAVZ;AAWH6B,MAAAA,aAAa,EAAEvC,WAAW,CAACwC,IAXxB;AAYHC,MAAAA,IAAI,EAAE;AAZH,KAAP;AAcH,GAhC2B;AAiC5BhB,EAAAA,4BAA4B,EAAE,wCAAW;AACrC,SAAKiB,qBAAL,GAA6B,KAAKzB,OAAL,CAAaE,aAAb,CAA2BwB,oBAA3B,CAAgD,KAAK1B,OAAL,CAAac,KAA7D,EAAoE,KAAKd,OAAL,CAAakB,SAAjF,EAA4F,KAAKlB,OAAL,CAAaoB,QAAzG,CAA7B;AACA,SAAKb,cAAL,GAAsB,KAAKP,OAAL,CAAamB,WAAb,CAAyBQ,MAAzB,GAAkC,KAAKC,MAAL,CAAY,KAAK5B,OAAL,CAAamB,WAAzB,CAAlC,GAA0E,KAAKM,qBAArG;AACA,SAAKzB,OAAL,CAAaE,aAAb,CAA2BK,cAA3B,GAA4C,KAAKA,cAAjD;;AACA,SAAKM,gBAAL;;AACA,SAAKgB,gBAAL;AACH,GAvC2B;AAwC5BhB,EAAAA,gBAAgB,EAAE,4BAAW;AACzB,QAAI,KAAKb,OAAL,CAAagB,kBAAjB,EAAqC;AACjC,WAAKc,qBAAL;;AACA,WAAKC,mBAAL;AACH;;AACD,SAAK1B,kBAAL,GAA0B,KAAK2B,qBAAL,CAA2BrC,QAA3B,CAA1B;AACH,GA9C2B;AA+C5BkC,EAAAA,gBAAgB,EAAE,0BAASI,GAAT,EAAc;AAC5B,QAAI,KAAKjC,OAAL,CAAaiB,kBAAjB,EAAqC;AACjCgB,MAAAA,GAAG,GAAG,KAAKC,gBAAL,CAAsBD,GAAtB,CAAH,GAAgC,KAAKE,mBAAL,EAAnC;AACH;;AACD,SAAK7B,kBAAL,GAA0B,KAAK0B,qBAAL,CAA2BtC,QAA3B,CAA1B;AACH,GApD2B;AAqD5BsC,EAAAA,qBAAqB,EAAE,+BAASI,QAAT,EAAmB;AACtC,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,KAAK,GAAG,EAAZ;AACArD,IAAAA,IAAI,CAACoD,IAAI,CAACE,uBAAL,EAAD,EAAiC,UAASC,CAAT,EAAYC,IAAZ,EAAkB;AACnD,UAAI,CAACJ,IAAI,CAACK,cAAL,CAAoBD,IAApB,CAAL,EAAgC;AAC5B;AACH;;AACD,UAAIA,IAAI,CAACE,cAAL,CAAoBP,QAApB,CAAJ,EAAmC;AAC/B,YAAIA,QAAQ,KAAK1C,QAAb,IAAyB2C,IAAI,CAACrC,OAAL,CAAae,iBAA1C,EAA6D;AACzDuB,UAAAA,KAAK,CAACM,IAAN,CAAWH,IAAI,CAACE,cAAL,CAAoBV,GAA/B;AACH,SAFD,MAEO;AACHK,UAAAA,KAAK,CAACX,MAAN,IAAgBU,IAAI,CAACQ,eAAL,CAAqBP,KAAK,CAAC,CAAD,CAA1B,EAA+B,KAA/B,EAAsC,IAAtC,CAAhB;AACAA,UAAAA,KAAK,GAAG,CAACG,IAAI,CAACE,cAAL,CAAoBV,GAArB,CAAR;AACH;AACJ;AACJ,KAZG,CAAJ;AAaA,WAAOK,KAAP;AACH,GAtE2B;AAuE5BC,EAAAA,uBAAuB,EAAE,mCAAW;AAChC,WAAO,KAAKvC,OAAL,CAAae,iBAAb,GAAiC,KAAK+B,OAAL,EAAjC,GAAkD,KAAKC,WAAL,EAAzD;AACH,GAzE2B;AA0E5BL,EAAAA,cAAc,EAAE,wBAASD,IAAT,EAAe;AAC3B,WAAO,UAAUA,IAAI,CAACE,cAAL,CAAoBK,IAApB,CAAyBC,OAA1C;AACH,GA5E2B;AA6E5BC,EAAAA,SAAS,EAAE,mBAASC,IAAT,EAAelB,GAAf,EAAoB;AAC3B,WAAOkB,IAAI,KAAK,KAAK5C,cAAd,GAA+B,KAAKP,OAAL,CAAaE,aAAb,CAA2BgD,SAA3B,CAAqCjB,GAArC,CAA/B,GAA2E,KAAKjC,OAAL,CAAaE,aAAb,CAA2BkD,QAA3B,CAAoCD,IAApC,EAA0ClB,GAA1C,CAAlF;AACH,GA/E2B;AAgF5BH,EAAAA,qBAAqB,EAAE,iCAAW;AAC9B,QAAIO,IAAI,GAAG,IAAX;AACApD,IAAAA,IAAI,CAAC,KAAKsB,cAAN,EAAsB,UAASiC,CAAT,EAAYC,IAAZ,EAAkB;AACxC,UAAI,CAACA,IAAI,CAACE,cAAL,CAAoBU,YAApB,CAAiC1B,MAAtC,EAA8C;AAC1C;AACH;;AACD,UAAI2B,UAAU,GAAGb,IAAI,CAACE,cAAL,CAAoBY,QAArC;AACA,eAASD,UAAT,IAAuBjB,IAAI,CAACmB,wBAAL,CAA8Bf,IAA9B,EAAoCa,UAApC,CAAvB;AACH,KANG,CAAJ;AAOH,GAzF2B;AA0F5BvB,EAAAA,mBAAmB,EAAE,+BAAW;AAC5B,QAAIM,IAAI,GAAG,IAAX;AACApD,IAAAA,IAAI,CAAC,KAAKsB,cAAN,EAAsB,UAASiC,CAAT,EAAYC,IAAZ,EAAkB;AACxC,UAAIgB,MAAM,GAAGpB,IAAI,CAACrC,OAAL,CAAaE,aAAb,CAA2BwD,aAA3B,CAAyCjB,IAAzC,CAAb;;AACA,UAAIgB,MAAM,IAAIhB,IAAI,CAACE,cAAL,CAAoBgB,SAApB,KAAkCtB,IAAI,CAACrC,OAAL,CAAakB,SAA7D,EAAwE;AACpEmB,QAAAA,IAAI,CAACuB,eAAL,CAAqBnB,IAArB,EAA2B,UAASgB,MAAT,EAAiB;AACxC,cAAII,cAAc,GAAGxB,IAAI,CAACyB,uBAAL,CAA6BL,MAA7B,CAArB;;AACApB,UAAAA,IAAI,CAAC0B,cAAL,CAAoBN,MAApB,EAA4B9D,QAA5B,EAAsCkE,cAAtC;AACH,SAHD;AAIH;AACJ,KARG,CAAJ;AASH,GArG2B;AAsG5B1B,EAAAA,mBAAmB,EAAE,+BAAW;AAC5B,QAAIE,IAAI,GAAG,IAAX;AACApD,IAAAA,IAAI,CAAC,KAAKsB,cAAN,EAAsB,UAASiC,CAAT,EAAYC,IAAZ,EAAkB;AACxC,UAAI,CAACA,IAAI,CAACE,cAAL,CAAoBqB,QAAzB,EAAmC;AAC/B;AACH;;AACD3B,MAAAA,IAAI,CAACH,gBAAL,CAAsBO,IAAI,CAACE,cAAL,CAAoBV,GAA1C;AACH,KALG,CAAJ;AAMH,GA9G2B;AA+G5BC,EAAAA,gBAAgB,EAAE,0BAASD,GAAT,EAAc;AAC5B,QAAII,IAAI,GAAG,IAAX;AACA,QAAII,IAAI,GAAG,KAAKwB,YAAL,CAAkBhC,GAAlB,CAAX;;AACAI,IAAAA,IAAI,CAACuB,eAAL,CAAqBnB,IAArB,EAA2B,UAASgB,MAAT,EAAiB;AACxCpB,MAAAA,IAAI,CAAC0B,cAAL,CAAoBN,MAApB,EAA4B/D,QAA5B,EAAsC,IAAtC;AACH,KAFD;AAGH,GArH2B;AAsH5BwE,EAAAA,gBAAgB,EAAE,0BAASzB,IAAT,EAAe0B,SAAf,EAA0BC,QAA1B,EAAoCC,aAApC,EAAmD;AACjE,QAAI,CAACnF,SAAS,CAACoF,UAAV,CAAqBF,QAArB,CAAL,EAAqC;AACjC;AACH;;AACD,QAAI/B,IAAI,GAAG,IAAX;AACA,QAAIkC,OAAO,GAAG9B,IAAI,CAACE,cAAL,CAAoBV,GAAlC;AACAoC,IAAAA,aAAa,GAAGA,aAAa,IAAI,EAAjC;;AACA,QAAIA,aAAa,CAACG,OAAd,CAAsBD,OAAtB,MAAmC,CAAC,CAAxC,EAA2C;AACvCF,MAAAA,aAAa,CAACzB,IAAd,CAAmB2B,OAAnB;AACAtF,MAAAA,IAAI,CAACwD,IAAI,CAACE,cAAL,CAAoBU,YAArB,EAAmC,UAASb,CAAT,EAAYP,GAAZ,EAAiB;AACpD,YAAIwC,KAAK,GAAGpC,IAAI,CAAC4B,YAAL,CAAkBhC,GAAlB,CAAZ;AACAmC,QAAAA,QAAQ,CAACK,KAAD,CAAR;;AACA,YAAIA,KAAK,CAAC9B,cAAN,CAAqBU,YAArB,CAAkC1B,MAAlC,IAA4CwC,SAAhD,EAA2D;AACvD9B,UAAAA,IAAI,CAAC6B,gBAAL,CAAsBO,KAAtB,EAA6BN,SAA7B,EAAwCC,QAAxC,EAAkDC,aAAlD;AACH;AACJ,OANG,CAAJ;AAOH;AACJ,GAvI2B;AAwI5BT,EAAAA,eAAe,EAAE,yBAASnB,IAAT,EAAe2B,QAAf,EAAyBC,aAAzB,EAAwC;AACrD,QAAI5B,IAAI,CAACE,cAAL,CAAoBgB,SAApB,KAAkC,KAAK3D,OAAL,CAAakB,SAA/C,IAA4D,CAAChC,SAAS,CAACoF,UAAV,CAAqBF,QAArB,CAAjE,EAAiG;AAC7F;AACH;;AACDC,IAAAA,aAAa,GAAGA,aAAa,IAAI,EAAjC;AACA,QAAIpC,GAAG,GAAGQ,IAAI,CAACE,cAAL,CAAoBV,GAA9B;;AACA,QAAIoC,aAAa,CAACG,OAAd,CAAsBvC,GAAtB,MAA+B,CAAC,CAApC,EAAuC;AACnCoC,MAAAA,aAAa,CAACzB,IAAd,CAAmBX,GAAnB;AACA,UAAIwB,MAAM,GAAG,KAAKzD,OAAL,CAAaE,aAAb,CAA2BwD,aAA3B,CAAyCjB,IAAzC,CAAb;;AACA,UAAIgB,MAAJ,EAAY;AACRW,QAAAA,QAAQ,CAACX,MAAD,CAAR;;AACA,YAAIA,MAAM,CAACd,cAAP,CAAsBgB,SAAtB,KAAoC,KAAK3D,OAAL,CAAakB,SAArD,EAAgE;AAC5D,eAAK0C,eAAL,CAAqBH,MAArB,EAA6BW,QAA7B,EAAuCC,aAAvC;AACH;AACJ;AACJ;AACJ,GAxJ2B;AAyJ5BP,EAAAA,uBAAuB,EAAE,iCAASrB,IAAT,EAAe;AACpC,QAAIiC,UAAU,GAAGjC,IAAI,CAACE,cAAL,CAAoBU,YAApB,CAAiC1B,MAAlD;AACA,QAAIgD,kBAAkB,GAAG,CAAzB;AACA,QAAIC,mBAAmB,GAAG,CAA1B;AACA,QAAIC,MAAM,GAAG,KAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAAU,GAAG,CAAlC,EAAqCI,CAAC,EAAtC,EAA0C;AACtC,UAAIC,SAAS,GAAG,KAAKd,YAAL,CAAkBxB,IAAI,CAACE,cAAL,CAAoBU,YAApB,CAAiCyB,CAAjC,CAAlB,CAAhB;AACA,UAAIE,gBAAgB,GAAG,UAAUD,SAAS,CAACpC,cAAV,CAAyBK,IAAzB,CAA8BC,OAA/D;AACA,UAAIgC,UAAU,GAAGF,SAAS,CAACpC,cAAV,CAAyBY,QAA1C;;AACA,UAAIyB,gBAAJ,EAAsB;AAClBJ,QAAAA,mBAAmB;AACnB;AACH;;AACD,UAAIK,UAAJ,EAAgB;AACZN,QAAAA,kBAAkB;AACrB,OAFD,MAEO;AACH,YAAI,KAAK,CAAL,KAAWM,UAAf,EAA2B;AACvBN,UAAAA,kBAAkB,IAAI,EAAtB;AACH;AACJ;AACJ;;AACD,QAAIA,kBAAJ,EAAwB;AACpBE,MAAAA,MAAM,GAAGF,kBAAkB,KAAKD,UAAU,GAAGE,mBAApC,GAA0D,IAA1D,GAAiE,KAAK,CAA/E;AACH;;AACD,WAAOC,MAAP;AACH,GAlL2B;AAmL5BrB,EAAAA,wBAAwB,EAAE,kCAASf,IAAT,EAAeyC,KAAf,EAAsB;AAC5C,QAAI7C,IAAI,GAAG,IAAX;;AACA,SAAK6B,gBAAL,CAAsBzB,IAAtB,EAA4B,IAA5B,EAAkC,UAASgC,KAAT,EAAgB;AAC9C,UAAIpC,IAAI,CAACK,cAAL,CAAoB+B,KAApB,CAAJ,EAAgC;AAC5BpC,QAAAA,IAAI,CAAC0B,cAAL,CAAoBU,KAApB,EAA2B9E,QAA3B,EAAqCuF,KAArC;AACH;AACJ,KAJD;AAKH,GA1L2B;AA2L5BnB,EAAAA,cAAc,EAAE,wBAAStB,IAAT,EAAe0C,KAAf,EAAsBD,KAAtB,EAA6B;AACzC,QAAIzC,IAAI,CAACE,cAAL,CAAoBwC,KAApB,MAA+BD,KAAnC,EAA0C;AACtC;AACH;;AACDzC,IAAAA,IAAI,CAACE,cAAL,CAAoBwC,KAApB,IAA6BD,KAA7B;;AACA,QAAIzC,IAAI,CAACE,cAAL,CAAoByC,UAAxB,EAAoC;AAChC3C,MAAAA,IAAI,CAACE,cAAL,CAAoByC,UAApB,CAA+BD,KAA/B,IAAwCD,KAAxC;AACH;;AACD,SAAKlF,OAAL,CAAaI,aAAb,CAA2BiF,OAA3B,CAAmCF,KAAnC,EAA0C1C,IAAI,CAACE,cAAL,CAAoBK,IAA9D,EAAoEkC,KAApE;AACA,SAAKlF,OAAL,CAAasB,aAAb,CAA2BmB,IAA3B;AACH,GArM2B;AAsM5B6C,EAAAA,aAAa,EAAE,uBAASC,IAAT,EAAe;AAC1B,QAAIlD,IAAI,GAAG,IAAX;AACApD,IAAAA,IAAI,CAACsG,IAAD,EAAO,UAAS/C,CAAT,EAAYP,GAAZ,EAAiB;AACxB,UAAIuD,KAAK,GAAGnD,IAAI,CAACoD,aAAL,CAAmBxD,GAAnB,CAAZ;AACA,UAAIQ,IAAI,GAAGJ,IAAI,CAAC4B,YAAL,CAAkBhC,GAAlB,CAAX;AACAI,MAAAA,IAAI,CAAC9B,cAAL,CAAoBiF,KAApB,IAA6B,CAA7B;AACA/C,MAAAA,IAAI,CAACE,cAAL,CAAoBU,YAApB,CAAiC1B,MAAjC,IAA2CU,IAAI,CAACiD,aAAL,CAAmB7C,IAAI,CAACE,cAAL,CAAoBU,YAAvC,CAA3C;AACH,KALG,CAAJ;AAMH,GA9M2B;AA+M5BqC,EAAAA,WAAW,EAAE,qBAASzD,GAAT,EAAc;AACvB,QAAIQ,IAAI,GAAG,KAAKwB,YAAL,CAAkBhC,GAAlB,CAAX;AACA,SAAK1B,cAAL,CAAoB,KAAKkF,aAAL,CAAmBxD,GAAnB,CAApB,IAA+C,CAA/C;;AACA,SAAKqD,aAAL,CAAmB7C,IAAI,CAACE,cAAL,CAAoBU,YAAvC;;AACA,QAAIhB,IAAI,GAAG,IAAX;AACA,QAAIsD,OAAO,GAAG,CAAd;AACA,QAAI7E,KAAK,GAAG3B,MAAM,CAAC,EAAD,EAAK,KAAKoB,cAAV,CAAlB;AACAtB,IAAAA,IAAI,CAAC6B,KAAD,EAAQ,UAAS0E,KAAT,EAAgBxC,IAAhB,EAAsB;AAC9B,UAAI,CAACA,IAAL,EAAW;AACPX,QAAAA,IAAI,CAAC9B,cAAL,CAAoBqF,MAApB,CAA2BJ,KAAK,GAAGG,OAAnC,EAA4C,CAA5C;;AACAA,QAAAA,OAAO;AACV;AACJ,KALG,CAAJ;AAMH,GA5N2B;AA6N5BE,EAAAA,QAAQ,EAAE,kBAAS7C,IAAT,EAAe;AACrB,QAAI9C,aAAa,GAAG,KAAKF,OAAL,CAAaE,aAAjC;;AACA,QAAIuC,IAAI,GAAGvC,aAAa,CAAC4F,kBAAd,CAAiC9C,IAAjC,EAAuC,KAAKhD,OAAL,CAAaI,aAAb,CAA2B2F,OAA3B,CAAmCpC,SAAnC,CAA6CX,IAA7C,CAAvC,CAAX;;AACA,SAAKzC,cAAL,GAAsB,KAAKA,cAAL,CAAoByF,MAApB,CAA2BvD,IAA3B,CAAtB;AACA,SAAKhB,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BuE,MAA3B,CAAkCvD,IAAlC,CAA7B;AACAvC,IAAAA,aAAa,CAACK,cAAd,GAA+BL,aAAa,CAACK,cAAd,CAA6ByF,MAA7B,CAAoCvD,IAApC,CAA/B;AACH,GAnO2B;AAoO5BwD,EAAAA,aAAa,EAAE,yBAAW;AACtB,SAAKjG,OAAL,CAAaE,aAAb,CAA2BgG,kBAA3B;;AACA,SAAKrF,gBAAL;;AACA,SAAKgB,gBAAL;AACH,GAxO2B;AAyO5BsE,EAAAA,oBAAoB,EAAE,gCAAW;AAC7B,WAAO,KAAK9F,kBAAZ;AACH,GA3O2B;AA4O5B+F,EAAAA,oBAAoB,EAAE,gCAAW;AAC7B,WAAO,KAAK9F,kBAAZ;AACH,GA9O2B;AA+O5BwC,EAAAA,OAAO,EAAE,mBAAW;AAChB,WAAO,KAAKvC,cAAZ;AACH,GAjP2B;AAkP5BwC,EAAAA,WAAW,EAAE,uBAAW;AACpB,WAAO,KAAKtB,qBAAZ;AACH,GApP2B;AAqP5B4E,EAAAA,aAAa,EAAE,uBAASrD,IAAT,EAAe;AAC1B,QAAI6B,MAAM,GAAG,IAAb;AACA5F,IAAAA,IAAI,CAAC,KAAKsB,cAAN,EAAsB,UAASiC,CAAT,EAAYC,IAAZ,EAAkB;AACxC,UAAIA,IAAI,CAACE,cAAL,CAAoBK,IAApB,KAA6BA,IAAjC,EAAuC;AACnC6B,QAAAA,MAAM,GAAGpC,IAAT;AACA,eAAO,KAAP;AACH;AACJ,KALG,CAAJ;AAMA,WAAOoC,MAAP;AACH,GA9P2B;AA+P5ByB,EAAAA,eAAe,EAAE,yBAASxF,KAAT,EAAgB;AAC7B,QAAIuB,IAAI,GAAG,IAAX;AACA,QAAIkE,KAAK,GAAG,EAAZ;AACAtH,IAAAA,IAAI,CAAC6B,KAAD,EAAQ,UAAS0B,CAAT,EAAYQ,IAAZ,EAAkB;AAC1B,UAAIP,IAAI,GAAGJ,IAAI,CAACgE,aAAL,CAAmBrD,IAAnB,CAAX;AACAP,MAAAA,IAAI,IAAI8D,KAAK,CAAC3D,IAAN,CAAWH,IAAX,CAAR;AACH,KAHG,CAAJ;AAIA,WAAO8D,KAAP;AACH,GAvQ2B;AAwQ5BtC,EAAAA,YAAY,EAAE,sBAAShC,GAAT,EAAckB,IAAd,EAAoB;AAC9B,WAAO,KAAKD,SAAL,CAAeC,IAAI,IAAI,KAAKZ,uBAAL,EAAvB,EAAuDN,GAAvD,CAAP;AACH,GA1Q2B;AA2Q5BxB,EAAAA,YAAY,EAAE,wBAAW;AACrB,WAAO,KAAKT,OAAL,CAAaE,aAAb,CAA2BsG,oBAA3B,CAAgD,KAAKC,YAAL,EAAhD,CAAP;AACH,GA7Q2B;AA8Q5BC,EAAAA,aAAa,EAAE,yBAAW;AACtB,WAAO,KAAK1G,OAAL,CAAaE,aAAb,CAA2BwG,aAA3B,EAAP;AACH,GAhR2B;AAiR5BC,EAAAA,oBAAoB,EAAE,gCAAW;AAC7B,WAAO,KAAK3G,OAAL,CAAaE,aAAb,CAA2ByG,oBAA3B,EAAP;AACH,GAnR2B;AAoR5BC,EAAAA,aAAa,EAAE,uBAASnE,IAAT,EAAe;AAC1B,WAAOA,IAAI,CAACE,cAAL,CAAoByC,UAA3B;AACH,GAtR2B;AAuR5BqB,EAAAA,YAAY,EAAE,wBAAW;AACrB,WAAO,KAAKI,gBAAL,CAAsB,KAAK7G,OAAL,CAAakB,SAAnC,CAAP;AACH,GAzR2B;AA0R5B2F,EAAAA,gBAAgB,EAAE,0BAASlD,SAAT,EAAoB;AAClC,WAAOpE,KAAK,CAAC,KAAKgB,cAAN,CAAL,CAA2BuG,MAA3B,CAAkC,CAAC,0BAAD,EAA6BnD,SAA7B,CAAlC,EAA2EoD,OAA3E,EAAP;AACH,GA5R2B;AA6R5BtB,EAAAA,aAAa,EAAE,uBAASxD,GAAT,EAAc;AACzB,WAAO,KAAKjC,OAAL,CAAaE,aAAb,CAA2BuF,aAA3B,CAAyCxD,GAAzC,CAAP;AACH,GA/R2B;AAgS5B+E,EAAAA,OAAO,EAAE,iBAAShE,IAAT,EAAe;AACpB,SAAK6C,QAAL,CAAc7C,IAAd;;AACA,SAAKiD,aAAL;AACH,GAnS2B;AAoS5BgB,EAAAA,UAAU,EAAE,oBAAShF,GAAT,EAAc;AACtB,SAAKyD,WAAL,CAAiBzD,GAAjB;;AACA,SAAKgE,aAAL;AACH,GAvS2B;AAwS5BpD,EAAAA,eAAe,EAAE,yBAASZ,GAAT,EAAciD,KAAd,EAAqBgC,eAArB,EAAsC;AACnD,QAAIC,oBAAoB,GAAG,KAAKC,qBAAL,CAA2BlC,KAA3B,CAA3B;;AACA,QAAIzC,IAAI,GAAG,KAAKS,SAAL,CAAegE,eAAe,IAAIC,oBAAnB,GAA0C,KAAK1F,qBAA/C,GAAuE,KAAKlB,cAA3F,EAA2G0B,GAA3G,CAAX;;AACA,SAAK8B,cAAL,CAAoBtB,IAApB,EAA0B9C,QAA1B,EAAoCuF,KAApC;;AACA,QAAI,KAAKlF,OAAL,CAAagB,kBAAb,IAAmC,CAACkG,eAAxC,EAAyD;AACrDhC,MAAAA,KAAK,GAAG,KAAKpD,qBAAL,EAAH,GAAkC,KAAK0B,wBAAL,CAA8Bf,IAA9B,EAAoCyC,KAApC,CAAvC;;AACA,WAAKnD,mBAAL;AACH;;AACD,SAAK1B,kBAAL,GAA0B,KAAK2B,qBAAL,CAA2BrC,QAA3B,CAA1B;AACH,GAjT2B;AAkT5ByH,EAAAA,qBAAqB,EAAE,+BAASC,cAAT,EAAyB;AAC5C,WAAO,CAAC,KAAKrH,OAAL,CAAae,iBAAd,IAAmC,CAACsG,cAA3C;AACH,GApT2B;AAqT5BC,EAAAA,uBAAuB,EAAE,iCAASrF,GAAT,EAAciD,KAAd,EAAqB;AAC1C,QAAIzC,IAAI,GAAG,KAAKwB,YAAL,CAAkBhC,GAAlB,CAAX;;AACA,SAAK8B,cAAL,CAAoBtB,IAApB,EAA0B7C,QAA1B,EAAoCsF,KAApC;AACH,GAxT2B;AAyT5BqC,EAAAA,eAAe,EAAE,yBAASrC,KAAT,EAAgB;AAC7B,QAAI,CAAChG,SAAS,CAACsI,SAAV,CAAoBtC,KAApB,CAAL,EAAiC;AAC7B;AACH;;AACD,QAAI7C,IAAI,GAAG,IAAX;AACA,QAAIoF,eAAe,GAAGpF,IAAI,CAAChC,kBAAL,CAAwBgC,IAAI,CAAChC,kBAAL,CAAwBsB,MAAxB,GAAiC,CAAzD,CAAtB;AACA,QAAI+F,aAAa,GAAGrF,IAAI,CAAC+E,qBAAL,CAA2BlC,KAA3B,IAAoC,KAAKzD,qBAAzC,GAAiE,KAAKlB,cAA1F;AACAtB,IAAAA,IAAI,CAACyI,aAAD,EAAgB,UAASlC,KAAT,EAAgB/C,IAAhB,EAAsB;AACtC,UAAI,CAACJ,IAAI,CAACK,cAAL,CAAoBD,IAApB,CAAL,EAAgC;AAC5B;AACH;;AACDJ,MAAAA,IAAI,CAAC0B,cAAL,CAAoBtB,IAApB,EAA0B9C,QAA1B,EAAoCuF,KAApC;AACH,KALG,CAAJ;AAMA7C,IAAAA,IAAI,CAAChC,kBAAL,GAA0BgC,IAAI,CAACL,qBAAL,CAA2BrC,QAA3B,CAA1B;;AACA,QAAI,CAACuF,KAAD,IAAU7C,IAAI,CAACrC,OAAL,CAAa2H,iBAA3B,EAA8C;AAC1CtF,MAAAA,IAAI,CAACQ,eAAL,CAAqB4E,eAArB,EAAsC,IAAtC;AACH;AACJ,GA1U2B;AA2U5BG,EAAAA,aAAa,EAAE,yBAAW;AACtB,QAAI,KAAKzB,oBAAL,GAA4BxE,MAAhC,EAAwC;AACpC,aAAO,KAAKwE,oBAAL,GAA4BxE,MAA5B,KAAuC,KAAKgF,oBAAL,EAAvC,GAAqE,IAArE,GAA4E,KAAK,CAAxF;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ,GAjV2B;AAkV5BkB,EAAAA,eAAe,EAAE,yBAAS5F,GAAT,EAAciD,KAAd,EAAqB;AAClC,QAAIzC,IAAI,GAAG,KAAKwB,YAAL,CAAkBhC,GAAlB,CAAX;;AACA,SAAK8B,cAAL,CAAoBtB,IAApB,EAA0B/C,QAA1B,EAAoCwF,KAApC;;AACA,QAAIA,KAAJ,EAAW;AACP,WAAKrD,gBAAL,CAAsBI,GAAtB;AACH;;AACD,SAAK3B,kBAAL,GAA0B,KAAK0B,qBAAL,CAA2BtC,QAA3B,CAA1B;AACH,GAzV2B;AA0V5BoI,EAAAA,UAAU,EAAE,oBAAS9E,IAAT,EAAe;AACvB,WAAO,CAAC,KAAKhD,OAAL,CAAamB,WAAb,CAAyBQ,MAA1B,IAAoC,CAAC,CAAC,KAAKoG,oBAAL,CAA0B,KAAK/H,OAAL,CAAamB,WAAvC,EAAoD,CAAC6B,IAAD,CAApD,EAA4DrB,MAAzG;AACH,GA5V2B;AA6V5BqG,EAAAA,eAAe,EAAE,yBAASC,QAAT,EAAmBrH,KAAnB,EAA0BsH,SAA1B,EAAqC;AAClD,QAAIC,YAAY,GAAG,EAAnB;;AACA,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcJ,QAAd,CAAL,EAA8B;AAC1B,aAAO,CAACA,QAAD,EAAWC,SAAX,EAAsBtH,KAAtB,CAAP;AACH;;AACD5B,IAAAA,aAAa,CAACC,IAAd,CAAmBgJ,QAAnB,EAA6B,UAASnD,CAAT,EAAY9B,IAAZ,EAAkB;AAC3CmF,MAAAA,YAAY,CAACvF,IAAb,CAAkB,CAACI,IAAD,EAAOkF,SAAP,EAAkBtH,KAAlB,CAAlB,EAA4C,IAA5C;AACH,KAFD;AAGAuH,IAAAA,YAAY,CAACG,GAAb;AACA,WAAOH,YAAP;AACH,GAvW2B;AAwW5BJ,EAAAA,oBAAoB,EAAE,8BAASQ,WAAT,EAAsBb,aAAtB,EAAqC;AACvD,QAAIO,QAAQ,GAAG,KAAKjI,OAAL,CAAawI,UAAb,IAA2B,KAAKxI,OAAL,CAAaI,aAAb,CAA2B2F,OAA3B,CAAmC0C,OAA7E;AACA,QAAIP,SAAS,GAAG7I,wBAAwB,CAAC,KAAKW,OAAL,CAAaqB,UAAd,CAAxC;;AACA,QAAIqH,QAAQ,GAAG,KAAKV,eAAL,CAAqBC,QAArB,EAA+BM,WAA/B,EAA4CL,SAA5C,CAAf;;AACAR,IAAAA,aAAa,GAAGA,aAAa,IAAI,KAAKjG,qBAAtC;AACA,WAAOlC,KAAK,CAACmI,aAAD,CAAL,CAAqBZ,MAArB,CAA4B4B,QAA5B,EAAsC3B,OAAtC,EAAP;AACH,GA9W2B;AA+W5BnF,EAAAA,MAAM,EAAE,gBAAST,WAAT,EAAsB;AAC1B,QAAIkB,IAAI,GAAG,IAAX;;AACA,QAAIsG,OAAO,GAAG,KAAKZ,oBAAL,CAA0B5G,WAA1B,CAAd;;AACA,QAAIjB,aAAa,GAAG,KAAKF,OAAL,CAAaE,aAAjC;;AAEA,aAAS0I,cAAT,CAAwBD,OAAxB,EAAiCnD,KAAjC,EAAwC;AACpC,UAAI7D,MAAM,GAAGgH,OAAO,CAAChH,MAArB;;AACA,aAAO6D,KAAK,GAAG7D,MAAf,EAAuB;AACnB,YAAIc,IAAI,GAAGkG,OAAO,CAACnD,KAAD,CAAlB;;AACA,YAAI/C,IAAI,CAACE,cAAL,CAAoBgB,SAApB,KAAkCtB,IAAI,CAACrC,OAAL,CAAakB,SAAnD,EAA8D;AAC1DsE,UAAAA,KAAK;AACL;AACH;;AACD,YAAI/B,MAAM,GAAGvD,aAAa,CAACwD,aAAd,CAA4BjB,IAA5B,CAAb;;AACA,YAAI,CAACgB,MAAL,EAAa;AACTrE,UAAAA,MAAM,CAACyJ,GAAP,CAAW,OAAX,EAAoBpG,IAAI,CAACE,cAAL,CAAoBgB,SAAxC,EAAmDlB,IAAI,CAACE,cAAL,CAAoBV,GAAvE;AACAuD,UAAAA,KAAK;AACL;AACH;;AACD,YAAI,CAAC/B,MAAM,CAACd,cAAP,CAAsBqB,QAA3B,EAAqC;AACjC3B,UAAAA,IAAI,CAAC0B,cAAL,CAAoBN,MAApB,EAA4B/D,QAA5B,EAAsC,IAAtC;AACH;;AACD,YAAIJ,OAAO,CAACmE,MAAD,EAASkF,OAAT,CAAP,GAA2B,CAAC,CAAhC,EAAmC;AAC/BnD,UAAAA,KAAK;AACL;AACH;;AACDmD,QAAAA,OAAO,CAAC/C,MAAR,CAAeJ,KAAf,EAAsB,CAAtB,EAAyB/B,MAAzB;AACAmF,QAAAA,cAAc,CAACD,OAAD,EAAUnD,KAAV,CAAd;AACH;AACJ;;AACDoD,IAAAA,cAAc,CAACD,OAAD,EAAU,CAAV,CAAd;;AACA,QAAI,KAAK3I,OAAL,CAAawB,IAAjB,EAAuB;AACnBmH,MAAAA,OAAO,GAAGnJ,WAAW,CAACsJ,cAAZ,CAA2BvJ,KAAK,CAACoJ,OAAD,CAAhC,EAA2C;AACjDnH,QAAAA,IAAI,EAAE,KAAKxB,OAAL,CAAawB;AAD8B,OAA3C,EAEPuF,OAFO,EAAV;AAGH;;AACD7G,IAAAA,aAAa,CAAC6I,WAAd,GAA4B,EAA5B;AACA9J,IAAAA,IAAI,CAAC0J,OAAD,EAAU,UAASnD,KAAT,EAAgB/C,IAAhB,EAAsB;AAChCA,MAAAA,IAAI,CAACE,cAAL,CAAoBU,YAApB,GAAmC,EAAnC;AACAnD,MAAAA,aAAa,CAAC6I,WAAd,CAA0BtG,IAAI,CAACE,cAAL,CAAoBV,GAA9C,IAAqDuD,KAArD;AACH,KAHG,CAAJ;AAIAtF,IAAAA,aAAa,CAACK,cAAd,GAA+BoI,OAA/B;AACAzI,IAAAA,aAAa,CAAC8I,eAAd;AACA,WAAO9I,aAAa,CAACK,cAArB;AACH;AA3Z2B,CAAd,CAAlB;AA6ZA0I,MAAM,CAACC,OAAP,GAAiBrJ,WAAjB","sourcesContent":["/**\r\n * DevExtreme (ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar Class = require(\"../../core/class\");\r\nvar commonUtils = require(\"../../core/utils/common\");\r\nvar iteratorUtils = require(\"../../core/utils/iterator\");\r\nvar each = require(\"../../core/utils/iterator\").each;\r\nvar typeUtils = require(\"../../core/utils/type\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar errors = require(\"../../ui/widget/ui.errors\");\r\nvar getOperationBySearchMode = require(\"../../ui/widget/ui.search_box_mixin\").getOperationBySearchMode;\r\nvar inArray = require(\"../../core/utils/array\").inArray;\r\nvar query = require(\"../../data/query\");\r\nvar storeHelper = require(\"../../data/store_helper\");\r\nvar HierarchicalDataConverter = require(\"./ui.data_converter\");\r\nvar EXPANDED = \"expanded\";\r\nvar SELECTED = \"selected\";\r\nvar DISABLED = \"disabled\";\r\nvar DataAdapter = Class.inherit({\r\n    ctor: function(options) {\r\n        this.options = {};\r\n        extend(this.options, this._defaultOptions(), options);\r\n        this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\r\n        this._selectedNodesKeys = [];\r\n        this._expandedNodesKeys = [];\r\n        this._dataStructure = [];\r\n        this._createInternalDataStructure();\r\n        this.getTreeNodes()\r\n    },\r\n    setOption: function(name, value) {\r\n        this.options[name] = value;\r\n        if (\"recursiveSelection\" === name) {\r\n            this._updateSelection()\r\n        }\r\n    },\r\n    _defaultOptions: function() {\r\n        return {\r\n            dataAccessors: void 0,\r\n            items: [],\r\n            multipleSelection: true,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            rootValue: 0,\r\n            searchValue: \"\",\r\n            dataType: \"tree\",\r\n            searchMode: \"contains\",\r\n            dataConverter: new HierarchicalDataConverter,\r\n            onNodeChanged: commonUtils.noop,\r\n            sort: null\r\n        }\r\n    },\r\n    _createInternalDataStructure: function() {\r\n        this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\r\n        this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\r\n        this.options.dataConverter._dataStructure = this._dataStructure;\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    _updateSelection: function() {\r\n        if (this.options.recursiveSelection) {\r\n            this._setChildrenSelection();\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _updateExpansion: function(key) {\r\n        if (this.options.recursiveExpansion) {\r\n            key ? this._updateOneBranch(key) : this._setParentExpansion()\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    _updateNodesKeysArray: function(property) {\r\n        var that = this;\r\n        var array = [];\r\n        each(that._getDataBySelectionMode(), function(_, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            if (node.internalFields[property]) {\r\n                if (property === EXPANDED || that.options.multipleSelection) {\r\n                    array.push(node.internalFields.key)\r\n                } else {\r\n                    array.length && that.toggleSelection(array[0], false, true);\r\n                    array = [node.internalFields.key]\r\n                }\r\n            }\r\n        });\r\n        return array\r\n    },\r\n    _getDataBySelectionMode: function() {\r\n        return this.options.multipleSelection ? this.getData() : this.getFullData()\r\n    },\r\n    _isNodeVisible: function(node) {\r\n        return false !== node.internalFields.item.visible\r\n    },\r\n    _getByKey: function(data, key) {\r\n        return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key)\r\n    },\r\n    _setChildrenSelection: function() {\r\n        var that = this;\r\n        each(this._dataStructure, function(_, node) {\r\n            if (!node.internalFields.childrenKeys.length) {\r\n                return\r\n            }\r\n            var isSelected = node.internalFields.selected;\r\n            true === isSelected && that._toggleChildrenSelection(node, isSelected)\r\n        })\r\n    },\r\n    _setParentSelection: function() {\r\n        var that = this;\r\n        each(this._dataStructure, function(_, node) {\r\n            var parent = that.options.dataConverter.getParentNode(node);\r\n            if (parent && node.internalFields.parentKey !== that.options.rootValue) {\r\n                that._iterateParents(node, function(parent) {\r\n                    var newParentState = that._calculateSelectedState(parent);\r\n                    that._setFieldState(parent, SELECTED, newParentState)\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _setParentExpansion: function() {\r\n        var that = this;\r\n        each(this._dataStructure, function(_, node) {\r\n            if (!node.internalFields.expanded) {\r\n                return\r\n            }\r\n            that._updateOneBranch(node.internalFields.key)\r\n        })\r\n    },\r\n    _updateOneBranch: function(key) {\r\n        var that = this;\r\n        var node = this.getNodeByKey(key);\r\n        that._iterateParents(node, function(parent) {\r\n            that._setFieldState(parent, EXPANDED, true)\r\n        })\r\n    },\r\n    _iterateChildren: function(node, recursive, callback, processedKeys) {\r\n        if (!typeUtils.isFunction(callback)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var nodeKey = node.internalFields.key;\r\n        processedKeys = processedKeys || [];\r\n        if (processedKeys.indexOf(nodeKey) === -1) {\r\n            processedKeys.push(nodeKey);\r\n            each(node.internalFields.childrenKeys, function(_, key) {\r\n                var child = that.getNodeByKey(key);\r\n                callback(child);\r\n                if (child.internalFields.childrenKeys.length && recursive) {\r\n                    that._iterateChildren(child, recursive, callback, processedKeys)\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _iterateParents: function(node, callback, processedKeys) {\r\n        if (node.internalFields.parentKey === this.options.rootValue || !typeUtils.isFunction(callback)) {\r\n            return\r\n        }\r\n        processedKeys = processedKeys || [];\r\n        var key = node.internalFields.key;\r\n        if (processedKeys.indexOf(key) === -1) {\r\n            processedKeys.push(key);\r\n            var parent = this.options.dataConverter.getParentNode(node);\r\n            if (parent) {\r\n                callback(parent);\r\n                if (parent.internalFields.parentKey !== this.options.rootValue) {\r\n                    this._iterateParents(parent, callback, processedKeys)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _calculateSelectedState: function(node) {\r\n        var itemsCount = node.internalFields.childrenKeys.length;\r\n        var selectedItemsCount = 0;\r\n        var invisibleItemsCount = 0;\r\n        var result = false;\r\n        for (var i = 0; i <= itemsCount - 1; i++) {\r\n            var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]);\r\n            var isChildInvisible = false === childNode.internalFields.item.visible;\r\n            var childState = childNode.internalFields.selected;\r\n            if (isChildInvisible) {\r\n                invisibleItemsCount++;\r\n                continue\r\n            }\r\n            if (childState) {\r\n                selectedItemsCount++\r\n            } else {\r\n                if (void 0 === childState) {\r\n                    selectedItemsCount += .5\r\n                }\r\n            }\r\n        }\r\n        if (selectedItemsCount) {\r\n            result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0\r\n        }\r\n        return result\r\n    },\r\n    _toggleChildrenSelection: function(node, state) {\r\n        var that = this;\r\n        this._iterateChildren(node, true, function(child) {\r\n            if (that._isNodeVisible(child)) {\r\n                that._setFieldState(child, SELECTED, state)\r\n            }\r\n        })\r\n    },\r\n    _setFieldState: function(node, field, state) {\r\n        if (node.internalFields[field] === state) {\r\n            return\r\n        }\r\n        node.internalFields[field] = state;\r\n        if (node.internalFields.publicNode) {\r\n            node.internalFields.publicNode[field] = state\r\n        }\r\n        this.options.dataAccessors.setters[field](node.internalFields.item, state);\r\n        this.options.onNodeChanged(node)\r\n    },\r\n    _markChildren: function(keys) {\r\n        var that = this;\r\n        each(keys, function(_, key) {\r\n            var index = that.getIndexByKey(key);\r\n            var node = that.getNodeByKey(key);\r\n            that._dataStructure[index] = 0;\r\n            node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys)\r\n        })\r\n    },\r\n    _removeNode: function(key) {\r\n        var node = this.getNodeByKey(key);\r\n        this._dataStructure[this.getIndexByKey(key)] = 0;\r\n        this._markChildren(node.internalFields.childrenKeys);\r\n        var that = this;\r\n        var counter = 0;\r\n        var items = extend([], this._dataStructure);\r\n        each(items, function(index, item) {\r\n            if (!item) {\r\n                that._dataStructure.splice(index - counter, 1);\r\n                counter++\r\n            }\r\n        })\r\n    },\r\n    _addNode: function(item) {\r\n        var dataConverter = this.options.dataConverter;\r\n        var node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\r\n        this._dataStructure = this._dataStructure.concat(node);\r\n        this._initialDataStructure = this._initialDataStructure.concat(node);\r\n        dataConverter._dataStructure = dataConverter._dataStructure.concat(node)\r\n    },\r\n    _updateFields: function() {\r\n        this.options.dataConverter.updateChildrenKeys();\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    getSelectedNodesKeys: function() {\r\n        return this._selectedNodesKeys\r\n    },\r\n    getExpandedNodesKeys: function() {\r\n        return this._expandedNodesKeys\r\n    },\r\n    getData: function() {\r\n        return this._dataStructure\r\n    },\r\n    getFullData: function() {\r\n        return this._initialDataStructure\r\n    },\r\n    getNodeByItem: function(item) {\r\n        var result = null;\r\n        each(this._dataStructure, function(_, node) {\r\n            if (node.internalFields.item === item) {\r\n                result = node;\r\n                return false\r\n            }\r\n        });\r\n        return result\r\n    },\r\n    getNodesByItems: function(items) {\r\n        var that = this;\r\n        var nodes = [];\r\n        each(items, function(_, item) {\r\n            var node = that.getNodeByItem(item);\r\n            node && nodes.push(node)\r\n        });\r\n        return nodes\r\n    },\r\n    getNodeByKey: function(key, data) {\r\n        return this._getByKey(data || this._getDataBySelectionMode(), key)\r\n    },\r\n    getTreeNodes: function() {\r\n        return this.options.dataConverter.convertToPublicNodes(this.getRootNodes())\r\n    },\r\n    getItemsCount: function() {\r\n        return this.options.dataConverter.getItemsCount()\r\n    },\r\n    getVisibleItemsCount: function() {\r\n        return this.options.dataConverter.getVisibleItemsCount()\r\n    },\r\n    getPublicNode: function(node) {\r\n        return node.internalFields.publicNode\r\n    },\r\n    getRootNodes: function() {\r\n        return this.getChildrenNodes(this.options.rootValue)\r\n    },\r\n    getChildrenNodes: function(parentKey) {\r\n        return query(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray()\r\n    },\r\n    getIndexByKey: function(key) {\r\n        return this.options.dataConverter.getIndexByKey(key)\r\n    },\r\n    addItem: function(item) {\r\n        this._addNode(item);\r\n        this._updateFields()\r\n    },\r\n    removeItem: function(key) {\r\n        this._removeNode(key);\r\n        this._updateFields()\r\n    },\r\n    toggleSelection: function(key, state, selectRecursive) {\r\n        var isSingleModeUnselect = this._isSingleModeUnselect(state);\r\n        var node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\r\n        this._setFieldState(node, SELECTED, state);\r\n        if (this.options.recursiveSelection && !selectRecursive) {\r\n            state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _isSingleModeUnselect: function(selectionState) {\r\n        return !this.options.multipleSelection && !selectionState\r\n    },\r\n    toggleNodeDisabledState: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, DISABLED, state)\r\n    },\r\n    toggleSelectAll: function(state) {\r\n        if (!typeUtils.isDefined(state)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1];\r\n        var dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\r\n        each(dataStructure, function(index, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            that._setFieldState(node, SELECTED, state)\r\n        });\r\n        that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\r\n        if (!state && that.options.selectionRequired) {\r\n            that.toggleSelection(lastSelectedKey, true)\r\n        }\r\n    },\r\n    isAllSelected: function() {\r\n        if (this.getSelectedNodesKeys().length) {\r\n            return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0\r\n        } else {\r\n            return false\r\n        }\r\n    },\r\n    toggleExpansion: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, EXPANDED, state);\r\n        if (state) {\r\n            this._updateExpansion(key)\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    isFiltered: function(item) {\r\n        return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length\r\n    },\r\n    _createCriteria: function(selector, value, operation) {\r\n        var searchFilter = [];\r\n        if (!Array.isArray(selector)) {\r\n            return [selector, operation, value]\r\n        }\r\n        iteratorUtils.each(selector, function(i, item) {\r\n            searchFilter.push([item, operation, value], \"or\")\r\n        });\r\n        searchFilter.pop();\r\n        return searchFilter\r\n    },\r\n    _filterDataStructure: function(filterValue, dataStructure) {\r\n        var selector = this.options.searchExpr || this.options.dataAccessors.getters.display;\r\n        var operation = getOperationBySearchMode(this.options.searchMode);\r\n        var criteria = this._createCriteria(selector, filterValue, operation);\r\n        dataStructure = dataStructure || this._initialDataStructure;\r\n        return query(dataStructure).filter(criteria).toArray()\r\n    },\r\n    search: function(searchValue) {\r\n        var that = this;\r\n        var matches = this._filterDataStructure(searchValue);\r\n        var dataConverter = this.options.dataConverter;\r\n\r\n        function lookForParents(matches, index) {\r\n            var length = matches.length;\r\n            while (index < length) {\r\n                var node = matches[index];\r\n                if (node.internalFields.parentKey === that.options.rootValue) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                var parent = dataConverter.getParentNode(node);\r\n                if (!parent) {\r\n                    errors.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\r\n                    index++;\r\n                    continue\r\n                }\r\n                if (!parent.internalFields.expanded) {\r\n                    that._setFieldState(parent, EXPANDED, true)\r\n                }\r\n                if (inArray(parent, matches) > -1) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                matches.splice(index, 0, parent);\r\n                lookForParents(matches, index)\r\n            }\r\n        }\r\n        lookForParents(matches, 0);\r\n        if (this.options.sort) {\r\n            matches = storeHelper.queryByOptions(query(matches), {\r\n                sort: this.options.sort\r\n            }).toArray()\r\n        }\r\n        dataConverter._indexByKey = {};\r\n        each(matches, function(index, node) {\r\n            node.internalFields.childrenKeys = [];\r\n            dataConverter._indexByKey[node.internalFields.key] = index\r\n        });\r\n        dataConverter._dataStructure = matches;\r\n        dataConverter.setChildrenKeys();\r\n        return dataConverter._dataStructure\r\n    }\r\n});\r\nmodule.exports = DataAdapter;\r\n"]},"metadata":{},"sourceType":"script"}