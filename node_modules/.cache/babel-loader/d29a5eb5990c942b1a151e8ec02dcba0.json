{"ast":null,"code":"/**\r\n * DevExtreme (ui/responsive_box.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\");\n\nvar eventsEngine = require(\"../events/core/events_engine\");\n\nvar commonUtils = require(\"../core/utils/common\");\n\nvar typeUtils = require(\"../core/utils/type\");\n\nvar errors = require(\"./widget/ui.errors\");\n\nvar windowUtils = require(\"../core/utils/window\");\n\nvar window = windowUtils.getWindow();\n\nvar iteratorUtils = require(\"../core/utils/iterator\");\n\nvar extend = require(\"../core/utils/extend\").extend;\n\nvar registerComponent = require(\"../core/component_registrator\");\n\nvar Box = require(\"./box\");\n\nvar CollectionWidget = require(\"./collection/ui.collection_widget.edit\");\n\nvar RESPONSIVE_BOX_CLASS = \"dx-responsivebox\";\nvar SCREEN_SIZE_CLASS_PREFIX = RESPONSIVE_BOX_CLASS + \"-screen-\";\nvar BOX_ITEM_CLASS = \"dx-box-item\";\nvar BOX_ITEM_DATA_KEY = \"dxBoxItemData\";\nvar HD_SCREEN_WIDTH = 1920;\nvar ResponsiveBox = CollectionWidget.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      rows: [],\n      cols: [],\n      screenByWidth: null,\n      singleColumnScreen: \"\",\n      height: \"100%\",\n      width: \"100%\",\n      activeStateEnabled: false,\n      focusStateEnabled: false,\n      onItemStateChanged: void 0,\n      onLayoutChanged: null,\n      currentScreenFactor: void 0,\n      _layoutStrategy: void 0\n    });\n  },\n  _init: function _init() {\n    if (!this.option(\"screenByWidth\")) {\n      this._options.screenByWidth = windowUtils.defaultScreenFactorFunc;\n    }\n\n    this.callBase();\n\n    this._initLayoutChangedAction();\n  },\n  _initLayoutChangedAction: function _initLayoutChangedAction() {\n    this._layoutChangedAction = this._createActionByOption(\"onLayoutChanged\", {\n      excludeValidators: [\"disabled\", \"readonly\"]\n    });\n  },\n  _itemClass: function _itemClass() {\n    return BOX_ITEM_CLASS;\n  },\n  _itemDataKey: function _itemDataKey() {\n    return BOX_ITEM_DATA_KEY;\n  },\n  _initMarkup: function _initMarkup() {\n    this.callBase();\n    this.$element().addClass(RESPONSIVE_BOX_CLASS);\n\n    this._updateRootBox();\n  },\n  _updateRootBox: function _updateRootBox() {\n    clearTimeout(this._updateTimer);\n    this._updateTimer = setTimeout(function () {\n      if (this._$root) {\n        eventsEngine.triggerHandler(this._$root, \"dxupdate\");\n      }\n    }.bind(this));\n  },\n  _renderItems: function _renderItems() {\n    this._setScreenSize();\n\n    this._screenItems = this._itemsByScreen();\n\n    this._prepareGrid();\n\n    this._spreadItems();\n\n    this._layoutItems();\n\n    this._linkNodeToItem();\n  },\n  _itemOptionChanged: function _itemOptionChanged(item) {\n    var $item = this._findItemElementByItem(item);\n\n    if (!$item.length) {\n      return;\n    }\n\n    this._refreshItem($item, item);\n\n    this._clearItemNodeTemplates();\n\n    this._update();\n  },\n  _setScreenSize: function _setScreenSize() {\n    var currentScreen = this._getCurrentScreen();\n\n    this._removeScreenSizeClass();\n\n    this.$element().addClass(SCREEN_SIZE_CLASS_PREFIX + currentScreen);\n    this.option(\"currentScreenFactor\", currentScreen);\n  },\n  _removeScreenSizeClass: function _removeScreenSizeClass() {\n    var currentScreenFactor = this.option(\"currentScreenFactor\");\n    currentScreenFactor && this.$element().removeClass(SCREEN_SIZE_CLASS_PREFIX + currentScreenFactor);\n  },\n  _prepareGrid: function _prepareGrid() {\n    var grid = this._grid = [];\n\n    this._prepareRowsAndCols();\n\n    iteratorUtils.each(this._rows, function () {\n      var row = [];\n      grid.push(row);\n      iteratorUtils.each(this._cols, function () {\n        row.push(this._createEmptyCell());\n      }.bind(this));\n    }.bind(this));\n  },\n  getSingleColumnRows: function getSingleColumnRows() {\n    var rows = this.option(\"rows\");\n    var screenItemsLength = this._screenItems.length;\n\n    if (rows.length) {\n      var filteredRows = this._filterByScreen(rows);\n\n      var result = [];\n\n      for (var i = 0; i < screenItemsLength; i++) {\n        var sizeConfig = this._defaultSizeConfig();\n\n        if (i < filteredRows.length && typeUtils.isDefined(filteredRows[i].shrink)) {\n          sizeConfig.shrink = filteredRows[i].shrink;\n        }\n\n        result.push(sizeConfig);\n      }\n\n      return result;\n    } else {\n      return this._defaultSizeConfig(screenItemsLength);\n    }\n  },\n  _prepareRowsAndCols: function _prepareRowsAndCols() {\n    if (this._isSingleColumnScreen()) {\n      this._prepareSingleColumnScreenItems();\n\n      this._rows = this.getSingleColumnRows();\n      this._cols = this._defaultSizeConfig(1);\n    } else {\n      this._rows = this._sizesByScreen(this.option(\"rows\"));\n      this._cols = this._sizesByScreen(this.option(\"cols\"));\n    }\n  },\n  _isSingleColumnScreen: function _isSingleColumnScreen() {\n    return this._screenRegExp().test(this.option(\"singleColumnScreen\")) || !this.option(\"rows\").length || !this.option(\"cols\").length;\n  },\n  _prepareSingleColumnScreenItems: function _prepareSingleColumnScreenItems() {\n    this._screenItems.sort(function (item1, item2) {\n      return item1.location.row - item2.location.row || item1.location.col - item2.location.col;\n    });\n\n    iteratorUtils.each(this._screenItems, function (index, item) {\n      extend(item.location, {\n        row: index,\n        col: 0,\n        rowspan: 1,\n        colspan: 1\n      });\n    });\n  },\n  _sizesByScreen: function _sizesByScreen(sizeConfigs) {\n    return iteratorUtils.map(this._filterByScreen(sizeConfigs), function (sizeConfig) {\n      return extend(this._defaultSizeConfig(), sizeConfig);\n    }.bind(this));\n  },\n  _createDefaultSizeConfig: function _createDefaultSizeConfig() {\n    return {\n      ratio: 1,\n      baseSize: 0,\n      minSize: 0,\n      maxSize: 0\n    };\n  },\n  _defaultSizeConfig: function _defaultSizeConfig(size) {\n    var defaultSizeConfig = this._createDefaultSizeConfig();\n\n    if (!arguments.length) {\n      return defaultSizeConfig;\n    }\n\n    var result = [];\n\n    for (var i = 0; i < size; i++) {\n      result.push(defaultSizeConfig);\n    }\n\n    return result;\n  },\n  _filterByScreen: function _filterByScreen(items) {\n    var screenRegExp = this._screenRegExp();\n\n    return commonUtils.grep(items, function (item) {\n      return !item.screen || screenRegExp.test(item.screen);\n    });\n  },\n  _screenRegExp: function _screenRegExp() {\n    var screen = this._getCurrentScreen();\n\n    return new RegExp(\"(^|\\\\s)\" + screen + \"($|\\\\s)\", \"i\");\n  },\n  _getCurrentScreen: function _getCurrentScreen() {\n    var width = this._screenWidth();\n\n    return this.option(\"screenByWidth\")(width);\n  },\n  _screenWidth: function _screenWidth() {\n    return windowUtils.hasWindow() ? $(window).width() : HD_SCREEN_WIDTH;\n  },\n  _createEmptyCell: function _createEmptyCell() {\n    return {\n      item: {},\n      location: {\n        colspan: 1,\n        rowspan: 1\n      }\n    };\n  },\n  _spreadItems: function _spreadItems() {\n    iteratorUtils.each(this._screenItems, function (_, itemInfo) {\n      var location = itemInfo.location || {};\n      var itemCol = location.col;\n      var itemRow = location.row;\n      var row = this._grid[itemRow];\n      var itemCell = row && row[itemCol];\n\n      this._occupyCells(itemCell, itemInfo);\n    }.bind(this));\n  },\n  _itemsByScreen: function _itemsByScreen() {\n    var _this = this;\n\n    return this.option(\"items\").reduce(function (result, item) {\n      var locations = item.location || {};\n      locations = typeUtils.isPlainObject(locations) ? [locations] : locations;\n\n      _this._filterByScreen(locations).forEach(function (location) {\n        result.push({\n          item: item,\n          location: extend({\n            rowspan: 1,\n            colspan: 1\n          }, location)\n        });\n      });\n\n      return result;\n    }, []);\n  },\n  _occupyCells: function _occupyCells(itemCell, itemInfo) {\n    if (!itemCell || this._isItemCellOccupied(itemCell, itemInfo)) {\n      return;\n    }\n\n    extend(itemCell, itemInfo);\n\n    this._markSpanningCell(itemCell);\n  },\n  _isItemCellOccupied: function _isItemCellOccupied(itemCell, itemInfo) {\n    if (!typeUtils.isEmptyObject(itemCell.item)) {\n      return true;\n    }\n\n    var result = false;\n\n    this._loopOverSpanning(itemInfo.location, function (cell) {\n      result = result || !typeUtils.isEmptyObject(cell.item);\n    });\n\n    return result;\n  },\n  _loopOverSpanning: function _loopOverSpanning(location, callback) {\n    var rowEnd = location.row + location.rowspan - 1;\n    var colEnd = location.col + location.colspan - 1;\n    var boundRowEnd = Math.min(rowEnd, this._rows.length - 1);\n    var boundColEnd = Math.min(colEnd, this._cols.length - 1);\n    location.rowspan -= rowEnd - boundRowEnd;\n    location.colspan -= colEnd - boundColEnd;\n\n    for (var rowIndex = location.row; rowIndex <= boundRowEnd; rowIndex++) {\n      for (var colIndex = location.col; colIndex <= boundColEnd; colIndex++) {\n        if (rowIndex !== location.row || colIndex !== location.col) {\n          callback(this._grid[rowIndex][colIndex]);\n        }\n      }\n    }\n  },\n  _markSpanningCell: function _markSpanningCell(itemCell) {\n    this._loopOverSpanning(itemCell.location, function (cell) {\n      extend(cell, {\n        item: itemCell.item,\n        spanningCell: itemCell\n      });\n    });\n  },\n  _linkNodeToItem: function _linkNodeToItem() {\n    iteratorUtils.each(this._itemElements(), function (_, itemNode) {\n      var $item = $(itemNode);\n      var item = $item.data(BOX_ITEM_DATA_KEY);\n\n      if (!item.box) {\n        item.node = $item.children();\n      }\n    });\n  },\n  _layoutItems: function _layoutItems() {\n    var rowsCount = this._grid.length;\n    var colsCount = rowsCount && this._grid[0].length;\n\n    if (!rowsCount && !colsCount) {\n      return;\n    }\n\n    var result = this._layoutBlock({\n      direction: \"col\",\n      row: {\n        start: 0,\n        end: rowsCount - 1\n      },\n      col: {\n        start: 0,\n        end: colsCount - 1\n      }\n    });\n\n    var rootBox = this._prepareBoxConfig(result.box || {\n      direction: \"row\",\n      items: [extend(result, {\n        ratio: 1\n      })]\n    });\n\n    extend(rootBox, this._rootBoxConfig(rootBox.items));\n    this._$root = $(\"<div>\").appendTo(this._itemContainer());\n\n    this._createComponent(this._$root, Box, rootBox);\n  },\n  _rootBoxConfig: function _rootBoxConfig(items) {\n    var rootItems = iteratorUtils.each(items, function (index, item) {\n      this._needApplyAutoBaseSize(item) && extend(item, {\n        baseSize: \"auto\"\n      });\n    }.bind(this));\n    return extend({\n      width: \"100%\",\n      height: \"100%\",\n      items: rootItems,\n      itemTemplate: this._getTemplateByOption(\"itemTemplate\"),\n      itemHoldTimeout: this.option(\"itemHoldTimeout\"),\n      onItemHold: this._createActionByOption(\"onItemHold\"),\n      onItemClick: this._createActionByOption(\"onItemClick\"),\n      onItemContextMenu: this._createActionByOption(\"onItemContextMenu\"),\n      onItemRendered: this._createActionByOption(\"onItemRendered\")\n    }, {\n      _layoutStrategy: this.option(\"_layoutStrategy\")\n    });\n  },\n  _needApplyAutoBaseSize: function _needApplyAutoBaseSize(item) {\n    return !item.baseSize && (!item.minSize || \"auto\" === item.minSize) && (!item.maxSize || \"auto\" === item.maxSize);\n  },\n  _prepareBoxConfig: function _prepareBoxConfig(config) {\n    return extend(config || {}, {\n      crossAlign: \"stretch\",\n      onItemStateChanged: this.option(\"onItemStateChanged\")\n    });\n  },\n  _layoutBlock: function _layoutBlock(options) {\n    if (this._isSingleItem(options)) {\n      return this._itemByCell(options.row.start, options.col.start);\n    }\n\n    return this._layoutDirection(options);\n  },\n  _isSingleItem: function _isSingleItem(options) {\n    var firstCellLocation = this._grid[options.row.start][options.col.start].location;\n    var isItemRowSpanned = options.row.end - options.row.start === firstCellLocation.rowspan - 1;\n    var isItemColSpanned = options.col.end - options.col.start === firstCellLocation.colspan - 1;\n    return isItemRowSpanned && isItemColSpanned;\n  },\n  _itemByCell: function _itemByCell(rowIndex, colIndex) {\n    var itemCell = this._grid[rowIndex][colIndex];\n    return itemCell.spanningCell ? null : itemCell.item;\n  },\n  _layoutDirection: function _layoutDirection(options) {\n    var items = [];\n    var direction = options.direction;\n\n    var crossDirection = this._crossDirection(direction);\n\n    var block;\n\n    while (block = this._nextBlock(options)) {\n      if (this._isBlockIndivisible(options.prevBlockOptions, block)) {\n        throw errors.Error(\"E1025\");\n      }\n\n      var item = this._layoutBlock({\n        direction: crossDirection,\n        row: block.row,\n        col: block.col,\n        prevBlockOptions: options\n      });\n\n      if (item) {\n        extend(item, this._blockSize(block, crossDirection));\n        items.push(item);\n      }\n\n      options[crossDirection].start = block[crossDirection].end + 1;\n    }\n\n    return {\n      box: this._prepareBoxConfig({\n        direction: direction,\n        items: items\n      })\n    };\n  },\n  _isBlockIndivisible: function _isBlockIndivisible(options, block) {\n    return options && options.col.start === block.col.start && options.col.end === block.col.end && options.row.start === block.row.start && options.row.end === block.row.end;\n  },\n  _crossDirection: function _crossDirection(direction) {\n    return \"col\" === direction ? \"row\" : \"col\";\n  },\n  _nextBlock: function _nextBlock(options) {\n    var direction = options.direction;\n\n    var crossDirection = this._crossDirection(direction);\n\n    var startIndex = options[direction].start;\n    var endIndex = options[direction].end;\n    var crossStartIndex = options[crossDirection].start;\n\n    if (crossStartIndex > options[crossDirection].end) {\n      return null;\n    }\n\n    var crossSpan = 1;\n\n    for (var crossIndex = crossStartIndex; crossIndex < crossStartIndex + crossSpan; crossIndex++) {\n      var lineCrossSpan = 1;\n\n      for (var index = startIndex; index <= endIndex; index++) {\n        var cell = this._cellByDirection(direction, index, crossIndex);\n\n        lineCrossSpan = Math.max(lineCrossSpan, cell.location[crossDirection + \"span\"]);\n      }\n\n      var lineCrossEndIndex = crossIndex + lineCrossSpan;\n      var crossEndIndex = crossStartIndex + crossSpan;\n\n      if (lineCrossEndIndex > crossEndIndex) {\n        crossSpan += lineCrossEndIndex - crossEndIndex;\n      }\n    }\n\n    var result = {};\n    result[direction] = {\n      start: startIndex,\n      end: endIndex\n    };\n    result[crossDirection] = {\n      start: crossStartIndex,\n      end: crossStartIndex + crossSpan - 1\n    };\n    return result;\n  },\n  _cellByDirection: function _cellByDirection(direction, index, crossIndex) {\n    return \"col\" === direction ? this._grid[crossIndex][index] : this._grid[index][crossIndex];\n  },\n  _blockSize: function _blockSize(block, direction) {\n    var sizeConfigs = \"row\" === direction ? this._rows : this._cols;\n    var result = extend(this._createDefaultSizeConfig(), {\n      ratio: 0\n    });\n\n    for (var index = block[direction].start; index <= block[direction].end; index++) {\n      var sizeConfig = sizeConfigs[index];\n      result.ratio += sizeConfig.ratio;\n      result.baseSize += sizeConfig.baseSize;\n      result.minSize += sizeConfig.minSize;\n      result.maxSize += sizeConfig.maxSize;\n\n      if (typeUtils.isDefined(sizeConfig.shrink)) {\n        result.shrink = sizeConfig.shrink;\n      }\n    }\n\n    result.minSize = result.minSize ? result.minSize : \"auto\";\n    result.maxSize = result.maxSize ? result.maxSize : \"auto\";\n    this._isSingleColumnScreen() && (result.baseSize = \"auto\");\n    return result;\n  },\n  _update: function _update() {\n    var $existingRoot = this._$root;\n\n    this._renderItems();\n\n    $existingRoot && $existingRoot.detach();\n\n    this._saveAssistantRoot($existingRoot);\n\n    this._layoutChangedAction();\n\n    this._updateRootBox();\n  },\n  _saveAssistantRoot: function _saveAssistantRoot($root) {\n    this._assistantRoots = this._assistantRoots || [];\n\n    this._assistantRoots.push($root);\n  },\n  _dispose: function _dispose() {\n    clearTimeout(this._updateTimer);\n\n    this._clearItemNodeTemplates();\n\n    this._cleanUnusedRoots();\n\n    this.callBase.apply(this, arguments);\n  },\n  _cleanUnusedRoots: function _cleanUnusedRoots() {\n    if (!this._assistantRoots) {\n      return;\n    }\n\n    iteratorUtils.each(this._assistantRoots, function (_, item) {\n      $(item).remove();\n    });\n  },\n  _clearItemNodeTemplates: function _clearItemNodeTemplates() {\n    iteratorUtils.each(this.option(\"items\"), function () {\n      delete this.node;\n    });\n  },\n  _toggleVisibility: function _toggleVisibility(visible) {\n    this.callBase(visible);\n\n    if (visible) {\n      this._updateRootBox();\n    }\n  },\n  _attachClickEvent: commonUtils.noop,\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"rows\":\n      case \"cols\":\n      case \"screenByWidth\":\n      case \"_layoutStrategy\":\n      case \"singleColumnScreen\":\n        this._clearItemNodeTemplates();\n\n        this._invalidate();\n\n        break;\n\n      case \"width\":\n      case \"height\":\n        this.callBase(args);\n\n        this._update();\n\n        break;\n\n      case \"onLayoutChanged\":\n        this._initLayoutChangedAction();\n\n        break;\n\n      case \"itemTemplate\":\n        this._clearItemNodeTemplates();\n\n        this.callBase(args);\n        break;\n\n      case \"currentScreenFactor\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _dimensionChanged: function _dimensionChanged() {\n    if (this._getCurrentScreen() !== this.option(\"currentScreenFactor\")) {\n      this._update();\n    }\n  },\n  repaint: function repaint() {\n    this._update();\n  }\n});\nregisterComponent(\"dxResponsiveBox\", ResponsiveBox);\nmodule.exports = ResponsiveBox;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/responsive_box.js"],"names":["$","require","eventsEngine","commonUtils","typeUtils","errors","windowUtils","window","getWindow","iteratorUtils","extend","registerComponent","Box","CollectionWidget","RESPONSIVE_BOX_CLASS","SCREEN_SIZE_CLASS_PREFIX","BOX_ITEM_CLASS","BOX_ITEM_DATA_KEY","HD_SCREEN_WIDTH","ResponsiveBox","inherit","_getDefaultOptions","callBase","rows","cols","screenByWidth","singleColumnScreen","height","width","activeStateEnabled","focusStateEnabled","onItemStateChanged","onLayoutChanged","currentScreenFactor","_layoutStrategy","_init","option","_options","defaultScreenFactorFunc","_initLayoutChangedAction","_layoutChangedAction","_createActionByOption","excludeValidators","_itemClass","_itemDataKey","_initMarkup","$element","addClass","_updateRootBox","clearTimeout","_updateTimer","setTimeout","_$root","triggerHandler","bind","_renderItems","_setScreenSize","_screenItems","_itemsByScreen","_prepareGrid","_spreadItems","_layoutItems","_linkNodeToItem","_itemOptionChanged","item","$item","_findItemElementByItem","length","_refreshItem","_clearItemNodeTemplates","_update","currentScreen","_getCurrentScreen","_removeScreenSizeClass","removeClass","grid","_grid","_prepareRowsAndCols","each","_rows","row","push","_cols","_createEmptyCell","getSingleColumnRows","screenItemsLength","filteredRows","_filterByScreen","result","i","sizeConfig","_defaultSizeConfig","isDefined","shrink","_isSingleColumnScreen","_prepareSingleColumnScreenItems","_sizesByScreen","_screenRegExp","test","sort","item1","item2","location","col","index","rowspan","colspan","sizeConfigs","map","_createDefaultSizeConfig","ratio","baseSize","minSize","maxSize","size","defaultSizeConfig","arguments","items","screenRegExp","grep","screen","RegExp","_screenWidth","hasWindow","_","itemInfo","itemCol","itemRow","itemCell","_occupyCells","_this","reduce","locations","isPlainObject","forEach","_isItemCellOccupied","_markSpanningCell","isEmptyObject","_loopOverSpanning","cell","callback","rowEnd","colEnd","boundRowEnd","Math","min","boundColEnd","rowIndex","colIndex","spanningCell","_itemElements","itemNode","data","box","node","children","rowsCount","colsCount","_layoutBlock","direction","start","end","rootBox","_prepareBoxConfig","_rootBoxConfig","appendTo","_itemContainer","_createComponent","rootItems","_needApplyAutoBaseSize","itemTemplate","_getTemplateByOption","itemHoldTimeout","onItemHold","onItemClick","onItemContextMenu","onItemRendered","config","crossAlign","options","_isSingleItem","_itemByCell","_layoutDirection","firstCellLocation","isItemRowSpanned","isItemColSpanned","crossDirection","_crossDirection","block","_nextBlock","_isBlockIndivisible","prevBlockOptions","Error","_blockSize","startIndex","endIndex","crossStartIndex","crossSpan","crossIndex","lineCrossSpan","_cellByDirection","max","lineCrossEndIndex","crossEndIndex","$existingRoot","detach","_saveAssistantRoot","$root","_assistantRoots","_dispose","_cleanUnusedRoots","apply","remove","_toggleVisibility","visible","_attachClickEvent","noop","_optionChanged","args","name","_invalidate","_dimensionChanged","repaint","module","exports","default"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/responsive_box.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar eventsEngine = require(\"../events/core/events_engine\");\r\nvar commonUtils = require(\"../core/utils/common\");\r\nvar typeUtils = require(\"../core/utils/type\");\r\nvar errors = require(\"./widget/ui.errors\");\r\nvar windowUtils = require(\"../core/utils/window\");\r\nvar window = windowUtils.getWindow();\r\nvar iteratorUtils = require(\"../core/utils/iterator\");\r\nvar extend = require(\"../core/utils/extend\").extend;\r\nvar registerComponent = require(\"../core/component_registrator\");\r\nvar Box = require(\"./box\");\r\nvar CollectionWidget = require(\"./collection/ui.collection_widget.edit\");\r\nvar RESPONSIVE_BOX_CLASS = \"dx-responsivebox\";\r\nvar SCREEN_SIZE_CLASS_PREFIX = RESPONSIVE_BOX_CLASS + \"-screen-\";\r\nvar BOX_ITEM_CLASS = \"dx-box-item\";\r\nvar BOX_ITEM_DATA_KEY = \"dxBoxItemData\";\r\nvar HD_SCREEN_WIDTH = 1920;\r\nvar ResponsiveBox = CollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            rows: [],\r\n            cols: [],\r\n            screenByWidth: null,\r\n            singleColumnScreen: \"\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            onItemStateChanged: void 0,\r\n            onLayoutChanged: null,\r\n            currentScreenFactor: void 0,\r\n            _layoutStrategy: void 0\r\n        })\r\n    },\r\n    _init: function() {\r\n        if (!this.option(\"screenByWidth\")) {\r\n            this._options.screenByWidth = windowUtils.defaultScreenFactorFunc\r\n        }\r\n        this.callBase();\r\n        this._initLayoutChangedAction()\r\n    },\r\n    _initLayoutChangedAction: function() {\r\n        this._layoutChangedAction = this._createActionByOption(\"onLayoutChanged\", {\r\n            excludeValidators: [\"disabled\", \"readonly\"]\r\n        })\r\n    },\r\n    _itemClass: function() {\r\n        return BOX_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return BOX_ITEM_DATA_KEY\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RESPONSIVE_BOX_CLASS);\r\n        this._updateRootBox()\r\n    },\r\n    _updateRootBox: function() {\r\n        clearTimeout(this._updateTimer);\r\n        this._updateTimer = setTimeout(function() {\r\n            if (this._$root) {\r\n                eventsEngine.triggerHandler(this._$root, \"dxupdate\")\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _renderItems: function() {\r\n        this._setScreenSize();\r\n        this._screenItems = this._itemsByScreen();\r\n        this._prepareGrid();\r\n        this._spreadItems();\r\n        this._layoutItems();\r\n        this._linkNodeToItem()\r\n    },\r\n    _itemOptionChanged: function(item) {\r\n        var $item = this._findItemElementByItem(item);\r\n        if (!$item.length) {\r\n            return\r\n        }\r\n        this._refreshItem($item, item);\r\n        this._clearItemNodeTemplates();\r\n        this._update()\r\n    },\r\n    _setScreenSize: function() {\r\n        var currentScreen = this._getCurrentScreen();\r\n        this._removeScreenSizeClass();\r\n        this.$element().addClass(SCREEN_SIZE_CLASS_PREFIX + currentScreen);\r\n        this.option(\"currentScreenFactor\", currentScreen)\r\n    },\r\n    _removeScreenSizeClass: function() {\r\n        var currentScreenFactor = this.option(\"currentScreenFactor\");\r\n        currentScreenFactor && this.$element().removeClass(SCREEN_SIZE_CLASS_PREFIX + currentScreenFactor)\r\n    },\r\n    _prepareGrid: function() {\r\n        var grid = this._grid = [];\r\n        this._prepareRowsAndCols();\r\n        iteratorUtils.each(this._rows, function() {\r\n            var row = [];\r\n            grid.push(row);\r\n            iteratorUtils.each(this._cols, function() {\r\n                row.push(this._createEmptyCell())\r\n            }.bind(this))\r\n        }.bind(this))\r\n    },\r\n    getSingleColumnRows: function() {\r\n        var rows = this.option(\"rows\");\r\n        var screenItemsLength = this._screenItems.length;\r\n        if (rows.length) {\r\n            var filteredRows = this._filterByScreen(rows);\r\n            var result = [];\r\n            for (var i = 0; i < screenItemsLength; i++) {\r\n                var sizeConfig = this._defaultSizeConfig();\r\n                if (i < filteredRows.length && typeUtils.isDefined(filteredRows[i].shrink)) {\r\n                    sizeConfig.shrink = filteredRows[i].shrink\r\n                }\r\n                result.push(sizeConfig)\r\n            }\r\n            return result\r\n        } else {\r\n            return this._defaultSizeConfig(screenItemsLength)\r\n        }\r\n    },\r\n    _prepareRowsAndCols: function() {\r\n        if (this._isSingleColumnScreen()) {\r\n            this._prepareSingleColumnScreenItems();\r\n            this._rows = this.getSingleColumnRows();\r\n            this._cols = this._defaultSizeConfig(1)\r\n        } else {\r\n            this._rows = this._sizesByScreen(this.option(\"rows\"));\r\n            this._cols = this._sizesByScreen(this.option(\"cols\"))\r\n        }\r\n    },\r\n    _isSingleColumnScreen: function() {\r\n        return this._screenRegExp().test(this.option(\"singleColumnScreen\")) || !this.option(\"rows\").length || !this.option(\"cols\").length\r\n    },\r\n    _prepareSingleColumnScreenItems: function() {\r\n        this._screenItems.sort(function(item1, item2) {\r\n            return item1.location.row - item2.location.row || item1.location.col - item2.location.col\r\n        });\r\n        iteratorUtils.each(this._screenItems, function(index, item) {\r\n            extend(item.location, {\r\n                row: index,\r\n                col: 0,\r\n                rowspan: 1,\r\n                colspan: 1\r\n            })\r\n        })\r\n    },\r\n    _sizesByScreen: function(sizeConfigs) {\r\n        return iteratorUtils.map(this._filterByScreen(sizeConfigs), function(sizeConfig) {\r\n            return extend(this._defaultSizeConfig(), sizeConfig)\r\n        }.bind(this))\r\n    },\r\n    _createDefaultSizeConfig: function() {\r\n        return {\r\n            ratio: 1,\r\n            baseSize: 0,\r\n            minSize: 0,\r\n            maxSize: 0\r\n        }\r\n    },\r\n    _defaultSizeConfig: function(size) {\r\n        var defaultSizeConfig = this._createDefaultSizeConfig();\r\n        if (!arguments.length) {\r\n            return defaultSizeConfig\r\n        }\r\n        var result = [];\r\n        for (var i = 0; i < size; i++) {\r\n            result.push(defaultSizeConfig)\r\n        }\r\n        return result\r\n    },\r\n    _filterByScreen: function(items) {\r\n        var screenRegExp = this._screenRegExp();\r\n        return commonUtils.grep(items, function(item) {\r\n            return !item.screen || screenRegExp.test(item.screen)\r\n        })\r\n    },\r\n    _screenRegExp: function() {\r\n        var screen = this._getCurrentScreen();\r\n        return new RegExp(\"(^|\\\\s)\" + screen + \"($|\\\\s)\", \"i\")\r\n    },\r\n    _getCurrentScreen: function() {\r\n        var width = this._screenWidth();\r\n        return this.option(\"screenByWidth\")(width)\r\n    },\r\n    _screenWidth: function() {\r\n        return windowUtils.hasWindow() ? $(window).width() : HD_SCREEN_WIDTH\r\n    },\r\n    _createEmptyCell: function() {\r\n        return {\r\n            item: {},\r\n            location: {\r\n                colspan: 1,\r\n                rowspan: 1\r\n            }\r\n        }\r\n    },\r\n    _spreadItems: function() {\r\n        iteratorUtils.each(this._screenItems, function(_, itemInfo) {\r\n            var location = itemInfo.location || {};\r\n            var itemCol = location.col;\r\n            var itemRow = location.row;\r\n            var row = this._grid[itemRow];\r\n            var itemCell = row && row[itemCol];\r\n            this._occupyCells(itemCell, itemInfo)\r\n        }.bind(this))\r\n    },\r\n    _itemsByScreen: function() {\r\n        var _this = this;\r\n        return this.option(\"items\").reduce(function(result, item) {\r\n            var locations = item.location || {};\r\n            locations = typeUtils.isPlainObject(locations) ? [locations] : locations;\r\n            _this._filterByScreen(locations).forEach(function(location) {\r\n                result.push({\r\n                    item: item,\r\n                    location: extend({\r\n                        rowspan: 1,\r\n                        colspan: 1\r\n                    }, location)\r\n                })\r\n            });\r\n            return result\r\n        }, [])\r\n    },\r\n    _occupyCells: function(itemCell, itemInfo) {\r\n        if (!itemCell || this._isItemCellOccupied(itemCell, itemInfo)) {\r\n            return\r\n        }\r\n        extend(itemCell, itemInfo);\r\n        this._markSpanningCell(itemCell)\r\n    },\r\n    _isItemCellOccupied: function(itemCell, itemInfo) {\r\n        if (!typeUtils.isEmptyObject(itemCell.item)) {\r\n            return true\r\n        }\r\n        var result = false;\r\n        this._loopOverSpanning(itemInfo.location, function(cell) {\r\n            result = result || !typeUtils.isEmptyObject(cell.item)\r\n        });\r\n        return result\r\n    },\r\n    _loopOverSpanning: function(location, callback) {\r\n        var rowEnd = location.row + location.rowspan - 1;\r\n        var colEnd = location.col + location.colspan - 1;\r\n        var boundRowEnd = Math.min(rowEnd, this._rows.length - 1);\r\n        var boundColEnd = Math.min(colEnd, this._cols.length - 1);\r\n        location.rowspan -= rowEnd - boundRowEnd;\r\n        location.colspan -= colEnd - boundColEnd;\r\n        for (var rowIndex = location.row; rowIndex <= boundRowEnd; rowIndex++) {\r\n            for (var colIndex = location.col; colIndex <= boundColEnd; colIndex++) {\r\n                if (rowIndex !== location.row || colIndex !== location.col) {\r\n                    callback(this._grid[rowIndex][colIndex])\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _markSpanningCell: function(itemCell) {\r\n        this._loopOverSpanning(itemCell.location, function(cell) {\r\n            extend(cell, {\r\n                item: itemCell.item,\r\n                spanningCell: itemCell\r\n            })\r\n        })\r\n    },\r\n    _linkNodeToItem: function() {\r\n        iteratorUtils.each(this._itemElements(), function(_, itemNode) {\r\n            var $item = $(itemNode);\r\n            var item = $item.data(BOX_ITEM_DATA_KEY);\r\n            if (!item.box) {\r\n                item.node = $item.children()\r\n            }\r\n        })\r\n    },\r\n    _layoutItems: function() {\r\n        var rowsCount = this._grid.length;\r\n        var colsCount = rowsCount && this._grid[0].length;\r\n        if (!rowsCount && !colsCount) {\r\n            return\r\n        }\r\n        var result = this._layoutBlock({\r\n            direction: \"col\",\r\n            row: {\r\n                start: 0,\r\n                end: rowsCount - 1\r\n            },\r\n            col: {\r\n                start: 0,\r\n                end: colsCount - 1\r\n            }\r\n        });\r\n        var rootBox = this._prepareBoxConfig(result.box || {\r\n            direction: \"row\",\r\n            items: [extend(result, {\r\n                ratio: 1\r\n            })]\r\n        });\r\n        extend(rootBox, this._rootBoxConfig(rootBox.items));\r\n        this._$root = $(\"<div>\").appendTo(this._itemContainer());\r\n        this._createComponent(this._$root, Box, rootBox)\r\n    },\r\n    _rootBoxConfig: function(items) {\r\n        var rootItems = iteratorUtils.each(items, function(index, item) {\r\n            this._needApplyAutoBaseSize(item) && extend(item, {\r\n                baseSize: \"auto\"\r\n            })\r\n        }.bind(this));\r\n        return extend({\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            items: rootItems,\r\n            itemTemplate: this._getTemplateByOption(\"itemTemplate\"),\r\n            itemHoldTimeout: this.option(\"itemHoldTimeout\"),\r\n            onItemHold: this._createActionByOption(\"onItemHold\"),\r\n            onItemClick: this._createActionByOption(\"onItemClick\"),\r\n            onItemContextMenu: this._createActionByOption(\"onItemContextMenu\"),\r\n            onItemRendered: this._createActionByOption(\"onItemRendered\")\r\n        }, {\r\n            _layoutStrategy: this.option(\"_layoutStrategy\")\r\n        })\r\n    },\r\n    _needApplyAutoBaseSize: function(item) {\r\n        return !item.baseSize && (!item.minSize || \"auto\" === item.minSize) && (!item.maxSize || \"auto\" === item.maxSize)\r\n    },\r\n    _prepareBoxConfig: function(config) {\r\n        return extend(config || {}, {\r\n            crossAlign: \"stretch\",\r\n            onItemStateChanged: this.option(\"onItemStateChanged\")\r\n        })\r\n    },\r\n    _layoutBlock: function(options) {\r\n        if (this._isSingleItem(options)) {\r\n            return this._itemByCell(options.row.start, options.col.start)\r\n        }\r\n        return this._layoutDirection(options)\r\n    },\r\n    _isSingleItem: function(options) {\r\n        var firstCellLocation = this._grid[options.row.start][options.col.start].location;\r\n        var isItemRowSpanned = options.row.end - options.row.start === firstCellLocation.rowspan - 1;\r\n        var isItemColSpanned = options.col.end - options.col.start === firstCellLocation.colspan - 1;\r\n        return isItemRowSpanned && isItemColSpanned\r\n    },\r\n    _itemByCell: function(rowIndex, colIndex) {\r\n        var itemCell = this._grid[rowIndex][colIndex];\r\n        return itemCell.spanningCell ? null : itemCell.item\r\n    },\r\n    _layoutDirection: function(options) {\r\n        var items = [];\r\n        var direction = options.direction;\r\n        var crossDirection = this._crossDirection(direction);\r\n        var block;\r\n        while (block = this._nextBlock(options)) {\r\n            if (this._isBlockIndivisible(options.prevBlockOptions, block)) {\r\n                throw errors.Error(\"E1025\")\r\n            }\r\n            var item = this._layoutBlock({\r\n                direction: crossDirection,\r\n                row: block.row,\r\n                col: block.col,\r\n                prevBlockOptions: options\r\n            });\r\n            if (item) {\r\n                extend(item, this._blockSize(block, crossDirection));\r\n                items.push(item)\r\n            }\r\n            options[crossDirection].start = block[crossDirection].end + 1\r\n        }\r\n        return {\r\n            box: this._prepareBoxConfig({\r\n                direction: direction,\r\n                items: items\r\n            })\r\n        }\r\n    },\r\n    _isBlockIndivisible: function(options, block) {\r\n        return options && options.col.start === block.col.start && options.col.end === block.col.end && options.row.start === block.row.start && options.row.end === block.row.end\r\n    },\r\n    _crossDirection: function(direction) {\r\n        return \"col\" === direction ? \"row\" : \"col\"\r\n    },\r\n    _nextBlock: function(options) {\r\n        var direction = options.direction;\r\n        var crossDirection = this._crossDirection(direction);\r\n        var startIndex = options[direction].start;\r\n        var endIndex = options[direction].end;\r\n        var crossStartIndex = options[crossDirection].start;\r\n        if (crossStartIndex > options[crossDirection].end) {\r\n            return null\r\n        }\r\n        var crossSpan = 1;\r\n        for (var crossIndex = crossStartIndex; crossIndex < crossStartIndex + crossSpan; crossIndex++) {\r\n            var lineCrossSpan = 1;\r\n            for (var index = startIndex; index <= endIndex; index++) {\r\n                var cell = this._cellByDirection(direction, index, crossIndex);\r\n                lineCrossSpan = Math.max(lineCrossSpan, cell.location[crossDirection + \"span\"])\r\n            }\r\n            var lineCrossEndIndex = crossIndex + lineCrossSpan;\r\n            var crossEndIndex = crossStartIndex + crossSpan;\r\n            if (lineCrossEndIndex > crossEndIndex) {\r\n                crossSpan += lineCrossEndIndex - crossEndIndex\r\n            }\r\n        }\r\n        var result = {};\r\n        result[direction] = {\r\n            start: startIndex,\r\n            end: endIndex\r\n        };\r\n        result[crossDirection] = {\r\n            start: crossStartIndex,\r\n            end: crossStartIndex + crossSpan - 1\r\n        };\r\n        return result\r\n    },\r\n    _cellByDirection: function(direction, index, crossIndex) {\r\n        return \"col\" === direction ? this._grid[crossIndex][index] : this._grid[index][crossIndex]\r\n    },\r\n    _blockSize: function(block, direction) {\r\n        var sizeConfigs = \"row\" === direction ? this._rows : this._cols;\r\n        var result = extend(this._createDefaultSizeConfig(), {\r\n            ratio: 0\r\n        });\r\n        for (var index = block[direction].start; index <= block[direction].end; index++) {\r\n            var sizeConfig = sizeConfigs[index];\r\n            result.ratio += sizeConfig.ratio;\r\n            result.baseSize += sizeConfig.baseSize;\r\n            result.minSize += sizeConfig.minSize;\r\n            result.maxSize += sizeConfig.maxSize;\r\n            if (typeUtils.isDefined(sizeConfig.shrink)) {\r\n                result.shrink = sizeConfig.shrink\r\n            }\r\n        }\r\n        result.minSize = result.minSize ? result.minSize : \"auto\";\r\n        result.maxSize = result.maxSize ? result.maxSize : \"auto\";\r\n        this._isSingleColumnScreen() && (result.baseSize = \"auto\");\r\n        return result\r\n    },\r\n    _update: function() {\r\n        var $existingRoot = this._$root;\r\n        this._renderItems();\r\n        $existingRoot && $existingRoot.detach();\r\n        this._saveAssistantRoot($existingRoot);\r\n        this._layoutChangedAction();\r\n        this._updateRootBox()\r\n    },\r\n    _saveAssistantRoot: function($root) {\r\n        this._assistantRoots = this._assistantRoots || [];\r\n        this._assistantRoots.push($root)\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._updateTimer);\r\n        this._clearItemNodeTemplates();\r\n        this._cleanUnusedRoots();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _cleanUnusedRoots: function() {\r\n        if (!this._assistantRoots) {\r\n            return\r\n        }\r\n        iteratorUtils.each(this._assistantRoots, function(_, item) {\r\n            $(item).remove()\r\n        })\r\n    },\r\n    _clearItemNodeTemplates: function() {\r\n        iteratorUtils.each(this.option(\"items\"), function() {\r\n            delete this.node\r\n        })\r\n    },\r\n    _toggleVisibility: function(visible) {\r\n        this.callBase(visible);\r\n        if (visible) {\r\n            this._updateRootBox()\r\n        }\r\n    },\r\n    _attachClickEvent: commonUtils.noop,\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"rows\":\r\n            case \"cols\":\r\n            case \"screenByWidth\":\r\n            case \"_layoutStrategy\":\r\n            case \"singleColumnScreen\":\r\n                this._clearItemNodeTemplates();\r\n                this._invalidate();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                this._update();\r\n                break;\r\n            case \"onLayoutChanged\":\r\n                this._initLayoutChangedAction();\r\n                break;\r\n            case \"itemTemplate\":\r\n                this._clearItemNodeTemplates();\r\n                this.callBase(args);\r\n                break;\r\n            case \"currentScreenFactor\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this._getCurrentScreen() !== this.option(\"currentScreenFactor\")) {\r\n            this._update()\r\n        }\r\n    },\r\n    repaint: function() {\r\n        this._update()\r\n    }\r\n});\r\nregisterComponent(\"dxResponsiveBox\", ResponsiveBox);\r\nmodule.exports = ResponsiveBox;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}