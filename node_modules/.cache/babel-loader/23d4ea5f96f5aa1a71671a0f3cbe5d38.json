{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\src\\\\Components\\\\World\\\\Graph.jsx\";\nimport React, { useContext, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { HistoryContext } from '../Store';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport request from \"request\";\nimport axios from \"axios\";\nimport { Chart, Series, ArgumentAxis, CommonSeriesSettings, Export, Legend, Margin, Title, Subtitle, Tooltip, Label, Grid } from \"devextreme-react/chart\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction Graph(props) {\n  const classes = useStyles();\n\n  const _useContext = useContext(HistoryContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        history = _useContext2[0],\n        setHistory = _useContext2[1];\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        chart = _useState2[0],\n        setChart = _useState2[1];\n\n  const Hist = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var options;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = {\n              'method': 'GET',\n              'url': 'https://pomber.github.io/covid19/timeseries.json',\n              'headers': {}\n            };\n            request(options, function (error, response) {\n              if (error) throw new Error(error); // console.log(response.body);\n\n              console.log(typeof JSON.parse(response.body));\n              setHistory(response.body);\n            }); //   const rec = await axios({\n            //   \"method\": \"get\",\n            //   \"url\": \"https://pomber.github.io/covid19/timeseries.json\"})\n            //   .then((response)=>{\n            //       const Timeline = response.data;\n            //       return Timeline;\n            //   })\n            //   .catch((error)=>{\n            //       console.log(error)\n            // });\n            // setHistory(rec)\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function Hist() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (history.length === 0) Hist();\n  console.log(history);\n  var name = \"\";\n  if (props.name === \"USA\") name = \"US\";else if (props.name === \"UK\") name = \"United Kingdom\";else if (props.name === \"S. Korea\") name = \"Korea, South\";else if (props.name === \"UAE\") name = \"United Arab Emirates\";else if (props.name === \"Moldova, Republic of\") name = \"Moldova\";else if (props.name === \"Tanzania, United Republic of\") name = \"Tanzania\";else if (props.name === \"Syrian Arab Republic\") name = \"Syria\";else if (props.name === \"Libyan Arab Jamahiriya\") name = \"Libya\";else if (props.name === \"Lao People\\\"s Democratic Republic\") name = \"Laos\";else if (props.name === \"Holy See (Vatican City State)\") name = \"Holy See\";else name = props.name;\n  var info = history[name]; // const k =info.pop(k);\n\n  console.log(info); // var info = [];\n\n  if (info === null) info = history[\"\"]; // else\n  // info = info.filter((rec) => {\n  //   return (rec.confirmed!==0)\n  // });\n\n  function getData() {\n    return /*#__PURE__*/React.createElement(Chart, {\n      palette: chart === 0 ? \"Material\" : chart === 1 ? \"Dark Voilet\" : chart === 2 ? \"Carmine\" : chart === 3 ? \"Bright\" : null,\n      dataSource: info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CommonSeriesSettings, {\n      argumentField: \"date\",\n      type: \"line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }), chart === 0 || chart === 1 ? /*#__PURE__*/React.createElement(Series, {\n      key: \"confirmed\",\n      valueField: \"confirmed\",\n      name: \"Total Cases\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }) : null, chart === 0 || chart === 2 ? /*#__PURE__*/React.createElement(Series, {\n      key: \"deaths\",\n      valueField: \"deaths\",\n      name: \"Total Deaths\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }) : null, chart === 0 || chart === 3 ? /*#__PURE__*/React.createElement(Series, {\n      key: \"recovered\",\n      valueField: \"recovered\",\n      name: \"Total Recoveries\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }) : null, /*#__PURE__*/React.createElement(Margin, {\n      bottom: 20,\n      right: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ArgumentAxis, {\n      valueMarginsEnabled: false,\n      discreteAxisDivisionMode: \"crossLabels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      wordWrap: \"none\",\n      overlappingBehavior: (\"hidden\", \"rotete\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      visible: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Legend, {\n      verticalAlignment: \"bottom\",\n      horizontalAlignment: \"center\",\n      itemTextPosition: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Title, {\n      text: \"Corona Record in \" + props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      enabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  const chartTypes = [\"All\", \"Total Cases\", \"Deaths\", \"Recovered\"];\n\n  function handleChange(event) {\n    setChart(event.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, getData(), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelId: \"SelectChart\",\n    id: \"demo-simple-select\",\n    value: chart,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, chartTypes[0]), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, chartTypes[1]), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, chartTypes[2]), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, chartTypes[3]))));\n}\n\nexport default Graph;\n{\n  /* <Chart data={data} width={800} height={400}>\r\n         <ArgumentAxis>\r\n         <Label\r\n               wordWrap=\"none\"\r\n               overlappingBehavior={\"stagger\"}\r\n             />\r\n         </ArgumentAxis>\r\n         <ValueAxis />\r\n         <Title text={\"Corona Record in \" + props.name} />\r\n  \n         <LineSeries\r\n             name=\"Total Cases\"\r\n             valueField=\"cases\"\r\n             argumentField=\"argument\"\r\n           />\r\n           <LineSeries\r\n             name=\"Total Deaths\"\r\n             valueField=\"deaths\"\r\n             argumentField=\"argument\"\r\n           />\r\n           <LineSeries\r\n             name=\"Total Recoveries\"\r\n             valueField=\"recovered\"\r\n             argumentField=\"argument\"\r\n           />\r\n           <Legend />\r\n           <ZoomAndPan />\r\n       </Chart> */\n}","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/src/Components/World/Graph.jsx"],"names":["React","useContext","useState","Paper","HistoryContext","FormControl","Select","InputLabel","MenuItem","makeStyles","request","axios","Chart","Series","ArgumentAxis","CommonSeriesSettings","Export","Legend","Margin","Title","Subtitle","Tooltip","Label","Grid","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Graph","props","classes","history","setHistory","chart","setChart","Hist","options","error","response","Error","console","log","JSON","parse","body","length","name","info","getData","chartTypes","handleChange","event","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {HistoryContext} from '../Store';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport request from \"request\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Chart,\r\n  Series,\r\n  ArgumentAxis,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  Margin,\r\n  Title,\r\n  Subtitle,\r\n  Tooltip,\r\n  Label,\r\n  Grid\r\n} from \"devextreme-react/chart\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\nfunction Graph(props) {\r\n  const classes = useStyles();\r\n  const [history, setHistory] = useContext(HistoryContext);\r\n  const [chart, setChart] = useState(0);\r\n\r\n  const Hist = async () => {\r\n\r\n    var options = {\r\n      'method': 'GET',\r\n      'url': 'https://pomber.github.io/covid19/timeseries.json',\r\n      'headers': {\r\n      }\r\n    };\r\n    request(options, function (error, response) { \r\n      if (error) throw new Error(error);\r\n      // console.log(response.body);\r\n      console.log(typeof(JSON.parse(response.body)));\r\n      setHistory(response.body);\r\n    });\r\n  //   const rec = await axios({\r\n  //   \"method\": \"get\",\r\n  //   \"url\": \"https://pomber.github.io/covid19/timeseries.json\"})\r\n  //   .then((response)=>{\r\n  //       const Timeline = response.data;\r\n  //       return Timeline;\r\n  //   })\r\n  //   .catch((error)=>{\r\n  //       console.log(error)\r\n  // });\r\n  // setHistory(rec)\r\n  }\r\n\r\n  if(history.length===0)\r\n    Hist();\r\n    console.log(history);\r\n    \r\n\r\n   var name = \"\";\r\n\r\n  if(props.name===\"USA\")\r\n    name = \"US\";\r\n  else if(props.name===\"UK\")\r\n    name = \"United Kingdom\";\r\n  else if(props.name===\"S. Korea\")\r\n    name = \"Korea, South\";\r\n  else if(props.name===\"UAE\")\r\n    name = \"United Arab Emirates\";\r\n  else if(props.name===\"Moldova, Republic of\")\r\n    name = \"Moldova\";\r\n  else if(props.name===\"Tanzania, United Republic of\")\r\n    name = \"Tanzania\";\r\n  else if(props.name===\"Syrian Arab Republic\")\r\n    name = \"Syria\";\r\n  else if(props.name===\"Libyan Arab Jamahiriya\")\r\n    name = \"Libya\";\r\n  else if(props.name===\"Lao People\\\"s Democratic Republic\")\r\n    name = \"Laos\";\r\n  else if(props.name===\"Holy See (Vatican City State)\")\r\n    name = \"Holy See\";\r\n  else\r\n    name = props.name;\r\n\r\n  var info = history[name];\r\n  // const k =info.pop(k);\r\n  console.log(info);\r\n  \r\n  \r\n  // var info = [];\r\n  if(info===null)\r\n    info = history[\"\"];\r\n  // else\r\n    // info = info.filter((rec) => {\r\n    //   return (rec.confirmed!==0)\r\n    // });\r\n    \r\n\r\n  function getData() {\r\n    return (\r\n      <Chart\r\n          palette={chart===0?\"Material\":chart===1?\"Dark Voilet\":chart===2?\"Carmine\":chart===3?\"Bright\":null}\r\n          dataSource={info}\r\n        >\r\n          <CommonSeriesSettings\r\n            argumentField=\"date\"\r\n            type=\"line\"\r\n          />\r\n          {chart===0||chart===1?<Series key=\"confirmed\" valueField=\"confirmed\" name=\"Total Cases\" />:null}\r\n          {chart===0||chart===2?<Series key=\"deaths\" valueField=\"deaths\" name=\"Total Deaths\" />:null}\r\n          {chart===0||chart===3?<Series key=\"recovered\" valueField=\"recovered\" name=\"Total Recoveries\" />:null}\r\n          <Margin bottom={20} right={10} />\r\n          <ArgumentAxis\r\n            valueMarginsEnabled={false}\r\n            discreteAxisDivisionMode=\"crossLabels\"\r\n          >\r\n          <Label\r\n              wordWrap=\"none\"\r\n              overlappingBehavior={\"hidden\",\"rotete\"}\r\n            />\r\n          <Grid visible={true} />\r\n          </ArgumentAxis>\r\n          <Legend\r\n              verticalAlignment=\"bottom\"\r\n              horizontalAlignment=\"center\"\r\n              itemTextPosition=\"bottom\"\r\n            />\r\n            <Title text={\"Corona Record in \" + props.name}>\r\n              \r\n            </Title>\r\n            <Tooltip enabled={true} />\r\n          </Chart>\r\n    )\r\n    \r\n  }\r\n  \r\n  const chartTypes = [\"All\", \"Total Cases\", \"Deaths\", \"Recovered\"];\r\n\r\n  function handleChange(event) {\r\n    setChart(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n\r\n      {getData()}\r\n      <FormControl className={classes.formControl}>\r\n        {/* <InputLabel id=\"demo-simple-select-label\">Age</InputLabel> */}\r\n        <Select\r\n          labelId=\"SelectChart\"\r\n          id=\"demo-simple-select\"\r\n          value={chart}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={0}>{chartTypes[0]}</MenuItem>\r\n          <MenuItem value={1}>{chartTypes[1]}</MenuItem>\r\n          <MenuItem value={2}>{chartTypes[2]}</MenuItem>\r\n          <MenuItem value={3}>{chartTypes[3]}</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      \r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default (Graph);\r\n\r\n\r\n{/* <Chart data={data} width={800} height={400}>\r\n        <ArgumentAxis>\r\n        <Label\r\n              wordWrap=\"none\"\r\n              overlappingBehavior={\"stagger\"}\r\n            />\r\n        </ArgumentAxis>\r\n        <ValueAxis />\r\n        <Title text={\"Corona Record in \" + props.name} />\r\n\r\n        <LineSeries\r\n            name=\"Total Cases\"\r\n            valueField=\"cases\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <LineSeries\r\n            name=\"Total Deaths\"\r\n            valueField=\"deaths\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <LineSeries\r\n            name=\"Total Recoveries\"\r\n            valueField=\"recovered\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <Legend />\r\n          <ZoomAndPan />\r\n      </Chart> */}"]},"metadata":{},"sourceType":"module"}