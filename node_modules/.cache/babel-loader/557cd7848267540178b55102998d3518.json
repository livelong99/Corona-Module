{"ast":null,"code":"/**\r\n * DevExtreme (ui/editor/editor.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _element_data = require(\"../../core/element_data\");\n\nvar _element_data2 = _interopRequireDefault(_element_data);\n\nvar _callbacks = require(\"../../core/utils/callbacks\");\n\nvar _callbacks2 = _interopRequireDefault(_callbacks);\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _common2 = _interopRequireDefault(_common);\n\nvar _window = require(\"../../core/utils/window\");\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _utils = require(\"../../events/utils\");\n\nvar _position = require(\"../../core/utils/position\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _guid = require(\"../../core/guid\");\n\nvar _guid2 = _interopRequireDefault(_guid);\n\nvar _ui = require(\"../widget/ui.widget\");\n\nvar _ui2 = _interopRequireDefault(_ui);\n\nvar _overlay = require(\"../overlay\");\n\nvar _overlay2 = _interopRequireDefault(_overlay);\n\nvar _validation_engine = require(\"../validation_engine\");\n\nvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _string = require(\"../../core/utils/string\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar READONLY_STATE_CLASS = \"dx-state-readonly\";\nvar INVALID_CLASS = \"dx-invalid\";\nvar INVALID_MESSAGE = \"dx-invalid-message\";\nvar INVALID_MESSAGE_CONTENT = \"dx-invalid-message-content\";\nvar INVALID_MESSAGE_AUTO = \"dx-invalid-message-auto\";\nvar INVALID_MESSAGE_ALWAYS = \"dx-invalid-message-always\";\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\nvar VALIDATION_TARGET = \"dx-validation-target\";\nvar VALIDATION_MESSAGE_MIN_WIDTH = 100;\nvar VALIDATION_STATUS_VALID = \"valid\";\nvar VALIDATION_STATUS_INVALID = \"invalid\";\nvar READONLY_NAMESPACE = \"editorReadOnly\";\n\nvar getValidationErrorMessage = function getValidationErrorMessage(validationErrors) {\n  var validationErrorMessage = \"\";\n\n  if (validationErrors) {\n    validationErrors.forEach(function (err) {\n      if (err.message) {\n        validationErrorMessage += (validationErrorMessage ? \"<br />\" : \"\") + (0, _string.encodeHtml)(err.message);\n      }\n    });\n  }\n\n  return validationErrorMessage;\n};\n\nvar Editor = _ui2.default.inherit({\n  ctor: function ctor() {\n    this.showValidationMessageTimeout = null;\n    this.validationRequest = (0, _callbacks2.default)();\n    this.callBase.apply(this, arguments);\n  },\n  _createElement: function _createElement(element) {\n    this.callBase(element);\n    var $element = this.$element();\n\n    if ($element) {\n      _element_data2.default.data($element[0], VALIDATION_TARGET, this);\n    }\n  },\n  _initOptions: function _initOptions(options) {\n    this.callBase.apply(this, arguments);\n    this.option(_validation_engine2.default.initValidationOptions(options));\n  },\n  _init: function _init() {\n    this.callBase();\n\n    this._initInnerOptionCache(\"validationTooltipOptions\");\n\n    var $element = this.$element();\n    $element.addClass(DX_INVALID_BADGE_CLASS);\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return (0, _extend.extend)(this.callBase(), {\n      value: null,\n      name: \"\",\n      onValueChanged: null,\n      readOnly: false,\n      isValid: true,\n      validationError: null,\n      validationErrors: null,\n      validationStatus: VALIDATION_STATUS_VALID,\n      validationMessageMode: \"auto\",\n      validationBoundary: void 0,\n      validationMessageOffset: {\n        h: 0,\n        v: 0\n      },\n      validationTooltipOptions: {}\n    });\n  },\n  _attachKeyboardEvents: function _attachKeyboardEvents() {\n    if (this.option(\"readOnly\")) {\n      return;\n    }\n\n    this.callBase();\n\n    if (this._keyboardProcessor) {\n      this._attachChildKeyboardEvents();\n    }\n  },\n  _attachChildKeyboardEvents: _common2.default.noop,\n  _setOptionsByReference: function _setOptionsByReference() {\n    this.callBase();\n    (0, _extend.extend)(this._optionsByReference, {\n      validationError: true\n    });\n  },\n  _createValueChangeAction: function _createValueChangeAction() {\n    this._valueChangeAction = this._createActionByOption(\"onValueChanged\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  },\n  _suppressValueChangeAction: function _suppressValueChangeAction() {\n    this._valueChangeActionSuppressed = true;\n  },\n  _resumeValueChangeAction: function _resumeValueChangeAction() {\n    this._valueChangeActionSuppressed = false;\n  },\n  _initMarkup: function _initMarkup() {\n    this._toggleReadOnlyState();\n\n    this._setSubmitElementName(this.option(\"name\"));\n\n    this.callBase();\n\n    this._renderValidationState();\n  },\n  _raiseValueChangeAction: function _raiseValueChangeAction(value, previousValue) {\n    if (!this._valueChangeAction) {\n      this._createValueChangeAction();\n    }\n\n    this._valueChangeAction(this._valueChangeArgs(value, previousValue));\n  },\n  _valueChangeArgs: function _valueChangeArgs(value, previousValue) {\n    return {\n      value: value,\n      previousValue: previousValue,\n      event: this._valueChangeEventInstance\n    };\n  },\n  _saveValueChangeEvent: function _saveValueChangeEvent(e) {\n    this._valueChangeEventInstance = e;\n  },\n  _focusInHandler: function _focusInHandler(e) {\n    var _this = this;\n\n    var isValidationMessageShownOnFocus = \"auto\" === this.option(\"validationMessageMode\");\n\n    if (this._canValueBeChangedByClick() && isValidationMessageShownOnFocus) {\n      this._$validationMessage && this._$validationMessage.removeClass(INVALID_MESSAGE_AUTO);\n      clearTimeout(this.showValidationMessageTimeout);\n      this.showValidationMessageTimeout = setTimeout(function () {\n        return _this._$validationMessage && _this._$validationMessage.addClass(INVALID_MESSAGE_AUTO);\n      }, 150);\n    }\n\n    return this.callBase(e);\n  },\n  _canValueBeChangedByClick: function _canValueBeChangedByClick() {\n    return false;\n  },\n  _renderValidationState: function _renderValidationState() {\n    var isValid = this.option(\"isValid\") && this.option(\"validationStatus\") !== VALIDATION_STATUS_INVALID;\n    var validationMessageMode = this.option(\"validationMessageMode\");\n    var $element = this.$element();\n    var validationErrors = this.option(\"validationErrors\");\n\n    if (!validationErrors && this.option(\"validationError\")) {\n      validationErrors = [this.option(\"validationError\")];\n    }\n\n    $element.toggleClass(INVALID_CLASS, !isValid);\n    this.setAria(VALIDATION_STATUS_INVALID, !isValid || void 0);\n\n    if (!_window2.default.hasWindow()) {\n      return;\n    }\n\n    if (this._$validationMessage) {\n      this._$validationMessage.remove();\n\n      this.setAria(\"describedby\", null);\n      this._$validationMessage = null;\n    }\n\n    var validationErrorMessage = getValidationErrorMessage(validationErrors);\n\n    if (!isValid && validationErrorMessage) {\n      this._$validationMessage = (0, _renderer2.default)(\"<div>\").addClass(INVALID_MESSAGE).html(validationErrorMessage).appendTo($element);\n\n      var validationTarget = this._getValidationMessageTarget();\n\n      this._validationMessage = this._createComponent(this._$validationMessage, _overlay2.default, (0, _extend.extend)({\n        integrationOptions: {},\n        templatesRenderAsynchronously: false,\n        target: validationTarget,\n        shading: false,\n        width: \"auto\",\n        height: \"auto\",\n        container: $element,\n        position: this._getValidationMessagePosition(\"below\"),\n        closeOnOutsideClick: false,\n        closeOnTargetScroll: false,\n        animation: null,\n        visible: true,\n        propagateOutsideClick: true,\n        _checkParentVisibility: false\n      }, this._getInnerOptionsCache(\"validationTooltipOptions\")));\n\n      this._$validationMessage.toggleClass(INVALID_MESSAGE_AUTO, \"auto\" === validationMessageMode).toggleClass(INVALID_MESSAGE_ALWAYS, \"always\" === validationMessageMode);\n\n      var messageId = \"dx-\" + new _guid2.default();\n\n      this._validationMessage.$content().addClass(INVALID_MESSAGE_CONTENT).attr(\"id\", messageId);\n\n      this.setAria(\"describedby\", messageId);\n\n      this._setValidationMessageMaxWidth();\n\n      this._bindInnerWidgetOptions(this._validationMessage, \"validationTooltipOptions\");\n    }\n  },\n  _setValidationMessageMaxWidth: function _setValidationMessageMaxWidth() {\n    if (!this._validationMessage) {\n      return;\n    }\n\n    if (0 === this._getValidationMessageTarget().outerWidth()) {\n      this._validationMessage.option(\"maxWidth\", \"100%\");\n\n      return;\n    }\n\n    var validationMessageMaxWidth = Math.max(VALIDATION_MESSAGE_MIN_WIDTH, this._getValidationMessageTarget().outerWidth());\n\n    this._validationMessage.option(\"maxWidth\", validationMessageMaxWidth);\n  },\n  _getValidationMessageTarget: function _getValidationMessageTarget() {\n    return this.$element();\n  },\n  _getValidationMessagePosition: function _getValidationMessagePosition(positionRequest) {\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var messagePositionSide = (0, _position.getDefaultAlignment)(rtlEnabled);\n    var messageOriginalOffset = this.option(\"validationMessageOffset\");\n    var messageOffset = {\n      h: messageOriginalOffset.h,\n      v: messageOriginalOffset.v\n    };\n    var verticalPositions = \"below\" === positionRequest ? [\" top\", \" bottom\"] : [\" bottom\", \" top\"];\n\n    if (rtlEnabled) {\n      messageOffset.h = -messageOffset.h;\n    }\n\n    if (\"below\" !== positionRequest) {\n      messageOffset.v = -messageOffset.v;\n    }\n\n    return {\n      offset: messageOffset,\n      boundary: this.option(\"validationBoundary\"),\n      my: messagePositionSide + verticalPositions[0],\n      at: messagePositionSide + verticalPositions[1],\n      collision: \"none flip\"\n    };\n  },\n  _toggleReadOnlyState: function _toggleReadOnlyState() {\n    var readOnly = this.option(\"readOnly\");\n\n    this._toggleBackspaceHandler(readOnly);\n\n    this.$element().toggleClass(READONLY_STATE_CLASS, !!readOnly);\n    this.setAria(\"readonly\", readOnly || void 0);\n  },\n  _toggleBackspaceHandler: function _toggleBackspaceHandler(isReadOnly) {\n    var $eventTarget = this._keyboardEventBindingTarget();\n\n    var eventName = (0, _utils.addNamespace)(\"keydown\", READONLY_NAMESPACE);\n\n    _events_engine2.default.off($eventTarget, eventName);\n\n    if (isReadOnly) {\n      _events_engine2.default.on($eventTarget, eventName, function (e) {\n        if (\"backspace\" === (0, _utils.normalizeKeyName)(e)) {\n          e.preventDefault();\n        }\n      });\n    }\n  },\n  _dispose: function _dispose() {\n    var element = this.$element()[0];\n\n    _element_data2.default.data(element, VALIDATION_TARGET, null);\n\n    clearTimeout(this.showValidationMessageTimeout);\n    this.callBase();\n  },\n  _setSubmitElementName: function _setSubmitElementName(name) {\n    var $submitElement = this._getSubmitElement();\n\n    if (!$submitElement) {\n      return;\n    }\n\n    if (name.length > 0) {\n      $submitElement.attr(\"name\", name);\n    } else {\n      $submitElement.removeAttr(\"name\");\n    }\n  },\n  _getSubmitElement: function _getSubmitElement() {\n    return null;\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"onValueChanged\":\n        this._createValueChangeAction();\n\n        break;\n\n      case \"isValid\":\n      case \"validationError\":\n        this.option(_validation_engine2.default.synchronizeValidationOptions(args, this.option()));\n        break;\n\n      case \"validationErrors\":\n      case \"validationStatus\":\n        this.option(_validation_engine2.default.synchronizeValidationOptions(args, this.option()));\n\n        this._renderValidationState();\n\n        break;\n\n      case \"validationBoundary\":\n      case \"validationMessageMode\":\n        this._renderValidationState();\n\n        break;\n\n      case \"validationTooltipOptions\":\n        this._innerOptionChanged(this._validationMessage, args);\n\n        break;\n\n      case \"readOnly\":\n        this._toggleReadOnlyState();\n\n        this._refreshFocusState();\n\n        break;\n\n      case \"value\":\n        if (!this._valueChangeActionSuppressed) {\n          this._raiseValueChangeAction(args.value, args.previousValue);\n\n          this._saveValueChangeEvent(void 0);\n        }\n\n        if (args.value != args.previousValue) {\n          this.validationRequest.fire({\n            value: args.value,\n            editor: this\n          });\n        }\n\n        break;\n\n      case \"width\":\n        this.callBase(args);\n\n        this._setValidationMessageMaxWidth();\n\n        break;\n\n      case \"name\":\n        this._setSubmitElementName(args.value);\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  reset: function reset() {\n    var defaultOptions = this._getDefaultOptions();\n\n    this.option(\"value\", defaultOptions.value);\n  }\n});\n\nmodule.exports = Editor;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/editor/editor.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_element_data","_element_data2","_callbacks","_callbacks2","_common","_common2","_window","_window2","_utils","_position","_extend","_guid","_guid2","_ui","_ui2","_overlay","_overlay2","_validation_engine","_validation_engine2","_events_engine","_events_engine2","_string","obj","__esModule","READONLY_STATE_CLASS","INVALID_CLASS","INVALID_MESSAGE","INVALID_MESSAGE_CONTENT","INVALID_MESSAGE_AUTO","INVALID_MESSAGE_ALWAYS","DX_INVALID_BADGE_CLASS","VALIDATION_TARGET","VALIDATION_MESSAGE_MIN_WIDTH","VALIDATION_STATUS_VALID","VALIDATION_STATUS_INVALID","READONLY_NAMESPACE","getValidationErrorMessage","validationErrors","validationErrorMessage","forEach","err","message","encodeHtml","Editor","default","inherit","ctor","showValidationMessageTimeout","validationRequest","callBase","apply","arguments","_createElement","element","$element","data","_initOptions","options","option","initValidationOptions","_init","_initInnerOptionCache","addClass","_getDefaultOptions","extend","value","name","onValueChanged","readOnly","isValid","validationError","validationStatus","validationMessageMode","validationBoundary","validationMessageOffset","h","v","validationTooltipOptions","_attachKeyboardEvents","_keyboardProcessor","_attachChildKeyboardEvents","noop","_setOptionsByReference","_optionsByReference","_createValueChangeAction","_valueChangeAction","_createActionByOption","excludeValidators","_suppressValueChangeAction","_valueChangeActionSuppressed","_resumeValueChangeAction","_initMarkup","_toggleReadOnlyState","_setSubmitElementName","_renderValidationState","_raiseValueChangeAction","previousValue","_valueChangeArgs","event","_valueChangeEventInstance","_saveValueChangeEvent","e","_focusInHandler","_this","isValidationMessageShownOnFocus","_canValueBeChangedByClick","_$validationMessage","removeClass","clearTimeout","setTimeout","toggleClass","setAria","hasWindow","remove","html","appendTo","validationTarget","_getValidationMessageTarget","_validationMessage","_createComponent","integrationOptions","templatesRenderAsynchronously","target","shading","width","height","container","position","_getValidationMessagePosition","closeOnOutsideClick","closeOnTargetScroll","animation","visible","propagateOutsideClick","_checkParentVisibility","_getInnerOptionsCache","messageId","$content","attr","_setValidationMessageMaxWidth","_bindInnerWidgetOptions","outerWidth","validationMessageMaxWidth","Math","max","positionRequest","rtlEnabled","messagePositionSide","getDefaultAlignment","messageOriginalOffset","messageOffset","verticalPositions","offset","boundary","my","at","collision","_toggleBackspaceHandler","isReadOnly","$eventTarget","_keyboardEventBindingTarget","eventName","addNamespace","off","on","normalizeKeyName","preventDefault","_dispose","$submitElement","_getSubmitElement","length","removeAttr","_optionChanged","args","synchronizeValidationOptions","_innerOptionChanged","_refreshFocusState","fire","editor","reset","defaultOptions","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/editor/editor.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _element_data = require(\"../../core/element_data\");\r\nvar _element_data2 = _interopRequireDefault(_element_data);\r\nvar _callbacks = require(\"../../core/utils/callbacks\");\r\nvar _callbacks2 = _interopRequireDefault(_callbacks);\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _common2 = _interopRequireDefault(_common);\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _window2 = _interopRequireDefault(_window);\r\nvar _utils = require(\"../../events/utils\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _guid = require(\"../../core/guid\");\r\nvar _guid2 = _interopRequireDefault(_guid);\r\nvar _ui = require(\"../widget/ui.widget\");\r\nvar _ui2 = _interopRequireDefault(_ui);\r\nvar _overlay = require(\"../overlay\");\r\nvar _overlay2 = _interopRequireDefault(_overlay);\r\nvar _validation_engine = require(\"../validation_engine\");\r\nvar _validation_engine2 = _interopRequireDefault(_validation_engine);\r\nvar _events_engine = require(\"../../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _string = require(\"../../core/utils/string\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar READONLY_STATE_CLASS = \"dx-state-readonly\";\r\nvar INVALID_CLASS = \"dx-invalid\";\r\nvar INVALID_MESSAGE = \"dx-invalid-message\";\r\nvar INVALID_MESSAGE_CONTENT = \"dx-invalid-message-content\";\r\nvar INVALID_MESSAGE_AUTO = \"dx-invalid-message-auto\";\r\nvar INVALID_MESSAGE_ALWAYS = \"dx-invalid-message-always\";\r\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\r\nvar VALIDATION_TARGET = \"dx-validation-target\";\r\nvar VALIDATION_MESSAGE_MIN_WIDTH = 100;\r\nvar VALIDATION_STATUS_VALID = \"valid\";\r\nvar VALIDATION_STATUS_INVALID = \"invalid\";\r\nvar READONLY_NAMESPACE = \"editorReadOnly\";\r\nvar getValidationErrorMessage = function(validationErrors) {\r\n    var validationErrorMessage = \"\";\r\n    if (validationErrors) {\r\n        validationErrors.forEach(function(err) {\r\n            if (err.message) {\r\n                validationErrorMessage += (validationErrorMessage ? \"<br />\" : \"\") + (0, _string.encodeHtml)(err.message)\r\n            }\r\n        })\r\n    }\r\n    return validationErrorMessage\r\n};\r\nvar Editor = _ui2.default.inherit({\r\n    ctor: function() {\r\n        this.showValidationMessageTimeout = null;\r\n        this.validationRequest = (0, _callbacks2.default)();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _createElement: function(element) {\r\n        this.callBase(element);\r\n        var $element = this.$element();\r\n        if ($element) {\r\n            _element_data2.default.data($element[0], VALIDATION_TARGET, this)\r\n        }\r\n    },\r\n    _initOptions: function(options) {\r\n        this.callBase.apply(this, arguments);\r\n        this.option(_validation_engine2.default.initValidationOptions(options))\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initInnerOptionCache(\"validationTooltipOptions\");\r\n        var $element = this.$element();\r\n        $element.addClass(DX_INVALID_BADGE_CLASS)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            value: null,\r\n            name: \"\",\r\n            onValueChanged: null,\r\n            readOnly: false,\r\n            isValid: true,\r\n            validationError: null,\r\n            validationErrors: null,\r\n            validationStatus: VALIDATION_STATUS_VALID,\r\n            validationMessageMode: \"auto\",\r\n            validationBoundary: void 0,\r\n            validationMessageOffset: {\r\n                h: 0,\r\n                v: 0\r\n            },\r\n            validationTooltipOptions: {}\r\n        })\r\n    },\r\n    _attachKeyboardEvents: function() {\r\n        if (this.option(\"readOnly\")) {\r\n            return\r\n        }\r\n        this.callBase();\r\n        if (this._keyboardProcessor) {\r\n            this._attachChildKeyboardEvents()\r\n        }\r\n    },\r\n    _attachChildKeyboardEvents: _common2.default.noop,\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            validationError: true\r\n        })\r\n    },\r\n    _createValueChangeAction: function() {\r\n        this._valueChangeAction = this._createActionByOption(\"onValueChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _suppressValueChangeAction: function() {\r\n        this._valueChangeActionSuppressed = true\r\n    },\r\n    _resumeValueChangeAction: function() {\r\n        this._valueChangeActionSuppressed = false\r\n    },\r\n    _initMarkup: function() {\r\n        this._toggleReadOnlyState();\r\n        this._setSubmitElementName(this.option(\"name\"));\r\n        this.callBase();\r\n        this._renderValidationState()\r\n    },\r\n    _raiseValueChangeAction: function(value, previousValue) {\r\n        if (!this._valueChangeAction) {\r\n            this._createValueChangeAction()\r\n        }\r\n        this._valueChangeAction(this._valueChangeArgs(value, previousValue))\r\n    },\r\n    _valueChangeArgs: function(value, previousValue) {\r\n        return {\r\n            value: value,\r\n            previousValue: previousValue,\r\n            event: this._valueChangeEventInstance\r\n        }\r\n    },\r\n    _saveValueChangeEvent: function(e) {\r\n        this._valueChangeEventInstance = e\r\n    },\r\n    _focusInHandler: function(e) {\r\n        var _this = this;\r\n        var isValidationMessageShownOnFocus = \"auto\" === this.option(\"validationMessageMode\");\r\n        if (this._canValueBeChangedByClick() && isValidationMessageShownOnFocus) {\r\n            this._$validationMessage && this._$validationMessage.removeClass(INVALID_MESSAGE_AUTO);\r\n            clearTimeout(this.showValidationMessageTimeout);\r\n            this.showValidationMessageTimeout = setTimeout(function() {\r\n                return _this._$validationMessage && _this._$validationMessage.addClass(INVALID_MESSAGE_AUTO)\r\n            }, 150)\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _canValueBeChangedByClick: function() {\r\n        return false\r\n    },\r\n    _renderValidationState: function() {\r\n        var isValid = this.option(\"isValid\") && this.option(\"validationStatus\") !== VALIDATION_STATUS_INVALID;\r\n        var validationMessageMode = this.option(\"validationMessageMode\");\r\n        var $element = this.$element();\r\n        var validationErrors = this.option(\"validationErrors\");\r\n        if (!validationErrors && this.option(\"validationError\")) {\r\n            validationErrors = [this.option(\"validationError\")]\r\n        }\r\n        $element.toggleClass(INVALID_CLASS, !isValid);\r\n        this.setAria(VALIDATION_STATUS_INVALID, !isValid || void 0);\r\n        if (!_window2.default.hasWindow()) {\r\n            return\r\n        }\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.remove();\r\n            this.setAria(\"describedby\", null);\r\n            this._$validationMessage = null\r\n        }\r\n        var validationErrorMessage = getValidationErrorMessage(validationErrors);\r\n        if (!isValid && validationErrorMessage) {\r\n            this._$validationMessage = (0, _renderer2.default)(\"<div>\").addClass(INVALID_MESSAGE).html(validationErrorMessage).appendTo($element);\r\n            var validationTarget = this._getValidationMessageTarget();\r\n            this._validationMessage = this._createComponent(this._$validationMessage, _overlay2.default, (0, _extend.extend)({\r\n                integrationOptions: {},\r\n                templatesRenderAsynchronously: false,\r\n                target: validationTarget,\r\n                shading: false,\r\n                width: \"auto\",\r\n                height: \"auto\",\r\n                container: $element,\r\n                position: this._getValidationMessagePosition(\"below\"),\r\n                closeOnOutsideClick: false,\r\n                closeOnTargetScroll: false,\r\n                animation: null,\r\n                visible: true,\r\n                propagateOutsideClick: true,\r\n                _checkParentVisibility: false\r\n            }, this._getInnerOptionsCache(\"validationTooltipOptions\")));\r\n            this._$validationMessage.toggleClass(INVALID_MESSAGE_AUTO, \"auto\" === validationMessageMode).toggleClass(INVALID_MESSAGE_ALWAYS, \"always\" === validationMessageMode);\r\n            var messageId = \"dx-\" + new _guid2.default;\r\n            this._validationMessage.$content().addClass(INVALID_MESSAGE_CONTENT).attr(\"id\", messageId);\r\n            this.setAria(\"describedby\", messageId);\r\n            this._setValidationMessageMaxWidth();\r\n            this._bindInnerWidgetOptions(this._validationMessage, \"validationTooltipOptions\")\r\n        }\r\n    },\r\n    _setValidationMessageMaxWidth: function() {\r\n        if (!this._validationMessage) {\r\n            return\r\n        }\r\n        if (0 === this._getValidationMessageTarget().outerWidth()) {\r\n            this._validationMessage.option(\"maxWidth\", \"100%\");\r\n            return\r\n        }\r\n        var validationMessageMaxWidth = Math.max(VALIDATION_MESSAGE_MIN_WIDTH, this._getValidationMessageTarget().outerWidth());\r\n        this._validationMessage.option(\"maxWidth\", validationMessageMaxWidth)\r\n    },\r\n    _getValidationMessageTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _getValidationMessagePosition: function(positionRequest) {\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var messagePositionSide = (0, _position.getDefaultAlignment)(rtlEnabled);\r\n        var messageOriginalOffset = this.option(\"validationMessageOffset\");\r\n        var messageOffset = {\r\n            h: messageOriginalOffset.h,\r\n            v: messageOriginalOffset.v\r\n        };\r\n        var verticalPositions = \"below\" === positionRequest ? [\" top\", \" bottom\"] : [\" bottom\", \" top\"];\r\n        if (rtlEnabled) {\r\n            messageOffset.h = -messageOffset.h\r\n        }\r\n        if (\"below\" !== positionRequest) {\r\n            messageOffset.v = -messageOffset.v\r\n        }\r\n        return {\r\n            offset: messageOffset,\r\n            boundary: this.option(\"validationBoundary\"),\r\n            my: messagePositionSide + verticalPositions[0],\r\n            at: messagePositionSide + verticalPositions[1],\r\n            collision: \"none flip\"\r\n        }\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        var readOnly = this.option(\"readOnly\");\r\n        this._toggleBackspaceHandler(readOnly);\r\n        this.$element().toggleClass(READONLY_STATE_CLASS, !!readOnly);\r\n        this.setAria(\"readonly\", readOnly || void 0)\r\n    },\r\n    _toggleBackspaceHandler: function(isReadOnly) {\r\n        var $eventTarget = this._keyboardEventBindingTarget();\r\n        var eventName = (0, _utils.addNamespace)(\"keydown\", READONLY_NAMESPACE);\r\n        _events_engine2.default.off($eventTarget, eventName);\r\n        if (isReadOnly) {\r\n            _events_engine2.default.on($eventTarget, eventName, function(e) {\r\n                if (\"backspace\" === (0, _utils.normalizeKeyName)(e)) {\r\n                    e.preventDefault()\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        var element = this.$element()[0];\r\n        _element_data2.default.data(element, VALIDATION_TARGET, null);\r\n        clearTimeout(this.showValidationMessageTimeout);\r\n        this.callBase()\r\n    },\r\n    _setSubmitElementName: function(name) {\r\n        var $submitElement = this._getSubmitElement();\r\n        if (!$submitElement) {\r\n            return\r\n        }\r\n        if (name.length > 0) {\r\n            $submitElement.attr(\"name\", name)\r\n        } else {\r\n            $submitElement.removeAttr(\"name\")\r\n        }\r\n    },\r\n    _getSubmitElement: function() {\r\n        return null\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onValueChanged\":\r\n                this._createValueChangeAction();\r\n                break;\r\n            case \"isValid\":\r\n            case \"validationError\":\r\n                this.option(_validation_engine2.default.synchronizeValidationOptions(args, this.option()));\r\n                break;\r\n            case \"validationErrors\":\r\n            case \"validationStatus\":\r\n                this.option(_validation_engine2.default.synchronizeValidationOptions(args, this.option()));\r\n                this._renderValidationState();\r\n                break;\r\n            case \"validationBoundary\":\r\n            case \"validationMessageMode\":\r\n                this._renderValidationState();\r\n                break;\r\n            case \"validationTooltipOptions\":\r\n                this._innerOptionChanged(this._validationMessage, args);\r\n                break;\r\n            case \"readOnly\":\r\n                this._toggleReadOnlyState();\r\n                this._refreshFocusState();\r\n                break;\r\n            case \"value\":\r\n                if (!this._valueChangeActionSuppressed) {\r\n                    this._raiseValueChangeAction(args.value, args.previousValue);\r\n                    this._saveValueChangeEvent(void 0)\r\n                }\r\n                if (args.value != args.previousValue) {\r\n                    this.validationRequest.fire({\r\n                        value: args.value,\r\n                        editor: this\r\n                    })\r\n                }\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._setValidationMessageMaxWidth();\r\n                break;\r\n            case \"name\":\r\n                this._setSubmitElementName(args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    reset: function() {\r\n        var defaultOptions = this._getDefaultOptions();\r\n        this.option(\"value\", defaultOptions.value)\r\n    }\r\n});\r\nmodule.exports = Editor;\r\n"]},"metadata":{},"sourceType":"script"}