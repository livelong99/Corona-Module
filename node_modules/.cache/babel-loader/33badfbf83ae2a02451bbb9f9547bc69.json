{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/points/polar_point.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar extend = require(\"../../../core/utils/extend\").extend;\n\nvar _extend = extend;\n\nvar symbolPoint = require(\"./symbol_point\");\n\nvar barPoint = require(\"./bar_point\");\n\nvar piePoint = require(\"./pie_point\");\n\nvar isDefined = require(\"../../../core/utils/type\").isDefined;\n\nvar vizUtils = require(\"../../core/utils\");\n\nvar normalizeAngle = vizUtils.normalizeAngle;\nvar _math = Math;\nvar _max = _math.max;\n\nvar RADIAL_LABEL_INDENT = require(\"../../components/consts\").radialLabelIndent;\n\nvar ERROR_BARS_ANGLE_OFFSET = 90;\nvar CANVAS_POSITION_END = \"canvas_position_end\";\nvar CANVAS_POSITION_DEFAULT = \"canvas_position_default\";\nexports.polarSymbolPoint = _extend({}, symbolPoint, {\n  _getLabelCoords: piePoint._getLabelCoords,\n  _moveLabelOnCanvas: function _moveLabelOnCanvas(coord, visibleArea, labelBBox) {\n    var x = coord.x;\n    var y = coord.y;\n\n    if (visibleArea.minX > x) {\n      x = visibleArea.minX;\n    }\n\n    if (visibleArea.maxX < x + labelBBox.width) {\n      x = visibleArea.maxX - labelBBox.width;\n    }\n\n    if (visibleArea.minY > y) {\n      y = visibleArea.minY;\n    }\n\n    if (visibleArea.maxY < y + labelBBox.height) {\n      y = visibleArea.maxY - labelBBox.height;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _getLabelPosition: function _getLabelPosition() {\n    return \"outside\";\n  },\n  _getCoords: function _getCoords(argument, value) {\n    var axis = this.series.getValueAxis();\n    var startAngle = axis.getAngles()[0];\n\n    var angle = this._getArgTranslator().translate(argument);\n\n    var radius = this._getValTranslator().translate(value);\n\n    var coords = vizUtils.convertPolarToXY(axis.getCenter(), axis.getAngles()[0], angle, radius);\n    coords.angle = angle + startAngle - 90, coords.radius = radius;\n    return coords;\n  },\n  _translate: function _translate() {\n    var that = this;\n    var center = that.series.getValueAxis().getCenter();\n\n    var coord = that._getCoords(that.argument, that.value);\n\n    var maxRadius = that._getValTranslator().translate(CANVAS_POSITION_END);\n\n    var normalizedRadius = isDefined(coord.radius) && coord.radius >= 0 ? coord.radius : null;\n    that.vx = normalizeAngle(coord.angle);\n    that.vy = that.radiusOuter = that.radiusLabels = normalizedRadius;\n    that.radiusLabels += RADIAL_LABEL_INDENT;\n    that.radius = normalizedRadius;\n    that.middleAngle = -coord.angle;\n    that.angle = -coord.angle;\n    that.x = coord.x;\n    that.y = coord.y;\n    that.defaultX = that.centerX = center.x;\n    that.defaultY = that.centerY = center.y;\n\n    that._translateErrorBars();\n\n    that.inVisibleArea = that._checkRadiusForVisibleArea(normalizedRadius, maxRadius);\n  },\n  _checkRadiusForVisibleArea: function _checkRadiusForVisibleArea(radius, maxRadius) {\n    return isDefined(radius) && radius <= maxRadius;\n  },\n  _translateErrorBars: function _translateErrorBars() {\n    var that = this;\n    var errorBars = that._options.errorBars;\n\n    var translator = that._getValTranslator();\n\n    if (!errorBars) {\n      return;\n    }\n\n    isDefined(that.lowError) && (that._lowErrorCoord = that.centerY - translator.translate(that.lowError));\n    isDefined(that.highError) && (that._highErrorCoord = that.centerY - translator.translate(that.highError));\n    that._errorBarPos = that.centerX;\n    that._baseErrorBarPos = \"stdDeviation\" === errorBars.type ? that._lowErrorCoord + (that._highErrorCoord - that._lowErrorCoord) / 2 : that.centerY - that.radius;\n  },\n  _getTranslates: function _getTranslates(animationEnabled) {\n    return animationEnabled ? this.getDefaultCoords() : {\n      x: this.x,\n      y: this.y\n    };\n  },\n  getDefaultCoords: function getDefaultCoords() {\n    var cosSin = vizUtils.getCosAndSin(-this.angle);\n\n    var radius = this._getValTranslator().translate(CANVAS_POSITION_DEFAULT);\n\n    var x = this.defaultX + radius * cosSin.cos;\n    var y = this.defaultY + radius * cosSin.sin;\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _addLabelAlignmentAndOffset: function _addLabelAlignmentAndOffset(label, coord) {\n    return coord;\n  },\n  _checkLabelPosition: function _checkLabelPosition(label, coord) {\n    var that = this;\n\n    var visibleArea = that._getVisibleArea();\n\n    var graphicBBox = that._getGraphicBBox();\n\n    if (that._isPointInVisibleArea(visibleArea, graphicBBox)) {\n      coord = that._moveLabelOnCanvas(coord, visibleArea, label.getBoundingRect());\n    }\n\n    return coord;\n  },\n  _getErrorBarSettings: function _getErrorBarSettings(errorBarOptions, animationEnabled) {\n    var settings = symbolPoint._getErrorBarSettings.call(this, errorBarOptions, animationEnabled);\n\n    settings.rotate = ERROR_BARS_ANGLE_OFFSET - this.angle;\n    settings.rotateX = this.centerX;\n    settings.rotateY = this.centerY;\n    return settings;\n  },\n  getCoords: function getCoords(min) {\n    return min ? this.getDefaultCoords() : {\n      x: this.x,\n      y: this.y\n    };\n  }\n});\nexports.polarBarPoint = _extend({}, barPoint, {\n  _translateErrorBars: exports.polarSymbolPoint._translateErrorBars,\n  _getErrorBarSettings: exports.polarSymbolPoint._getErrorBarSettings,\n  _moveLabelOnCanvas: exports.polarSymbolPoint._moveLabelOnCanvas,\n  _getLabelCoords: piePoint._getLabelCoords,\n  _getLabelConnector: piePoint._getLabelConnector,\n  getTooltipParams: piePoint.getTooltipParams,\n  _getLabelPosition: piePoint._getLabelPosition,\n  _getCoords: exports.polarSymbolPoint._getCoords,\n  _translate: function _translate() {\n    var that = this;\n\n    var translator = that._getValTranslator();\n\n    var businessRange = translator.getBusinessRange();\n    var maxRadius = translator.translate(CANVAS_POSITION_END);\n    that.radiusInner = translator.translate(that.minValue);\n\n    exports.polarSymbolPoint._translate.call(that);\n\n    if (null === that.radiusInner) {\n      that.radiusInner = that.radius = maxRadius;\n    } else {\n      if (null === that.radius) {\n        that.radius = that.value >= businessRange.minVisible ? maxRadius : 0;\n      } else {\n        if (that.radius > maxRadius) {\n          that.radius = maxRadius;\n        }\n      }\n    }\n\n    that.radiusOuter = that.radiusLabels = _max(that.radiusInner, that.radius);\n    that.radiusLabels += RADIAL_LABEL_INDENT;\n    that.radiusInner = that.defaultRadius = _math.min(that.radiusInner, that.radius);\n    that.middleAngle = that.angle = -normalizeAngle(that.middleAngleCorrection - that.angle);\n  },\n  _checkRadiusForVisibleArea: function _checkRadiusForVisibleArea(radius) {\n    return isDefined(radius) || this._getValTranslator().translate(this.minValue) > 0;\n  },\n  _getErrorBarBaseEdgeLength: function _getErrorBarBaseEdgeLength() {\n    var coord = this.getMarkerCoords();\n    return _math.PI * coord.outerRadius * _math.abs(coord.startAngle - coord.endAngle) / 180;\n  },\n  getMarkerCoords: function getMarkerCoords() {\n    return {\n      x: this.centerX,\n      y: this.centerY,\n      outerRadius: this.radiusOuter,\n      innerRadius: this.defaultRadius,\n      startAngle: this.middleAngle - this.interval / 2,\n      endAngle: this.middleAngle + this.interval / 2\n    };\n  },\n  _drawMarker: function _drawMarker(renderer, group, animationEnabled) {\n    var that = this;\n\n    var styles = that._getStyle();\n\n    var coords = that.getMarkerCoords();\n    var innerRadius = coords.innerRadius;\n    var outerRadius = coords.outerRadius;\n\n    var start = that._getCoords(that.argument, CANVAS_POSITION_DEFAULT);\n\n    var x = coords.x;\n    var y = coords.y;\n\n    if (animationEnabled) {\n      innerRadius = 0;\n      outerRadius = 0;\n      x = start.x;\n      y = start.y;\n    }\n\n    that.graphic = renderer.arc(x, y, innerRadius, outerRadius, coords.startAngle, coords.endAngle).attr(styles).data({\n      \"chart-data-point\": that\n    }).append(group);\n  },\n  _checkLabelPosition: function _checkLabelPosition(label, coord) {\n    var that = this;\n\n    var visibleArea = that._getVisibleArea();\n\n    var angleFunctions = vizUtils.getCosAndSin(that.middleAngle);\n    var x = that.centerX + that.defaultRadius * angleFunctions.cos;\n    var y = that.centerY - that.defaultRadius * angleFunctions.sin;\n\n    if (x > visibleArea.minX && x < visibleArea.maxX && y > visibleArea.minY && y < visibleArea.maxY) {\n      coord = that._moveLabelOnCanvas(coord, visibleArea, label.getBoundingRect());\n    }\n\n    return coord;\n  },\n  _addLabelAlignmentAndOffset: function _addLabelAlignmentAndOffset(label, coord) {\n    return coord;\n  },\n  correctCoordinates: function correctCoordinates(correctOptions) {\n    this.middleAngleCorrection = correctOptions.offset;\n    this.interval = correctOptions.width;\n  },\n  coordsIn: function coordsIn(x, y) {\n    var val = vizUtils.convertXYToPolar(this.series.getValueAxis().getCenter(), x, y);\n    var coords = this.getMarkerCoords();\n    var isBetweenAngles = coords.startAngle < coords.endAngle ? -val.phi >= coords.startAngle && -val.phi <= coords.endAngle : -val.phi <= coords.startAngle && -val.phi >= coords.endAngle;\n    return val.r >= coords.innerRadius && val.r <= coords.outerRadius && isBetweenAngles;\n  }\n});","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/series/points/polar_point.js"],"names":["extend","require","_extend","symbolPoint","barPoint","piePoint","isDefined","vizUtils","normalizeAngle","_math","Math","_max","max","RADIAL_LABEL_INDENT","radialLabelIndent","ERROR_BARS_ANGLE_OFFSET","CANVAS_POSITION_END","CANVAS_POSITION_DEFAULT","exports","polarSymbolPoint","_getLabelCoords","_moveLabelOnCanvas","coord","visibleArea","labelBBox","x","y","minX","maxX","width","minY","maxY","height","_getLabelPosition","_getCoords","argument","value","axis","series","getValueAxis","startAngle","getAngles","angle","_getArgTranslator","translate","radius","_getValTranslator","coords","convertPolarToXY","getCenter","_translate","that","center","maxRadius","normalizedRadius","vx","vy","radiusOuter","radiusLabels","middleAngle","defaultX","centerX","defaultY","centerY","_translateErrorBars","inVisibleArea","_checkRadiusForVisibleArea","errorBars","_options","translator","lowError","_lowErrorCoord","highError","_highErrorCoord","_errorBarPos","_baseErrorBarPos","type","_getTranslates","animationEnabled","getDefaultCoords","cosSin","getCosAndSin","cos","sin","_addLabelAlignmentAndOffset","label","_checkLabelPosition","_getVisibleArea","graphicBBox","_getGraphicBBox","_isPointInVisibleArea","getBoundingRect","_getErrorBarSettings","errorBarOptions","settings","call","rotate","rotateX","rotateY","getCoords","min","polarBarPoint","_getLabelConnector","getTooltipParams","businessRange","getBusinessRange","radiusInner","minValue","minVisible","defaultRadius","middleAngleCorrection","_getErrorBarBaseEdgeLength","getMarkerCoords","PI","outerRadius","abs","endAngle","innerRadius","interval","_drawMarker","renderer","group","styles","_getStyle","start","graphic","arc","attr","data","append","angleFunctions","correctCoordinates","correctOptions","offset","coordsIn","val","convertXYToPolar","isBetweenAngles","phi","r"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/points/polar_point.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar extend = require(\"../../../core/utils/extend\").extend;\r\nvar _extend = extend;\r\nvar symbolPoint = require(\"./symbol_point\");\r\nvar barPoint = require(\"./bar_point\");\r\nvar piePoint = require(\"./pie_point\");\r\nvar isDefined = require(\"../../../core/utils/type\").isDefined;\r\nvar vizUtils = require(\"../../core/utils\");\r\nvar normalizeAngle = vizUtils.normalizeAngle;\r\nvar _math = Math;\r\nvar _max = _math.max;\r\nvar RADIAL_LABEL_INDENT = require(\"../../components/consts\").radialLabelIndent;\r\nvar ERROR_BARS_ANGLE_OFFSET = 90;\r\nvar CANVAS_POSITION_END = \"canvas_position_end\";\r\nvar CANVAS_POSITION_DEFAULT = \"canvas_position_default\";\r\nexports.polarSymbolPoint = _extend({}, symbolPoint, {\r\n    _getLabelCoords: piePoint._getLabelCoords,\r\n    _moveLabelOnCanvas: function(coord, visibleArea, labelBBox) {\r\n        var x = coord.x;\r\n        var y = coord.y;\r\n        if (visibleArea.minX > x) {\r\n            x = visibleArea.minX\r\n        }\r\n        if (visibleArea.maxX < x + labelBBox.width) {\r\n            x = visibleArea.maxX - labelBBox.width\r\n        }\r\n        if (visibleArea.minY > y) {\r\n            y = visibleArea.minY\r\n        }\r\n        if (visibleArea.maxY < y + labelBBox.height) {\r\n            y = visibleArea.maxY - labelBBox.height\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _getLabelPosition: function() {\r\n        return \"outside\"\r\n    },\r\n    _getCoords: function(argument, value) {\r\n        var axis = this.series.getValueAxis();\r\n        var startAngle = axis.getAngles()[0];\r\n        var angle = this._getArgTranslator().translate(argument);\r\n        var radius = this._getValTranslator().translate(value);\r\n        var coords = vizUtils.convertPolarToXY(axis.getCenter(), axis.getAngles()[0], angle, radius);\r\n        coords.angle = angle + startAngle - 90, coords.radius = radius;\r\n        return coords\r\n    },\r\n    _translate: function() {\r\n        var that = this;\r\n        var center = that.series.getValueAxis().getCenter();\r\n        var coord = that._getCoords(that.argument, that.value);\r\n        var maxRadius = that._getValTranslator().translate(CANVAS_POSITION_END);\r\n        var normalizedRadius = isDefined(coord.radius) && coord.radius >= 0 ? coord.radius : null;\r\n        that.vx = normalizeAngle(coord.angle);\r\n        that.vy = that.radiusOuter = that.radiusLabels = normalizedRadius;\r\n        that.radiusLabels += RADIAL_LABEL_INDENT;\r\n        that.radius = normalizedRadius;\r\n        that.middleAngle = -coord.angle;\r\n        that.angle = -coord.angle;\r\n        that.x = coord.x;\r\n        that.y = coord.y;\r\n        that.defaultX = that.centerX = center.x;\r\n        that.defaultY = that.centerY = center.y;\r\n        that._translateErrorBars();\r\n        that.inVisibleArea = that._checkRadiusForVisibleArea(normalizedRadius, maxRadius)\r\n    },\r\n    _checkRadiusForVisibleArea: function(radius, maxRadius) {\r\n        return isDefined(radius) && radius <= maxRadius\r\n    },\r\n    _translateErrorBars: function() {\r\n        var that = this;\r\n        var errorBars = that._options.errorBars;\r\n        var translator = that._getValTranslator();\r\n        if (!errorBars) {\r\n            return\r\n        }\r\n        isDefined(that.lowError) && (that._lowErrorCoord = that.centerY - translator.translate(that.lowError));\r\n        isDefined(that.highError) && (that._highErrorCoord = that.centerY - translator.translate(that.highError));\r\n        that._errorBarPos = that.centerX;\r\n        that._baseErrorBarPos = \"stdDeviation\" === errorBars.type ? that._lowErrorCoord + (that._highErrorCoord - that._lowErrorCoord) / 2 : that.centerY - that.radius\r\n    },\r\n    _getTranslates: function(animationEnabled) {\r\n        return animationEnabled ? this.getDefaultCoords() : {\r\n            x: this.x,\r\n            y: this.y\r\n        }\r\n    },\r\n    getDefaultCoords: function() {\r\n        var cosSin = vizUtils.getCosAndSin(-this.angle);\r\n        var radius = this._getValTranslator().translate(CANVAS_POSITION_DEFAULT);\r\n        var x = this.defaultX + radius * cosSin.cos;\r\n        var y = this.defaultY + radius * cosSin.sin;\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _addLabelAlignmentAndOffset: function(label, coord) {\r\n        return coord\r\n    },\r\n    _checkLabelPosition: function(label, coord) {\r\n        var that = this;\r\n        var visibleArea = that._getVisibleArea();\r\n        var graphicBBox = that._getGraphicBBox();\r\n        if (that._isPointInVisibleArea(visibleArea, graphicBBox)) {\r\n            coord = that._moveLabelOnCanvas(coord, visibleArea, label.getBoundingRect())\r\n        }\r\n        return coord\r\n    },\r\n    _getErrorBarSettings: function(errorBarOptions, animationEnabled) {\r\n        var settings = symbolPoint._getErrorBarSettings.call(this, errorBarOptions, animationEnabled);\r\n        settings.rotate = ERROR_BARS_ANGLE_OFFSET - this.angle;\r\n        settings.rotateX = this.centerX;\r\n        settings.rotateY = this.centerY;\r\n        return settings\r\n    },\r\n    getCoords: function(min) {\r\n        return min ? this.getDefaultCoords() : {\r\n            x: this.x,\r\n            y: this.y\r\n        }\r\n    }\r\n});\r\nexports.polarBarPoint = _extend({}, barPoint, {\r\n    _translateErrorBars: exports.polarSymbolPoint._translateErrorBars,\r\n    _getErrorBarSettings: exports.polarSymbolPoint._getErrorBarSettings,\r\n    _moveLabelOnCanvas: exports.polarSymbolPoint._moveLabelOnCanvas,\r\n    _getLabelCoords: piePoint._getLabelCoords,\r\n    _getLabelConnector: piePoint._getLabelConnector,\r\n    getTooltipParams: piePoint.getTooltipParams,\r\n    _getLabelPosition: piePoint._getLabelPosition,\r\n    _getCoords: exports.polarSymbolPoint._getCoords,\r\n    _translate: function() {\r\n        var that = this;\r\n        var translator = that._getValTranslator();\r\n        var businessRange = translator.getBusinessRange();\r\n        var maxRadius = translator.translate(CANVAS_POSITION_END);\r\n        that.radiusInner = translator.translate(that.minValue);\r\n        exports.polarSymbolPoint._translate.call(that);\r\n        if (null === that.radiusInner) {\r\n            that.radiusInner = that.radius = maxRadius\r\n        } else {\r\n            if (null === that.radius) {\r\n                that.radius = that.value >= businessRange.minVisible ? maxRadius : 0\r\n            } else {\r\n                if (that.radius > maxRadius) {\r\n                    that.radius = maxRadius\r\n                }\r\n            }\r\n        }\r\n        that.radiusOuter = that.radiusLabels = _max(that.radiusInner, that.radius);\r\n        that.radiusLabels += RADIAL_LABEL_INDENT;\r\n        that.radiusInner = that.defaultRadius = _math.min(that.radiusInner, that.radius);\r\n        that.middleAngle = that.angle = -normalizeAngle(that.middleAngleCorrection - that.angle)\r\n    },\r\n    _checkRadiusForVisibleArea: function(radius) {\r\n        return isDefined(radius) || this._getValTranslator().translate(this.minValue) > 0\r\n    },\r\n    _getErrorBarBaseEdgeLength: function() {\r\n        var coord = this.getMarkerCoords();\r\n        return _math.PI * coord.outerRadius * _math.abs(coord.startAngle - coord.endAngle) / 180\r\n    },\r\n    getMarkerCoords: function() {\r\n        return {\r\n            x: this.centerX,\r\n            y: this.centerY,\r\n            outerRadius: this.radiusOuter,\r\n            innerRadius: this.defaultRadius,\r\n            startAngle: this.middleAngle - this.interval / 2,\r\n            endAngle: this.middleAngle + this.interval / 2\r\n        }\r\n    },\r\n    _drawMarker: function(renderer, group, animationEnabled) {\r\n        var that = this;\r\n        var styles = that._getStyle();\r\n        var coords = that.getMarkerCoords();\r\n        var innerRadius = coords.innerRadius;\r\n        var outerRadius = coords.outerRadius;\r\n        var start = that._getCoords(that.argument, CANVAS_POSITION_DEFAULT);\r\n        var x = coords.x;\r\n        var y = coords.y;\r\n        if (animationEnabled) {\r\n            innerRadius = 0;\r\n            outerRadius = 0;\r\n            x = start.x;\r\n            y = start.y\r\n        }\r\n        that.graphic = renderer.arc(x, y, innerRadius, outerRadius, coords.startAngle, coords.endAngle).attr(styles).data({\r\n            \"chart-data-point\": that\r\n        }).append(group)\r\n    },\r\n    _checkLabelPosition: function(label, coord) {\r\n        var that = this;\r\n        var visibleArea = that._getVisibleArea();\r\n        var angleFunctions = vizUtils.getCosAndSin(that.middleAngle);\r\n        var x = that.centerX + that.defaultRadius * angleFunctions.cos;\r\n        var y = that.centerY - that.defaultRadius * angleFunctions.sin;\r\n        if (x > visibleArea.minX && x < visibleArea.maxX && y > visibleArea.minY && y < visibleArea.maxY) {\r\n            coord = that._moveLabelOnCanvas(coord, visibleArea, label.getBoundingRect())\r\n        }\r\n        return coord\r\n    },\r\n    _addLabelAlignmentAndOffset: function(label, coord) {\r\n        return coord\r\n    },\r\n    correctCoordinates: function(correctOptions) {\r\n        this.middleAngleCorrection = correctOptions.offset;\r\n        this.interval = correctOptions.width\r\n    },\r\n    coordsIn: function(x, y) {\r\n        var val = vizUtils.convertXYToPolar(this.series.getValueAxis().getCenter(), x, y);\r\n        var coords = this.getMarkerCoords();\r\n        var isBetweenAngles = coords.startAngle < coords.endAngle ? -val.phi >= coords.startAngle && -val.phi <= coords.endAngle : -val.phi <= coords.startAngle && -val.phi >= coords.endAngle;\r\n        return val.r >= coords.innerRadius && val.r <= coords.outerRadius && isBetweenAngles\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}