{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\va112\\\\Documents\\\\Webdev\\\\React\\\\Corona\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Paper from\"@material-ui/core/Paper\";import axios from\"axios\";import{Chart,ArgumentAxis,ValueAxis,LineSeries,Legend,ZoomAndPan,Title}from\"@devexpress/dx-react-chart-material-ui\";function Graph(props){const _useState=useState([]),_useState2=_slicedToArray(_useState,2),history=_useState2[0],setHist=_useState2[1];const SetH=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var rec;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios({\"method\":\"get\",\"url\":\"https://corona.lmao.ninja/v2/historical\"}).then(response=>{const Timeline=response.data;return Timeline;}).catch(error=>{console.log(error);});case 2:rec=_context.sent;setHist(rec);case 4:case\"end\":return _context.stop();}},_callee);}));return function SetH(){return _ref.apply(this,arguments);};}();SetH();const info=history.filter(rec=>rec.country===props.name);function getData(record){const Cases=record.timeline.cases;const Deaths=record.timeline.deaths;const Recovered=record.timeline.recovered;const data=[];const dates=Object.keys(Cases);var i=0;var k=Math.round(dates.length/10);var date;for(var _i=0,_dates=dates;_i<_dates.length;_i++){date=_dates[_i];if(Cases[date]>0){if(i%(k-1)===0){if(date.length===7)data.push({argument:date.substring(0,4),cases:Cases[date],deaths:Deaths[date],recovered:Recovered[date]});else data.push({argument:date.substring(0,3),cases:Cases[date],deaths:Deaths[date],recovered:Recovered[date]});}//else\n//data.push({argument:\"\" , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\n}i++;}date=dates[dates.length-1];data.push({argument:date.substring(0,4),cases:Cases[date],deaths:Deaths[date],recovered:Recovered[date]});return/*#__PURE__*/React.createElement(Chart,{data:data,width:800,height:400},/*#__PURE__*/React.createElement(ArgumentAxis,null),/*#__PURE__*/React.createElement(ValueAxis,null),/*#__PURE__*/React.createElement(Title,{text:\"Corona Record in \"+props.name}),/*#__PURE__*/React.createElement(LineSeries,{name:\"Total Cases\",valueField:\"cases\",argumentField:\"argument\"}),/*#__PURE__*/React.createElement(LineSeries,{name:\"Total Deaths\",valueField:\"deaths\",argumentField:\"argument\"}),/*#__PURE__*/React.createElement(LineSeries,{name:\"Total Recoveries\",valueField:\"recovered\",argumentField:\"argument\"}),/*#__PURE__*/React.createElement(Legend,null),/*#__PURE__*/React.createElement(ZoomAndPan,null));}return/*#__PURE__*/React.createElement(Paper,null,info.map(getData));}export default Graph;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/src/Components/Graph.jsx"],"names":["React","useState","Paper","axios","Chart","ArgumentAxis","ValueAxis","LineSeries","Legend","ZoomAndPan","Title","Graph","props","history","setHist","SetH","then","response","Timeline","data","catch","error","console","log","rec","info","filter","country","name","getData","record","Cases","timeline","cases","Deaths","deaths","Recovered","recovered","dates","Object","keys","i","k","Math","round","length","date","push","argument","substring","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  LineSeries,\r\n  Legend,\r\n  ZoomAndPan,\r\n  Title\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\n\r\n\r\nfunction Graph(props) {\r\n\r\n  const [history, setHist] = useState([]);\r\n\r\n  const SetH = async () => {\r\n    const rec = await axios({\r\n      \"method\": \"get\",\r\n      \"url\": \"https://corona.lmao.ninja/v2/historical\"})\r\n    .then((response)=>{\r\n        const Timeline = response.data;\r\n        return Timeline;\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n  });\r\n  setHist(rec);\r\n  }\r\n  SetH();\r\n\r\n  const info = history.filter((rec)=>(rec.country===props.name))\r\n\r\n  function getData(record) {\r\n    const Cases = record.timeline.cases;\r\n    const Deaths = record.timeline.deaths;\r\n    const Recovered = record.timeline.recovered;\r\n    const data = []\r\n    const dates = Object.keys(Cases);\r\n    var i =0;\r\n    var k = Math.round(dates.length/10);\r\n    var date;\r\n    for(date of dates) {\r\n       if(Cases[date]>0){\r\n        if(i%(k-1)===0){\r\n          if(date.length===7)\r\n            data.push({argument:date.substring(0,4) , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n          else\r\n            data.push({argument:date.substring(0,3) , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n        }\r\n        //else\r\n          //data.push({argument:\"\" , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n       }\r\n       i++;\r\n    }\r\n    date = dates[dates.length-1];\r\n    data.push({argument:date.substring(0,4) , cases: Cases[date], deaths: Deaths[date], recovered: Recovered[date] });\r\n    return (\r\n      <Chart data={data} width={800} height={400}>\r\n        <ArgumentAxis/>\r\n        <ValueAxis />\r\n        <Title text={\"Corona Record in \" + props.name} />\r\n\r\n        <LineSeries\r\n            name=\"Total Cases\"\r\n            valueField=\"cases\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <LineSeries\r\n            name=\"Total Deaths\"\r\n            valueField=\"deaths\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <LineSeries\r\n            name=\"Total Recoveries\"\r\n            valueField=\"recovered\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <Legend />\r\n          <ZoomAndPan />\r\n      </Chart>\r\n    )\r\n    \r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n\r\n      {info.map(getData)}\r\n      \r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Graph;"]},"metadata":{},"sourceType":"module"}