{"ast":null,"code":"/**\r\n * DevExtreme (viz/chart.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _common = require(\"../core/utils/common\");\n\nvar _extend2 = require(\"../core/utils/extend\");\n\nvar _array = require(\"../core/utils/array\");\n\nvar _iterator = require(\"../core/utils/iterator\");\n\nvar _component_registrator = require(\"../core/component_registrator\");\n\nvar _component_registrator2 = _interopRequireDefault(_component_registrator);\n\nvar _utils = require(\"./core/utils\");\n\nvar _type = require(\"../core/utils/type\");\n\nvar _math = require(\"../core/utils/math\");\n\nvar _base_chart = require(\"./chart_components/base_chart\");\n\nvar _layout_manager = require(\"./chart_components/layout_manager\");\n\nvar _layout_manager2 = _interopRequireDefault(_layout_manager);\n\nvar _multi_axes_synchronizer = require(\"./chart_components/multi_axes_synchronizer\");\n\nvar _multi_axes_synchronizer2 = _interopRequireDefault(_multi_axes_synchronizer);\n\nvar _advanced_chart = require(\"./chart_components/advanced_chart\");\n\nvar _scroll_bar = require(\"./chart_components/scroll_bar\");\n\nvar _scroll_bar2 = _interopRequireDefault(_scroll_bar);\n\nvar _crosshair = require(\"./chart_components/crosshair\");\n\nvar _crosshair2 = _interopRequireDefault(_crosshair);\n\nvar _range_data_calculator = require(\"./series/helpers/range_data_calculator\");\n\nvar _range = require(\"./translators/range\");\n\nvar _range2 = _interopRequireDefault(_range);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DEFAULT_PANE_NAME = \"default\";\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\nvar DEFAULT_PANES = [{\n  name: DEFAULT_PANE_NAME,\n  border: {}\n}];\nvar _isArray = Array.isArray;\n\nfunction getFirstAxisNameForPane(axes, paneName, defaultPane) {\n  var result;\n\n  for (var i = 0; i < axes.length; i++) {\n    if (axes[i].pane === paneName || void 0 === axes[i].pane && paneName === defaultPane) {\n      result = axes[i].name;\n      break;\n    }\n  }\n\n  if (!result) {\n    result = axes[0].name;\n  }\n\n  return result;\n}\n\nfunction changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility) {\n  var gridOpt = axis.getOptions().grid;\n  var minorGridOpt = axis.getOptions().minorGrid;\n  gridOpt.visible = gridVisibility;\n  minorGridOpt && (minorGridOpt.visible = minorGridVisibility);\n}\n\nfunction hideGridsOnNonFirstValueAxisForPane(axesForPane) {\n  var axisShown = false;\n  var hiddenStubAxis = [];\n  var minorGridVisibility = axesForPane.some(function (axis) {\n    var minorGridOptions = axis.getOptions().minorGrid;\n    return minorGridOptions && minorGridOptions.visible;\n  });\n  var gridVisibility = axesForPane.some(function (axis) {\n    var gridOptions = axis.getOptions().grid;\n    return gridOptions && gridOptions.visible;\n  });\n\n  if (axesForPane.length > 1) {\n    axesForPane.forEach(function (axis) {\n      var gridOpt = axis.getOptions().grid;\n\n      if (axisShown) {\n        changeVisibilityAxisGrids(axis, false, false);\n      } else {\n        if (gridOpt && gridOpt.visible) {\n          if (axis.getTranslator().getBusinessRange().isEmpty()) {\n            changeVisibilityAxisGrids(axis, false, false);\n            hiddenStubAxis.push(axis);\n          } else {\n            axisShown = true;\n            changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility);\n          }\n        }\n      }\n    });\n    !axisShown && hiddenStubAxis.length && changeVisibilityAxisGrids(hiddenStubAxis[0], gridVisibility, minorGridVisibility);\n  }\n}\n\nfunction findAxisOptions(valueAxes, valueAxesOptions, axisName) {\n  var result;\n  var axInd;\n\n  for (axInd = 0; axInd < valueAxesOptions.length; axInd++) {\n    if (valueAxesOptions[axInd].name === axisName) {\n      result = valueAxesOptions[axInd];\n      result.priority = axInd;\n      break;\n    }\n  }\n\n  if (!result) {\n    for (axInd = 0; axInd < valueAxes.length; axInd++) {\n      if (valueAxes[axInd].name === axisName) {\n        result = valueAxes[axInd].getOptions();\n        result.priority = valueAxes[axInd].priority;\n        break;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction findAxis(paneName, axisName, axes) {\n  var axis;\n  var i;\n\n  for (i = 0; i < axes.length; i++) {\n    axis = axes[i];\n\n    if (axis.name === axisName && axis.pane === paneName) {\n      return axis;\n    }\n  }\n\n  if (paneName) {\n    return findAxis(void 0, axisName, axes);\n  }\n}\n\nfunction compareAxes(a, b) {\n  return a.priority - b.priority;\n}\n\nfunction doesPaneExist(panes, paneName) {\n  var found = false;\n  (0, _iterator.each)(panes, function (_, pane) {\n    if (pane.name === paneName) {\n      found = true;\n      return false;\n    }\n  });\n  return found;\n}\n\nvar prepareSegmentRectPoints = function prepareSegmentRectPoints(left, top, width, height, borderOptions) {\n  var maxSW = ~~((width < height ? width : height) / 2);\n  var sw = borderOptions.width || 0;\n  var newSW = sw < maxSW ? sw : maxSW;\n  left += newSW / 2;\n  top += newSW / 2;\n  width -= newSW;\n  height -= newSW;\n  var right = left + width;\n  var bottom = top + height;\n  var points = [];\n  var segments = [];\n  var segmentSequence;\n  var visiblyOpt = 0;\n  var prevSegmentVisibility = 0;\n  var allSegment = {\n    top: [[left, top], [right, top]],\n    right: [[right, top], [right, bottom]],\n    bottom: [[right, bottom], [left, bottom]],\n    left: [[left, bottom], [left, top]]\n  };\n  (0, _iterator.each)(allSegment, function (seg) {\n    var visibility = !!borderOptions[seg];\n    visiblyOpt = 2 * visiblyOpt + ~~visibility;\n  });\n\n  switch (visiblyOpt) {\n    case 13:\n    case 9:\n      segmentSequence = [\"left\", \"top\", \"right\", \"bottom\"];\n      break;\n\n    case 11:\n      segmentSequence = [\"bottom\", \"left\", \"top\", \"right\"];\n      break;\n\n    default:\n      segmentSequence = [\"top\", \"right\", \"bottom\", \"left\"];\n  }\n\n  (0, _iterator.each)(segmentSequence, function (_, seg) {\n    var segmentVisibility = !!borderOptions[seg];\n\n    if (!prevSegmentVisibility && segments.length) {\n      points.push(segments);\n      segments = [];\n    }\n\n    if (segmentVisibility) {\n      (0, _iterator.each)(allSegment[seg].slice(prevSegmentVisibility), function (_, segment) {\n        segments = segments.concat(segment);\n      });\n    }\n\n    prevSegmentVisibility = ~~segmentVisibility;\n  });\n  segments.length && points.push(segments);\n  1 === points.length && (points = points[0]);\n  return {\n    points: points,\n    pathType: 15 === visiblyOpt ? \"area\" : \"line\"\n  };\n};\n\nfunction accumulate(field, src1, src2, auxSpacing) {\n  var val1 = src1[field] || 0;\n  var val2 = src2[field] || 0;\n  return val1 + val2 + (val1 && val2 ? auxSpacing : 0);\n}\n\nfunction pickMax(field, src1, src2) {\n  return pickMaxValue(src1[field], src2[field]);\n}\n\nfunction pickMaxValue(val1, val2) {\n  return Math.max(val1 || 0, val2 || 0);\n}\n\nfunction getAxisMargins(axis) {\n  return axis.getMargins();\n}\n\nfunction getHorizontalAxesMargins(axes, getMarginsFunc) {\n  return axes.reduce(function (margins, axis) {\n    var axisMargins = getMarginsFunc(axis);\n    var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\n    var spacing = axis.getMultipleAxesSpacing();\n    paneMargins.top = accumulate(\"top\", paneMargins, axisMargins, spacing);\n    paneMargins.bottom = accumulate(\"bottom\", paneMargins, axisMargins, spacing);\n    paneMargins.left = pickMax(\"left\", paneMargins, axisMargins);\n    paneMargins.right = pickMax(\"right\", paneMargins, axisMargins);\n    margins.top = pickMax(\"top\", paneMargins, margins);\n    margins.bottom = pickMax(\"bottom\", paneMargins, margins);\n    margins.left = pickMax(\"left\", paneMargins, margins);\n    margins.right = pickMax(\"right\", paneMargins, margins);\n    return margins;\n  }, {\n    panes: {}\n  });\n}\n\nfunction getVerticalAxesMargins(axes) {\n  return axes.reduce(function (margins, axis) {\n    var axisMargins = axis.getMargins();\n    var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\n    var spacing = axis.getMultipleAxesSpacing();\n    paneMargins.top = pickMax(\"top\", paneMargins, axisMargins);\n    paneMargins.bottom = pickMax(\"bottom\", paneMargins, axisMargins);\n    paneMargins.left = accumulate(\"left\", paneMargins, axisMargins, spacing);\n    paneMargins.right = accumulate(\"right\", paneMargins, axisMargins, spacing);\n    margins.top = pickMax(\"top\", paneMargins, margins);\n    margins.bottom = pickMax(\"bottom\", paneMargins, margins);\n    margins.left = pickMax(\"left\", paneMargins, margins);\n    margins.right = pickMax(\"right\", paneMargins, margins);\n    return margins;\n  }, {\n    panes: {}\n  });\n}\n\nfunction performActionOnAxes(axes, action, actionArgument1, actionArgument2, actionArgument3) {\n  axes.forEach(function (axis) {\n    axis[action](actionArgument1 && actionArgument1[axis.pane], actionArgument2 && actionArgument2[axis.pane] || actionArgument2, actionArgument3);\n  });\n}\n\nfunction shrinkCanvases(isRotated, canvases, sizes, verticalMargins, horizontalMargins) {\n  function getMargin(side, margins, pane) {\n    var m = (isRotated ? [\"left\", \"right\"] : [\"top\", \"bottom\"]).indexOf(side) === -1 ? margins : margins.panes[pane] || {};\n    return m[side];\n  }\n\n  function getMaxMargin(side, margins1, margins2, pane) {\n    return pickMaxValue(getMargin(side, margins1, pane), getMargin(side, margins2, pane));\n  }\n\n  var getOriginalField = function getOriginalField(field) {\n    return \"original\".concat(field[0].toUpperCase()).concat(field.slice(1));\n  };\n\n  function shrink(canvases, paneNames, sizeField, startMargin, endMargin, oppositeMargins) {\n    paneNames = paneNames.sort(function (p1, p2) {\n      return canvases[p2][startMargin] - canvases[p1][startMargin];\n    });\n    paneNames.forEach(function (pane) {\n      var canvas = canvases[pane];\n      oppositeMargins.forEach(function (margin) {\n        canvas[margin] = canvas[getOriginalField(margin)] + getMaxMargin(margin, verticalMargins, horizontalMargins, pane);\n      });\n    });\n    var firstPane = canvases[paneNames[0]];\n    var emptySpace = paneNames.reduce(function (space, paneName) {\n      space -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, paneName) + getMaxMargin(endMargin, verticalMargins, horizontalMargins, paneName);\n      return space;\n    }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - canvases[paneNames[paneNames.length - 1]][getOriginalField(startMargin)]) - _utils.PANE_PADDING * (paneNames.length - 1);\n    var totalCustomSpace = Object.keys(sizes).reduce(function (prev, key) {\n      return prev + (sizes[key].unit ? sizes[key].height : 0);\n    }, 0);\n    emptySpace -= totalCustomSpace;\n    paneNames.reduce(function (offset, pane) {\n      var canvas = canvases[pane];\n      var paneSize = sizes[pane];\n      offset -= getMaxMargin(endMargin, verticalMargins, horizontalMargins, pane);\n      canvas[endMargin] = firstPane[sizeField] - offset;\n      offset -= paneSize.unit ? paneSize.height : Math.floor(emptySpace * paneSize.height);\n      canvas[startMargin] = offset;\n      offset -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, pane) + _utils.PANE_PADDING;\n      return offset;\n    }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - (emptySpace < 0 ? emptySpace : 0));\n  }\n\n  var paneNames = Object.keys(canvases);\n\n  if (!isRotated) {\n    shrink(canvases, paneNames, \"height\", \"top\", \"bottom\", [\"left\", \"right\"]);\n  } else {\n    shrink(canvases, paneNames, \"width\", \"left\", \"right\", [\"top\", \"bottom\"]);\n  }\n\n  return canvases;\n}\n\nfunction drawAxesWithTicks(axes, condition, canvases, panesBorderOptions) {\n  if (condition) {\n    performActionOnAxes(axes, \"createTicks\", canvases);\n\n    _multi_axes_synchronizer2.default.synchronize(axes);\n  }\n\n  performActionOnAxes(axes, \"draw\", !condition && canvases, panesBorderOptions);\n}\n\nfunction shiftAxis(side1, side2) {\n  var shifts = {};\n  return function (axis) {\n    var shift = shifts[axis.pane] = shifts[axis.pane] || {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    };\n    var spacing = axis.getMultipleAxesSpacing();\n    var margins = axis.getMargins();\n    axis.shift(shift);\n    shift[side1] = accumulate(side1, shift, margins, spacing);\n    shift[side2] = accumulate(side2, shift, margins, spacing);\n  };\n}\n\nfunction getCommonSize(side, margins) {\n  var size = 0;\n  var pane;\n  var paneMargins;\n\n  for (pane in margins.panes) {\n    paneMargins = margins.panes[pane];\n    size += \"height\" === side ? paneMargins.top + paneMargins.bottom : paneMargins.left + paneMargins.right;\n  }\n\n  return size;\n}\n\nfunction checkUsedSpace(sizeShortage, side, axes, getMarginFunc) {\n  var size = 0;\n\n  if (sizeShortage[side] > 0) {\n    size = getCommonSize(side, getMarginFunc(axes, getAxisMargins));\n    performActionOnAxes(axes, \"hideTitle\");\n    sizeShortage[side] -= size - getCommonSize(side, getMarginFunc(axes, getAxisMargins));\n  }\n\n  if (sizeShortage[side] > 0) {\n    performActionOnAxes(axes, \"hideOuterElements\");\n  }\n}\n\nfunction axisAnimationEnabled(drawOptions, pointsToAnimation) {\n  var pointsCount = pointsToAnimation.reduce(function (sum, count) {\n    return sum + count;\n  }, 0) / pointsToAnimation.length;\n  return drawOptions.animate && pointsCount <= drawOptions.animationPointsLimit;\n}\n\nvar dxChart = _advanced_chart.AdvancedChart.inherit({\n  _themeSection: \"chart\",\n  _fontFields: [\"crosshair.label.font\"],\n  _setDeprecatedOptions: function _setDeprecatedOptions() {\n    this.callBase.apply(this, arguments);\n    (0, _extend2.extend)(this._deprecatedOptions, {\n      useAggregation: {\n        since: \"18.1\",\n        message: \"Use the 'commonSeriesSettings.aggregation.enabled' or 'series.aggregation.enabled' option instead\"\n      },\n      \"argumentAxis.min\": {\n        since: \"18.2\",\n        message: \"Use the 'argumentAxis.visualRange' option instead\"\n      },\n      \"argumentAxis.max\": {\n        since: \"18.2\",\n        message: \"Use the 'argumentAxis.visualRange' option instead\"\n      },\n      \"valueAxis.min\": {\n        since: \"18.2\",\n        message: \"Use the 'valueAxis.visualRange' option instead\"\n      },\n      \"valueAxis.max\": {\n        since: \"18.2\",\n        message: \"Use the 'valueAxis.visualRange' option instead\"\n      },\n      zoomingMode: {\n        since: \"18.2\",\n        message: \"Use the 'zoomAndPan' option instead\"\n      },\n      scrollingMode: {\n        since: \"18.2\",\n        message: \"Use the 'zoomAndPan' option instead\"\n      }\n    });\n  },\n  _initCore: function _initCore() {\n    this.paneAxis = {};\n    this.callBase();\n  },\n  _correctAxes: function _correctAxes() {\n    this._correctValueAxes(true);\n  },\n  _getExtraOptions: _common.noop,\n  _createPanes: function _createPanes() {\n    var that = this;\n    var panes = that.option(\"panes\");\n    var panesNameCounter = 0;\n    var defaultPane;\n\n    if (!panes || _isArray(panes) && !panes.length) {\n      panes = DEFAULT_PANES;\n    }\n\n    that.callBase();\n    defaultPane = that.option(\"defaultPane\");\n    panes = (0, _extend2.extend)(true, [], _isArray(panes) ? panes : [panes]);\n    (0, _iterator.each)(panes, function (_, pane) {\n      pane.name = !(0, _type.isDefined)(pane.name) ? DEFAULT_PANE_NAME + panesNameCounter++ : pane.name;\n    });\n\n    if ((0, _type.isDefined)(defaultPane)) {\n      if (!doesPaneExist(panes, defaultPane)) {\n        that._incidentOccurred(\"W2101\", [defaultPane]);\n\n        defaultPane = panes[panes.length - 1].name;\n      }\n    } else {\n      defaultPane = panes[panes.length - 1].name;\n    }\n\n    that.defaultPane = defaultPane;\n    panes = that._isRotated() ? panes.reverse() : panes;\n    return panes;\n  },\n  _getAxisRenderingOptions: function _getAxisRenderingOptions() {\n    return {\n      axisType: \"xyAxes\",\n      drawingType: \"linear\"\n    };\n  },\n  _prepareAxisOptions: function _prepareAxisOptions(typeSelector, userOptions, rotated) {\n    return {\n      isHorizontal: \"argumentAxis\" === typeSelector !== rotated,\n      containerColor: this._themeManager.getOptions(\"containerBackgroundColor\")\n    };\n  },\n  _checkPaneName: function _checkPaneName(seriesTheme) {\n    var paneList = (0, _utils.map)(this.panes, function (pane) {\n      return pane.name;\n    });\n    seriesTheme.pane = seriesTheme.pane || this.defaultPane;\n    return (0, _array.inArray)(seriesTheme.pane, paneList) !== -1;\n  },\n  _getValueAxis: function _getValueAxis(paneName, axisName) {\n    var that = this;\n    var valueAxes = that._valueAxes;\n    var valueAxisOptions = that.option(\"valueAxis\") || {};\n    var valueAxesOptions = _isArray(valueAxisOptions) ? valueAxisOptions : [valueAxisOptions];\n\n    var rotated = that._isRotated();\n\n    var crosshairMargins = that._getCrosshairMargins();\n\n    var axisOptions;\n    var axis;\n    axisName = axisName || getFirstAxisNameForPane(valueAxes, paneName, that.defaultPane);\n    axis = findAxis(paneName, axisName, valueAxes);\n\n    if (!axis) {\n      axisOptions = findAxisOptions(valueAxes, valueAxesOptions, axisName);\n\n      if (!axisOptions) {\n        that._incidentOccurred(\"W2102\", [axisName]);\n\n        axisOptions = {\n          name: axisName,\n          priority: valueAxes.length\n        };\n      }\n\n      axis = that._createAxis(false, that._populateAxesOptions(\"valueAxis\", axisOptions, {\n        pane: paneName,\n        name: axisName,\n        optionPath: _isArray(valueAxisOptions) ? \"valueAxis[\".concat(axisOptions.priority, \"]\") : \"valueAxis\",\n        crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\n      }, rotated));\n      axis.applyVisualRangeSetter(that._getVisualRangeSetter());\n      valueAxes.push(axis);\n    }\n\n    axis.setPane(paneName);\n    return axis;\n  },\n  _correctValueAxes: function _correctValueAxes(needHideGrids) {\n    var that = this;\n\n    var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\n\n    var valueAxes = that._valueAxes;\n    var paneWithAxis = {};\n    that.series.forEach(function (series) {\n      var axis = series.getValueAxis();\n      paneWithAxis[axis.pane] = true;\n    });\n    that.panes.forEach(function (pane) {\n      var paneName = pane.name;\n\n      if (!paneWithAxis[paneName]) {\n        that._getValueAxis(paneName);\n      }\n\n      if (needHideGrids && synchronizeMultiAxes) {\n        hideGridsOnNonFirstValueAxisForPane(valueAxes.filter(function (axis) {\n          return axis.pane === paneName;\n        }));\n      }\n    });\n    that._valueAxes = valueAxes.filter(function (axis) {\n      if (!axis.pane) {\n        axis.setPane(that.defaultPane);\n      }\n\n      return doesPaneExist(that.panes, axis.pane);\n    }).sort(compareAxes);\n    var defaultAxis = this.getValueAxis();\n\n    that._valueAxes.forEach(function (axis) {\n      var optionPath = axis.getOptions().optionPath;\n\n      if (optionPath) {\n        var axesWithSamePath = that._valueAxes.filter(function (a) {\n          return a.getOptions().optionPath === optionPath;\n        });\n\n        if (axesWithSamePath.length > 1) {\n          if (axesWithSamePath.some(function (a) {\n            return a === defaultAxis;\n          })) {\n            axesWithSamePath.forEach(function (a) {\n              if (a !== defaultAxis) {\n                a.getOptions().optionPath = null;\n              }\n            });\n          } else {\n            axesWithSamePath.forEach(function (a, i) {\n              if (0 !== i) {\n                a.getOptions().optionPath = null;\n              }\n            });\n          }\n        }\n      }\n    });\n  },\n  _getSeriesForPane: function _getSeriesForPane(paneName) {\n    var paneSeries = [];\n    (0, _iterator.each)(this.series, function (_, oneSeries) {\n      if (oneSeries.pane === paneName) {\n        paneSeries.push(oneSeries);\n      }\n    });\n    return paneSeries;\n  },\n  _createPanesBorderOptions: function _createPanesBorderOptions() {\n    var commonBorderOptions = this._themeManager.getOptions(\"commonPaneSettings\").border;\n\n    var panesBorderOptions = {};\n    this.panes.forEach(function (pane) {\n      return panesBorderOptions[pane.name] = (0, _extend2.extend)(true, {}, commonBorderOptions, pane.border);\n    });\n    return panesBorderOptions;\n  },\n  _createScrollBar: function _createScrollBar() {\n    var that = this;\n    var scrollBarOptions = that._themeManager.getOptions(\"scrollBar\") || {};\n    var scrollBarGroup = that._scrollBarGroup;\n\n    if (scrollBarOptions.visible) {\n      scrollBarOptions.rotated = that._isRotated();\n      that._scrollBar = (that._scrollBar || new _scroll_bar2.default.ScrollBar(that._renderer, scrollBarGroup)).update(scrollBarOptions);\n    } else {\n      scrollBarGroup.linkRemove();\n      that._scrollBar && that._scrollBar.dispose();\n      that._scrollBar = null;\n    }\n  },\n  _prepareToRender: function _prepareToRender(drawOptions) {\n    var panesBorderOptions = this._createPanesBorderOptions();\n\n    this._createPanesBackground();\n\n    this._appendAxesGroups();\n\n    this._adjustViewport();\n\n    return panesBorderOptions;\n  },\n  _adjustViewport: function _adjustViewport() {\n    var that = this;\n\n    var series = that._getVisibleSeries();\n\n    var argumentAxis = that.getArgumentAxis();\n    var useAggregation = series.some(function (s) {\n      return s.useAggregation();\n    });\n\n    var adjustOnZoom = that._themeManager.getOptions(\"adjustOnZoom\");\n\n    var alignToBounds = !argumentAxis.dataVisualRangeIsReduced();\n\n    if (!useAggregation && !adjustOnZoom) {\n      return;\n    }\n\n    that._valueAxes.forEach(function (axis) {\n      return axis.adjust(alignToBounds);\n    });\n  },\n  _recreateSizeDependentObjects: function _recreateSizeDependentObjects(isCanvasChanged) {\n    var that = this;\n\n    var series = that._getVisibleSeries();\n\n    var useAggregation = series.some(function (s) {\n      return s.useAggregation();\n    });\n\n    var zoomChanged = that._isZooming();\n\n    if (!useAggregation) {\n      return;\n    }\n\n    that._argumentAxes.forEach(function (axis) {\n      axis.updateCanvas(that._canvas);\n    });\n\n    series.forEach(function (series) {\n      if (series.useAggregation() && (isCanvasChanged || zoomChanged || !series._useAllAggregatedPoints)) {\n        series.createPoints();\n      }\n    });\n\n    that._processSeriesFamilies();\n  },\n  _isZooming: function _isZooming() {\n    var that = this;\n    var argumentAxis = that.getArgumentAxis();\n\n    if (!argumentAxis || !argumentAxis.getTranslator()) {\n      return false;\n    }\n\n    var businessRange = argumentAxis.getTranslator().getBusinessRange();\n    var zoomRange = argumentAxis.getViewport();\n    var min = zoomRange ? zoomRange.min : 0;\n    var max = zoomRange ? zoomRange.max : 0;\n\n    if (\"logarithmic\" === businessRange.axisType) {\n      min = (0, _utils.getLog)(min, businessRange.base);\n      max = (0, _utils.getLog)(max, businessRange.base);\n    }\n\n    var viewportDistance = \"discrete\" === businessRange.axisType ? (0, _utils.getCategoriesInfo)(businessRange.categories, min, max).categories.length : Math.abs(max - min);\n    var precision = (0, _math.getPrecision)(viewportDistance);\n    precision = precision > 1 ? Math.pow(10, precision - 2) : 1;\n    var zoomChanged = Math.round((that._zoomLength - viewportDistance) * precision) / precision !== 0;\n    that._zoomLength = viewportDistance;\n    return zoomChanged;\n  },\n  _handleSeriesDataUpdated: function _handleSeriesDataUpdated() {\n    var that = this;\n    var viewport = new _range2.default.Range();\n    that.series.forEach(function (s) {\n      viewport.addRange(s.getArgumentRange());\n    });\n\n    that._argumentAxes.forEach(function (axis) {\n      axis.updateCanvas(that._canvas);\n      axis.setBusinessRange(viewport, that._axesReinitialized);\n    });\n\n    that.callBase();\n  },\n  _isLegendInside: function _isLegendInside() {\n    return this._legend && \"inside\" === this._legend.getPosition();\n  },\n  _isRotated: function _isRotated() {\n    return this._themeManager.getOptions(\"rotated\");\n  },\n  _getLayoutTargets: function _getLayoutTargets() {\n    return this.panes;\n  },\n  _applyClipRects: function _applyClipRects(panesBorderOptions) {\n    var that = this;\n\n    var canvasClipRectID = that._getCanvasClipRectID();\n\n    var i;\n\n    that._drawPanesBorders(panesBorderOptions);\n\n    that._createClipRectsForPanes();\n\n    for (i = 0; i < that._argumentAxes.length; i++) {\n      that._argumentAxes[i].applyClipRects(that._getElementsClipRectID(that._argumentAxes[i].pane), canvasClipRectID);\n    }\n\n    for (i = 0; i < that._valueAxes.length; i++) {\n      that._valueAxes[i].applyClipRects(that._getElementsClipRectID(that._valueAxes[i].pane), canvasClipRectID);\n    }\n\n    that._fillPanesBackground();\n  },\n  _updateLegendPosition: function _updateLegendPosition(drawOptions, legendHasInsidePosition) {\n    var that = this;\n\n    if (drawOptions.drawLegend && that._legend && legendHasInsidePosition) {\n      var panes = that.panes;\n      var newCanvas = (0, _extend2.extend)({}, panes[0].canvas);\n      var layoutManager = new _layout_manager2.default.LayoutManager();\n      newCanvas.right = panes[panes.length - 1].canvas.right;\n      newCanvas.bottom = panes[panes.length - 1].canvas.bottom;\n      layoutManager.setOptions({\n        width: 0,\n        height: 0\n      });\n      layoutManager.layoutElements([that._legend], newCanvas, _common.noop, [{\n        canvas: newCanvas\n      }], void 0);\n    }\n  },\n  _allowLegendInsidePosition: function _allowLegendInsidePosition() {\n    return true;\n  },\n  _applyExtraSettings: function _applyExtraSettings(series) {\n    var that = this;\n\n    var paneIndex = that._getPaneIndex(series.pane);\n\n    var panesClipRects = that._panesClipRects;\n    var wideClipRect = panesClipRects.wide[paneIndex];\n    series.setClippingParams(panesClipRects.base[paneIndex].id, wideClipRect && wideClipRect.id, that._getPaneBorderVisibility(paneIndex));\n  },\n  _updatePanesCanvases: function _updatePanesCanvases(drawOptions) {\n    if (!drawOptions.recreateCanvas) {\n      return;\n    }\n\n    (0, _utils.updatePanesCanvases)(this.panes, this._canvas, this._isRotated());\n  },\n  _normalizePanesHeight: function _normalizePanesHeight() {\n    (0, _utils.normalizePanesHeight)(this.panes);\n  },\n  _renderScaleBreaks: function _renderScaleBreaks() {\n    this._valueAxes.concat(this._argumentAxes).forEach(function (axis) {\n      axis.drawScaleBreaks();\n    });\n  },\n  _getArgFilter: function _getArgFilter() {\n    return (0, _range_data_calculator.getViewPortFilter)(this.getArgumentAxis().visualRange() || {});\n  },\n  _applyPointMarkersAutoHiding: function _applyPointMarkersAutoHiding() {\n    var that = this;\n\n    if (!that._themeManager.getOptions(\"autoHidePointMarkers\")) {\n      that.series.forEach(function (s) {\n        return s.autoHidePointMarkers = false;\n      });\n      return;\n    }\n\n    that.panes.forEach(function (pane) {\n      var series = that.series.filter(function (s) {\n        return s.pane === pane.name && s.usePointsToDefineAutoHiding();\n      });\n      var argAxis = that.getArgumentAxis();\n      var argVisualRange = argAxis.visualRange();\n      var argTranslator = argAxis.getTranslator();\n      var argAxisType = argAxis.getOptions().type;\n      var argViewPortFilter = (0, _range_data_calculator.getViewPortFilter)(argVisualRange || {});\n      var points = [];\n      var overloadedSeries = {};\n      series.forEach(function (s) {\n        var valAxis = s.getValueAxis();\n        var valVisualRange = valAxis.visualRange();\n        var valTranslator = valAxis.getTranslator();\n        var seriesIndex = that.series.indexOf(s);\n        var valViewPortFilter = (0, _range_data_calculator.getViewPortFilter)(valVisualRange || {});\n        overloadedSeries[seriesIndex] = {};\n        series.forEach(function (sr) {\n          return overloadedSeries[seriesIndex][that.series.indexOf(sr)] = 0;\n        });\n        var seriesPoints = [];\n        s.getPoints().filter(function (p) {\n          return p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)));\n        }).forEach(function (p) {\n          var tp = {\n            seriesIndex: seriesIndex,\n            argument: p.argument,\n            value: p.getMaxValue(true),\n            size: p.bubbleSize || p.getOptions().size\n          };\n\n          if (p.getMinValue(true) !== p.getMaxValue(true)) {\n            var mp = (0, _extend2.extend)({}, tp);\n            mp.value = p.getMinValue(true);\n            mp.x = argTranslator.to(mp.argument, 1);\n            mp.y = valTranslator.to(mp.value, 1);\n            seriesPoints.push(mp);\n          }\n\n          tp.x = argTranslator.to(tp.argument, 1);\n          tp.y = valTranslator.to(tp.value, 1);\n          seriesPoints.push(tp);\n        });\n        overloadedSeries[seriesIndex].pointsCount = seriesPoints.length;\n        overloadedSeries[seriesIndex].total = 0;\n        overloadedSeries[seriesIndex].continuousSeries = 0;\n        points = points.concat(seriesPoints);\n      });\n      var sortingCallback = \"discrete\" === argAxisType ? function (p1, p2) {\n        return argVisualRange.categories.indexOf(p1.argument) - argVisualRange.categories.indexOf(p2.argument);\n      } : function (p1, p2) {\n        return p1.argument - p2.argument;\n      };\n      points.sort(sortingCallback);\n      var isContinuousSeries = false;\n\n      for (var i = 0; i < points.length - 1; i++) {\n        var curPoint = points[i];\n        var size = curPoint.size;\n\n        if ((0, _type.isDefined)(curPoint.x) && (0, _type.isDefined)(curPoint.y)) {\n          for (var j = i + 1; j < points.length; j++) {\n            var nextPoint = points[j];\n            var next_x = (0, _type.isDefined)(nextPoint) ? nextPoint.x : null;\n            var next_y = (0, _type.isDefined)(nextPoint) ? nextPoint.y : null;\n\n            if (!(0, _type.isDefined)(next_x) || Math.abs(curPoint.x - next_x) >= size) {\n              isContinuousSeries &= j !== i + 1;\n              break;\n            } else {\n              var distance = (0, _type.isDefined)(next_x) && (0, _type.isDefined)(next_y) && Math.sqrt(Math.pow(curPoint.x - next_x, 2) + Math.pow(curPoint.y - next_y, 2));\n\n              if (distance && distance < size) {\n                overloadedSeries[curPoint.seriesIndex][nextPoint.seriesIndex]++;\n                overloadedSeries[curPoint.seriesIndex].total++;\n\n                if (!isContinuousSeries) {\n                  overloadedSeries[curPoint.seriesIndex].continuousSeries++;\n                  isContinuousSeries = true;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      series.forEach(function (s) {\n        var seriesIndex = that.series.indexOf(s);\n        s.autoHidePointMarkers = false;\n        var tickCount = argAxis.getTicksValues().majorTicksValues.length;\n\n        if (s.autoHidePointMarkersEnabled() && (\"discrete\" === argAxisType || overloadedSeries[seriesIndex].pointsCount > tickCount)) {\n          for (var index in overloadedSeries[seriesIndex]) {\n            var _i = parseInt(index);\n\n            if (isNaN(_i) || overloadedSeries[seriesIndex].total / overloadedSeries[seriesIndex].continuousSeries < 3) {\n              continue;\n            }\n\n            if (_i === seriesIndex) {\n              if (2 * overloadedSeries[_i][_i] >= overloadedSeries[_i].pointsCount) {\n                s.autoHidePointMarkers = true;\n                break;\n              }\n            } else {\n              if (overloadedSeries[seriesIndex].total >= overloadedSeries[seriesIndex].pointsCount) {\n                s.autoHidePointMarkers = true;\n                break;\n              }\n            }\n          }\n        }\n      });\n    });\n  },\n  _renderAxes: function _renderAxes(drawOptions, panesBorderOptions) {\n    function calculateTitlesWidth(axes) {\n      return axes.map(function (axis) {\n        if (!axis.getTitle) {\n          return 0;\n        }\n\n        var title = axis.getTitle();\n        return title ? title.bBox.width : 0;\n      });\n    }\n\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\n\n    var extendedArgAxes = (that._scrollBar ? [that._scrollBar] : []).concat(that._argumentAxes);\n    var verticalAxes = rotated ? extendedArgAxes : that._valueAxes;\n    var horizontalAxes = rotated ? that._valueAxes : extendedArgAxes;\n    var allAxes = verticalAxes.concat(horizontalAxes);\n\n    that._normalizePanesHeight();\n\n    that._updatePanesCanvases(drawOptions);\n\n    var panesCanvases = that.panes.reduce(function (canvases, pane) {\n      canvases[pane.name] = (0, _extend2.extend)({}, pane.canvas);\n      return canvases;\n    }, {});\n    var paneSizes = that.panes.reduce(function (sizes, pane) {\n      sizes[pane.name] = {\n        height: pane.height,\n        unit: pane.unit\n      };\n      return sizes;\n    }, {});\n    var cleanPanesCanvases = (0, _extend2.extend)(true, {}, panesCanvases);\n\n    if (!drawOptions.adjustAxes) {\n      drawAxesWithTicks(verticalAxes, !rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\n      drawAxesWithTicks(horizontalAxes, rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\n      performActionOnAxes(allAxes, \"prepareAnimation\");\n\n      that._renderScaleBreaks();\n\n      return false;\n    }\n\n    if (that._scrollBar) {\n      that._scrollBar.setPane(that.panes);\n    }\n\n    var vAxesMargins = {\n      panes: {}\n    };\n    var hAxesMargins = getHorizontalAxesMargins(horizontalAxes, function (axis) {\n      return axis.estimateMargins(panesCanvases[axis.pane]);\n    });\n    panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n    drawAxesWithTicks(verticalAxes, !rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\n    vAxesMargins = getVerticalAxesMargins(verticalAxes);\n    panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n    drawAxesWithTicks(horizontalAxes, rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\n    hAxesMargins = getHorizontalAxesMargins(horizontalAxes, getAxisMargins);\n    panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n    var oldTitlesWidth = calculateTitlesWidth(verticalAxes);\n\n    var visibleSeries = that._getVisibleSeries();\n\n    var pointsToAnimation = that._getPointsToAnimation(visibleSeries);\n\n    performActionOnAxes(allAxes, \"updateSize\", panesCanvases, axisAnimationEnabled(drawOptions, pointsToAnimation));\n    horizontalAxes.forEach(shiftAxis(\"top\", \"bottom\"));\n    verticalAxes.forEach(shiftAxis(\"left\", \"right\"));\n\n    that._renderScaleBreaks();\n\n    that.panes.forEach(function (pane) {\n      (0, _extend2.extend)(pane.canvas, panesCanvases[pane.name]);\n    });\n\n    that._valueAxes.forEach(function (axis) {\n      axis.setInitRange();\n    });\n\n    verticalAxes.forEach(function (axis, i) {\n      if (axis.hasWrap && axis.hasWrap()) {\n        var title = axis.getTitle();\n        var newTitleWidth = title ? title.bBox.width : 0;\n        var offset = newTitleWidth - oldTitlesWidth[i];\n\n        if (\"right\" === axis.getOptions().position) {\n          vAxesMargins.right += offset;\n        } else {\n          vAxesMargins.left += offset;\n          that.panes.forEach(function (_ref) {\n            var name = _ref.name;\n            return vAxesMargins.panes[name].left += offset;\n          });\n        }\n\n        panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n        performActionOnAxes(allAxes, \"updateSize\", panesCanvases, false, false);\n        oldTitlesWidth = calculateTitlesWidth(verticalAxes);\n      }\n    });\n    return cleanPanesCanvases;\n  },\n  checkForMoreSpaceForPanesCanvas: function checkForMoreSpaceForPanesCanvas() {\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    var panesAreCustomSized = that.panes.filter(function (p) {\n      return p.unit;\n    }).length === that.panes.length;\n    var needSpace = false;\n\n    if (panesAreCustomSized) {\n      var needHorizontalSpace = 0;\n      var needVerticalSpace = 0;\n\n      if (rotated) {\n        var argAxisRightMargin = that.getArgumentAxis().getMargins().right;\n        var rightPanesIndent = Math.min.apply(Math, that.panes.map(function (p) {\n          return p.canvas.right;\n        }));\n        needHorizontalSpace = that._canvas.right + argAxisRightMargin - rightPanesIndent;\n      } else {\n        var argAxisBottomMargin = that.getArgumentAxis().getMargins().bottom;\n        var bottomPanesIndent = Math.min.apply(Math, that.panes.map(function (p) {\n          return p.canvas.bottom;\n        }));\n        needVerticalSpace = that._canvas.bottom + argAxisBottomMargin - bottomPanesIndent;\n      }\n\n      needSpace = needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\n        width: needHorizontalSpace,\n        height: needVerticalSpace\n      } : false;\n\n      if (0 !== needVerticalSpace) {\n        var realSize = that.getSize();\n        var customSize = that.option(\"size\");\n        var container = that._$element[0];\n        var containerHasStyledHeight = !!container.style.height || (0, _utils.checkElementHasPropertyFromStyleSheet)(container, \"height\");\n\n        if (!rotated && !(customSize && customSize.height) && !containerHasStyledHeight) {\n          that._forceResize(realSize.width, realSize.height + needVerticalSpace);\n\n          needSpace = false;\n        }\n      }\n    } else {\n      needSpace = that.layoutManager.needMoreSpaceForPanesCanvas(that._getLayoutTargets(), rotated, function (pane) {\n        return {\n          width: rotated && !!pane.unit,\n          height: !rotated && !!pane.unit\n        };\n      });\n    }\n\n    return needSpace;\n  },\n  _forceResize: function _forceResize(width, height) {\n    this._renderer.resize(width, height);\n\n    this._updateSize();\n\n    this._setContentSize();\n\n    this._preserveOriginalCanvas();\n\n    this._updateCanvasClipRect(this._canvas);\n  },\n  _shrinkAxes: function _shrinkAxes(sizeShortage, panesCanvases) {\n    if (!sizeShortage || !panesCanvases) {\n      return;\n    }\n\n    this._renderer.stopAllAnimations(true);\n\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    var extendedArgAxes = (that._scrollBar ? [that._scrollBar] : []).concat(that._argumentAxes);\n    var verticalAxes = rotated ? extendedArgAxes : that._valueAxes;\n    var horizontalAxes = rotated ? that._valueAxes : extendedArgAxes;\n    var allAxes = verticalAxes.concat(horizontalAxes);\n\n    if (sizeShortage.width || sizeShortage.height) {\n      checkUsedSpace(sizeShortage, \"height\", horizontalAxes, getHorizontalAxesMargins);\n      checkUsedSpace(sizeShortage, \"width\", verticalAxes, getVerticalAxesMargins);\n      performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\n      var paneSizes = that.panes.reduce(function (sizes, pane) {\n        sizes[pane.name] = {\n          height: pane.height,\n          unit: pane.unit\n        };\n        return sizes;\n      }, {});\n      panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, getVerticalAxesMargins(verticalAxes), getHorizontalAxesMargins(horizontalAxes, getAxisMargins));\n      performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\n      horizontalAxes.forEach(shiftAxis(\"top\", \"bottom\"));\n      verticalAxes.forEach(shiftAxis(\"left\", \"right\"));\n      that.panes.forEach(function (pane) {\n        return (0, _extend2.extend)(pane.canvas, panesCanvases[pane.name]);\n      });\n    }\n  },\n  _getPanesParameters: function _getPanesParameters() {\n    var that = this;\n    var panes = that.panes;\n    var i;\n    var params = [];\n\n    for (i = 0; i < panes.length; i++) {\n      if (that._getPaneBorderVisibility(i)) {\n        params.push({\n          coords: panes[i].borderCoords,\n          clipRect: that._panesClipRects.fixed[i]\n        });\n      }\n    }\n\n    return params;\n  },\n  _createCrosshairCursor: function _createCrosshairCursor() {\n    var that = this;\n    var options = that._themeManager.getOptions(\"crosshair\") || {};\n    var argumentAxis = that.getArgumentAxis();\n    var axes = !that._isRotated() ? [[argumentAxis], that._valueAxes] : [that._valueAxes, [argumentAxis]];\n    var parameters = {\n      canvas: that._getCommonCanvas(),\n      panes: that._getPanesParameters(),\n      axes: axes\n    };\n\n    if (!options || !options.enabled) {\n      return;\n    }\n\n    if (!that._crosshair) {\n      that._crosshair = new _crosshair2.default.Crosshair(that._renderer, options, parameters, that._crosshairCursorGroup);\n    } else {\n      that._crosshair.update(options, parameters);\n    }\n\n    that._crosshair.render();\n  },\n  _getCommonCanvas: function _getCommonCanvas() {\n    var i;\n    var canvas;\n    var commonCanvas;\n    var panes = this.panes;\n\n    for (i = 0; i < panes.length; i++) {\n      canvas = panes[i].canvas;\n\n      if (!commonCanvas) {\n        commonCanvas = (0, _extend2.extend)({}, canvas);\n      } else {\n        commonCanvas.right = canvas.right;\n        commonCanvas.bottom = canvas.bottom;\n      }\n    }\n\n    return commonCanvas;\n  },\n  _createPanesBackground: function _createPanesBackground() {\n    var that = this;\n\n    var defaultBackgroundColor = that._themeManager.getOptions(\"commonPaneSettings\").backgroundColor;\n\n    var backgroundColor;\n    var renderer = that._renderer;\n    var rect;\n    var i;\n    var rects = [];\n\n    that._panesBackgroundGroup.clear();\n\n    for (i = 0; i < that.panes.length; i++) {\n      backgroundColor = that.panes[i].backgroundColor || defaultBackgroundColor;\n\n      if (!backgroundColor || \"none\" === backgroundColor) {\n        rects.push(null);\n        continue;\n      }\n\n      rect = renderer.rect(0, 0, 0, 0).attr({\n        fill: backgroundColor,\n        \"stroke-width\": 0\n      }).append(that._panesBackgroundGroup);\n      rects.push(rect);\n    }\n\n    that.panesBackground = rects;\n  },\n  _fillPanesBackground: function _fillPanesBackground() {\n    var that = this;\n    var bc;\n    (0, _iterator.each)(that.panes, function (i, pane) {\n      bc = pane.borderCoords;\n\n      if (null !== that.panesBackground[i]) {\n        that.panesBackground[i].attr({\n          x: bc.left,\n          y: bc.top,\n          width: bc.width,\n          height: bc.height\n        });\n      }\n    });\n  },\n  _calcPaneBorderCoords: function _calcPaneBorderCoords(pane) {\n    var canvas = pane.canvas;\n    var bc = pane.borderCoords = pane.borderCoords || {};\n    bc.left = canvas.left;\n    bc.top = canvas.top;\n    bc.right = canvas.width - canvas.right;\n    bc.bottom = canvas.height - canvas.bottom;\n    bc.width = Math.max(bc.right - bc.left, 0);\n    bc.height = Math.max(bc.bottom - bc.top, 0);\n  },\n  _drawPanesBorders: function _drawPanesBorders(panesBorderOptions) {\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    that._panesBorderGroup.linkRemove().clear();\n\n    (0, _iterator.each)(that.panes, function (i, pane) {\n      var bc;\n      var borderOptions = panesBorderOptions[pane.name];\n      var segmentRectParams;\n      var attr = {\n        fill: \"none\",\n        stroke: borderOptions.color,\n        \"stroke-opacity\": borderOptions.opacity,\n        \"stroke-width\": borderOptions.width,\n        dashStyle: borderOptions.dashStyle,\n        \"stroke-linecap\": \"square\"\n      };\n\n      that._calcPaneBorderCoords(pane, rotated);\n\n      if (!borderOptions.visible) {\n        return;\n      }\n\n      bc = pane.borderCoords;\n      segmentRectParams = prepareSegmentRectPoints(bc.left, bc.top, bc.width, bc.height, borderOptions);\n\n      that._renderer.path(segmentRectParams.points, segmentRectParams.pathType).attr(attr).append(that._panesBorderGroup);\n    });\n\n    that._panesBorderGroup.linkAppend();\n  },\n  _createClipRect: function _createClipRect(clipArray, index, left, top, width, height) {\n    var that = this;\n    var clipRect = clipArray[index];\n\n    if (!clipRect) {\n      clipRect = that._renderer.clipRect(left, top, width, height);\n      clipArray[index] = clipRect;\n    } else {\n      clipRect.attr({\n        x: left,\n        y: top,\n        width: width,\n        height: height\n      });\n    }\n  },\n  _createClipRectsForPanes: function _createClipRectsForPanes() {\n    var that = this;\n    var canvas = that._canvas;\n    (0, _iterator.each)(that.panes, function (i, pane) {\n      var needWideClipRect = false;\n      var bc = pane.borderCoords;\n      var left = bc.left;\n      var top = bc.top;\n      var width = bc.width;\n      var height = bc.height;\n      var panesClipRects = that._panesClipRects;\n\n      that._createClipRect(panesClipRects.fixed, i, left, top, width, height);\n\n      that._createClipRect(panesClipRects.base, i, left, top, width, height);\n\n      (0, _iterator.each)(that.series, function (_, series) {\n        if (series.pane === pane.name && (series.isFinancialSeries() || series.areErrorBarsVisible())) {\n          needWideClipRect = true;\n        }\n      });\n\n      if (needWideClipRect) {\n        if (that._isRotated()) {\n          top = 0;\n          height = canvas.height;\n        } else {\n          left = 0;\n          width = canvas.width;\n        }\n\n        that._createClipRect(panesClipRects.wide, i, left, top, width, height);\n      } else {\n        panesClipRects.wide[i] = null;\n      }\n    });\n  },\n  _getPaneBorderVisibility: function _getPaneBorderVisibility(paneIndex) {\n    var commonPaneBorderVisible = this._themeManager.getOptions(\"commonPaneSettings\").border.visible;\n\n    var pane = this.panes[paneIndex] || {};\n    var paneBorder = pane.border || {};\n    return \"visible\" in paneBorder ? paneBorder.visible : commonPaneBorderVisible;\n  },\n  _getCanvasForPane: function _getCanvasForPane(paneName) {\n    var panes = this.panes;\n    var panesNumber = panes.length;\n    var i;\n\n    for (i = 0; i < panesNumber; i++) {\n      if (panes[i].name === paneName) {\n        return panes[i].canvas;\n      }\n    }\n  },\n  _getTrackerSettings: function _getTrackerSettings() {\n    var that = this;\n    var themeManager = that._themeManager;\n    return (0, _extend2.extend)(this.callBase(), {\n      chart: that,\n      rotated: that._isRotated(),\n      crosshair: that._getCrosshairOptions().enabled ? that._crosshair : null,\n      stickyHovering: themeManager.getOptions(\"stickyHovering\")\n    });\n  },\n  _resolveLabelOverlappingStack: function _resolveLabelOverlappingStack() {\n    var that = this;\n\n    var isRotated = that._isRotated();\n\n    var shiftDirection = isRotated ? function (box, length) {\n      return {\n        x: box.x - length,\n        y: box.y\n      };\n    } : function (box, length) {\n      return {\n        x: box.x,\n        y: box.y - length\n      };\n    };\n    (0, _iterator.each)(that._getStackPoints(), function (_, stacks) {\n      (0, _iterator.each)(stacks, function (_, points) {\n        _base_chart.overlapping.resolveLabelOverlappingInOneDirection(points, that._getCommonCanvas(), isRotated, shiftDirection, function (a, b) {\n          var coordPosition = isRotated ? 1 : 0;\n          var figureCenter1 = a.labels[0].getFigureCenter()[coordPosition];\n          var figureCenter12 = b.labels[0].getFigureCenter()[coordPosition];\n\n          if (figureCenter1 - figureCenter12 === 0) {\n            return (a.value() - b.value()) * (a.labels[0].getPoint().series.getValueAxis().getTranslator().isInverted() ? -1 : 1);\n          }\n\n          return 0;\n        });\n      });\n    });\n  },\n  _getStackPoints: function _getStackPoints() {\n    var stackPoints = {};\n\n    var visibleSeries = this._getVisibleSeries();\n\n    (0, _iterator.each)(visibleSeries, function (_, singleSeries) {\n      var points = singleSeries.getPoints();\n      var stackName = singleSeries.getStackName() || null;\n      (0, _iterator.each)(points, function (_, point) {\n        var argument = point.argument;\n\n        if (!stackPoints[argument]) {\n          stackPoints[argument] = {};\n        }\n\n        if (!stackPoints[argument][stackName]) {\n          stackPoints[argument][stackName] = [];\n        }\n\n        stackPoints[argument][stackName].push(point);\n      });\n    });\n    return stackPoints;\n  },\n  _getCrosshairOptions: function _getCrosshairOptions() {\n    return this._getOption(\"crosshair\");\n  },\n  zoomArgument: function zoomArgument(min, max) {\n    var that = this;\n\n    if (!that._initialized || !(0, _type.isDefined)(min) && !(0, _type.isDefined)(max)) {\n      return;\n    }\n\n    that.getArgumentAxis().visualRange([min, max]);\n  },\n  resetVisualRange: function resetVisualRange() {\n    var that = this;\n    var axes = that._argumentAxes;\n    var nonVirtualArgumentAxis = that.getArgumentAxis();\n    axes.forEach(function (axis) {\n      axis.resetVisualRange(nonVirtualArgumentAxis !== axis);\n\n      that._applyCustomVisualRangeOption(axis);\n    });\n    that.callBase();\n  },\n  getVisibleArgumentBounds: function getVisibleArgumentBounds() {\n    var translator = this._argumentAxes[0].getTranslator();\n\n    var range = translator.getBusinessRange();\n    var isDiscrete = \"discrete\" === range.axisType;\n    var categories = range.categories;\n    return {\n      minVisible: isDiscrete ? range.minVisible || categories[0] : range.minVisible,\n      maxVisible: isDiscrete ? range.maxVisible || categories[categories.length - 1] : range.maxVisible\n    };\n  },\n  _change_FULL_RENDER: function _change_FULL_RENDER() {\n    this.callBase();\n\n    if (this._changes.has(VISUAL_RANGE)) {\n      this._raiseZoomEndHandlers();\n    }\n  },\n  _getAxesForScaling: function _getAxesForScaling() {\n    return [this.getArgumentAxis()].concat(this._valueAxes);\n  },\n  _applyVisualRangeByVirtualAxes: function _applyVisualRangeByVirtualAxes(axis, range) {\n    var that = this;\n\n    if (axis.isArgumentAxis) {\n      if (axis !== that.getArgumentAxis()) {\n        return true;\n      }\n\n      that._argumentAxes.filter(function (a) {\n        return a !== axis;\n      }).forEach(function (a) {\n        return a.visualRange(range, {\n          start: true,\n          end: true\n        });\n      });\n    }\n\n    return false;\n  },\n  _raiseZoomEndHandlers: function _raiseZoomEndHandlers() {\n    this._argumentAxes.forEach(function (axis) {\n      return axis.handleZoomEnd();\n    });\n\n    this.callBase();\n  },\n  _setOptionsByReference: function _setOptionsByReference() {\n    this.callBase();\n    (0, _extend2.extend)(this._optionsByReference, {\n      \"argumentAxis.visualRange\": true\n    });\n  },\n  option: function option() {\n    var option = this.callBase.apply(this, arguments);\n\n    if (\"array\" === (0, _type.type)(this._options.valueAxis)) {\n      for (var i = 0; i < this._options.valueAxis.length; i++) {\n        var optionPath = \"valueAxis[\".concat(i, \"].visualRange\");\n        this._optionsByReference[optionPath] = true;\n      }\n    }\n\n    return option;\n  },\n  _notifyVisualRange: function _notifyVisualRange() {\n    var that = this;\n    var argAxis = that._argumentAxes[0];\n    var argumentVisualRange = (0, _utils.convertVisualRangeObject)(argAxis.visualRange(), !_isArray(that.option(\"argumentAxis.visualRange\")));\n\n    if (!argAxis.skipEventRising || !(0, _utils.rangesAreEqual)(argumentVisualRange, that.option(\"argumentAxis.visualRange\"))) {\n      that.option(\"argumentAxis.visualRange\", argumentVisualRange);\n    } else {\n      argAxis.skipEventRising = null;\n    }\n\n    that.callBase();\n  }\n});\n\ndxChart.addPlugin(require(\"./chart_components/shutter_zoom\"));\ndxChart.addPlugin(require(\"./chart_components/zoom_and_pan\"));\ndxChart.addPlugin(require(\"./core/annotations\").plugins.core);\ndxChart.addPlugin(require(\"./core/annotations\").plugins.chart);\n(0, _component_registrator2.default)(\"dxChart\", dxChart);\nmodule.exports = dxChart;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/chart.js"],"names":["_common","require","_extend2","_array","_iterator","_component_registrator","_component_registrator2","_interopRequireDefault","_utils","_type","_math","_base_chart","_layout_manager","_layout_manager2","_multi_axes_synchronizer","_multi_axes_synchronizer2","_advanced_chart","_scroll_bar","_scroll_bar2","_crosshair","_crosshair2","_range_data_calculator","_range","_range2","obj","__esModule","DEFAULT_PANE_NAME","VISUAL_RANGE","DEFAULT_PANES","name","border","_isArray","Array","isArray","getFirstAxisNameForPane","axes","paneName","defaultPane","result","i","length","pane","changeVisibilityAxisGrids","axis","gridVisibility","minorGridVisibility","gridOpt","getOptions","grid","minorGridOpt","minorGrid","visible","hideGridsOnNonFirstValueAxisForPane","axesForPane","axisShown","hiddenStubAxis","some","minorGridOptions","gridOptions","forEach","getTranslator","getBusinessRange","isEmpty","push","findAxisOptions","valueAxes","valueAxesOptions","axisName","axInd","priority","findAxis","compareAxes","a","b","doesPaneExist","panes","found","each","_","prepareSegmentRectPoints","left","top","width","height","borderOptions","maxSW","sw","newSW","right","bottom","points","segments","segmentSequence","visiblyOpt","prevSegmentVisibility","allSegment","seg","visibility","segmentVisibility","slice","segment","concat","pathType","accumulate","field","src1","src2","auxSpacing","val1","val2","pickMax","pickMaxValue","Math","max","getAxisMargins","getMargins","getHorizontalAxesMargins","getMarginsFunc","reduce","margins","axisMargins","paneMargins","spacing","getMultipleAxesSpacing","getVerticalAxesMargins","performActionOnAxes","action","actionArgument1","actionArgument2","actionArgument3","shrinkCanvases","isRotated","canvases","sizes","verticalMargins","horizontalMargins","getMargin","side","m","indexOf","getMaxMargin","margins1","margins2","getOriginalField","toUpperCase","shrink","paneNames","sizeField","startMargin","endMargin","oppositeMargins","sort","p1","p2","canvas","margin","firstPane","emptySpace","space","PANE_PADDING","totalCustomSpace","Object","keys","prev","key","unit","offset","paneSize","floor","drawAxesWithTicks","condition","panesBorderOptions","default","synchronize","shiftAxis","side1","side2","shifts","shift","getCommonSize","size","checkUsedSpace","sizeShortage","getMarginFunc","axisAnimationEnabled","drawOptions","pointsToAnimation","pointsCount","sum","count","animate","animationPointsLimit","dxChart","AdvancedChart","inherit","_themeSection","_fontFields","_setDeprecatedOptions","callBase","apply","arguments","extend","_deprecatedOptions","useAggregation","since","message","zoomingMode","scrollingMode","_initCore","paneAxis","_correctAxes","_correctValueAxes","_getExtraOptions","noop","_createPanes","that","option","panesNameCounter","isDefined","_incidentOccurred","_isRotated","reverse","_getAxisRenderingOptions","axisType","drawingType","_prepareAxisOptions","typeSelector","userOptions","rotated","isHorizontal","containerColor","_themeManager","_checkPaneName","seriesTheme","paneList","map","inArray","_getValueAxis","_valueAxes","valueAxisOptions","crosshairMargins","_getCrosshairMargins","axisOptions","_createAxis","_populateAxesOptions","optionPath","crosshairMargin","y","x","applyVisualRangeSetter","_getVisualRangeSetter","setPane","needHideGrids","synchronizeMultiAxes","paneWithAxis","series","getValueAxis","filter","defaultAxis","axesWithSamePath","_getSeriesForPane","paneSeries","oneSeries","_createPanesBorderOptions","commonBorderOptions","_createScrollBar","scrollBarOptions","scrollBarGroup","_scrollBarGroup","_scrollBar","ScrollBar","_renderer","update","linkRemove","dispose","_prepareToRender","_createPanesBackground","_appendAxesGroups","_adjustViewport","_getVisibleSeries","argumentAxis","getArgumentAxis","s","adjustOnZoom","alignToBounds","dataVisualRangeIsReduced","adjust","_recreateSizeDependentObjects","isCanvasChanged","zoomChanged","_isZooming","_argumentAxes","updateCanvas","_canvas","_useAllAggregatedPoints","createPoints","_processSeriesFamilies","businessRange","zoomRange","getViewport","min","getLog","base","viewportDistance","getCategoriesInfo","categories","abs","precision","getPrecision","pow","round","_zoomLength","_handleSeriesDataUpdated","viewport","Range","addRange","getArgumentRange","setBusinessRange","_axesReinitialized","_isLegendInside","_legend","getPosition","_getLayoutTargets","_applyClipRects","canvasClipRectID","_getCanvasClipRectID","_drawPanesBorders","_createClipRectsForPanes","applyClipRects","_getElementsClipRectID","_fillPanesBackground","_updateLegendPosition","legendHasInsidePosition","drawLegend","newCanvas","layoutManager","LayoutManager","setOptions","layoutElements","_allowLegendInsidePosition","_applyExtraSettings","paneIndex","_getPaneIndex","panesClipRects","_panesClipRects","wideClipRect","wide","setClippingParams","id","_getPaneBorderVisibility","_updatePanesCanvases","recreateCanvas","updatePanesCanvases","_normalizePanesHeight","normalizePanesHeight","_renderScaleBreaks","drawScaleBreaks","_getArgFilter","getViewPortFilter","visualRange","_applyPointMarkersAutoHiding","autoHidePointMarkers","usePointsToDefineAutoHiding","argAxis","argVisualRange","argTranslator","argAxisType","type","argViewPortFilter","overloadedSeries","valAxis","valVisualRange","valTranslator","seriesIndex","valViewPortFilter","sr","seriesPoints","getPoints","p","argument","getMinValue","getMaxValue","tp","value","bubbleSize","mp","to","total","continuousSeries","sortingCallback","isContinuousSeries","curPoint","j","nextPoint","next_x","next_y","distance","sqrt","tickCount","getTicksValues","majorTicksValues","autoHidePointMarkersEnabled","index","_i","parseInt","isNaN","_renderAxes","calculateTitlesWidth","getTitle","title","bBox","extendedArgAxes","verticalAxes","horizontalAxes","allAxes","panesCanvases","paneSizes","cleanPanesCanvases","adjustAxes","vAxesMargins","hAxesMargins","estimateMargins","oldTitlesWidth","visibleSeries","_getPointsToAnimation","setInitRange","hasWrap","newTitleWidth","position","_ref","checkForMoreSpaceForPanesCanvas","panesAreCustomSized","needSpace","needHorizontalSpace","needVerticalSpace","argAxisRightMargin","rightPanesIndent","argAxisBottomMargin","bottomPanesIndent","realSize","getSize","customSize","container","_$element","containerHasStyledHeight","style","checkElementHasPropertyFromStyleSheet","_forceResize","needMoreSpaceForPanesCanvas","resize","_updateSize","_setContentSize","_preserveOriginalCanvas","_updateCanvasClipRect","_shrinkAxes","stopAllAnimations","_getPanesParameters","params","coords","borderCoords","clipRect","fixed","_createCrosshairCursor","options","parameters","_getCommonCanvas","enabled","Crosshair","_crosshairCursorGroup","render","commonCanvas","defaultBackgroundColor","backgroundColor","renderer","rect","rects","_panesBackgroundGroup","clear","attr","fill","append","panesBackground","bc","_calcPaneBorderCoords","_panesBorderGroup","segmentRectParams","stroke","color","opacity","dashStyle","path","linkAppend","_createClipRect","clipArray","needWideClipRect","isFinancialSeries","areErrorBarsVisible","commonPaneBorderVisible","paneBorder","_getCanvasForPane","panesNumber","_getTrackerSettings","themeManager","chart","crosshair","_getCrosshairOptions","stickyHovering","_resolveLabelOverlappingStack","shiftDirection","box","_getStackPoints","stacks","overlapping","resolveLabelOverlappingInOneDirection","coordPosition","figureCenter1","labels","getFigureCenter","figureCenter12","getPoint","isInverted","stackPoints","singleSeries","stackName","getStackName","point","_getOption","zoomArgument","_initialized","resetVisualRange","nonVirtualArgumentAxis","_applyCustomVisualRangeOption","getVisibleArgumentBounds","translator","range","isDiscrete","minVisible","maxVisible","_change_FULL_RENDER","_changes","has","_raiseZoomEndHandlers","_getAxesForScaling","_applyVisualRangeByVirtualAxes","isArgumentAxis","start","end","handleZoomEnd","_setOptionsByReference","_optionsByReference","_options","valueAxis","_notifyVisualRange","argumentVisualRange","convertVisualRangeObject","skipEventRising","rangesAreEqual","addPlugin","plugins","core","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/chart.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _common = require(\"../core/utils/common\");\r\nvar _extend2 = require(\"../core/utils/extend\");\r\nvar _array = require(\"../core/utils/array\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _component_registrator = require(\"../core/component_registrator\");\r\nvar _component_registrator2 = _interopRequireDefault(_component_registrator);\r\nvar _utils = require(\"./core/utils\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _math = require(\"../core/utils/math\");\r\nvar _base_chart = require(\"./chart_components/base_chart\");\r\nvar _layout_manager = require(\"./chart_components/layout_manager\");\r\nvar _layout_manager2 = _interopRequireDefault(_layout_manager);\r\nvar _multi_axes_synchronizer = require(\"./chart_components/multi_axes_synchronizer\");\r\nvar _multi_axes_synchronizer2 = _interopRequireDefault(_multi_axes_synchronizer);\r\nvar _advanced_chart = require(\"./chart_components/advanced_chart\");\r\nvar _scroll_bar = require(\"./chart_components/scroll_bar\");\r\nvar _scroll_bar2 = _interopRequireDefault(_scroll_bar);\r\nvar _crosshair = require(\"./chart_components/crosshair\");\r\nvar _crosshair2 = _interopRequireDefault(_crosshair);\r\nvar _range_data_calculator = require(\"./series/helpers/range_data_calculator\");\r\nvar _range = require(\"./translators/range\");\r\nvar _range2 = _interopRequireDefault(_range);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DEFAULT_PANE_NAME = \"default\";\r\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\r\nvar DEFAULT_PANES = [{\r\n    name: DEFAULT_PANE_NAME,\r\n    border: {}\r\n}];\r\nvar _isArray = Array.isArray;\r\n\r\nfunction getFirstAxisNameForPane(axes, paneName, defaultPane) {\r\n    var result;\r\n    for (var i = 0; i < axes.length; i++) {\r\n        if (axes[i].pane === paneName || void 0 === axes[i].pane && paneName === defaultPane) {\r\n            result = axes[i].name;\r\n            break\r\n        }\r\n    }\r\n    if (!result) {\r\n        result = axes[0].name\r\n    }\r\n    return result\r\n}\r\n\r\nfunction changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility) {\r\n    var gridOpt = axis.getOptions().grid;\r\n    var minorGridOpt = axis.getOptions().minorGrid;\r\n    gridOpt.visible = gridVisibility;\r\n    minorGridOpt && (minorGridOpt.visible = minorGridVisibility)\r\n}\r\n\r\nfunction hideGridsOnNonFirstValueAxisForPane(axesForPane) {\r\n    var axisShown = false;\r\n    var hiddenStubAxis = [];\r\n    var minorGridVisibility = axesForPane.some(function(axis) {\r\n        var minorGridOptions = axis.getOptions().minorGrid;\r\n        return minorGridOptions && minorGridOptions.visible\r\n    });\r\n    var gridVisibility = axesForPane.some(function(axis) {\r\n        var gridOptions = axis.getOptions().grid;\r\n        return gridOptions && gridOptions.visible\r\n    });\r\n    if (axesForPane.length > 1) {\r\n        axesForPane.forEach(function(axis) {\r\n            var gridOpt = axis.getOptions().grid;\r\n            if (axisShown) {\r\n                changeVisibilityAxisGrids(axis, false, false)\r\n            } else {\r\n                if (gridOpt && gridOpt.visible) {\r\n                    if (axis.getTranslator().getBusinessRange().isEmpty()) {\r\n                        changeVisibilityAxisGrids(axis, false, false);\r\n                        hiddenStubAxis.push(axis)\r\n                    } else {\r\n                        axisShown = true;\r\n                        changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility)\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        !axisShown && hiddenStubAxis.length && changeVisibilityAxisGrids(hiddenStubAxis[0], gridVisibility, minorGridVisibility)\r\n    }\r\n}\r\n\r\nfunction findAxisOptions(valueAxes, valueAxesOptions, axisName) {\r\n    var result;\r\n    var axInd;\r\n    for (axInd = 0; axInd < valueAxesOptions.length; axInd++) {\r\n        if (valueAxesOptions[axInd].name === axisName) {\r\n            result = valueAxesOptions[axInd];\r\n            result.priority = axInd;\r\n            break\r\n        }\r\n    }\r\n    if (!result) {\r\n        for (axInd = 0; axInd < valueAxes.length; axInd++) {\r\n            if (valueAxes[axInd].name === axisName) {\r\n                result = valueAxes[axInd].getOptions();\r\n                result.priority = valueAxes[axInd].priority;\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction findAxis(paneName, axisName, axes) {\r\n    var axis;\r\n    var i;\r\n    for (i = 0; i < axes.length; i++) {\r\n        axis = axes[i];\r\n        if (axis.name === axisName && axis.pane === paneName) {\r\n            return axis\r\n        }\r\n    }\r\n    if (paneName) {\r\n        return findAxis(void 0, axisName, axes)\r\n    }\r\n}\r\n\r\nfunction compareAxes(a, b) {\r\n    return a.priority - b.priority\r\n}\r\n\r\nfunction doesPaneExist(panes, paneName) {\r\n    var found = false;\r\n    (0, _iterator.each)(panes, function(_, pane) {\r\n        if (pane.name === paneName) {\r\n            found = true;\r\n            return false\r\n        }\r\n    });\r\n    return found\r\n}\r\nvar prepareSegmentRectPoints = function(left, top, width, height, borderOptions) {\r\n    var maxSW = ~~((width < height ? width : height) / 2);\r\n    var sw = borderOptions.width || 0;\r\n    var newSW = sw < maxSW ? sw : maxSW;\r\n    left += newSW / 2;\r\n    top += newSW / 2;\r\n    width -= newSW;\r\n    height -= newSW;\r\n    var right = left + width;\r\n    var bottom = top + height;\r\n    var points = [];\r\n    var segments = [];\r\n    var segmentSequence;\r\n    var visiblyOpt = 0;\r\n    var prevSegmentVisibility = 0;\r\n    var allSegment = {\r\n        top: [\r\n            [left, top],\r\n            [right, top]\r\n        ],\r\n        right: [\r\n            [right, top],\r\n            [right, bottom]\r\n        ],\r\n        bottom: [\r\n            [right, bottom],\r\n            [left, bottom]\r\n        ],\r\n        left: [\r\n            [left, bottom],\r\n            [left, top]\r\n        ]\r\n    };\r\n    (0, _iterator.each)(allSegment, function(seg) {\r\n        var visibility = !!borderOptions[seg];\r\n        visiblyOpt = 2 * visiblyOpt + ~~visibility\r\n    });\r\n    switch (visiblyOpt) {\r\n        case 13:\r\n        case 9:\r\n            segmentSequence = [\"left\", \"top\", \"right\", \"bottom\"];\r\n            break;\r\n        case 11:\r\n            segmentSequence = [\"bottom\", \"left\", \"top\", \"right\"];\r\n            break;\r\n        default:\r\n            segmentSequence = [\"top\", \"right\", \"bottom\", \"left\"]\r\n    }(0, _iterator.each)(segmentSequence, function(_, seg) {\r\n        var segmentVisibility = !!borderOptions[seg];\r\n        if (!prevSegmentVisibility && segments.length) {\r\n            points.push(segments);\r\n            segments = []\r\n        }\r\n        if (segmentVisibility) {\r\n            (0, _iterator.each)(allSegment[seg].slice(prevSegmentVisibility), function(_, segment) {\r\n                segments = segments.concat(segment)\r\n            })\r\n        }\r\n        prevSegmentVisibility = ~~segmentVisibility\r\n    });\r\n    segments.length && points.push(segments);\r\n    1 === points.length && (points = points[0]);\r\n    return {\r\n        points: points,\r\n        pathType: 15 === visiblyOpt ? \"area\" : \"line\"\r\n    }\r\n};\r\n\r\nfunction accumulate(field, src1, src2, auxSpacing) {\r\n    var val1 = src1[field] || 0;\r\n    var val2 = src2[field] || 0;\r\n    return val1 + val2 + (val1 && val2 ? auxSpacing : 0)\r\n}\r\n\r\nfunction pickMax(field, src1, src2) {\r\n    return pickMaxValue(src1[field], src2[field])\r\n}\r\n\r\nfunction pickMaxValue(val1, val2) {\r\n    return Math.max(val1 || 0, val2 || 0)\r\n}\r\n\r\nfunction getAxisMargins(axis) {\r\n    return axis.getMargins()\r\n}\r\n\r\nfunction getHorizontalAxesMargins(axes, getMarginsFunc) {\r\n    return axes.reduce(function(margins, axis) {\r\n        var axisMargins = getMarginsFunc(axis);\r\n        var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\r\n        var spacing = axis.getMultipleAxesSpacing();\r\n        paneMargins.top = accumulate(\"top\", paneMargins, axisMargins, spacing);\r\n        paneMargins.bottom = accumulate(\"bottom\", paneMargins, axisMargins, spacing);\r\n        paneMargins.left = pickMax(\"left\", paneMargins, axisMargins);\r\n        paneMargins.right = pickMax(\"right\", paneMargins, axisMargins);\r\n        margins.top = pickMax(\"top\", paneMargins, margins);\r\n        margins.bottom = pickMax(\"bottom\", paneMargins, margins);\r\n        margins.left = pickMax(\"left\", paneMargins, margins);\r\n        margins.right = pickMax(\"right\", paneMargins, margins);\r\n        return margins\r\n    }, {\r\n        panes: {}\r\n    })\r\n}\r\n\r\nfunction getVerticalAxesMargins(axes) {\r\n    return axes.reduce(function(margins, axis) {\r\n        var axisMargins = axis.getMargins();\r\n        var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\r\n        var spacing = axis.getMultipleAxesSpacing();\r\n        paneMargins.top = pickMax(\"top\", paneMargins, axisMargins);\r\n        paneMargins.bottom = pickMax(\"bottom\", paneMargins, axisMargins);\r\n        paneMargins.left = accumulate(\"left\", paneMargins, axisMargins, spacing);\r\n        paneMargins.right = accumulate(\"right\", paneMargins, axisMargins, spacing);\r\n        margins.top = pickMax(\"top\", paneMargins, margins);\r\n        margins.bottom = pickMax(\"bottom\", paneMargins, margins);\r\n        margins.left = pickMax(\"left\", paneMargins, margins);\r\n        margins.right = pickMax(\"right\", paneMargins, margins);\r\n        return margins\r\n    }, {\r\n        panes: {}\r\n    })\r\n}\r\n\r\nfunction performActionOnAxes(axes, action, actionArgument1, actionArgument2, actionArgument3) {\r\n    axes.forEach(function(axis) {\r\n        axis[action](actionArgument1 && actionArgument1[axis.pane], actionArgument2 && actionArgument2[axis.pane] || actionArgument2, actionArgument3)\r\n    })\r\n}\r\n\r\nfunction shrinkCanvases(isRotated, canvases, sizes, verticalMargins, horizontalMargins) {\r\n    function getMargin(side, margins, pane) {\r\n        var m = (isRotated ? [\"left\", \"right\"] : [\"top\", \"bottom\"]).indexOf(side) === -1 ? margins : margins.panes[pane] || {};\r\n        return m[side]\r\n    }\r\n\r\n    function getMaxMargin(side, margins1, margins2, pane) {\r\n        return pickMaxValue(getMargin(side, margins1, pane), getMargin(side, margins2, pane))\r\n    }\r\n    var getOriginalField = function(field) {\r\n        return \"original\".concat(field[0].toUpperCase()).concat(field.slice(1))\r\n    };\r\n\r\n    function shrink(canvases, paneNames, sizeField, startMargin, endMargin, oppositeMargins) {\r\n        paneNames = paneNames.sort(function(p1, p2) {\r\n            return canvases[p2][startMargin] - canvases[p1][startMargin]\r\n        });\r\n        paneNames.forEach(function(pane) {\r\n            var canvas = canvases[pane];\r\n            oppositeMargins.forEach(function(margin) {\r\n                canvas[margin] = canvas[getOriginalField(margin)] + getMaxMargin(margin, verticalMargins, horizontalMargins, pane)\r\n            })\r\n        });\r\n        var firstPane = canvases[paneNames[0]];\r\n        var emptySpace = paneNames.reduce(function(space, paneName) {\r\n            space -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, paneName) + getMaxMargin(endMargin, verticalMargins, horizontalMargins, paneName);\r\n            return space\r\n        }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - canvases[paneNames[paneNames.length - 1]][getOriginalField(startMargin)]) - _utils.PANE_PADDING * (paneNames.length - 1);\r\n        var totalCustomSpace = Object.keys(sizes).reduce(function(prev, key) {\r\n            return prev + (sizes[key].unit ? sizes[key].height : 0)\r\n        }, 0);\r\n        emptySpace -= totalCustomSpace;\r\n        paneNames.reduce(function(offset, pane) {\r\n            var canvas = canvases[pane];\r\n            var paneSize = sizes[pane];\r\n            offset -= getMaxMargin(endMargin, verticalMargins, horizontalMargins, pane);\r\n            canvas[endMargin] = firstPane[sizeField] - offset;\r\n            offset -= paneSize.unit ? paneSize.height : Math.floor(emptySpace * paneSize.height);\r\n            canvas[startMargin] = offset;\r\n            offset -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, pane) + _utils.PANE_PADDING;\r\n            return offset\r\n        }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - (emptySpace < 0 ? emptySpace : 0))\r\n    }\r\n    var paneNames = Object.keys(canvases);\r\n    if (!isRotated) {\r\n        shrink(canvases, paneNames, \"height\", \"top\", \"bottom\", [\"left\", \"right\"])\r\n    } else {\r\n        shrink(canvases, paneNames, \"width\", \"left\", \"right\", [\"top\", \"bottom\"])\r\n    }\r\n    return canvases\r\n}\r\n\r\nfunction drawAxesWithTicks(axes, condition, canvases, panesBorderOptions) {\r\n    if (condition) {\r\n        performActionOnAxes(axes, \"createTicks\", canvases);\r\n        _multi_axes_synchronizer2.default.synchronize(axes)\r\n    }\r\n    performActionOnAxes(axes, \"draw\", !condition && canvases, panesBorderOptions)\r\n}\r\n\r\nfunction shiftAxis(side1, side2) {\r\n    var shifts = {};\r\n    return function(axis) {\r\n        var shift = shifts[axis.pane] = shifts[axis.pane] || {\r\n            top: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n            right: 0\r\n        };\r\n        var spacing = axis.getMultipleAxesSpacing();\r\n        var margins = axis.getMargins();\r\n        axis.shift(shift);\r\n        shift[side1] = accumulate(side1, shift, margins, spacing);\r\n        shift[side2] = accumulate(side2, shift, margins, spacing)\r\n    }\r\n}\r\n\r\nfunction getCommonSize(side, margins) {\r\n    var size = 0;\r\n    var pane;\r\n    var paneMargins;\r\n    for (pane in margins.panes) {\r\n        paneMargins = margins.panes[pane];\r\n        size += \"height\" === side ? paneMargins.top + paneMargins.bottom : paneMargins.left + paneMargins.right\r\n    }\r\n    return size\r\n}\r\n\r\nfunction checkUsedSpace(sizeShortage, side, axes, getMarginFunc) {\r\n    var size = 0;\r\n    if (sizeShortage[side] > 0) {\r\n        size = getCommonSize(side, getMarginFunc(axes, getAxisMargins));\r\n        performActionOnAxes(axes, \"hideTitle\");\r\n        sizeShortage[side] -= size - getCommonSize(side, getMarginFunc(axes, getAxisMargins))\r\n    }\r\n    if (sizeShortage[side] > 0) {\r\n        performActionOnAxes(axes, \"hideOuterElements\")\r\n    }\r\n}\r\n\r\nfunction axisAnimationEnabled(drawOptions, pointsToAnimation) {\r\n    var pointsCount = pointsToAnimation.reduce(function(sum, count) {\r\n        return sum + count\r\n    }, 0) / pointsToAnimation.length;\r\n    return drawOptions.animate && pointsCount <= drawOptions.animationPointsLimit\r\n}\r\nvar dxChart = _advanced_chart.AdvancedChart.inherit({\r\n    _themeSection: \"chart\",\r\n    _fontFields: [\"crosshair.label.font\"],\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase.apply(this, arguments);\r\n        (0, _extend2.extend)(this._deprecatedOptions, {\r\n            useAggregation: {\r\n                since: \"18.1\",\r\n                message: \"Use the 'commonSeriesSettings.aggregation.enabled' or 'series.aggregation.enabled' option instead\"\r\n            },\r\n            \"argumentAxis.min\": {\r\n                since: \"18.2\",\r\n                message: \"Use the 'argumentAxis.visualRange' option instead\"\r\n            },\r\n            \"argumentAxis.max\": {\r\n                since: \"18.2\",\r\n                message: \"Use the 'argumentAxis.visualRange' option instead\"\r\n            },\r\n            \"valueAxis.min\": {\r\n                since: \"18.2\",\r\n                message: \"Use the 'valueAxis.visualRange' option instead\"\r\n            },\r\n            \"valueAxis.max\": {\r\n                since: \"18.2\",\r\n                message: \"Use the 'valueAxis.visualRange' option instead\"\r\n            },\r\n            zoomingMode: {\r\n                since: \"18.2\",\r\n                message: \"Use the 'zoomAndPan' option instead\"\r\n            },\r\n            scrollingMode: {\r\n                since: \"18.2\",\r\n                message: \"Use the 'zoomAndPan' option instead\"\r\n            }\r\n        })\r\n    },\r\n    _initCore: function() {\r\n        this.paneAxis = {};\r\n        this.callBase()\r\n    },\r\n    _correctAxes: function() {\r\n        this._correctValueAxes(true)\r\n    },\r\n    _getExtraOptions: _common.noop,\r\n    _createPanes: function() {\r\n        var that = this;\r\n        var panes = that.option(\"panes\");\r\n        var panesNameCounter = 0;\r\n        var defaultPane;\r\n        if (!panes || _isArray(panes) && !panes.length) {\r\n            panes = DEFAULT_PANES\r\n        }\r\n        that.callBase();\r\n        defaultPane = that.option(\"defaultPane\");\r\n        panes = (0, _extend2.extend)(true, [], _isArray(panes) ? panes : [panes]);\r\n        (0, _iterator.each)(panes, function(_, pane) {\r\n            pane.name = !(0, _type.isDefined)(pane.name) ? DEFAULT_PANE_NAME + panesNameCounter++ : pane.name\r\n        });\r\n        if ((0, _type.isDefined)(defaultPane)) {\r\n            if (!doesPaneExist(panes, defaultPane)) {\r\n                that._incidentOccurred(\"W2101\", [defaultPane]);\r\n                defaultPane = panes[panes.length - 1].name\r\n            }\r\n        } else {\r\n            defaultPane = panes[panes.length - 1].name\r\n        }\r\n        that.defaultPane = defaultPane;\r\n        panes = that._isRotated() ? panes.reverse() : panes;\r\n        return panes\r\n    },\r\n    _getAxisRenderingOptions: function() {\r\n        return {\r\n            axisType: \"xyAxes\",\r\n            drawingType: \"linear\"\r\n        }\r\n    },\r\n    _prepareAxisOptions: function(typeSelector, userOptions, rotated) {\r\n        return {\r\n            isHorizontal: \"argumentAxis\" === typeSelector !== rotated,\r\n            containerColor: this._themeManager.getOptions(\"containerBackgroundColor\")\r\n        }\r\n    },\r\n    _checkPaneName: function(seriesTheme) {\r\n        var paneList = (0, _utils.map)(this.panes, function(pane) {\r\n            return pane.name\r\n        });\r\n        seriesTheme.pane = seriesTheme.pane || this.defaultPane;\r\n        return (0, _array.inArray)(seriesTheme.pane, paneList) !== -1\r\n    },\r\n    _getValueAxis: function(paneName, axisName) {\r\n        var that = this;\r\n        var valueAxes = that._valueAxes;\r\n        var valueAxisOptions = that.option(\"valueAxis\") || {};\r\n        var valueAxesOptions = _isArray(valueAxisOptions) ? valueAxisOptions : [valueAxisOptions];\r\n        var rotated = that._isRotated();\r\n        var crosshairMargins = that._getCrosshairMargins();\r\n        var axisOptions;\r\n        var axis;\r\n        axisName = axisName || getFirstAxisNameForPane(valueAxes, paneName, that.defaultPane);\r\n        axis = findAxis(paneName, axisName, valueAxes);\r\n        if (!axis) {\r\n            axisOptions = findAxisOptions(valueAxes, valueAxesOptions, axisName);\r\n            if (!axisOptions) {\r\n                that._incidentOccurred(\"W2102\", [axisName]);\r\n                axisOptions = {\r\n                    name: axisName,\r\n                    priority: valueAxes.length\r\n                }\r\n            }\r\n            axis = that._createAxis(false, that._populateAxesOptions(\"valueAxis\", axisOptions, {\r\n                pane: paneName,\r\n                name: axisName,\r\n                optionPath: _isArray(valueAxisOptions) ? \"valueAxis[\".concat(axisOptions.priority, \"]\") : \"valueAxis\",\r\n                crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\r\n            }, rotated));\r\n            axis.applyVisualRangeSetter(that._getVisualRangeSetter());\r\n            valueAxes.push(axis)\r\n        }\r\n        axis.setPane(paneName);\r\n        return axis\r\n    },\r\n    _correctValueAxes: function(needHideGrids) {\r\n        var that = this;\r\n        var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\r\n        var valueAxes = that._valueAxes;\r\n        var paneWithAxis = {};\r\n        that.series.forEach(function(series) {\r\n            var axis = series.getValueAxis();\r\n            paneWithAxis[axis.pane] = true\r\n        });\r\n        that.panes.forEach(function(pane) {\r\n            var paneName = pane.name;\r\n            if (!paneWithAxis[paneName]) {\r\n                that._getValueAxis(paneName)\r\n            }\r\n            if (needHideGrids && synchronizeMultiAxes) {\r\n                hideGridsOnNonFirstValueAxisForPane(valueAxes.filter(function(axis) {\r\n                    return axis.pane === paneName\r\n                }))\r\n            }\r\n        });\r\n        that._valueAxes = valueAxes.filter(function(axis) {\r\n            if (!axis.pane) {\r\n                axis.setPane(that.defaultPane)\r\n            }\r\n            return doesPaneExist(that.panes, axis.pane)\r\n        }).sort(compareAxes);\r\n        var defaultAxis = this.getValueAxis();\r\n        that._valueAxes.forEach(function(axis) {\r\n            var optionPath = axis.getOptions().optionPath;\r\n            if (optionPath) {\r\n                var axesWithSamePath = that._valueAxes.filter(function(a) {\r\n                    return a.getOptions().optionPath === optionPath\r\n                });\r\n                if (axesWithSamePath.length > 1) {\r\n                    if (axesWithSamePath.some(function(a) {\r\n                            return a === defaultAxis\r\n                        })) {\r\n                        axesWithSamePath.forEach(function(a) {\r\n                            if (a !== defaultAxis) {\r\n                                a.getOptions().optionPath = null\r\n                            }\r\n                        })\r\n                    } else {\r\n                        axesWithSamePath.forEach(function(a, i) {\r\n                            if (0 !== i) {\r\n                                a.getOptions().optionPath = null\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _getSeriesForPane: function(paneName) {\r\n        var paneSeries = [];\r\n        (0, _iterator.each)(this.series, function(_, oneSeries) {\r\n            if (oneSeries.pane === paneName) {\r\n                paneSeries.push(oneSeries)\r\n            }\r\n        });\r\n        return paneSeries\r\n    },\r\n    _createPanesBorderOptions: function() {\r\n        var commonBorderOptions = this._themeManager.getOptions(\"commonPaneSettings\").border;\r\n        var panesBorderOptions = {};\r\n        this.panes.forEach(function(pane) {\r\n            return panesBorderOptions[pane.name] = (0, _extend2.extend)(true, {}, commonBorderOptions, pane.border)\r\n        });\r\n        return panesBorderOptions\r\n    },\r\n    _createScrollBar: function() {\r\n        var that = this;\r\n        var scrollBarOptions = that._themeManager.getOptions(\"scrollBar\") || {};\r\n        var scrollBarGroup = that._scrollBarGroup;\r\n        if (scrollBarOptions.visible) {\r\n            scrollBarOptions.rotated = that._isRotated();\r\n            that._scrollBar = (that._scrollBar || new _scroll_bar2.default.ScrollBar(that._renderer, scrollBarGroup)).update(scrollBarOptions)\r\n        } else {\r\n            scrollBarGroup.linkRemove();\r\n            that._scrollBar && that._scrollBar.dispose();\r\n            that._scrollBar = null\r\n        }\r\n    },\r\n    _prepareToRender: function(drawOptions) {\r\n        var panesBorderOptions = this._createPanesBorderOptions();\r\n        this._createPanesBackground();\r\n        this._appendAxesGroups();\r\n        this._adjustViewport();\r\n        return panesBorderOptions\r\n    },\r\n    _adjustViewport: function() {\r\n        var that = this;\r\n        var series = that._getVisibleSeries();\r\n        var argumentAxis = that.getArgumentAxis();\r\n        var useAggregation = series.some(function(s) {\r\n            return s.useAggregation()\r\n        });\r\n        var adjustOnZoom = that._themeManager.getOptions(\"adjustOnZoom\");\r\n        var alignToBounds = !argumentAxis.dataVisualRangeIsReduced();\r\n        if (!useAggregation && !adjustOnZoom) {\r\n            return\r\n        }\r\n        that._valueAxes.forEach(function(axis) {\r\n            return axis.adjust(alignToBounds)\r\n        })\r\n    },\r\n    _recreateSizeDependentObjects: function(isCanvasChanged) {\r\n        var that = this;\r\n        var series = that._getVisibleSeries();\r\n        var useAggregation = series.some(function(s) {\r\n            return s.useAggregation()\r\n        });\r\n        var zoomChanged = that._isZooming();\r\n        if (!useAggregation) {\r\n            return\r\n        }\r\n        that._argumentAxes.forEach(function(axis) {\r\n            axis.updateCanvas(that._canvas)\r\n        });\r\n        series.forEach(function(series) {\r\n            if (series.useAggregation() && (isCanvasChanged || zoomChanged || !series._useAllAggregatedPoints)) {\r\n                series.createPoints()\r\n            }\r\n        });\r\n        that._processSeriesFamilies()\r\n    },\r\n    _isZooming: function() {\r\n        var that = this;\r\n        var argumentAxis = that.getArgumentAxis();\r\n        if (!argumentAxis || !argumentAxis.getTranslator()) {\r\n            return false\r\n        }\r\n        var businessRange = argumentAxis.getTranslator().getBusinessRange();\r\n        var zoomRange = argumentAxis.getViewport();\r\n        var min = zoomRange ? zoomRange.min : 0;\r\n        var max = zoomRange ? zoomRange.max : 0;\r\n        if (\"logarithmic\" === businessRange.axisType) {\r\n            min = (0, _utils.getLog)(min, businessRange.base);\r\n            max = (0, _utils.getLog)(max, businessRange.base)\r\n        }\r\n        var viewportDistance = \"discrete\" === businessRange.axisType ? (0, _utils.getCategoriesInfo)(businessRange.categories, min, max).categories.length : Math.abs(max - min);\r\n        var precision = (0, _math.getPrecision)(viewportDistance);\r\n        precision = precision > 1 ? Math.pow(10, precision - 2) : 1;\r\n        var zoomChanged = Math.round((that._zoomLength - viewportDistance) * precision) / precision !== 0;\r\n        that._zoomLength = viewportDistance;\r\n        return zoomChanged\r\n    },\r\n    _handleSeriesDataUpdated: function() {\r\n        var that = this;\r\n        var viewport = new _range2.default.Range;\r\n        that.series.forEach(function(s) {\r\n            viewport.addRange(s.getArgumentRange())\r\n        });\r\n        that._argumentAxes.forEach(function(axis) {\r\n            axis.updateCanvas(that._canvas);\r\n            axis.setBusinessRange(viewport, that._axesReinitialized)\r\n        });\r\n        that.callBase()\r\n    },\r\n    _isLegendInside: function() {\r\n        return this._legend && \"inside\" === this._legend.getPosition()\r\n    },\r\n    _isRotated: function() {\r\n        return this._themeManager.getOptions(\"rotated\")\r\n    },\r\n    _getLayoutTargets: function() {\r\n        return this.panes\r\n    },\r\n    _applyClipRects: function(panesBorderOptions) {\r\n        var that = this;\r\n        var canvasClipRectID = that._getCanvasClipRectID();\r\n        var i;\r\n        that._drawPanesBorders(panesBorderOptions);\r\n        that._createClipRectsForPanes();\r\n        for (i = 0; i < that._argumentAxes.length; i++) {\r\n            that._argumentAxes[i].applyClipRects(that._getElementsClipRectID(that._argumentAxes[i].pane), canvasClipRectID)\r\n        }\r\n        for (i = 0; i < that._valueAxes.length; i++) {\r\n            that._valueAxes[i].applyClipRects(that._getElementsClipRectID(that._valueAxes[i].pane), canvasClipRectID)\r\n        }\r\n        that._fillPanesBackground()\r\n    },\r\n    _updateLegendPosition: function(drawOptions, legendHasInsidePosition) {\r\n        var that = this;\r\n        if (drawOptions.drawLegend && that._legend && legendHasInsidePosition) {\r\n            var panes = that.panes;\r\n            var newCanvas = (0, _extend2.extend)({}, panes[0].canvas);\r\n            var layoutManager = new _layout_manager2.default.LayoutManager;\r\n            newCanvas.right = panes[panes.length - 1].canvas.right;\r\n            newCanvas.bottom = panes[panes.length - 1].canvas.bottom;\r\n            layoutManager.setOptions({\r\n                width: 0,\r\n                height: 0\r\n            });\r\n            layoutManager.layoutElements([that._legend], newCanvas, _common.noop, [{\r\n                canvas: newCanvas\r\n            }], void 0)\r\n        }\r\n    },\r\n    _allowLegendInsidePosition: function() {\r\n        return true\r\n    },\r\n    _applyExtraSettings: function(series) {\r\n        var that = this;\r\n        var paneIndex = that._getPaneIndex(series.pane);\r\n        var panesClipRects = that._panesClipRects;\r\n        var wideClipRect = panesClipRects.wide[paneIndex];\r\n        series.setClippingParams(panesClipRects.base[paneIndex].id, wideClipRect && wideClipRect.id, that._getPaneBorderVisibility(paneIndex))\r\n    },\r\n    _updatePanesCanvases: function(drawOptions) {\r\n        if (!drawOptions.recreateCanvas) {\r\n            return\r\n        }(0, _utils.updatePanesCanvases)(this.panes, this._canvas, this._isRotated())\r\n    },\r\n    _normalizePanesHeight: function() {\r\n        (0, _utils.normalizePanesHeight)(this.panes)\r\n    },\r\n    _renderScaleBreaks: function() {\r\n        this._valueAxes.concat(this._argumentAxes).forEach(function(axis) {\r\n            axis.drawScaleBreaks()\r\n        })\r\n    },\r\n    _getArgFilter: function() {\r\n        return (0, _range_data_calculator.getViewPortFilter)(this.getArgumentAxis().visualRange() || {})\r\n    },\r\n    _applyPointMarkersAutoHiding: function() {\r\n        var that = this;\r\n        if (!that._themeManager.getOptions(\"autoHidePointMarkers\")) {\r\n            that.series.forEach(function(s) {\r\n                return s.autoHidePointMarkers = false\r\n            });\r\n            return\r\n        }\r\n        that.panes.forEach(function(pane) {\r\n            var series = that.series.filter(function(s) {\r\n                return s.pane === pane.name && s.usePointsToDefineAutoHiding()\r\n            });\r\n            var argAxis = that.getArgumentAxis();\r\n            var argVisualRange = argAxis.visualRange();\r\n            var argTranslator = argAxis.getTranslator();\r\n            var argAxisType = argAxis.getOptions().type;\r\n            var argViewPortFilter = (0, _range_data_calculator.getViewPortFilter)(argVisualRange || {});\r\n            var points = [];\r\n            var overloadedSeries = {};\r\n            series.forEach(function(s) {\r\n                var valAxis = s.getValueAxis();\r\n                var valVisualRange = valAxis.visualRange();\r\n                var valTranslator = valAxis.getTranslator();\r\n                var seriesIndex = that.series.indexOf(s);\r\n                var valViewPortFilter = (0, _range_data_calculator.getViewPortFilter)(valVisualRange || {});\r\n                overloadedSeries[seriesIndex] = {};\r\n                series.forEach(function(sr) {\r\n                    return overloadedSeries[seriesIndex][that.series.indexOf(sr)] = 0\r\n                });\r\n                var seriesPoints = [];\r\n                s.getPoints().filter(function(p) {\r\n                    return p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)))\r\n                }).forEach(function(p) {\r\n                    var tp = {\r\n                        seriesIndex: seriesIndex,\r\n                        argument: p.argument,\r\n                        value: p.getMaxValue(true),\r\n                        size: p.bubbleSize || p.getOptions().size\r\n                    };\r\n                    if (p.getMinValue(true) !== p.getMaxValue(true)) {\r\n                        var mp = (0, _extend2.extend)({}, tp);\r\n                        mp.value = p.getMinValue(true);\r\n                        mp.x = argTranslator.to(mp.argument, 1);\r\n                        mp.y = valTranslator.to(mp.value, 1);\r\n                        seriesPoints.push(mp)\r\n                    }\r\n                    tp.x = argTranslator.to(tp.argument, 1);\r\n                    tp.y = valTranslator.to(tp.value, 1);\r\n                    seriesPoints.push(tp)\r\n                });\r\n                overloadedSeries[seriesIndex].pointsCount = seriesPoints.length;\r\n                overloadedSeries[seriesIndex].total = 0;\r\n                overloadedSeries[seriesIndex].continuousSeries = 0;\r\n                points = points.concat(seriesPoints)\r\n            });\r\n            var sortingCallback = \"discrete\" === argAxisType ? function(p1, p2) {\r\n                return argVisualRange.categories.indexOf(p1.argument) - argVisualRange.categories.indexOf(p2.argument)\r\n            } : function(p1, p2) {\r\n                return p1.argument - p2.argument\r\n            };\r\n            points.sort(sortingCallback);\r\n            var isContinuousSeries = false;\r\n            for (var i = 0; i < points.length - 1; i++) {\r\n                var curPoint = points[i];\r\n                var size = curPoint.size;\r\n                if ((0, _type.isDefined)(curPoint.x) && (0, _type.isDefined)(curPoint.y)) {\r\n                    for (var j = i + 1; j < points.length; j++) {\r\n                        var nextPoint = points[j];\r\n                        var next_x = (0, _type.isDefined)(nextPoint) ? nextPoint.x : null;\r\n                        var next_y = (0, _type.isDefined)(nextPoint) ? nextPoint.y : null;\r\n                        if (!(0, _type.isDefined)(next_x) || Math.abs(curPoint.x - next_x) >= size) {\r\n                            isContinuousSeries &= j !== i + 1;\r\n                            break\r\n                        } else {\r\n                            var distance = (0, _type.isDefined)(next_x) && (0, _type.isDefined)(next_y) && Math.sqrt(Math.pow(curPoint.x - next_x, 2) + Math.pow(curPoint.y - next_y, 2));\r\n                            if (distance && distance < size) {\r\n                                overloadedSeries[curPoint.seriesIndex][nextPoint.seriesIndex]++;\r\n                                overloadedSeries[curPoint.seriesIndex].total++;\r\n                                if (!isContinuousSeries) {\r\n                                    overloadedSeries[curPoint.seriesIndex].continuousSeries++;\r\n                                    isContinuousSeries = true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            series.forEach(function(s) {\r\n                var seriesIndex = that.series.indexOf(s);\r\n                s.autoHidePointMarkers = false;\r\n                var tickCount = argAxis.getTicksValues().majorTicksValues.length;\r\n                if (s.autoHidePointMarkersEnabled() && (\"discrete\" === argAxisType || overloadedSeries[seriesIndex].pointsCount > tickCount)) {\r\n                    for (var index in overloadedSeries[seriesIndex]) {\r\n                        var _i = parseInt(index);\r\n                        if (isNaN(_i) || overloadedSeries[seriesIndex].total / overloadedSeries[seriesIndex].continuousSeries < 3) {\r\n                            continue\r\n                        }\r\n                        if (_i === seriesIndex) {\r\n                            if (2 * overloadedSeries[_i][_i] >= overloadedSeries[_i].pointsCount) {\r\n                                s.autoHidePointMarkers = true;\r\n                                break\r\n                            }\r\n                        } else {\r\n                            if (overloadedSeries[seriesIndex].total >= overloadedSeries[seriesIndex].pointsCount) {\r\n                                s.autoHidePointMarkers = true;\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    },\r\n    _renderAxes: function(drawOptions, panesBorderOptions) {\r\n        function calculateTitlesWidth(axes) {\r\n            return axes.map(function(axis) {\r\n                if (!axis.getTitle) {\r\n                    return 0\r\n                }\r\n                var title = axis.getTitle();\r\n                return title ? title.bBox.width : 0\r\n            })\r\n        }\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\r\n        var extendedArgAxes = (that._scrollBar ? [that._scrollBar] : []).concat(that._argumentAxes);\r\n        var verticalAxes = rotated ? extendedArgAxes : that._valueAxes;\r\n        var horizontalAxes = rotated ? that._valueAxes : extendedArgAxes;\r\n        var allAxes = verticalAxes.concat(horizontalAxes);\r\n        that._normalizePanesHeight();\r\n        that._updatePanesCanvases(drawOptions);\r\n        var panesCanvases = that.panes.reduce(function(canvases, pane) {\r\n            canvases[pane.name] = (0, _extend2.extend)({}, pane.canvas);\r\n            return canvases\r\n        }, {});\r\n        var paneSizes = that.panes.reduce(function(sizes, pane) {\r\n            sizes[pane.name] = {\r\n                height: pane.height,\r\n                unit: pane.unit\r\n            };\r\n            return sizes\r\n        }, {});\r\n        var cleanPanesCanvases = (0, _extend2.extend)(true, {}, panesCanvases);\r\n        if (!drawOptions.adjustAxes) {\r\n            drawAxesWithTicks(verticalAxes, !rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\r\n            drawAxesWithTicks(horizontalAxes, rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\r\n            performActionOnAxes(allAxes, \"prepareAnimation\");\r\n            that._renderScaleBreaks();\r\n            return false\r\n        }\r\n        if (that._scrollBar) {\r\n            that._scrollBar.setPane(that.panes)\r\n        }\r\n        var vAxesMargins = {\r\n            panes: {}\r\n        };\r\n        var hAxesMargins = getHorizontalAxesMargins(horizontalAxes, function(axis) {\r\n            return axis.estimateMargins(panesCanvases[axis.pane])\r\n        });\r\n        panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\r\n        drawAxesWithTicks(verticalAxes, !rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\r\n        vAxesMargins = getVerticalAxesMargins(verticalAxes);\r\n        panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\r\n        drawAxesWithTicks(horizontalAxes, rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\r\n        hAxesMargins = getHorizontalAxesMargins(horizontalAxes, getAxisMargins);\r\n        panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\r\n        var oldTitlesWidth = calculateTitlesWidth(verticalAxes);\r\n        var visibleSeries = that._getVisibleSeries();\r\n        var pointsToAnimation = that._getPointsToAnimation(visibleSeries);\r\n        performActionOnAxes(allAxes, \"updateSize\", panesCanvases, axisAnimationEnabled(drawOptions, pointsToAnimation));\r\n        horizontalAxes.forEach(shiftAxis(\"top\", \"bottom\"));\r\n        verticalAxes.forEach(shiftAxis(\"left\", \"right\"));\r\n        that._renderScaleBreaks();\r\n        that.panes.forEach(function(pane) {\r\n            (0, _extend2.extend)(pane.canvas, panesCanvases[pane.name])\r\n        });\r\n        that._valueAxes.forEach(function(axis) {\r\n            axis.setInitRange()\r\n        });\r\n        verticalAxes.forEach(function(axis, i) {\r\n            if (axis.hasWrap && axis.hasWrap()) {\r\n                var title = axis.getTitle();\r\n                var newTitleWidth = title ? title.bBox.width : 0;\r\n                var offset = newTitleWidth - oldTitlesWidth[i];\r\n                if (\"right\" === axis.getOptions().position) {\r\n                    vAxesMargins.right += offset\r\n                } else {\r\n                    vAxesMargins.left += offset;\r\n                    that.panes.forEach(function(_ref) {\r\n                        var name = _ref.name;\r\n                        return vAxesMargins.panes[name].left += offset\r\n                    })\r\n                }\r\n                panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\r\n                performActionOnAxes(allAxes, \"updateSize\", panesCanvases, false, false);\r\n                oldTitlesWidth = calculateTitlesWidth(verticalAxes)\r\n            }\r\n        });\r\n        return cleanPanesCanvases\r\n    },\r\n    checkForMoreSpaceForPanesCanvas: function() {\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        var panesAreCustomSized = that.panes.filter(function(p) {\r\n            return p.unit\r\n        }).length === that.panes.length;\r\n        var needSpace = false;\r\n        if (panesAreCustomSized) {\r\n            var needHorizontalSpace = 0;\r\n            var needVerticalSpace = 0;\r\n            if (rotated) {\r\n                var argAxisRightMargin = that.getArgumentAxis().getMargins().right;\r\n                var rightPanesIndent = Math.min.apply(Math, that.panes.map(function(p) {\r\n                    return p.canvas.right\r\n                }));\r\n                needHorizontalSpace = that._canvas.right + argAxisRightMargin - rightPanesIndent\r\n            } else {\r\n                var argAxisBottomMargin = that.getArgumentAxis().getMargins().bottom;\r\n                var bottomPanesIndent = Math.min.apply(Math, that.panes.map(function(p) {\r\n                    return p.canvas.bottom\r\n                }));\r\n                needVerticalSpace = that._canvas.bottom + argAxisBottomMargin - bottomPanesIndent\r\n            }\r\n            needSpace = needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\r\n                width: needHorizontalSpace,\r\n                height: needVerticalSpace\r\n            } : false;\r\n            if (0 !== needVerticalSpace) {\r\n                var realSize = that.getSize();\r\n                var customSize = that.option(\"size\");\r\n                var container = that._$element[0];\r\n                var containerHasStyledHeight = !!container.style.height || (0, _utils.checkElementHasPropertyFromStyleSheet)(container, \"height\");\r\n                if (!rotated && !(customSize && customSize.height) && !containerHasStyledHeight) {\r\n                    that._forceResize(realSize.width, realSize.height + needVerticalSpace);\r\n                    needSpace = false\r\n                }\r\n            }\r\n        } else {\r\n            needSpace = that.layoutManager.needMoreSpaceForPanesCanvas(that._getLayoutTargets(), rotated, function(pane) {\r\n                return {\r\n                    width: rotated && !!pane.unit,\r\n                    height: !rotated && !!pane.unit\r\n                }\r\n            })\r\n        }\r\n        return needSpace\r\n    },\r\n    _forceResize: function(width, height) {\r\n        this._renderer.resize(width, height);\r\n        this._updateSize();\r\n        this._setContentSize();\r\n        this._preserveOriginalCanvas();\r\n        this._updateCanvasClipRect(this._canvas)\r\n    },\r\n    _shrinkAxes: function(sizeShortage, panesCanvases) {\r\n        if (!sizeShortage || !panesCanvases) {\r\n            return\r\n        }\r\n        this._renderer.stopAllAnimations(true);\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        var extendedArgAxes = (that._scrollBar ? [that._scrollBar] : []).concat(that._argumentAxes);\r\n        var verticalAxes = rotated ? extendedArgAxes : that._valueAxes;\r\n        var horizontalAxes = rotated ? that._valueAxes : extendedArgAxes;\r\n        var allAxes = verticalAxes.concat(horizontalAxes);\r\n        if (sizeShortage.width || sizeShortage.height) {\r\n            checkUsedSpace(sizeShortage, \"height\", horizontalAxes, getHorizontalAxesMargins);\r\n            checkUsedSpace(sizeShortage, \"width\", verticalAxes, getVerticalAxesMargins);\r\n            performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\r\n            var paneSizes = that.panes.reduce(function(sizes, pane) {\r\n                sizes[pane.name] = {\r\n                    height: pane.height,\r\n                    unit: pane.unit\r\n                };\r\n                return sizes\r\n            }, {});\r\n            panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, getVerticalAxesMargins(verticalAxes), getHorizontalAxesMargins(horizontalAxes, getAxisMargins));\r\n            performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\r\n            horizontalAxes.forEach(shiftAxis(\"top\", \"bottom\"));\r\n            verticalAxes.forEach(shiftAxis(\"left\", \"right\"));\r\n            that.panes.forEach(function(pane) {\r\n                return (0, _extend2.extend)(pane.canvas, panesCanvases[pane.name])\r\n            })\r\n        }\r\n    },\r\n    _getPanesParameters: function() {\r\n        var that = this;\r\n        var panes = that.panes;\r\n        var i;\r\n        var params = [];\r\n        for (i = 0; i < panes.length; i++) {\r\n            if (that._getPaneBorderVisibility(i)) {\r\n                params.push({\r\n                    coords: panes[i].borderCoords,\r\n                    clipRect: that._panesClipRects.fixed[i]\r\n                })\r\n            }\r\n        }\r\n        return params\r\n    },\r\n    _createCrosshairCursor: function() {\r\n        var that = this;\r\n        var options = that._themeManager.getOptions(\"crosshair\") || {};\r\n        var argumentAxis = that.getArgumentAxis();\r\n        var axes = !that._isRotated() ? [\r\n            [argumentAxis], that._valueAxes\r\n        ] : [that._valueAxes, [argumentAxis]];\r\n        var parameters = {\r\n            canvas: that._getCommonCanvas(),\r\n            panes: that._getPanesParameters(),\r\n            axes: axes\r\n        };\r\n        if (!options || !options.enabled) {\r\n            return\r\n        }\r\n        if (!that._crosshair) {\r\n            that._crosshair = new _crosshair2.default.Crosshair(that._renderer, options, parameters, that._crosshairCursorGroup)\r\n        } else {\r\n            that._crosshair.update(options, parameters)\r\n        }\r\n        that._crosshair.render()\r\n    },\r\n    _getCommonCanvas: function() {\r\n        var i;\r\n        var canvas;\r\n        var commonCanvas;\r\n        var panes = this.panes;\r\n        for (i = 0; i < panes.length; i++) {\r\n            canvas = panes[i].canvas;\r\n            if (!commonCanvas) {\r\n                commonCanvas = (0, _extend2.extend)({}, canvas)\r\n            } else {\r\n                commonCanvas.right = canvas.right;\r\n                commonCanvas.bottom = canvas.bottom\r\n            }\r\n        }\r\n        return commonCanvas\r\n    },\r\n    _createPanesBackground: function() {\r\n        var that = this;\r\n        var defaultBackgroundColor = that._themeManager.getOptions(\"commonPaneSettings\").backgroundColor;\r\n        var backgroundColor;\r\n        var renderer = that._renderer;\r\n        var rect;\r\n        var i;\r\n        var rects = [];\r\n        that._panesBackgroundGroup.clear();\r\n        for (i = 0; i < that.panes.length; i++) {\r\n            backgroundColor = that.panes[i].backgroundColor || defaultBackgroundColor;\r\n            if (!backgroundColor || \"none\" === backgroundColor) {\r\n                rects.push(null);\r\n                continue\r\n            }\r\n            rect = renderer.rect(0, 0, 0, 0).attr({\r\n                fill: backgroundColor,\r\n                \"stroke-width\": 0\r\n            }).append(that._panesBackgroundGroup);\r\n            rects.push(rect)\r\n        }\r\n        that.panesBackground = rects\r\n    },\r\n    _fillPanesBackground: function() {\r\n        var that = this;\r\n        var bc;\r\n        (0, _iterator.each)(that.panes, function(i, pane) {\r\n            bc = pane.borderCoords;\r\n            if (null !== that.panesBackground[i]) {\r\n                that.panesBackground[i].attr({\r\n                    x: bc.left,\r\n                    y: bc.top,\r\n                    width: bc.width,\r\n                    height: bc.height\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _calcPaneBorderCoords: function(pane) {\r\n        var canvas = pane.canvas;\r\n        var bc = pane.borderCoords = pane.borderCoords || {};\r\n        bc.left = canvas.left;\r\n        bc.top = canvas.top;\r\n        bc.right = canvas.width - canvas.right;\r\n        bc.bottom = canvas.height - canvas.bottom;\r\n        bc.width = Math.max(bc.right - bc.left, 0);\r\n        bc.height = Math.max(bc.bottom - bc.top, 0)\r\n    },\r\n    _drawPanesBorders: function(panesBorderOptions) {\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        that._panesBorderGroup.linkRemove().clear();\r\n        (0, _iterator.each)(that.panes, function(i, pane) {\r\n            var bc;\r\n            var borderOptions = panesBorderOptions[pane.name];\r\n            var segmentRectParams;\r\n            var attr = {\r\n                fill: \"none\",\r\n                stroke: borderOptions.color,\r\n                \"stroke-opacity\": borderOptions.opacity,\r\n                \"stroke-width\": borderOptions.width,\r\n                dashStyle: borderOptions.dashStyle,\r\n                \"stroke-linecap\": \"square\"\r\n            };\r\n            that._calcPaneBorderCoords(pane, rotated);\r\n            if (!borderOptions.visible) {\r\n                return\r\n            }\r\n            bc = pane.borderCoords;\r\n            segmentRectParams = prepareSegmentRectPoints(bc.left, bc.top, bc.width, bc.height, borderOptions);\r\n            that._renderer.path(segmentRectParams.points, segmentRectParams.pathType).attr(attr).append(that._panesBorderGroup)\r\n        });\r\n        that._panesBorderGroup.linkAppend()\r\n    },\r\n    _createClipRect: function(clipArray, index, left, top, width, height) {\r\n        var that = this;\r\n        var clipRect = clipArray[index];\r\n        if (!clipRect) {\r\n            clipRect = that._renderer.clipRect(left, top, width, height);\r\n            clipArray[index] = clipRect\r\n        } else {\r\n            clipRect.attr({\r\n                x: left,\r\n                y: top,\r\n                width: width,\r\n                height: height\r\n            })\r\n        }\r\n    },\r\n    _createClipRectsForPanes: function() {\r\n        var that = this;\r\n        var canvas = that._canvas;\r\n        (0, _iterator.each)(that.panes, function(i, pane) {\r\n            var needWideClipRect = false;\r\n            var bc = pane.borderCoords;\r\n            var left = bc.left;\r\n            var top = bc.top;\r\n            var width = bc.width;\r\n            var height = bc.height;\r\n            var panesClipRects = that._panesClipRects;\r\n            that._createClipRect(panesClipRects.fixed, i, left, top, width, height);\r\n            that._createClipRect(panesClipRects.base, i, left, top, width, height);\r\n            (0, _iterator.each)(that.series, function(_, series) {\r\n                if (series.pane === pane.name && (series.isFinancialSeries() || series.areErrorBarsVisible())) {\r\n                    needWideClipRect = true\r\n                }\r\n            });\r\n            if (needWideClipRect) {\r\n                if (that._isRotated()) {\r\n                    top = 0;\r\n                    height = canvas.height\r\n                } else {\r\n                    left = 0;\r\n                    width = canvas.width\r\n                }\r\n                that._createClipRect(panesClipRects.wide, i, left, top, width, height)\r\n            } else {\r\n                panesClipRects.wide[i] = null\r\n            }\r\n        })\r\n    },\r\n    _getPaneBorderVisibility: function(paneIndex) {\r\n        var commonPaneBorderVisible = this._themeManager.getOptions(\"commonPaneSettings\").border.visible;\r\n        var pane = this.panes[paneIndex] || {};\r\n        var paneBorder = pane.border || {};\r\n        return \"visible\" in paneBorder ? paneBorder.visible : commonPaneBorderVisible\r\n    },\r\n    _getCanvasForPane: function(paneName) {\r\n        var panes = this.panes;\r\n        var panesNumber = panes.length;\r\n        var i;\r\n        for (i = 0; i < panesNumber; i++) {\r\n            if (panes[i].name === paneName) {\r\n                return panes[i].canvas\r\n            }\r\n        }\r\n    },\r\n    _getTrackerSettings: function() {\r\n        var that = this;\r\n        var themeManager = that._themeManager;\r\n        return (0, _extend2.extend)(this.callBase(), {\r\n            chart: that,\r\n            rotated: that._isRotated(),\r\n            crosshair: that._getCrosshairOptions().enabled ? that._crosshair : null,\r\n            stickyHovering: themeManager.getOptions(\"stickyHovering\")\r\n        })\r\n    },\r\n    _resolveLabelOverlappingStack: function() {\r\n        var that = this;\r\n        var isRotated = that._isRotated();\r\n        var shiftDirection = isRotated ? function(box, length) {\r\n            return {\r\n                x: box.x - length,\r\n                y: box.y\r\n            }\r\n        } : function(box, length) {\r\n            return {\r\n                x: box.x,\r\n                y: box.y - length\r\n            }\r\n        };\r\n        (0, _iterator.each)(that._getStackPoints(), function(_, stacks) {\r\n            (0, _iterator.each)(stacks, function(_, points) {\r\n                _base_chart.overlapping.resolveLabelOverlappingInOneDirection(points, that._getCommonCanvas(), isRotated, shiftDirection, function(a, b) {\r\n                    var coordPosition = isRotated ? 1 : 0;\r\n                    var figureCenter1 = a.labels[0].getFigureCenter()[coordPosition];\r\n                    var figureCenter12 = b.labels[0].getFigureCenter()[coordPosition];\r\n                    if (figureCenter1 - figureCenter12 === 0) {\r\n                        return (a.value() - b.value()) * (a.labels[0].getPoint().series.getValueAxis().getTranslator().isInverted() ? -1 : 1)\r\n                    }\r\n                    return 0\r\n                })\r\n            })\r\n        })\r\n    },\r\n    _getStackPoints: function() {\r\n        var stackPoints = {};\r\n        var visibleSeries = this._getVisibleSeries();\r\n        (0, _iterator.each)(visibleSeries, function(_, singleSeries) {\r\n            var points = singleSeries.getPoints();\r\n            var stackName = singleSeries.getStackName() || null;\r\n            (0, _iterator.each)(points, function(_, point) {\r\n                var argument = point.argument;\r\n                if (!stackPoints[argument]) {\r\n                    stackPoints[argument] = {}\r\n                }\r\n                if (!stackPoints[argument][stackName]) {\r\n                    stackPoints[argument][stackName] = []\r\n                }\r\n                stackPoints[argument][stackName].push(point)\r\n            })\r\n        });\r\n        return stackPoints\r\n    },\r\n    _getCrosshairOptions: function() {\r\n        return this._getOption(\"crosshair\")\r\n    },\r\n    zoomArgument: function(min, max) {\r\n        var that = this;\r\n        if (!that._initialized || !(0, _type.isDefined)(min) && !(0, _type.isDefined)(max)) {\r\n            return\r\n        }\r\n        that.getArgumentAxis().visualRange([min, max])\r\n    },\r\n    resetVisualRange: function() {\r\n        var that = this;\r\n        var axes = that._argumentAxes;\r\n        var nonVirtualArgumentAxis = that.getArgumentAxis();\r\n        axes.forEach(function(axis) {\r\n            axis.resetVisualRange(nonVirtualArgumentAxis !== axis);\r\n            that._applyCustomVisualRangeOption(axis)\r\n        });\r\n        that.callBase()\r\n    },\r\n    getVisibleArgumentBounds: function() {\r\n        var translator = this._argumentAxes[0].getTranslator();\r\n        var range = translator.getBusinessRange();\r\n        var isDiscrete = \"discrete\" === range.axisType;\r\n        var categories = range.categories;\r\n        return {\r\n            minVisible: isDiscrete ? range.minVisible || categories[0] : range.minVisible,\r\n            maxVisible: isDiscrete ? range.maxVisible || categories[categories.length - 1] : range.maxVisible\r\n        }\r\n    },\r\n    _change_FULL_RENDER: function() {\r\n        this.callBase();\r\n        if (this._changes.has(VISUAL_RANGE)) {\r\n            this._raiseZoomEndHandlers()\r\n        }\r\n    },\r\n    _getAxesForScaling: function() {\r\n        return [this.getArgumentAxis()].concat(this._valueAxes)\r\n    },\r\n    _applyVisualRangeByVirtualAxes: function(axis, range) {\r\n        var that = this;\r\n        if (axis.isArgumentAxis) {\r\n            if (axis !== that.getArgumentAxis()) {\r\n                return true\r\n            }\r\n            that._argumentAxes.filter(function(a) {\r\n                return a !== axis\r\n            }).forEach(function(a) {\r\n                return a.visualRange(range, {\r\n                    start: true,\r\n                    end: true\r\n                })\r\n            })\r\n        }\r\n        return false\r\n    },\r\n    _raiseZoomEndHandlers: function() {\r\n        this._argumentAxes.forEach(function(axis) {\r\n            return axis.handleZoomEnd()\r\n        });\r\n        this.callBase()\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend2.extend)(this._optionsByReference, {\r\n            \"argumentAxis.visualRange\": true\r\n        })\r\n    },\r\n    option: function option() {\r\n        var option = this.callBase.apply(this, arguments);\r\n        if (\"array\" === (0, _type.type)(this._options.valueAxis)) {\r\n            for (var i = 0; i < this._options.valueAxis.length; i++) {\r\n                var optionPath = \"valueAxis[\".concat(i, \"].visualRange\");\r\n                this._optionsByReference[optionPath] = true\r\n            }\r\n        }\r\n        return option\r\n    },\r\n    _notifyVisualRange: function() {\r\n        var that = this;\r\n        var argAxis = that._argumentAxes[0];\r\n        var argumentVisualRange = (0, _utils.convertVisualRangeObject)(argAxis.visualRange(), !_isArray(that.option(\"argumentAxis.visualRange\")));\r\n        if (!argAxis.skipEventRising || !(0, _utils.rangesAreEqual)(argumentVisualRange, that.option(\"argumentAxis.visualRange\"))) {\r\n            that.option(\"argumentAxis.visualRange\", argumentVisualRange)\r\n        } else {\r\n            argAxis.skipEventRising = null\r\n        }\r\n        that.callBase()\r\n    }\r\n});\r\ndxChart.addPlugin(require(\"./chart_components/shutter_zoom\"));\r\ndxChart.addPlugin(require(\"./chart_components/zoom_and_pan\"));\r\ndxChart.addPlugin(require(\"./core/annotations\").plugins.core);\r\ndxChart.addPlugin(require(\"./core/annotations\").plugins.chart);\r\n(0, _component_registrator2.default)(\"dxChart\", dxChart);\r\nmodule.exports = dxChart;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}