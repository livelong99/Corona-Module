{"ast":null,"code":"/**\r\n * DevExtreme (viz/axes/polar_axes.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar vizUtils = require(\"../core/utils\");\n\nvar isDefined = require(\"../../core/utils/type\").isDefined;\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar constants = require(\"./axes_constants\");\n\nvar circularAxes;\n\nvar xyAxesLinear = require(\"./xy_axes\").linear;\n\nvar tick = require(\"./tick\").tick;\n\nvar polarAxes;\nvar _map = vizUtils.map;\n\nvar baseAxisModule = require(\"./base_axis\");\n\nvar _math = Math;\nvar _abs = _math.abs;\nvar _round = _math.round;\nvar convertPolarToXY = vizUtils.convertPolarToXY;\nvar _extend = extend;\n\nvar _noop = require(\"../../core/utils/common\").noop;\n\nvar HALF_PI_ANGLE = 90;\n\nfunction getPolarQuarter(angle) {\n  var quarter;\n  angle = vizUtils.normalizeAngle(angle);\n\n  if (angle >= 315 && angle <= 360 || angle < 45 && angle >= 0) {\n    quarter = 1;\n  } else {\n    if (angle >= 45 && angle < 135) {\n      quarter = 2;\n    } else {\n      if (angle >= 135 && angle < 225) {\n        quarter = 3;\n      } else {\n        if (angle >= 225 && angle < 315) {\n          quarter = 4;\n        }\n      }\n    }\n  }\n\n  return quarter;\n}\n\npolarAxes = exports;\ncircularAxes = polarAxes.circular = {\n  _calculateValueMargins: function _calculateValueMargins(ticks) {\n    var _this$_getViewportRan = this._getViewportRange(),\n        minVisible = _this$_getViewportRan.minVisible,\n        maxVisible = _this$_getViewportRan.maxVisible;\n\n    if (ticks && ticks.length > 1) {\n      minVisible = minVisible < ticks[0].value ? minVisible : ticks[0].value;\n      maxVisible = minVisible > ticks[ticks.length - 1].value ? maxVisible : ticks[ticks.length - 1].value;\n    }\n\n    return {\n      minValue: minVisible,\n      maxValue: maxVisible\n    };\n  },\n  applyMargins: function applyMargins() {\n    var margins = this._calculateValueMargins(this._majorTicks);\n\n    var br = this._translator.getBusinessRange();\n\n    br.addRange({\n      minVisible: margins.minValue,\n      maxVisible: margins.maxValue,\n      interval: this._calculateRangeInterval(br.interval)\n    });\n\n    this._translator.updateBusinessRange(br);\n  },\n  _getTranslatorOptions: function _getTranslatorOptions() {\n    return {\n      isHorizontal: true,\n      conversionValue: true,\n      addSpiderCategory: this._getSpiderCategoryOption(),\n      stick: this._getStick()\n    };\n  },\n  getCenter: function getCenter() {\n    return this._center;\n  },\n  getRadius: function getRadius() {\n    return this._radius;\n  },\n  getAngles: function getAngles() {\n    var options = this._options;\n    return [options.startAngle, options.endAngle];\n  },\n  _updateRadius: function _updateRadius(canvas) {\n    var rad = Math.min(canvas.width - canvas.left - canvas.right, canvas.height - canvas.top - canvas.bottom) / 2;\n    this._radius = rad < 0 ? 0 : rad;\n  },\n  _updateCenter: function _updateCenter(canvas) {\n    this._center = {\n      x: canvas.left + (canvas.width - canvas.right - canvas.left) / 2,\n      y: canvas.top + (canvas.height - canvas.top - canvas.bottom) / 2\n    };\n  },\n  _processCanvas: function _processCanvas(canvas) {\n    this._updateRadius(canvas);\n\n    this._updateCenter(canvas);\n\n    return {\n      left: 0,\n      right: 0,\n      width: this._getScreenDelta()\n    };\n  },\n  _createAxisElement: function _createAxisElement() {\n    return this._renderer.circle();\n  },\n  _updateAxisElementPosition: function _updateAxisElementPosition() {\n    var center = this.getCenter();\n\n    this._axisElement.attr({\n      cx: center.x,\n      cy: center.y,\n      r: this.getRadius()\n    });\n  },\n  _boundaryTicksVisibility: {\n    min: true\n  },\n  _getSpiderCategoryOption: function _getSpiderCategoryOption() {\n    return this._options.firstPointOnStartAngle;\n  },\n  _validateOptions: function _validateOptions(options) {\n    var that = this;\n    var originValue = options.originValue;\n    var wholeRange = options.wholeRange = {};\n    var period = options.period;\n\n    if (isDefined(originValue)) {\n      originValue = that.validateUnit(originValue);\n    }\n\n    if (period > 0 && options.argumentType === constants.numeric) {\n      originValue = originValue || 0;\n      wholeRange.endValue = originValue + period;\n      that._viewport = vizUtils.getVizRangeObject([originValue, wholeRange.endValue]);\n    }\n\n    if (isDefined(originValue)) {\n      wholeRange.startValue = originValue;\n    }\n  },\n  getMargins: function getMargins() {\n    var tickOptions = this._options.tick;\n    var tickOuterLength = Math.max(tickOptions.visible ? tickOptions.length / 2 + tickOptions.shift : 0, 0);\n    var radius = this.getRadius();\n    var _this$_center = this._center,\n        x = _this$_center.x,\n        y = _this$_center.y;\n\n    var labelBoxes = this._majorTicks.map(function (t) {\n      return t.label && t.label.getBBox();\n    }).filter(function (b) {\n      return b;\n    });\n\n    var canvas = extend({}, this._canvas, {\n      left: x - radius,\n      top: y - radius,\n      right: this._canvas.width - (x + radius),\n      bottom: this._canvas.height - (y + radius)\n    });\n    var margins = baseAxisModule.calculateCanvasMargins(labelBoxes, canvas);\n    Object.keys(margins).forEach(function (k) {\n      return margins[k] = margins[k] < tickOuterLength ? tickOuterLength : margins[k];\n    });\n    return margins;\n  },\n  updateSize: function updateSize() {\n    var that = this;\n    baseAxisModule.Axis.prototype.updateSize.apply(that, arguments);\n    baseAxisModule.measureLabels(that._majorTicks);\n\n    that._adjustLabelsCoord(0, 0, true);\n\n    this._checkBoundedLabelsOverlapping(this._majorTicks, this._majorTicks.map(function (t) {\n      return t.labelBBox;\n    }));\n  },\n  _setVisualRange: _noop,\n  applyVisualRangeSetter: _noop,\n  allowToExtendVisualRange: function allowToExtendVisualRange(isEnd) {\n    return true;\n  },\n  _getStick: function _getStick() {\n    return this._options.firstPointOnStartAngle || this._options.type !== constants.discrete;\n  },\n  _getTranslatedCoord: function _getTranslatedCoord(value, offset) {\n    return this._translator.translate(value, offset) - HALF_PI_ANGLE;\n  },\n  _getCanvasStartEnd: function _getCanvasStartEnd() {\n    return {\n      start: 0 - HALF_PI_ANGLE,\n      end: 360 - HALF_PI_ANGLE\n    };\n  },\n  _getStripGraphicAttributes: function _getStripGraphicAttributes(fromAngle, toAngle) {\n    var center = this.getCenter();\n    var angle = this.getAngles()[0];\n    var r = this.getRadius();\n    return {\n      x: center.x,\n      y: center.y,\n      innerRadius: 0,\n      outerRadius: r,\n      startAngle: -toAngle - angle,\n      endAngle: -fromAngle - angle\n    };\n  },\n  _createStrip: function _createStrip(coords) {\n    return this._renderer.arc(coords.x, coords.y, coords.innerRadius, coords.outerRadius, coords.startAngle, coords.endAngle);\n  },\n  _getStripLabelCoords: function _getStripLabelCoords(from, to) {\n    var that = this;\n\n    var coords = that._getStripGraphicAttributes(from, to);\n\n    var angle = coords.startAngle + (coords.endAngle - coords.startAngle) / 2;\n    var cosSin = vizUtils.getCosAndSin(angle);\n    var halfRad = that.getRadius() / 2;\n    var center = that.getCenter();\n\n    var x = _round(center.x + halfRad * cosSin.cos);\n\n    var y = _round(center.y - halfRad * cosSin.sin);\n\n    return {\n      x: x,\n      y: y,\n      align: constants.center\n    };\n  },\n  _getConstantLineGraphicAttributes: function _getConstantLineGraphicAttributes(value) {\n    var center = this.getCenter();\n    var r = this.getRadius();\n    return {\n      points: [center.x, center.y, center.x + r, center.y]\n    };\n  },\n  _createConstantLine: function _createConstantLine(value, attr) {\n    return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr);\n  },\n  _rotateConstantLine: function _rotateConstantLine(line, value) {\n    var _this$getCenter = this.getCenter(),\n        x = _this$getCenter.x,\n        y = _this$getCenter.y;\n\n    line.rotate(value + this.getAngles()[0], x, y);\n  },\n  _getConstantLineLabelsCoords: function _getConstantLineLabelsCoords(value) {\n    var that = this;\n    var cosSin = vizUtils.getCosAndSin(-value - that.getAngles()[0]);\n    var halfRad = that.getRadius() / 2;\n    var center = that.getCenter();\n\n    var x = _round(center.x + halfRad * cosSin.cos);\n\n    var y = _round(center.y - halfRad * cosSin.sin);\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _checkAlignmentConstantLineLabels: _noop,\n  _adjustDivisionFactor: function _adjustDivisionFactor(val) {\n    return 180 * val / (this.getRadius() * Math.PI);\n  },\n  _getScreenDelta: function _getScreenDelta() {\n    var angles = this.getAngles();\n    return _math.abs(angles[0] - angles[1]);\n  },\n  _getTickMarkPoints: function _getTickMarkPoints(coords, length, _ref) {\n    var _ref$shift = _ref.shift,\n        shift = void 0 === _ref$shift ? 0 : _ref$shift;\n    var center = this.getCenter();\n    var corrections = {\n      inside: -1,\n      center: -.5,\n      outside: 0\n    };\n    var radiusWithTicks = this.getRadius() + length * corrections[this._options.tickOrientation || \"center\"];\n    return [center.x + radiusWithTicks + shift, center.y, center.x + radiusWithTicks + length + shift, center.y];\n  },\n  _getLabelAdjustedCoord: function _getLabelAdjustedCoord(tick, _offset, _maxWidth, checkCanvas) {\n    var that = this;\n    var labelCoords = tick.labelCoords;\n    var labelY = labelCoords.y;\n    var labelAngle = labelCoords.angle;\n    var cosSin = vizUtils.getCosAndSin(labelAngle);\n    var cos = cosSin.cos;\n    var sin = cosSin.sin;\n    var box = tick.labelBBox;\n    var halfWidth = box.width / 2;\n    var halfHeight = box.height / 2;\n    var indentFromAxis = that._options.label.indentFromAxis || 0;\n    var x = labelCoords.x + indentFromAxis * cos;\n    var y = labelY + (labelY - box.y - halfHeight) + indentFromAxis * sin;\n    var shiftX = 0;\n    var shiftY = 0;\n\n    switch (getPolarQuarter(labelAngle)) {\n      case 1:\n        shiftX = halfWidth;\n        shiftY = halfHeight * sin;\n        break;\n\n      case 2:\n        shiftX = halfWidth * cos;\n        shiftY = halfHeight;\n        break;\n\n      case 3:\n        shiftX = -halfWidth;\n        shiftY = halfHeight * sin;\n        break;\n\n      case 4:\n        shiftX = halfWidth * cos;\n        shiftY = -halfHeight;\n    }\n\n    if (checkCanvas) {\n      var canvas = that._canvas;\n      var boxShiftX = x - labelCoords.x + shiftX;\n      var boxShiftY = y - labelCoords.y + shiftY;\n\n      if (box.x + boxShiftX < canvas.originalLeft) {\n        shiftX -= box.x + boxShiftX - canvas.originalLeft;\n      }\n\n      if (box.x + box.width + boxShiftX > canvas.width - canvas.originalRight) {\n        shiftX -= box.x + box.width + boxShiftX - (canvas.width - canvas.originalRight);\n      }\n\n      if (box.y + boxShiftY < canvas.originalTop) {\n        shiftY -= box.y + boxShiftY - canvas.originalTop;\n      }\n\n      if (box.y + box.height + boxShiftY > canvas.height - canvas.originalBottom) {\n        shiftY -= box.y + box.height + boxShiftY - (canvas.height - canvas.originalBottom);\n      }\n    }\n\n    return {\n      x: x + shiftX,\n      y: y + shiftY\n    };\n  },\n  _getGridLineDrawer: function _getGridLineDrawer() {\n    var that = this;\n    return function (tick, gridStyle) {\n      var center = that.getCenter();\n      return that._createPathElement(that._getGridPoints().points, gridStyle).rotate(tick.coords.angle, center.x, center.y);\n    };\n  },\n  _getGridPoints: function _getGridPoints() {\n    var r = this.getRadius();\n    var center = this.getCenter();\n    return {\n      points: [center.x, center.y, center.x + r, center.y]\n    };\n  },\n  _getTranslatedValue: function _getTranslatedValue(value, offset) {\n    var startAngle = this.getAngles()[0];\n\n    var angle = this._translator.translate(value, -offset);\n\n    var coords = convertPolarToXY(this.getCenter(), startAngle, angle, this.getRadius());\n    return {\n      x: coords.x,\n      y: coords.y,\n      angle: angle + startAngle - HALF_PI_ANGLE\n    };\n  },\n  _getAdjustedStripLabelCoords: function _getAdjustedStripLabelCoords(strip) {\n    var box = strip.labelBBox;\n    return {\n      translateY: strip.label.attr(\"y\") - box.y - box.height / 2\n    };\n  },\n  coordsIn: function coordsIn(x, y) {\n    return vizUtils.convertXYToPolar(this.getCenter(), x, y).r > this.getRadius();\n  },\n  _rotateTick: function _rotateTick(element, coords) {\n    var center = this.getCenter();\n    element.rotate(coords.angle, center.x, center.y);\n  },\n  _validateOverlappingMode: function _validateOverlappingMode(mode) {\n    return constants.validateOverlappingMode(mode);\n  },\n  _validateDisplayMode: function _validateDisplayMode() {\n    return \"standard\";\n  },\n  _getStep: function _getStep(boxes) {\n    var that = this;\n    var radius = that.getRadius() + (that._options.label.indentFromAxis || 0);\n    var maxLabelBox = boxes.reduce(function (prevValue, box) {\n      var curValue = prevValue;\n\n      if (prevValue.width < box.width) {\n        curValue.width = box.width;\n      }\n\n      if (prevValue.height < box.height) {\n        curValue.height = box.height;\n      }\n\n      return curValue;\n    }, {\n      width: 0,\n      height: 0\n    });\n\n    var angle1 = _abs(2 * _math.atan(maxLabelBox.height / (2 * radius - maxLabelBox.width)) * 180 / _math.PI);\n\n    var angle2 = _abs(2 * _math.atan(maxLabelBox.width / (2 * radius - maxLabelBox.height)) * 180 / _math.PI);\n\n    return constants.getTicksCountInRange(that._majorTicks, \"angle\", _math.max(angle1, angle2));\n  },\n  _checkBoundedLabelsOverlapping: function _checkBoundedLabelsOverlapping(majorTicks, boxes, mode) {\n    var labelOpt = this._options.label;\n    mode = mode || this._validateOverlappingMode(labelOpt.overlappingBehavior);\n\n    if (\"hide\" !== mode) {\n      return;\n    }\n\n    var lastVisibleLabelIndex = majorTicks.reduce(function (lastVisibleLabelIndex, tick, index) {\n      return tick.label ? index : lastVisibleLabelIndex;\n    }, null);\n\n    if (!lastVisibleLabelIndex) {\n      return;\n    }\n\n    if (constants.areLabelsOverlap(boxes[0], boxes[lastVisibleLabelIndex], labelOpt.minSpacing, constants.center)) {\n      \"first\" === labelOpt.hideFirstOrLast ? majorTicks[0].label.remove() : majorTicks[lastVisibleLabelIndex].label.remove();\n    }\n  },\n  shift: function shift(margins) {\n    this._axisGroup.attr({\n      translateX: margins.right,\n      translateY: margins.bottom\n    });\n  }\n};\npolarAxes.circularSpider = _extend({}, circularAxes, {\n  _createAxisElement: function _createAxisElement() {\n    return this._renderer.path([], \"area\");\n  },\n  _updateAxisElementPosition: function _updateAxisElementPosition() {\n    this._axisElement.attr({\n      points: _map(this.getSpiderTicks(), function (tick) {\n        return {\n          x: tick.coords.x,\n          y: tick.coords.y\n        };\n      })\n    });\n  },\n  _getStick: function _getStick() {\n    return true;\n  },\n  _getSpiderCategoryOption: function _getSpiderCategoryOption() {\n    return true;\n  },\n  getSpiderTicks: function getSpiderTicks() {\n    var that = this;\n    var ticks = that.getFullTicks();\n    that._spiderTicks = ticks.map(tick(that, that.renderer, {}, {}, that._getSkippedCategory(ticks), true));\n\n    that._spiderTicks.forEach(function (tick) {\n      tick.initCoords();\n    });\n\n    return that._spiderTicks;\n  },\n  _getStripGraphicAttributes: function _getStripGraphicAttributes(fromAngle, toAngle) {\n    var center = this.getCenter();\n    var spiderTicks = this.getSpiderTicks();\n    var firstTick;\n    var lastTick;\n    var nextTick;\n    var tick;\n    var points = [];\n    var i = 0;\n    var len = spiderTicks.length;\n\n    while (i < len) {\n      tick = spiderTicks[i].coords;\n\n      if (tick.angle >= fromAngle && tick.angle <= toAngle) {\n        if (!firstTick) {\n          firstTick = (spiderTicks[i - 1] || spiderTicks[spiderTicks.length - 1]).coords;\n          points.push((tick.x + firstTick.x) / 2, (tick.y + firstTick.y) / 2);\n        }\n\n        points.push(tick.x, tick.y);\n        nextTick = (spiderTicks[i + 1] || spiderTicks[0]).coords;\n        lastTick = {\n          x: (tick.x + nextTick.x) / 2,\n          y: (tick.y + nextTick.y) / 2\n        };\n      }\n\n      i++;\n    }\n\n    points.push(lastTick.x, lastTick.y);\n    points.push(center.x, center.y);\n    return {\n      points: points\n    };\n  },\n  _createStrip: function _createStrip(_ref2) {\n    var points = _ref2.points;\n    return this._renderer.path(points, \"area\");\n  },\n  _getTranslatedCoord: function _getTranslatedCoord(value, offset) {\n    return this._translator.translate(value, offset) - HALF_PI_ANGLE;\n  },\n  _setTickOffset: function _setTickOffset() {\n    this._tickOffset = false;\n  }\n});\npolarAxes.linear = {\n  _resetMargins: function _resetMargins() {\n    this._reinitTranslator(this._getViewportRange());\n  },\n  _getStick: xyAxesLinear._getStick,\n  _getSpiderCategoryOption: _noop,\n  _getTranslatorOptions: function _getTranslatorOptions() {\n    return {\n      isHorizontal: true,\n      stick: this._getStick()\n    };\n  },\n  getRadius: circularAxes.getRadius,\n  getCenter: circularAxes.getCenter,\n  getAngles: circularAxes.getAngles,\n  _updateRadius: circularAxes._updateRadius,\n  _updateCenter: circularAxes._updateCenter,\n  _processCanvas: function _processCanvas(canvas) {\n    this._updateRadius(canvas);\n\n    this._updateCenter(canvas);\n\n    return {\n      left: 0,\n      right: 0,\n      startPadding: canvas.startPadding,\n      endPadding: canvas.endPadding,\n      width: this.getRadius()\n    };\n  },\n  _createAxisElement: xyAxesLinear._createAxisElement,\n  _updateAxisElementPosition: function _updateAxisElementPosition() {\n    var centerCoord = this.getCenter();\n\n    this._axisElement.attr({\n      points: [centerCoord.x, centerCoord.y, centerCoord.x + this.getRadius(), centerCoord.y]\n    }).rotate(this.getAngles()[0] - HALF_PI_ANGLE, centerCoord.x, centerCoord.y);\n  },\n  _getScreenDelta: function _getScreenDelta() {\n    return this.getRadius();\n  },\n  _getTickMarkPoints: function _getTickMarkPoints(coords, length) {\n    return [coords.x - length / 2, coords.y, coords.x + length / 2, coords.y];\n  },\n  _getLabelAdjustedCoord: function _getLabelAdjustedCoord(tick) {\n    var that = this;\n    var labelCoords = tick.labelCoords;\n    var labelY = labelCoords.y;\n    var cosSin = vizUtils.getCosAndSin(labelCoords.angle);\n    var indentFromAxis = that._options.label.indentFromAxis || 0;\n    var box = tick.labelBBox;\n    var x;\n    var y;\n    x = labelCoords.x - _abs(indentFromAxis * cosSin.sin) + _abs(box.width / 2 * cosSin.cos) - box.width / 2;\n    y = labelY + (labelY - box.y) - _abs(box.height / 2 * cosSin.sin) + _abs(indentFromAxis * cosSin.cos);\n    return {\n      x: x,\n      y: y\n    };\n  },\n  _getGridLineDrawer: function _getGridLineDrawer() {\n    var that = this;\n    return function (tick, gridStyle) {\n      var grid = that._getGridPoints(tick.coords);\n\n      return that._renderer.circle(grid.cx, grid.cy, grid.r).attr(gridStyle).sharp();\n    };\n  },\n  _getGridPoints: function _getGridPoints(coords) {\n    var pos = this.getCenter();\n    var radius = vizUtils.getDistance(pos.x, pos.y, coords.x, coords.y);\n\n    if (radius > this.getRadius()) {\n      return {\n        cx: null,\n        cy: null,\n        r: null\n      };\n    }\n\n    return {\n      cx: pos.x,\n      cy: pos.y,\n      r: radius\n    };\n  },\n  _getTranslatedValue: function _getTranslatedValue(value, offset) {\n    var startAngle = this.getAngles()[0];\n    var xy = convertPolarToXY(this.getCenter(), startAngle, 0, this._translator.translate(value, offset));\n    return {\n      x: xy.x,\n      y: xy.y,\n      angle: startAngle - HALF_PI_ANGLE\n    };\n  },\n  _getTranslatedCoord: function _getTranslatedCoord(value, offset) {\n    return this._translator.translate(value, offset);\n  },\n  _getCanvasStartEnd: function _getCanvasStartEnd() {\n    var invert = this.getTranslator().getBusinessRange().invert;\n    var coords = [0, this.getRadius()];\n    invert && coords.reverse();\n    return {\n      start: coords[0],\n      end: coords[1]\n    };\n  },\n  _getStripGraphicAttributes: function _getStripGraphicAttributes(fromPoint, toPoint) {\n    var center = this.getCenter();\n    return {\n      x: center.x,\n      y: center.y,\n      innerRadius: fromPoint,\n      outerRadius: toPoint\n    };\n  },\n  _createStrip: function _createStrip(attrs) {\n    return this._renderer.arc(attrs.x, attrs.y, attrs.innerRadius, attrs.outerRadius, 0, 360);\n  },\n  _getAdjustedStripLabelCoords: circularAxes._getAdjustedStripLabelCoords,\n  _getStripLabelCoords: function _getStripLabelCoords(from, to) {\n    var that = this;\n    var labelPos = from + (to - from) / 2;\n    var center = that.getCenter();\n\n    var y = _round(center.y - labelPos);\n\n    return {\n      x: center.x,\n      y: y,\n      align: constants.center\n    };\n  },\n  _getConstantLineGraphicAttributes: function _getConstantLineGraphicAttributes(value) {\n    var center = this.getCenter();\n    return {\n      cx: center.x,\n      cy: center.y,\n      r: value\n    };\n  },\n  _createConstantLine: function _createConstantLine(value, attr) {\n    var attrs = this._getConstantLineGraphicAttributes(value);\n\n    return this._renderer.circle(attrs.cx, attrs.cy, attrs.r).attr(attr).sharp();\n  },\n  _getConstantLineLabelsCoords: function _getConstantLineLabelsCoords(value) {\n    var that = this;\n    var center = that.getCenter();\n\n    var y = _round(center.y - value);\n\n    return {\n      x: center.x,\n      y: y\n    };\n  },\n  _checkAlignmentConstantLineLabels: _noop,\n  _rotateTick: function _rotateTick(element, coords, isGridLine) {\n    !isGridLine && element.rotate(coords.angle + HALF_PI_ANGLE, coords.x, coords.y);\n  },\n  _validateOverlappingMode: circularAxes._validateOverlappingMode,\n  _validateDisplayMode: circularAxes._validateDisplayMode,\n  _getStep: function _getStep(boxes) {\n    var quarter = getPolarQuarter(this.getAngles()[0]);\n    var spacing = this._options.label.minSpacing;\n    var func = 2 === quarter || 4 === quarter ? function (box) {\n      return box.width + spacing;\n    } : function (box) {\n      return box.height;\n    };\n    var maxLabelLength = boxes.reduce(function (prevValue, box) {\n      return _math.max(prevValue, func(box));\n    }, 0);\n    return constants.getTicksCountInRange(this._majorTicks, 2 === quarter || 4 === quarter ? \"x\" : \"y\", maxLabelLength);\n  }\n};\npolarAxes.linearSpider = _extend({}, polarAxes.linear, {\n  _createPathElement: function _createPathElement(points, attr) {\n    return this._renderer.path(points, \"area\").attr(attr).sharp();\n  },\n  setSpiderTicks: function setSpiderTicks(ticks) {\n    this._spiderTicks = ticks;\n  },\n  _getGridLineDrawer: function _getGridLineDrawer() {\n    var that = this;\n    return function (tick, gridStyle, element) {\n      return that._createPathElement(that._getGridPoints(tick.coords).points, gridStyle);\n    };\n  },\n  _getGridPoints: function _getGridPoints(coords) {\n    var pos = this.getCenter();\n    var radius = vizUtils.getDistance(pos.x, pos.y, coords.x, coords.y);\n    return this._getGridPointsByRadius(radius);\n  },\n  _getGridPointsByRadius: function _getGridPointsByRadius(radius) {\n    var pos = this.getCenter();\n\n    if (radius > this.getRadius()) {\n      return {\n        points: null\n      };\n    }\n\n    return {\n      points: _map(this._spiderTicks, function (tick) {\n        var cosSin = vizUtils.getCosAndSin(tick.coords.angle);\n        return {\n          x: _round(pos.x + radius * cosSin.cos),\n          y: _round(pos.y + radius * cosSin.sin)\n        };\n      })\n    };\n  },\n  _getStripGraphicAttributes: function _getStripGraphicAttributes(fromPoint, toPoint) {\n    var innerPoints = this._getGridPointsByRadius(toPoint).points;\n\n    var outerPoints = this._getGridPointsByRadius(fromPoint).points;\n\n    return {\n      points: [outerPoints, innerPoints.reverse()]\n    };\n  },\n  _createStrip: polarAxes.circularSpider._createStrip,\n  _getConstantLineGraphicAttributes: function _getConstantLineGraphicAttributes(value) {\n    return this._getGridPointsByRadius(value);\n  },\n  _createConstantLine: function _createConstantLine(value, attr) {\n    return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr);\n  }\n});","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/axes/polar_axes.js"],"names":["vizUtils","require","isDefined","extend","constants","circularAxes","xyAxesLinear","linear","tick","polarAxes","_map","map","baseAxisModule","_math","Math","_abs","abs","_round","round","convertPolarToXY","_extend","_noop","noop","HALF_PI_ANGLE","getPolarQuarter","angle","quarter","normalizeAngle","exports","circular","_calculateValueMargins","ticks","_this$_getViewportRan","_getViewportRange","minVisible","maxVisible","length","value","minValue","maxValue","applyMargins","margins","_majorTicks","br","_translator","getBusinessRange","addRange","interval","_calculateRangeInterval","updateBusinessRange","_getTranslatorOptions","isHorizontal","conversionValue","addSpiderCategory","_getSpiderCategoryOption","stick","_getStick","getCenter","_center","getRadius","_radius","getAngles","options","_options","startAngle","endAngle","_updateRadius","canvas","rad","min","width","left","right","height","top","bottom","_updateCenter","x","y","_processCanvas","_getScreenDelta","_createAxisElement","_renderer","circle","_updateAxisElementPosition","center","_axisElement","attr","cx","cy","r","_boundaryTicksVisibility","firstPointOnStartAngle","_validateOptions","that","originValue","wholeRange","period","validateUnit","argumentType","numeric","endValue","_viewport","getVizRangeObject","startValue","getMargins","tickOptions","tickOuterLength","max","visible","shift","radius","_this$_center","labelBoxes","t","label","getBBox","filter","b","_canvas","calculateCanvasMargins","Object","keys","forEach","k","updateSize","Axis","prototype","apply","arguments","measureLabels","_adjustLabelsCoord","_checkBoundedLabelsOverlapping","labelBBox","_setVisualRange","applyVisualRangeSetter","allowToExtendVisualRange","isEnd","type","discrete","_getTranslatedCoord","offset","translate","_getCanvasStartEnd","start","end","_getStripGraphicAttributes","fromAngle","toAngle","innerRadius","outerRadius","_createStrip","coords","arc","_getStripLabelCoords","from","to","cosSin","getCosAndSin","halfRad","cos","sin","align","_getConstantLineGraphicAttributes","points","_createConstantLine","_createPathElement","_rotateConstantLine","line","_this$getCenter","rotate","_getConstantLineLabelsCoords","_checkAlignmentConstantLineLabels","_adjustDivisionFactor","val","PI","angles","_getTickMarkPoints","_ref","_ref$shift","corrections","inside","outside","radiusWithTicks","tickOrientation","_getLabelAdjustedCoord","_offset","_maxWidth","checkCanvas","labelCoords","labelY","labelAngle","box","halfWidth","halfHeight","indentFromAxis","shiftX","shiftY","boxShiftX","boxShiftY","originalLeft","originalRight","originalTop","originalBottom","_getGridLineDrawer","gridStyle","_getGridPoints","_getTranslatedValue","_getAdjustedStripLabelCoords","strip","translateY","coordsIn","convertXYToPolar","_rotateTick","element","_validateOverlappingMode","mode","validateOverlappingMode","_validateDisplayMode","_getStep","boxes","maxLabelBox","reduce","prevValue","curValue","angle1","atan","angle2","getTicksCountInRange","majorTicks","labelOpt","overlappingBehavior","lastVisibleLabelIndex","index","areLabelsOverlap","minSpacing","hideFirstOrLast","remove","_axisGroup","translateX","circularSpider","path","getSpiderTicks","getFullTicks","_spiderTicks","renderer","_getSkippedCategory","initCoords","spiderTicks","firstTick","lastTick","nextTick","i","len","push","_ref2","_setTickOffset","_tickOffset","_resetMargins","_reinitTranslator","startPadding","endPadding","centerCoord","grid","sharp","pos","getDistance","xy","invert","getTranslator","reverse","fromPoint","toPoint","attrs","labelPos","isGridLine","spacing","func","maxLabelLength","linearSpider","setSpiderTicks","_getGridPointsByRadius","innerPoints","outerPoints"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/axes/polar_axes.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar vizUtils = require(\"../core/utils\");\r\nvar isDefined = require(\"../../core/utils/type\").isDefined;\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar constants = require(\"./axes_constants\");\r\nvar circularAxes;\r\nvar xyAxesLinear = require(\"./xy_axes\").linear;\r\nvar tick = require(\"./tick\").tick;\r\nvar polarAxes;\r\nvar _map = vizUtils.map;\r\nvar baseAxisModule = require(\"./base_axis\");\r\nvar _math = Math;\r\nvar _abs = _math.abs;\r\nvar _round = _math.round;\r\nvar convertPolarToXY = vizUtils.convertPolarToXY;\r\nvar _extend = extend;\r\nvar _noop = require(\"../../core/utils/common\").noop;\r\nvar HALF_PI_ANGLE = 90;\r\n\r\nfunction getPolarQuarter(angle) {\r\n    var quarter;\r\n    angle = vizUtils.normalizeAngle(angle);\r\n    if (angle >= 315 && angle <= 360 || angle < 45 && angle >= 0) {\r\n        quarter = 1\r\n    } else {\r\n        if (angle >= 45 && angle < 135) {\r\n            quarter = 2\r\n        } else {\r\n            if (angle >= 135 && angle < 225) {\r\n                quarter = 3\r\n            } else {\r\n                if (angle >= 225 && angle < 315) {\r\n                    quarter = 4\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return quarter\r\n}\r\npolarAxes = exports;\r\ncircularAxes = polarAxes.circular = {\r\n    _calculateValueMargins: function(ticks) {\r\n        var _this$_getViewportRan = this._getViewportRange(),\r\n            minVisible = _this$_getViewportRan.minVisible,\r\n            maxVisible = _this$_getViewportRan.maxVisible;\r\n        if (ticks && ticks.length > 1) {\r\n            minVisible = minVisible < ticks[0].value ? minVisible : ticks[0].value;\r\n            maxVisible = minVisible > ticks[ticks.length - 1].value ? maxVisible : ticks[ticks.length - 1].value\r\n        }\r\n        return {\r\n            minValue: minVisible,\r\n            maxValue: maxVisible\r\n        }\r\n    },\r\n    applyMargins: function() {\r\n        var margins = this._calculateValueMargins(this._majorTicks);\r\n        var br = this._translator.getBusinessRange();\r\n        br.addRange({\r\n            minVisible: margins.minValue,\r\n            maxVisible: margins.maxValue,\r\n            interval: this._calculateRangeInterval(br.interval)\r\n        });\r\n        this._translator.updateBusinessRange(br)\r\n    },\r\n    _getTranslatorOptions: function() {\r\n        return {\r\n            isHorizontal: true,\r\n            conversionValue: true,\r\n            addSpiderCategory: this._getSpiderCategoryOption(),\r\n            stick: this._getStick()\r\n        }\r\n    },\r\n    getCenter: function() {\r\n        return this._center\r\n    },\r\n    getRadius: function() {\r\n        return this._radius\r\n    },\r\n    getAngles: function() {\r\n        var options = this._options;\r\n        return [options.startAngle, options.endAngle]\r\n    },\r\n    _updateRadius: function(canvas) {\r\n        var rad = Math.min(canvas.width - canvas.left - canvas.right, canvas.height - canvas.top - canvas.bottom) / 2;\r\n        this._radius = rad < 0 ? 0 : rad\r\n    },\r\n    _updateCenter: function(canvas) {\r\n        this._center = {\r\n            x: canvas.left + (canvas.width - canvas.right - canvas.left) / 2,\r\n            y: canvas.top + (canvas.height - canvas.top - canvas.bottom) / 2\r\n        }\r\n    },\r\n    _processCanvas: function(canvas) {\r\n        this._updateRadius(canvas);\r\n        this._updateCenter(canvas);\r\n        return {\r\n            left: 0,\r\n            right: 0,\r\n            width: this._getScreenDelta()\r\n        }\r\n    },\r\n    _createAxisElement: function() {\r\n        return this._renderer.circle()\r\n    },\r\n    _updateAxisElementPosition: function() {\r\n        var center = this.getCenter();\r\n        this._axisElement.attr({\r\n            cx: center.x,\r\n            cy: center.y,\r\n            r: this.getRadius()\r\n        })\r\n    },\r\n    _boundaryTicksVisibility: {\r\n        min: true\r\n    },\r\n    _getSpiderCategoryOption: function() {\r\n        return this._options.firstPointOnStartAngle\r\n    },\r\n    _validateOptions: function(options) {\r\n        var that = this;\r\n        var originValue = options.originValue;\r\n        var wholeRange = options.wholeRange = {};\r\n        var period = options.period;\r\n        if (isDefined(originValue)) {\r\n            originValue = that.validateUnit(originValue)\r\n        }\r\n        if (period > 0 && options.argumentType === constants.numeric) {\r\n            originValue = originValue || 0;\r\n            wholeRange.endValue = originValue + period;\r\n            that._viewport = vizUtils.getVizRangeObject([originValue, wholeRange.endValue])\r\n        }\r\n        if (isDefined(originValue)) {\r\n            wholeRange.startValue = originValue\r\n        }\r\n    },\r\n    getMargins: function() {\r\n        var tickOptions = this._options.tick;\r\n        var tickOuterLength = Math.max(tickOptions.visible ? tickOptions.length / 2 + tickOptions.shift : 0, 0);\r\n        var radius = this.getRadius();\r\n        var _this$_center = this._center,\r\n            x = _this$_center.x,\r\n            y = _this$_center.y;\r\n        var labelBoxes = this._majorTicks.map(function(t) {\r\n            return t.label && t.label.getBBox()\r\n        }).filter(function(b) {\r\n            return b\r\n        });\r\n        var canvas = extend({}, this._canvas, {\r\n            left: x - radius,\r\n            top: y - radius,\r\n            right: this._canvas.width - (x + radius),\r\n            bottom: this._canvas.height - (y + radius)\r\n        });\r\n        var margins = baseAxisModule.calculateCanvasMargins(labelBoxes, canvas);\r\n        Object.keys(margins).forEach(function(k) {\r\n            return margins[k] = margins[k] < tickOuterLength ? tickOuterLength : margins[k]\r\n        });\r\n        return margins\r\n    },\r\n    updateSize: function() {\r\n        var that = this;\r\n        baseAxisModule.Axis.prototype.updateSize.apply(that, arguments);\r\n        baseAxisModule.measureLabels(that._majorTicks);\r\n        that._adjustLabelsCoord(0, 0, true);\r\n        this._checkBoundedLabelsOverlapping(this._majorTicks, this._majorTicks.map(function(t) {\r\n            return t.labelBBox\r\n        }))\r\n    },\r\n    _setVisualRange: _noop,\r\n    applyVisualRangeSetter: _noop,\r\n    allowToExtendVisualRange: function(isEnd) {\r\n        return true\r\n    },\r\n    _getStick: function() {\r\n        return this._options.firstPointOnStartAngle || this._options.type !== constants.discrete\r\n    },\r\n    _getTranslatedCoord: function(value, offset) {\r\n        return this._translator.translate(value, offset) - HALF_PI_ANGLE\r\n    },\r\n    _getCanvasStartEnd: function() {\r\n        return {\r\n            start: 0 - HALF_PI_ANGLE,\r\n            end: 360 - HALF_PI_ANGLE\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromAngle, toAngle) {\r\n        var center = this.getCenter();\r\n        var angle = this.getAngles()[0];\r\n        var r = this.getRadius();\r\n        return {\r\n            x: center.x,\r\n            y: center.y,\r\n            innerRadius: 0,\r\n            outerRadius: r,\r\n            startAngle: -toAngle - angle,\r\n            endAngle: -fromAngle - angle\r\n        }\r\n    },\r\n    _createStrip: function(coords) {\r\n        return this._renderer.arc(coords.x, coords.y, coords.innerRadius, coords.outerRadius, coords.startAngle, coords.endAngle)\r\n    },\r\n    _getStripLabelCoords: function(from, to) {\r\n        var that = this;\r\n        var coords = that._getStripGraphicAttributes(from, to);\r\n        var angle = coords.startAngle + (coords.endAngle - coords.startAngle) / 2;\r\n        var cosSin = vizUtils.getCosAndSin(angle);\r\n        var halfRad = that.getRadius() / 2;\r\n        var center = that.getCenter();\r\n        var x = _round(center.x + halfRad * cosSin.cos);\r\n        var y = _round(center.y - halfRad * cosSin.sin);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            align: constants.center\r\n        }\r\n    },\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        var center = this.getCenter();\r\n        var r = this.getRadius();\r\n        return {\r\n            points: [center.x, center.y, center.x + r, center.y]\r\n        }\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr)\r\n    },\r\n    _rotateConstantLine: function(line, value) {\r\n        var _this$getCenter = this.getCenter(),\r\n            x = _this$getCenter.x,\r\n            y = _this$getCenter.y;\r\n        line.rotate(value + this.getAngles()[0], x, y)\r\n    },\r\n    _getConstantLineLabelsCoords: function(value) {\r\n        var that = this;\r\n        var cosSin = vizUtils.getCosAndSin(-value - that.getAngles()[0]);\r\n        var halfRad = that.getRadius() / 2;\r\n        var center = that.getCenter();\r\n        var x = _round(center.x + halfRad * cosSin.cos);\r\n        var y = _round(center.y - halfRad * cosSin.sin);\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _checkAlignmentConstantLineLabels: _noop,\r\n    _adjustDivisionFactor: function(val) {\r\n        return 180 * val / (this.getRadius() * Math.PI)\r\n    },\r\n    _getScreenDelta: function() {\r\n        var angles = this.getAngles();\r\n        return _math.abs(angles[0] - angles[1])\r\n    },\r\n    _getTickMarkPoints: function(coords, length, _ref) {\r\n        var _ref$shift = _ref.shift,\r\n            shift = void 0 === _ref$shift ? 0 : _ref$shift;\r\n        var center = this.getCenter();\r\n        var corrections = {\r\n            inside: -1,\r\n            center: -.5,\r\n            outside: 0\r\n        };\r\n        var radiusWithTicks = this.getRadius() + length * corrections[this._options.tickOrientation || \"center\"];\r\n        return [center.x + radiusWithTicks + shift, center.y, center.x + radiusWithTicks + length + shift, center.y]\r\n    },\r\n    _getLabelAdjustedCoord: function(tick, _offset, _maxWidth, checkCanvas) {\r\n        var that = this;\r\n        var labelCoords = tick.labelCoords;\r\n        var labelY = labelCoords.y;\r\n        var labelAngle = labelCoords.angle;\r\n        var cosSin = vizUtils.getCosAndSin(labelAngle);\r\n        var cos = cosSin.cos;\r\n        var sin = cosSin.sin;\r\n        var box = tick.labelBBox;\r\n        var halfWidth = box.width / 2;\r\n        var halfHeight = box.height / 2;\r\n        var indentFromAxis = that._options.label.indentFromAxis || 0;\r\n        var x = labelCoords.x + indentFromAxis * cos;\r\n        var y = labelY + (labelY - box.y - halfHeight) + indentFromAxis * sin;\r\n        var shiftX = 0;\r\n        var shiftY = 0;\r\n        switch (getPolarQuarter(labelAngle)) {\r\n            case 1:\r\n                shiftX = halfWidth;\r\n                shiftY = halfHeight * sin;\r\n                break;\r\n            case 2:\r\n                shiftX = halfWidth * cos;\r\n                shiftY = halfHeight;\r\n                break;\r\n            case 3:\r\n                shiftX = -halfWidth;\r\n                shiftY = halfHeight * sin;\r\n                break;\r\n            case 4:\r\n                shiftX = halfWidth * cos;\r\n                shiftY = -halfHeight\r\n        }\r\n        if (checkCanvas) {\r\n            var canvas = that._canvas;\r\n            var boxShiftX = x - labelCoords.x + shiftX;\r\n            var boxShiftY = y - labelCoords.y + shiftY;\r\n            if (box.x + boxShiftX < canvas.originalLeft) {\r\n                shiftX -= box.x + boxShiftX - canvas.originalLeft\r\n            }\r\n            if (box.x + box.width + boxShiftX > canvas.width - canvas.originalRight) {\r\n                shiftX -= box.x + box.width + boxShiftX - (canvas.width - canvas.originalRight)\r\n            }\r\n            if (box.y + boxShiftY < canvas.originalTop) {\r\n                shiftY -= box.y + boxShiftY - canvas.originalTop\r\n            }\r\n            if (box.y + box.height + boxShiftY > canvas.height - canvas.originalBottom) {\r\n                shiftY -= box.y + box.height + boxShiftY - (canvas.height - canvas.originalBottom)\r\n            }\r\n        }\r\n        return {\r\n            x: x + shiftX,\r\n            y: y + shiftY\r\n        }\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            var center = that.getCenter();\r\n            return that._createPathElement(that._getGridPoints().points, gridStyle).rotate(tick.coords.angle, center.x, center.y)\r\n        }\r\n    },\r\n    _getGridPoints: function() {\r\n        var r = this.getRadius();\r\n        var center = this.getCenter();\r\n        return {\r\n            points: [center.x, center.y, center.x + r, center.y]\r\n        }\r\n    },\r\n    _getTranslatedValue: function(value, offset) {\r\n        var startAngle = this.getAngles()[0];\r\n        var angle = this._translator.translate(value, -offset);\r\n        var coords = convertPolarToXY(this.getCenter(), startAngle, angle, this.getRadius());\r\n        return {\r\n            x: coords.x,\r\n            y: coords.y,\r\n            angle: angle + startAngle - HALF_PI_ANGLE\r\n        }\r\n    },\r\n    _getAdjustedStripLabelCoords: function(strip) {\r\n        var box = strip.labelBBox;\r\n        return {\r\n            translateY: strip.label.attr(\"y\") - box.y - box.height / 2\r\n        }\r\n    },\r\n    coordsIn: function(x, y) {\r\n        return vizUtils.convertXYToPolar(this.getCenter(), x, y).r > this.getRadius()\r\n    },\r\n    _rotateTick: function(element, coords) {\r\n        var center = this.getCenter();\r\n        element.rotate(coords.angle, center.x, center.y)\r\n    },\r\n    _validateOverlappingMode: function(mode) {\r\n        return constants.validateOverlappingMode(mode)\r\n    },\r\n    _validateDisplayMode: function() {\r\n        return \"standard\"\r\n    },\r\n    _getStep: function(boxes) {\r\n        var that = this;\r\n        var radius = that.getRadius() + (that._options.label.indentFromAxis || 0);\r\n        var maxLabelBox = boxes.reduce(function(prevValue, box) {\r\n            var curValue = prevValue;\r\n            if (prevValue.width < box.width) {\r\n                curValue.width = box.width\r\n            }\r\n            if (prevValue.height < box.height) {\r\n                curValue.height = box.height\r\n            }\r\n            return curValue\r\n        }, {\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        var angle1 = _abs(2 * _math.atan(maxLabelBox.height / (2 * radius - maxLabelBox.width)) * 180 / _math.PI);\r\n        var angle2 = _abs(2 * _math.atan(maxLabelBox.width / (2 * radius - maxLabelBox.height)) * 180 / _math.PI);\r\n        return constants.getTicksCountInRange(that._majorTicks, \"angle\", _math.max(angle1, angle2))\r\n    },\r\n    _checkBoundedLabelsOverlapping: function(majorTicks, boxes, mode) {\r\n        var labelOpt = this._options.label;\r\n        mode = mode || this._validateOverlappingMode(labelOpt.overlappingBehavior);\r\n        if (\"hide\" !== mode) {\r\n            return\r\n        }\r\n        var lastVisibleLabelIndex = majorTicks.reduce(function(lastVisibleLabelIndex, tick, index) {\r\n            return tick.label ? index : lastVisibleLabelIndex\r\n        }, null);\r\n        if (!lastVisibleLabelIndex) {\r\n            return\r\n        }\r\n        if (constants.areLabelsOverlap(boxes[0], boxes[lastVisibleLabelIndex], labelOpt.minSpacing, constants.center)) {\r\n            \"first\" === labelOpt.hideFirstOrLast ? majorTicks[0].label.remove() : majorTicks[lastVisibleLabelIndex].label.remove()\r\n        }\r\n    },\r\n    shift: function(margins) {\r\n        this._axisGroup.attr({\r\n            translateX: margins.right,\r\n            translateY: margins.bottom\r\n        })\r\n    }\r\n};\r\npolarAxes.circularSpider = _extend({}, circularAxes, {\r\n    _createAxisElement: function() {\r\n        return this._renderer.path([], \"area\")\r\n    },\r\n    _updateAxisElementPosition: function() {\r\n        this._axisElement.attr({\r\n            points: _map(this.getSpiderTicks(), function(tick) {\r\n                return {\r\n                    x: tick.coords.x,\r\n                    y: tick.coords.y\r\n                }\r\n            })\r\n        })\r\n    },\r\n    _getStick: function() {\r\n        return true\r\n    },\r\n    _getSpiderCategoryOption: function() {\r\n        return true\r\n    },\r\n    getSpiderTicks: function() {\r\n        var that = this;\r\n        var ticks = that.getFullTicks();\r\n        that._spiderTicks = ticks.map(tick(that, that.renderer, {}, {}, that._getSkippedCategory(ticks), true));\r\n        that._spiderTicks.forEach(function(tick) {\r\n            tick.initCoords()\r\n        });\r\n        return that._spiderTicks\r\n    },\r\n    _getStripGraphicAttributes: function(fromAngle, toAngle) {\r\n        var center = this.getCenter();\r\n        var spiderTicks = this.getSpiderTicks();\r\n        var firstTick;\r\n        var lastTick;\r\n        var nextTick;\r\n        var tick;\r\n        var points = [];\r\n        var i = 0;\r\n        var len = spiderTicks.length;\r\n        while (i < len) {\r\n            tick = spiderTicks[i].coords;\r\n            if (tick.angle >= fromAngle && tick.angle <= toAngle) {\r\n                if (!firstTick) {\r\n                    firstTick = (spiderTicks[i - 1] || spiderTicks[spiderTicks.length - 1]).coords;\r\n                    points.push((tick.x + firstTick.x) / 2, (tick.y + firstTick.y) / 2)\r\n                }\r\n                points.push(tick.x, tick.y);\r\n                nextTick = (spiderTicks[i + 1] || spiderTicks[0]).coords;\r\n                lastTick = {\r\n                    x: (tick.x + nextTick.x) / 2,\r\n                    y: (tick.y + nextTick.y) / 2\r\n                }\r\n            }\r\n            i++\r\n        }\r\n        points.push(lastTick.x, lastTick.y);\r\n        points.push(center.x, center.y);\r\n        return {\r\n            points: points\r\n        }\r\n    },\r\n    _createStrip: function(_ref2) {\r\n        var points = _ref2.points;\r\n        return this._renderer.path(points, \"area\")\r\n    },\r\n    _getTranslatedCoord: function(value, offset) {\r\n        return this._translator.translate(value, offset) - HALF_PI_ANGLE\r\n    },\r\n    _setTickOffset: function() {\r\n        this._tickOffset = false\r\n    }\r\n});\r\npolarAxes.linear = {\r\n    _resetMargins: function() {\r\n        this._reinitTranslator(this._getViewportRange())\r\n    },\r\n    _getStick: xyAxesLinear._getStick,\r\n    _getSpiderCategoryOption: _noop,\r\n    _getTranslatorOptions: function() {\r\n        return {\r\n            isHorizontal: true,\r\n            stick: this._getStick()\r\n        }\r\n    },\r\n    getRadius: circularAxes.getRadius,\r\n    getCenter: circularAxes.getCenter,\r\n    getAngles: circularAxes.getAngles,\r\n    _updateRadius: circularAxes._updateRadius,\r\n    _updateCenter: circularAxes._updateCenter,\r\n    _processCanvas: function(canvas) {\r\n        this._updateRadius(canvas);\r\n        this._updateCenter(canvas);\r\n        return {\r\n            left: 0,\r\n            right: 0,\r\n            startPadding: canvas.startPadding,\r\n            endPadding: canvas.endPadding,\r\n            width: this.getRadius()\r\n        }\r\n    },\r\n    _createAxisElement: xyAxesLinear._createAxisElement,\r\n    _updateAxisElementPosition: function() {\r\n        var centerCoord = this.getCenter();\r\n        this._axisElement.attr({\r\n            points: [centerCoord.x, centerCoord.y, centerCoord.x + this.getRadius(), centerCoord.y]\r\n        }).rotate(this.getAngles()[0] - HALF_PI_ANGLE, centerCoord.x, centerCoord.y)\r\n    },\r\n    _getScreenDelta: function() {\r\n        return this.getRadius()\r\n    },\r\n    _getTickMarkPoints: function(coords, length) {\r\n        return [coords.x - length / 2, coords.y, coords.x + length / 2, coords.y]\r\n    },\r\n    _getLabelAdjustedCoord: function(tick) {\r\n        var that = this;\r\n        var labelCoords = tick.labelCoords;\r\n        var labelY = labelCoords.y;\r\n        var cosSin = vizUtils.getCosAndSin(labelCoords.angle);\r\n        var indentFromAxis = that._options.label.indentFromAxis || 0;\r\n        var box = tick.labelBBox;\r\n        var x;\r\n        var y;\r\n        x = labelCoords.x - _abs(indentFromAxis * cosSin.sin) + _abs(box.width / 2 * cosSin.cos) - box.width / 2;\r\n        y = labelY + (labelY - box.y) - _abs(box.height / 2 * cosSin.sin) + _abs(indentFromAxis * cosSin.cos);\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            var grid = that._getGridPoints(tick.coords);\r\n            return that._renderer.circle(grid.cx, grid.cy, grid.r).attr(gridStyle).sharp()\r\n        }\r\n    },\r\n    _getGridPoints: function(coords) {\r\n        var pos = this.getCenter();\r\n        var radius = vizUtils.getDistance(pos.x, pos.y, coords.x, coords.y);\r\n        if (radius > this.getRadius()) {\r\n            return {\r\n                cx: null,\r\n                cy: null,\r\n                r: null\r\n            }\r\n        }\r\n        return {\r\n            cx: pos.x,\r\n            cy: pos.y,\r\n            r: radius\r\n        }\r\n    },\r\n    _getTranslatedValue: function(value, offset) {\r\n        var startAngle = this.getAngles()[0];\r\n        var xy = convertPolarToXY(this.getCenter(), startAngle, 0, this._translator.translate(value, offset));\r\n        return {\r\n            x: xy.x,\r\n            y: xy.y,\r\n            angle: startAngle - HALF_PI_ANGLE\r\n        }\r\n    },\r\n    _getTranslatedCoord: function(value, offset) {\r\n        return this._translator.translate(value, offset)\r\n    },\r\n    _getCanvasStartEnd: function() {\r\n        var invert = this.getTranslator().getBusinessRange().invert;\r\n        var coords = [0, this.getRadius()];\r\n        invert && coords.reverse();\r\n        return {\r\n            start: coords[0],\r\n            end: coords[1]\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromPoint, toPoint) {\r\n        var center = this.getCenter();\r\n        return {\r\n            x: center.x,\r\n            y: center.y,\r\n            innerRadius: fromPoint,\r\n            outerRadius: toPoint\r\n        }\r\n    },\r\n    _createStrip: function(attrs) {\r\n        return this._renderer.arc(attrs.x, attrs.y, attrs.innerRadius, attrs.outerRadius, 0, 360)\r\n    },\r\n    _getAdjustedStripLabelCoords: circularAxes._getAdjustedStripLabelCoords,\r\n    _getStripLabelCoords: function(from, to) {\r\n        var that = this;\r\n        var labelPos = from + (to - from) / 2;\r\n        var center = that.getCenter();\r\n        var y = _round(center.y - labelPos);\r\n        return {\r\n            x: center.x,\r\n            y: y,\r\n            align: constants.center\r\n        }\r\n    },\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        var center = this.getCenter();\r\n        return {\r\n            cx: center.x,\r\n            cy: center.y,\r\n            r: value\r\n        }\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        var attrs = this._getConstantLineGraphicAttributes(value);\r\n        return this._renderer.circle(attrs.cx, attrs.cy, attrs.r).attr(attr).sharp()\r\n    },\r\n    _getConstantLineLabelsCoords: function(value) {\r\n        var that = this;\r\n        var center = that.getCenter();\r\n        var y = _round(center.y - value);\r\n        return {\r\n            x: center.x,\r\n            y: y\r\n        }\r\n    },\r\n    _checkAlignmentConstantLineLabels: _noop,\r\n    _rotateTick: function(element, coords, isGridLine) {\r\n        !isGridLine && element.rotate(coords.angle + HALF_PI_ANGLE, coords.x, coords.y)\r\n    },\r\n    _validateOverlappingMode: circularAxes._validateOverlappingMode,\r\n    _validateDisplayMode: circularAxes._validateDisplayMode,\r\n    _getStep: function(boxes) {\r\n        var quarter = getPolarQuarter(this.getAngles()[0]);\r\n        var spacing = this._options.label.minSpacing;\r\n        var func = 2 === quarter || 4 === quarter ? function(box) {\r\n            return box.width + spacing\r\n        } : function(box) {\r\n            return box.height\r\n        };\r\n        var maxLabelLength = boxes.reduce(function(prevValue, box) {\r\n            return _math.max(prevValue, func(box))\r\n        }, 0);\r\n        return constants.getTicksCountInRange(this._majorTicks, 2 === quarter || 4 === quarter ? \"x\" : \"y\", maxLabelLength)\r\n    }\r\n};\r\npolarAxes.linearSpider = _extend({}, polarAxes.linear, {\r\n    _createPathElement: function(points, attr) {\r\n        return this._renderer.path(points, \"area\").attr(attr).sharp()\r\n    },\r\n    setSpiderTicks: function(ticks) {\r\n        this._spiderTicks = ticks\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle, element) {\r\n            return that._createPathElement(that._getGridPoints(tick.coords).points, gridStyle)\r\n        }\r\n    },\r\n    _getGridPoints: function(coords) {\r\n        var pos = this.getCenter();\r\n        var radius = vizUtils.getDistance(pos.x, pos.y, coords.x, coords.y);\r\n        return this._getGridPointsByRadius(radius)\r\n    },\r\n    _getGridPointsByRadius: function(radius) {\r\n        var pos = this.getCenter();\r\n        if (radius > this.getRadius()) {\r\n            return {\r\n                points: null\r\n            }\r\n        }\r\n        return {\r\n            points: _map(this._spiderTicks, function(tick) {\r\n                var cosSin = vizUtils.getCosAndSin(tick.coords.angle);\r\n                return {\r\n                    x: _round(pos.x + radius * cosSin.cos),\r\n                    y: _round(pos.y + radius * cosSin.sin)\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromPoint, toPoint) {\r\n        var innerPoints = this._getGridPointsByRadius(toPoint).points;\r\n        var outerPoints = this._getGridPointsByRadius(fromPoint).points;\r\n        return {\r\n            points: [outerPoints, innerPoints.reverse()]\r\n        }\r\n    },\r\n    _createStrip: polarAxes.circularSpider._createStrip,\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        return this._getGridPointsByRadius(value)\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr)\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}