{"ast":null,"code":"/**\r\n * DevExtreme (ui/resizable.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\");\n\nvar eventsEngine = require(\"../events/core/events_engine\");\n\nvar registerComponent = require(\"../core/component_registrator\");\n\nvar commonUtils = require(\"../core/utils/common\");\n\nvar extend = require(\"../core/utils/extend\").extend;\n\nvar inArray = require(\"../core/utils/array\").inArray;\n\nvar each = require(\"../core/utils/iterator\").each;\n\nvar typeUtils = require(\"../core/utils/type\");\n\nvar windowUtils = require(\"../core/utils/window\");\n\nvar translator = require(\"../animation/translator\");\n\nvar fitIntoRange = require(\"../core/utils/math\").fitIntoRange;\n\nvar DOMComponent = require(\"../core/dom_component\");\n\nvar eventUtils = require(\"../events/utils\");\n\nvar dragEvents = require(\"../events/drag\");\n\nvar isPlainObject = typeUtils.isPlainObject;\nvar isFunction = typeUtils.isFunction;\n\nvar domUtils = require(\"../core/utils/dom\");\n\nvar RESIZABLE = \"dxResizable\";\nvar RESIZABLE_CLASS = \"dx-resizable\";\nvar RESIZABLE_RESIZING_CLASS = \"dx-resizable-resizing\";\nvar RESIZABLE_HANDLE_CLASS = \"dx-resizable-handle\";\nvar RESIZABLE_HANDLE_TOP_CLASS = \"dx-resizable-handle-top\";\nvar RESIZABLE_HANDLE_BOTTOM_CLASS = \"dx-resizable-handle-bottom\";\nvar RESIZABLE_HANDLE_LEFT_CLASS = \"dx-resizable-handle-left\";\nvar RESIZABLE_HANDLE_RIGHT_CLASS = \"dx-resizable-handle-right\";\nvar RESIZABLE_HANDLE_CORNER_CLASS = \"dx-resizable-handle-corner\";\nvar DRAGSTART_START_EVENT_NAME = eventUtils.addNamespace(dragEvents.start, RESIZABLE);\nvar DRAGSTART_EVENT_NAME = eventUtils.addNamespace(dragEvents.move, RESIZABLE);\nvar DRAGSTART_END_EVENT_NAME = eventUtils.addNamespace(dragEvents.end, RESIZABLE);\nvar SIDE_BORDER_WIDTH_STYLES = {\n  left: \"borderLeftWidth\",\n  top: \"borderTopWidth\",\n  right: \"borderRightWidth\",\n  bottom: \"borderBottomWidth\"\n};\nvar Resizable = DOMComponent.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      handles: \"all\",\n      step: \"1\",\n      stepPrecision: \"simple\",\n      area: void 0,\n      minWidth: 30,\n      maxWidth: 1 / 0,\n      minHeight: 30,\n      maxHeight: 1 / 0,\n      onResizeStart: null,\n      onResize: null,\n      onResizeEnd: null,\n      roundStepValue: true\n    });\n  },\n  _init: function _init() {\n    this.callBase();\n    this.$element().addClass(RESIZABLE_CLASS);\n  },\n  _initMarkup: function _initMarkup() {\n    this.callBase();\n\n    this._renderHandles();\n  },\n  _render: function _render() {\n    this.callBase();\n\n    this._renderActions();\n  },\n  _renderActions: function _renderActions() {\n    this._resizeStartAction = this._createActionByOption(\"onResizeStart\");\n    this._resizeEndAction = this._createActionByOption(\"onResizeEnd\");\n    this._resizeAction = this._createActionByOption(\"onResize\");\n  },\n  _renderHandles: function _renderHandles() {\n    var handles = this.option(\"handles\");\n\n    if (\"none\" === handles) {\n      return;\n    }\n\n    var directions = \"all\" === handles ? [\"top\", \"bottom\", \"left\", \"right\"] : handles.split(\" \");\n    each(directions, function (index, handleName) {\n      this._renderHandle(handleName);\n    }.bind(this));\n    inArray(\"bottom\", directions) + 1 && inArray(\"right\", directions) + 1 && this._renderHandle(\"corner-bottom-right\");\n    inArray(\"bottom\", directions) + 1 && inArray(\"left\", directions) + 1 && this._renderHandle(\"corner-bottom-left\");\n    inArray(\"top\", directions) + 1 && inArray(\"right\", directions) + 1 && this._renderHandle(\"corner-top-right\");\n    inArray(\"top\", directions) + 1 && inArray(\"left\", directions) + 1 && this._renderHandle(\"corner-top-left\");\n  },\n  _renderHandle: function _renderHandle(handleName) {\n    var $element = this.$element();\n    var $handle = $(\"<div>\");\n    $handle.addClass(RESIZABLE_HANDLE_CLASS).addClass(RESIZABLE_HANDLE_CLASS + \"-\" + handleName).appendTo($element);\n\n    this._attachEventHandlers($handle);\n  },\n  _attachEventHandlers: function _attachEventHandlers($handle) {\n    if (this.option(\"disabled\")) {\n      return;\n    }\n\n    var handlers = {};\n    handlers[DRAGSTART_START_EVENT_NAME] = this._dragStartHandler.bind(this);\n    handlers[DRAGSTART_EVENT_NAME] = this._dragHandler.bind(this);\n    handlers[DRAGSTART_END_EVENT_NAME] = this._dragEndHandler.bind(this);\n    eventsEngine.on($handle, handlers, {\n      direction: \"both\",\n      immediate: true\n    });\n  },\n  _dragStartHandler: function _dragStartHandler(e) {\n    var $element = this.$element();\n\n    if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\n      e.cancel = true;\n      return;\n    }\n\n    this._toggleResizingClass(true);\n\n    this._movingSides = this._getMovingSides(e);\n    this._elementLocation = translator.locate($element);\n    var elementRect = $element.get(0).getBoundingClientRect();\n    this._elementSize = {\n      width: elementRect.width,\n      height: elementRect.height\n    };\n\n    this._renderDragOffsets(e);\n\n    this._resizeStartAction({\n      event: e,\n      width: this._elementSize.width,\n      height: this._elementSize.height,\n      handles: this._movingSides\n    });\n\n    e.targetElements = null;\n  },\n  _toggleResizingClass: function _toggleResizingClass(value) {\n    this.$element().toggleClass(RESIZABLE_RESIZING_CLASS, value);\n  },\n  _renderDragOffsets: function _renderDragOffsets(e) {\n    var area = this._getArea();\n\n    if (!area) {\n      return;\n    }\n\n    var $handle = $(e.target).closest(\".\" + RESIZABLE_HANDLE_CLASS);\n    var handleWidth = $handle.outerWidth();\n    var handleHeight = $handle.outerHeight();\n    var handleOffset = $handle.offset();\n    var areaOffset = area.offset;\n\n    var scrollOffset = this._getAreaScrollOffset();\n\n    e.maxLeftOffset = handleOffset.left - areaOffset.left - scrollOffset.scrollX;\n    e.maxRightOffset = areaOffset.left + area.width - handleOffset.left - handleWidth + scrollOffset.scrollX;\n    e.maxTopOffset = handleOffset.top - areaOffset.top - scrollOffset.scrollY;\n    e.maxBottomOffset = areaOffset.top + area.height - handleOffset.top - handleHeight + scrollOffset.scrollY;\n  },\n  _getBorderWidth: function _getBorderWidth($element, direction) {\n    if (typeUtils.isWindow($element.get(0))) {\n      return 0;\n    }\n\n    var borderWidth = $element.css(SIDE_BORDER_WIDTH_STYLES[direction]);\n    return parseInt(borderWidth) || 0;\n  },\n  _dragHandler: function _dragHandler(e) {\n    var $element = this.$element();\n    var sides = this._movingSides;\n    var location = this._elementLocation;\n    var size = this._elementSize;\n\n    var offset = this._getOffset(e);\n\n    var width = size.width + offset.x * (sides.left ? -1 : 1);\n    var height = size.height + offset.y * (sides.top ? -1 : 1);\n\n    if (offset.x || \"strict\" === this.option(\"stepPrecision\")) {\n      this._renderWidth(width);\n    }\n\n    if (offset.y || \"strict\" === this.option(\"stepPrecision\")) {\n      this._renderHeight(height);\n    }\n\n    var elementRect = $element.get(0).getBoundingClientRect();\n    var offsetTop = offset.y - ((elementRect.height || height) - height);\n    var offsetLeft = offset.x - ((elementRect.width || width) - width);\n    translator.move($element, {\n      top: location.top + (sides.top ? offsetTop : 0),\n      left: location.left + (sides.left ? offsetLeft : 0)\n    });\n\n    this._resizeAction({\n      event: e,\n      width: this.option(\"width\") || width,\n      height: this.option(\"height\") || height,\n      handles: this._movingSides\n    });\n\n    domUtils.triggerResizeEvent($element);\n  },\n  _getOffset: function _getOffset(e) {\n    var offset = e.offset;\n    var steps = commonUtils.pairToObject(this.option(\"step\"), !this.option(\"roundStepValue\"));\n\n    var sides = this._getMovingSides(e);\n\n    var strictPrecision = \"strict\" === this.option(\"stepPrecision\");\n\n    if (!sides.left && !sides.right) {\n      offset.x = 0;\n    }\n\n    if (!sides.top && !sides.bottom) {\n      offset.y = 0;\n    }\n\n    return strictPrecision ? this._getStrictOffset(offset, steps, sides) : this._getSimpleOffset(offset, steps);\n  },\n  _getSimpleOffset: function _getSimpleOffset(offset, steps) {\n    return {\n      x: offset.x - offset.x % steps.h,\n      y: offset.y - offset.y % steps.v\n    };\n  },\n  _getStrictOffset: function _getStrictOffset(offset, steps, sides) {\n    var location = this._elementLocation;\n    var size = this._elementSize;\n    var xPos = sides.left ? location.left : location.left + size.width;\n    var yPos = sides.top ? location.top : location.top + size.height;\n    var newXShift = (xPos + offset.x) % steps.h;\n    var newYShift = (yPos + offset.y) % steps.v;\n\n    var sign = Math.sign || function (x) {\n      x = +x;\n\n      if (0 === x || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n\n    var separatorOffset = function separatorOffset(steps, offset) {\n      return (1 + .2 * sign(offset)) % 1 * steps;\n    };\n\n    var isSmallOffset = function isSmallOffset(offset, steps) {\n      return Math.abs(offset) < .2 * steps;\n    };\n\n    var newOffsetX = offset.x - newXShift;\n    var newOffsetY = offset.y - newYShift;\n\n    if (newXShift > separatorOffset(steps.h, offset.x)) {\n      newOffsetX += steps.h;\n    }\n\n    if (newYShift > separatorOffset(steps.v, offset.y)) {\n      newOffsetY += steps.v;\n    }\n\n    return {\n      x: (sides.left || sides.right) && !isSmallOffset(offset.x, steps.h) ? newOffsetX : 0,\n      y: (sides.top || sides.bottom) && !isSmallOffset(offset.y, steps.v) ? newOffsetY : 0\n    };\n  },\n  _getMovingSides: function _getMovingSides(e) {\n    var $target = $(e.target);\n    var hasCornerTopLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-left\");\n    var hasCornerTopRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-right\");\n    var hasCornerBottomLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-left\");\n    var hasCornerBottomRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-right\");\n    return {\n      top: $target.hasClass(RESIZABLE_HANDLE_TOP_CLASS) || hasCornerTopLeftClass || hasCornerTopRightClass,\n      left: $target.hasClass(RESIZABLE_HANDLE_LEFT_CLASS) || hasCornerTopLeftClass || hasCornerBottomLeftClass,\n      bottom: $target.hasClass(RESIZABLE_HANDLE_BOTTOM_CLASS) || hasCornerBottomLeftClass || hasCornerBottomRightClass,\n      right: $target.hasClass(RESIZABLE_HANDLE_RIGHT_CLASS) || hasCornerTopRightClass || hasCornerBottomRightClass\n    };\n  },\n  _getArea: function _getArea() {\n    var area = this.option(\"area\");\n\n    if (isFunction(area)) {\n      area = area.call(this);\n    }\n\n    if (isPlainObject(area)) {\n      return this._getAreaFromObject(area);\n    }\n\n    return this._getAreaFromElement(area);\n  },\n  _getAreaScrollOffset: function _getAreaScrollOffset() {\n    var area = this.option(\"area\");\n    var isElement = !isFunction(area) && !isPlainObject(area);\n    var scrollOffset = {\n      scrollY: 0,\n      scrollX: 0\n    };\n\n    if (isElement) {\n      var areaElement = $(area)[0];\n\n      if (typeUtils.isWindow(areaElement)) {\n        scrollOffset.scrollX = areaElement.pageXOffset;\n        scrollOffset.scrollY = areaElement.pageYOffset;\n      }\n    }\n\n    return scrollOffset;\n  },\n  _getAreaFromObject: function _getAreaFromObject(area) {\n    var result = {\n      width: area.right - area.left,\n      height: area.bottom - area.top,\n      offset: {\n        left: area.left,\n        top: area.top\n      }\n    };\n\n    this._correctAreaGeometry(result);\n\n    return result;\n  },\n  _getAreaFromElement: function _getAreaFromElement(area) {\n    var $area = $(area);\n    var result;\n\n    if ($area.length) {\n      result = {\n        width: $area.innerWidth(),\n        height: $area.innerHeight(),\n        offset: extend({\n          top: 0,\n          left: 0\n        }, typeUtils.isWindow($area[0]) ? {} : $area.offset())\n      };\n\n      this._correctAreaGeometry(result, $area);\n    }\n\n    return result;\n  },\n  _correctAreaGeometry: function _correctAreaGeometry(result, $area) {\n    var areaBorderLeft = $area ? this._getBorderWidth($area, \"left\") : 0;\n    var areaBorderTop = $area ? this._getBorderWidth($area, \"top\") : 0;\n    result.offset.left += areaBorderLeft + this._getBorderWidth(this.$element(), \"left\");\n    result.offset.top += areaBorderTop + this._getBorderWidth(this.$element(), \"top\");\n    result.width -= this.$element().outerWidth() - this.$element().innerWidth();\n    result.height -= this.$element().outerHeight() - this.$element().innerHeight();\n  },\n  _dragEndHandler: function _dragEndHandler(e) {\n    var $element = this.$element();\n\n    this._resizeEndAction({\n      event: e,\n      width: $element.outerWidth(),\n      height: $element.outerHeight(),\n      handles: this._movingSides\n    });\n\n    this._toggleResizingClass(false);\n  },\n  _renderWidth: function _renderWidth(width) {\n    this.option(\"width\", fitIntoRange(width, this.option(\"minWidth\"), this.option(\"maxWidth\")));\n  },\n  _renderHeight: function _renderHeight(height) {\n    this.option(\"height\", fitIntoRange(height, this.option(\"minHeight\"), this.option(\"maxHeight\")));\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"disabled\":\n      case \"handles\":\n        this._invalidate();\n\n        break;\n\n      case \"minWidth\":\n      case \"maxWidth\":\n        windowUtils.hasWindow() && this._renderWidth(this.$element().outerWidth());\n        break;\n\n      case \"minHeight\":\n      case \"maxHeight\":\n        windowUtils.hasWindow() && this._renderHeight(this.$element().outerHeight());\n        break;\n\n      case \"onResize\":\n      case \"onResizeStart\":\n      case \"onResizeEnd\":\n        this._renderActions();\n\n        break;\n\n      case \"area\":\n      case \"stepPrecision\":\n      case \"step\":\n      case \"roundStepValue\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _clean: function _clean() {\n    this.$element().find(\".\" + RESIZABLE_HANDLE_CLASS).remove();\n  }\n});\nregisterComponent(RESIZABLE, Resizable);\nmodule.exports = Resizable;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/resizable.js"],"names":["$","require","eventsEngine","registerComponent","commonUtils","extend","inArray","each","typeUtils","windowUtils","translator","fitIntoRange","DOMComponent","eventUtils","dragEvents","isPlainObject","isFunction","domUtils","RESIZABLE","RESIZABLE_CLASS","RESIZABLE_RESIZING_CLASS","RESIZABLE_HANDLE_CLASS","RESIZABLE_HANDLE_TOP_CLASS","RESIZABLE_HANDLE_BOTTOM_CLASS","RESIZABLE_HANDLE_LEFT_CLASS","RESIZABLE_HANDLE_RIGHT_CLASS","RESIZABLE_HANDLE_CORNER_CLASS","DRAGSTART_START_EVENT_NAME","addNamespace","start","DRAGSTART_EVENT_NAME","move","DRAGSTART_END_EVENT_NAME","end","SIDE_BORDER_WIDTH_STYLES","left","top","right","bottom","Resizable","inherit","_getDefaultOptions","callBase","handles","step","stepPrecision","area","minWidth","maxWidth","minHeight","maxHeight","onResizeStart","onResize","onResizeEnd","roundStepValue","_init","$element","addClass","_initMarkup","_renderHandles","_render","_renderActions","_resizeStartAction","_createActionByOption","_resizeEndAction","_resizeAction","option","directions","split","index","handleName","_renderHandle","bind","$handle","appendTo","_attachEventHandlers","handlers","_dragStartHandler","_dragHandler","_dragEndHandler","on","direction","immediate","e","is","cancel","_toggleResizingClass","_movingSides","_getMovingSides","_elementLocation","locate","elementRect","get","getBoundingClientRect","_elementSize","width","height","_renderDragOffsets","event","targetElements","value","toggleClass","_getArea","target","closest","handleWidth","outerWidth","handleHeight","outerHeight","handleOffset","offset","areaOffset","scrollOffset","_getAreaScrollOffset","maxLeftOffset","scrollX","maxRightOffset","maxTopOffset","scrollY","maxBottomOffset","_getBorderWidth","isWindow","borderWidth","css","parseInt","sides","location","size","_getOffset","x","y","_renderWidth","_renderHeight","offsetTop","offsetLeft","triggerResizeEvent","steps","pairToObject","strictPrecision","_getStrictOffset","_getSimpleOffset","h","v","xPos","yPos","newXShift","newYShift","sign","Math","isNaN","separatorOffset","isSmallOffset","abs","newOffsetX","newOffsetY","$target","hasCornerTopLeftClass","hasClass","hasCornerTopRightClass","hasCornerBottomLeftClass","hasCornerBottomRightClass","call","_getAreaFromObject","_getAreaFromElement","isElement","areaElement","pageXOffset","pageYOffset","result","_correctAreaGeometry","$area","length","innerWidth","innerHeight","areaBorderLeft","areaBorderTop","_optionChanged","args","name","_invalidate","hasWindow","_clean","find","remove","module","exports","default"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/resizable.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar eventsEngine = require(\"../events/core/events_engine\");\r\nvar registerComponent = require(\"../core/component_registrator\");\r\nvar commonUtils = require(\"../core/utils/common\");\r\nvar extend = require(\"../core/utils/extend\").extend;\r\nvar inArray = require(\"../core/utils/array\").inArray;\r\nvar each = require(\"../core/utils/iterator\").each;\r\nvar typeUtils = require(\"../core/utils/type\");\r\nvar windowUtils = require(\"../core/utils/window\");\r\nvar translator = require(\"../animation/translator\");\r\nvar fitIntoRange = require(\"../core/utils/math\").fitIntoRange;\r\nvar DOMComponent = require(\"../core/dom_component\");\r\nvar eventUtils = require(\"../events/utils\");\r\nvar dragEvents = require(\"../events/drag\");\r\nvar isPlainObject = typeUtils.isPlainObject;\r\nvar isFunction = typeUtils.isFunction;\r\nvar domUtils = require(\"../core/utils/dom\");\r\nvar RESIZABLE = \"dxResizable\";\r\nvar RESIZABLE_CLASS = \"dx-resizable\";\r\nvar RESIZABLE_RESIZING_CLASS = \"dx-resizable-resizing\";\r\nvar RESIZABLE_HANDLE_CLASS = \"dx-resizable-handle\";\r\nvar RESIZABLE_HANDLE_TOP_CLASS = \"dx-resizable-handle-top\";\r\nvar RESIZABLE_HANDLE_BOTTOM_CLASS = \"dx-resizable-handle-bottom\";\r\nvar RESIZABLE_HANDLE_LEFT_CLASS = \"dx-resizable-handle-left\";\r\nvar RESIZABLE_HANDLE_RIGHT_CLASS = \"dx-resizable-handle-right\";\r\nvar RESIZABLE_HANDLE_CORNER_CLASS = \"dx-resizable-handle-corner\";\r\nvar DRAGSTART_START_EVENT_NAME = eventUtils.addNamespace(dragEvents.start, RESIZABLE);\r\nvar DRAGSTART_EVENT_NAME = eventUtils.addNamespace(dragEvents.move, RESIZABLE);\r\nvar DRAGSTART_END_EVENT_NAME = eventUtils.addNamespace(dragEvents.end, RESIZABLE);\r\nvar SIDE_BORDER_WIDTH_STYLES = {\r\n    left: \"borderLeftWidth\",\r\n    top: \"borderTopWidth\",\r\n    right: \"borderRightWidth\",\r\n    bottom: \"borderBottomWidth\"\r\n};\r\nvar Resizable = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            handles: \"all\",\r\n            step: \"1\",\r\n            stepPrecision: \"simple\",\r\n            area: void 0,\r\n            minWidth: 30,\r\n            maxWidth: 1 / 0,\r\n            minHeight: 30,\r\n            maxHeight: 1 / 0,\r\n            onResizeStart: null,\r\n            onResize: null,\r\n            onResizeEnd: null,\r\n            roundStepValue: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RESIZABLE_CLASS)\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderHandles()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderActions()\r\n    },\r\n    _renderActions: function() {\r\n        this._resizeStartAction = this._createActionByOption(\"onResizeStart\");\r\n        this._resizeEndAction = this._createActionByOption(\"onResizeEnd\");\r\n        this._resizeAction = this._createActionByOption(\"onResize\")\r\n    },\r\n    _renderHandles: function() {\r\n        var handles = this.option(\"handles\");\r\n        if (\"none\" === handles) {\r\n            return\r\n        }\r\n        var directions = \"all\" === handles ? [\"top\", \"bottom\", \"left\", \"right\"] : handles.split(\" \");\r\n        each(directions, function(index, handleName) {\r\n            this._renderHandle(handleName)\r\n        }.bind(this));\r\n        inArray(\"bottom\", directions) + 1 && inArray(\"right\", directions) + 1 && this._renderHandle(\"corner-bottom-right\");\r\n        inArray(\"bottom\", directions) + 1 && inArray(\"left\", directions) + 1 && this._renderHandle(\"corner-bottom-left\");\r\n        inArray(\"top\", directions) + 1 && inArray(\"right\", directions) + 1 && this._renderHandle(\"corner-top-right\");\r\n        inArray(\"top\", directions) + 1 && inArray(\"left\", directions) + 1 && this._renderHandle(\"corner-top-left\")\r\n    },\r\n    _renderHandle: function(handleName) {\r\n        var $element = this.$element();\r\n        var $handle = $(\"<div>\");\r\n        $handle.addClass(RESIZABLE_HANDLE_CLASS).addClass(RESIZABLE_HANDLE_CLASS + \"-\" + handleName).appendTo($element);\r\n        this._attachEventHandlers($handle)\r\n    },\r\n    _attachEventHandlers: function($handle) {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var handlers = {};\r\n        handlers[DRAGSTART_START_EVENT_NAME] = this._dragStartHandler.bind(this);\r\n        handlers[DRAGSTART_EVENT_NAME] = this._dragHandler.bind(this);\r\n        handlers[DRAGSTART_END_EVENT_NAME] = this._dragEndHandler.bind(this);\r\n        eventsEngine.on($handle, handlers, {\r\n            direction: \"both\",\r\n            immediate: true\r\n        })\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this.$element();\r\n        if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        this._toggleResizingClass(true);\r\n        this._movingSides = this._getMovingSides(e);\r\n        this._elementLocation = translator.locate($element);\r\n        var elementRect = $element.get(0).getBoundingClientRect();\r\n        this._elementSize = {\r\n            width: elementRect.width,\r\n            height: elementRect.height\r\n        };\r\n        this._renderDragOffsets(e);\r\n        this._resizeStartAction({\r\n            event: e,\r\n            width: this._elementSize.width,\r\n            height: this._elementSize.height,\r\n            handles: this._movingSides\r\n        });\r\n        e.targetElements = null\r\n    },\r\n    _toggleResizingClass: function(value) {\r\n        this.$element().toggleClass(RESIZABLE_RESIZING_CLASS, value)\r\n    },\r\n    _renderDragOffsets: function(e) {\r\n        var area = this._getArea();\r\n        if (!area) {\r\n            return\r\n        }\r\n        var $handle = $(e.target).closest(\".\" + RESIZABLE_HANDLE_CLASS);\r\n        var handleWidth = $handle.outerWidth();\r\n        var handleHeight = $handle.outerHeight();\r\n        var handleOffset = $handle.offset();\r\n        var areaOffset = area.offset;\r\n        var scrollOffset = this._getAreaScrollOffset();\r\n        e.maxLeftOffset = handleOffset.left - areaOffset.left - scrollOffset.scrollX;\r\n        e.maxRightOffset = areaOffset.left + area.width - handleOffset.left - handleWidth + scrollOffset.scrollX;\r\n        e.maxTopOffset = handleOffset.top - areaOffset.top - scrollOffset.scrollY;\r\n        e.maxBottomOffset = areaOffset.top + area.height - handleOffset.top - handleHeight + scrollOffset.scrollY\r\n    },\r\n    _getBorderWidth: function($element, direction) {\r\n        if (typeUtils.isWindow($element.get(0))) {\r\n            return 0\r\n        }\r\n        var borderWidth = $element.css(SIDE_BORDER_WIDTH_STYLES[direction]);\r\n        return parseInt(borderWidth) || 0\r\n    },\r\n    _dragHandler: function(e) {\r\n        var $element = this.$element();\r\n        var sides = this._movingSides;\r\n        var location = this._elementLocation;\r\n        var size = this._elementSize;\r\n        var offset = this._getOffset(e);\r\n        var width = size.width + offset.x * (sides.left ? -1 : 1);\r\n        var height = size.height + offset.y * (sides.top ? -1 : 1);\r\n        if (offset.x || \"strict\" === this.option(\"stepPrecision\")) {\r\n            this._renderWidth(width)\r\n        }\r\n        if (offset.y || \"strict\" === this.option(\"stepPrecision\")) {\r\n            this._renderHeight(height)\r\n        }\r\n        var elementRect = $element.get(0).getBoundingClientRect();\r\n        var offsetTop = offset.y - ((elementRect.height || height) - height);\r\n        var offsetLeft = offset.x - ((elementRect.width || width) - width);\r\n        translator.move($element, {\r\n            top: location.top + (sides.top ? offsetTop : 0),\r\n            left: location.left + (sides.left ? offsetLeft : 0)\r\n        });\r\n        this._resizeAction({\r\n            event: e,\r\n            width: this.option(\"width\") || width,\r\n            height: this.option(\"height\") || height,\r\n            handles: this._movingSides\r\n        });\r\n        domUtils.triggerResizeEvent($element)\r\n    },\r\n    _getOffset: function(e) {\r\n        var offset = e.offset;\r\n        var steps = commonUtils.pairToObject(this.option(\"step\"), !this.option(\"roundStepValue\"));\r\n        var sides = this._getMovingSides(e);\r\n        var strictPrecision = \"strict\" === this.option(\"stepPrecision\");\r\n        if (!sides.left && !sides.right) {\r\n            offset.x = 0\r\n        }\r\n        if (!sides.top && !sides.bottom) {\r\n            offset.y = 0\r\n        }\r\n        return strictPrecision ? this._getStrictOffset(offset, steps, sides) : this._getSimpleOffset(offset, steps)\r\n    },\r\n    _getSimpleOffset: function(offset, steps) {\r\n        return {\r\n            x: offset.x - offset.x % steps.h,\r\n            y: offset.y - offset.y % steps.v\r\n        }\r\n    },\r\n    _getStrictOffset: function(offset, steps, sides) {\r\n        var location = this._elementLocation;\r\n        var size = this._elementSize;\r\n        var xPos = sides.left ? location.left : location.left + size.width;\r\n        var yPos = sides.top ? location.top : location.top + size.height;\r\n        var newXShift = (xPos + offset.x) % steps.h;\r\n        var newYShift = (yPos + offset.y) % steps.v;\r\n        var sign = Math.sign || function(x) {\r\n            x = +x;\r\n            if (0 === x || isNaN(x)) {\r\n                return x\r\n            }\r\n            return x > 0 ? 1 : -1\r\n        };\r\n        var separatorOffset = function(steps, offset) {\r\n            return (1 + .2 * sign(offset)) % 1 * steps\r\n        };\r\n        var isSmallOffset = function(offset, steps) {\r\n            return Math.abs(offset) < .2 * steps\r\n        };\r\n        var newOffsetX = offset.x - newXShift;\r\n        var newOffsetY = offset.y - newYShift;\r\n        if (newXShift > separatorOffset(steps.h, offset.x)) {\r\n            newOffsetX += steps.h\r\n        }\r\n        if (newYShift > separatorOffset(steps.v, offset.y)) {\r\n            newOffsetY += steps.v\r\n        }\r\n        return {\r\n            x: (sides.left || sides.right) && !isSmallOffset(offset.x, steps.h) ? newOffsetX : 0,\r\n            y: (sides.top || sides.bottom) && !isSmallOffset(offset.y, steps.v) ? newOffsetY : 0\r\n        }\r\n    },\r\n    _getMovingSides: function(e) {\r\n        var $target = $(e.target);\r\n        var hasCornerTopLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-left\");\r\n        var hasCornerTopRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-right\");\r\n        var hasCornerBottomLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-left\");\r\n        var hasCornerBottomRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-right\");\r\n        return {\r\n            top: $target.hasClass(RESIZABLE_HANDLE_TOP_CLASS) || hasCornerTopLeftClass || hasCornerTopRightClass,\r\n            left: $target.hasClass(RESIZABLE_HANDLE_LEFT_CLASS) || hasCornerTopLeftClass || hasCornerBottomLeftClass,\r\n            bottom: $target.hasClass(RESIZABLE_HANDLE_BOTTOM_CLASS) || hasCornerBottomLeftClass || hasCornerBottomRightClass,\r\n            right: $target.hasClass(RESIZABLE_HANDLE_RIGHT_CLASS) || hasCornerTopRightClass || hasCornerBottomRightClass\r\n        }\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"area\");\r\n        if (isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        if (isPlainObject(area)) {\r\n            return this._getAreaFromObject(area)\r\n        }\r\n        return this._getAreaFromElement(area)\r\n    },\r\n    _getAreaScrollOffset: function() {\r\n        var area = this.option(\"area\");\r\n        var isElement = !isFunction(area) && !isPlainObject(area);\r\n        var scrollOffset = {\r\n            scrollY: 0,\r\n            scrollX: 0\r\n        };\r\n        if (isElement) {\r\n            var areaElement = $(area)[0];\r\n            if (typeUtils.isWindow(areaElement)) {\r\n                scrollOffset.scrollX = areaElement.pageXOffset;\r\n                scrollOffset.scrollY = areaElement.pageYOffset\r\n            }\r\n        }\r\n        return scrollOffset\r\n    },\r\n    _getAreaFromObject: function(area) {\r\n        var result = {\r\n            width: area.right - area.left,\r\n            height: area.bottom - area.top,\r\n            offset: {\r\n                left: area.left,\r\n                top: area.top\r\n            }\r\n        };\r\n        this._correctAreaGeometry(result);\r\n        return result\r\n    },\r\n    _getAreaFromElement: function(area) {\r\n        var $area = $(area);\r\n        var result;\r\n        if ($area.length) {\r\n            result = {\r\n                width: $area.innerWidth(),\r\n                height: $area.innerHeight(),\r\n                offset: extend({\r\n                    top: 0,\r\n                    left: 0\r\n                }, typeUtils.isWindow($area[0]) ? {} : $area.offset())\r\n            };\r\n            this._correctAreaGeometry(result, $area)\r\n        }\r\n        return result\r\n    },\r\n    _correctAreaGeometry: function(result, $area) {\r\n        var areaBorderLeft = $area ? this._getBorderWidth($area, \"left\") : 0;\r\n        var areaBorderTop = $area ? this._getBorderWidth($area, \"top\") : 0;\r\n        result.offset.left += areaBorderLeft + this._getBorderWidth(this.$element(), \"left\");\r\n        result.offset.top += areaBorderTop + this._getBorderWidth(this.$element(), \"top\");\r\n        result.width -= this.$element().outerWidth() - this.$element().innerWidth();\r\n        result.height -= this.$element().outerHeight() - this.$element().innerHeight()\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        var $element = this.$element();\r\n        this._resizeEndAction({\r\n            event: e,\r\n            width: $element.outerWidth(),\r\n            height: $element.outerHeight(),\r\n            handles: this._movingSides\r\n        });\r\n        this._toggleResizingClass(false)\r\n    },\r\n    _renderWidth: function(width) {\r\n        this.option(\"width\", fitIntoRange(width, this.option(\"minWidth\"), this.option(\"maxWidth\")))\r\n    },\r\n    _renderHeight: function(height) {\r\n        this.option(\"height\", fitIntoRange(height, this.option(\"minHeight\"), this.option(\"maxHeight\")))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"disabled\":\r\n            case \"handles\":\r\n                this._invalidate();\r\n                break;\r\n            case \"minWidth\":\r\n            case \"maxWidth\":\r\n                windowUtils.hasWindow() && this._renderWidth(this.$element().outerWidth());\r\n                break;\r\n            case \"minHeight\":\r\n            case \"maxHeight\":\r\n                windowUtils.hasWindow() && this._renderHeight(this.$element().outerHeight());\r\n                break;\r\n            case \"onResize\":\r\n            case \"onResizeStart\":\r\n            case \"onResizeEnd\":\r\n                this._renderActions();\r\n                break;\r\n            case \"area\":\r\n            case \"stepPrecision\":\r\n            case \"step\":\r\n            case \"roundStepValue\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this.$element().find(\".\" + RESIZABLE_HANDLE_CLASS).remove()\r\n    }\r\n});\r\nregisterComponent(RESIZABLE, Resizable);\r\nmodule.exports = Resizable;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}