{"ast":null,"code":"/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.selection.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\");\n\nvar eventsEngine = require(\"../../events/core/events_engine\");\n\nvar clickEvent = require(\"../../events/click\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar errors = require(\"../widget/ui.errors\");\n\nvar CheckBox = require(\"../check_box\");\n\nvar RadioButton = require(\"../radio_group/radio_button\");\n\nvar eventUtils = require(\"../../events/utils\");\n\nvar registerDecorator = require(\"./ui.list.edit.decorator_registry\").register;\n\nvar EditDecorator = require(\"./ui.list.edit.decorator\");\n\nvar SELECT_DECORATOR_ENABLED_CLASS = \"dx-list-select-decorator-enabled\";\nvar SELECT_DECORATOR_SELECT_ALL_CLASS = \"dx-list-select-all\";\nvar SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS = \"dx-list-select-all-checkbox\";\nvar SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS = \"dx-list-select-all-label\";\nvar SELECT_CHECKBOX_CONTAINER_CLASS = \"dx-list-select-checkbox-container\";\nvar SELECT_CHECKBOX_CLASS = \"dx-list-select-checkbox\";\nvar SELECT_RADIO_BUTTON_CONTAINER_CLASS = \"dx-list-select-radiobutton-container\";\nvar SELECT_RADIO_BUTTON_CLASS = \"dx-list-select-radiobutton\";\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\nvar CLICK_EVENT_NAME = eventUtils.addNamespace(clickEvent.name, \"dxListEditDecorator\");\nregisterDecorator(\"selection\", \"default\", EditDecorator.inherit({\n  _init: function _init() {\n    this.callBase.apply(this, arguments);\n\n    var selectionMode = this._list.option(\"selectionMode\");\n\n    this._singleStrategy = \"single\" === selectionMode;\n    this._containerClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CONTAINER_CLASS : SELECT_CHECKBOX_CONTAINER_CLASS;\n    this._controlClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CLASS : SELECT_CHECKBOX_CLASS;\n    this._controlWidget = this._singleStrategy ? RadioButton : CheckBox;\n\n    this._list.$element().addClass(SELECT_DECORATOR_ENABLED_CLASS);\n  },\n  beforeBag: function beforeBag(config) {\n    var $itemElement = config.$itemElement;\n    var $container = config.$container;\n    var $control = $(\"<div>\").addClass(this._controlClass);\n    new this._controlWidget($control, extend(this._commonOptions(), {\n      value: this._isSelected($itemElement),\n      focusStateEnabled: false,\n      hoverStateEnabled: false,\n      onValueChanged: function (e) {\n        this._processCheckedState($itemElement, e.value);\n\n        e.event && e.event.stopPropagation();\n      }.bind(this)\n    }));\n    $container.addClass(this._containerClass);\n    $container.append($control);\n  },\n  modifyElement: function modifyElement(config) {\n    this.callBase.apply(this, arguments);\n    var $itemElement = config.$itemElement;\n\n    var control = this._controlWidget.getInstance($itemElement.find(\".\" + this._controlClass));\n\n    eventsEngine.on($itemElement, \"stateChanged\", function (e, state) {\n      control.option(\"value\", state);\n    }.bind(this));\n  },\n  _updateSelectAllState: function _updateSelectAllState() {\n    if (!this._$selectAll) {\n      return;\n    }\n\n    this._selectAllCheckBox.option(\"value\", this._list.isSelectAll());\n  },\n  afterRender: function afterRender() {\n    if (\"all\" !== this._list.option(\"selectionMode\")) {\n      return;\n    }\n\n    if (!this._$selectAll) {\n      this._renderSelectAll();\n    } else {\n      this._updateSelectAllState();\n    }\n  },\n  handleKeyboardEvents: function handleKeyboardEvents(currentFocusedIndex, moveFocusUp) {\n    var moveFocusDown = !moveFocusUp;\n    var list = this._list;\n    var $selectAll = this._$selectAll;\n\n    var lastItemIndex = list._getLastItemIndex();\n\n    var isFocusOutOfList = moveFocusUp && 0 === currentFocusedIndex || moveFocusDown && currentFocusedIndex === lastItemIndex;\n    var hasSelectAllItem = !!$selectAll;\n\n    if (hasSelectAllItem && isFocusOutOfList) {\n      list.option(\"focusedElement\", $selectAll);\n      list.scrollToItem(list.option(\"focusedElement\"));\n      return true;\n    }\n\n    return false;\n  },\n  handleEnterPressing: function handleEnterPressing() {\n    if (this._$selectAll && this._$selectAll.hasClass(FOCUSED_STATE_CLASS)) {\n      this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"));\n\n      return true;\n    }\n  },\n  _renderSelectAll: function _renderSelectAll() {\n    var $selectAll = this._$selectAll = $(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CLASS);\n    var list = this._list;\n\n    var downArrowHandler = list._supportedKeys().downArrow.bind(list);\n\n    this._selectAllCheckBox = list._createComponent($(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS).appendTo($selectAll), CheckBox, {\n      focusStateEnabled: false,\n      hoverStateEnabled: false\n    });\n\n    this._selectAllCheckBox.registerKeyHandler(\"downArrow\", downArrowHandler);\n\n    $(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS).text(this._list.option(\"selectAllText\")).appendTo($selectAll);\n\n    this._list.itemsContainer().prepend($selectAll);\n\n    this._updateSelectAllState();\n\n    this._attachSelectAllHandler();\n  },\n  _attachSelectAllHandler: function _attachSelectAllHandler() {\n    this._selectAllCheckBox.option(\"onValueChanged\", this._selectAllHandler.bind(this));\n\n    eventsEngine.off(this._$selectAll, CLICK_EVENT_NAME);\n    eventsEngine.on(this._$selectAll, CLICK_EVENT_NAME, this._selectAllClickHandler.bind(this));\n  },\n  _selectAllHandler: function _selectAllHandler(e) {\n    e.event && e.event.stopPropagation();\n\n    var isSelectedAll = this._selectAllCheckBox.option(\"value\");\n\n    var result = this._list._createActionByOption(\"onSelectAllValueChanged\")({\n      value: isSelectedAll\n    });\n\n    if (false === result) {\n      return;\n    }\n\n    if (true === isSelectedAll) {\n      this._selectAllItems();\n    } else {\n      if (false === isSelectedAll) {\n        this._unselectAllItems();\n      }\n    }\n  },\n  _checkSelectAllCapability: function _checkSelectAllCapability() {\n    var list = this._list;\n    var dataSource = list.getDataSource();\n\n    if (\"allPages\" === list.option(\"selectAllMode\") && list.option(\"grouped\") && (!dataSource || !dataSource.group())) {\n      errors.log(\"W1010\");\n      return false;\n    }\n\n    return true;\n  },\n  _selectAllItems: function _selectAllItems() {\n    if (!this._checkSelectAllCapability()) {\n      return;\n    }\n\n    this._list._selection.selectAll(\"page\" === this._list.option(\"selectAllMode\"));\n  },\n  _unselectAllItems: function _unselectAllItems() {\n    if (!this._checkSelectAllCapability()) {\n      return;\n    }\n\n    this._list._selection.deselectAll(\"page\" === this._list.option(\"selectAllMode\"));\n  },\n  _selectAllClickHandler: function _selectAllClickHandler() {\n    this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"));\n  },\n  _isSelected: function _isSelected($itemElement) {\n    return this._list.isItemSelected($itemElement);\n  },\n  _processCheckedState: function _processCheckedState($itemElement, checked) {\n    if (checked) {\n      this._list.selectItem($itemElement);\n    } else {\n      this._list.unselectItem($itemElement);\n    }\n  },\n  dispose: function dispose() {\n    this._disposeSelectAll();\n\n    this._list.$element().removeClass(SELECT_DECORATOR_ENABLED_CLASS);\n\n    this.callBase.apply(this, arguments);\n  },\n  _disposeSelectAll: function _disposeSelectAll() {\n    if (this._$selectAll) {\n      this._$selectAll.remove();\n\n      this._$selectAll = null;\n    }\n  }\n}));","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/list/ui.list.edit.decorator.selection.js"],"names":["$","require","eventsEngine","clickEvent","extend","errors","CheckBox","RadioButton","eventUtils","registerDecorator","register","EditDecorator","SELECT_DECORATOR_ENABLED_CLASS","SELECT_DECORATOR_SELECT_ALL_CLASS","SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS","SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS","SELECT_CHECKBOX_CONTAINER_CLASS","SELECT_CHECKBOX_CLASS","SELECT_RADIO_BUTTON_CONTAINER_CLASS","SELECT_RADIO_BUTTON_CLASS","FOCUSED_STATE_CLASS","CLICK_EVENT_NAME","addNamespace","name","inherit","_init","callBase","apply","arguments","selectionMode","_list","option","_singleStrategy","_containerClass","_controlClass","_controlWidget","$element","addClass","beforeBag","config","$itemElement","$container","$control","_commonOptions","value","_isSelected","focusStateEnabled","hoverStateEnabled","onValueChanged","e","_processCheckedState","event","stopPropagation","bind","append","modifyElement","control","getInstance","find","on","state","_updateSelectAllState","_$selectAll","_selectAllCheckBox","isSelectAll","afterRender","_renderSelectAll","handleKeyboardEvents","currentFocusedIndex","moveFocusUp","moveFocusDown","list","$selectAll","lastItemIndex","_getLastItemIndex","isFocusOutOfList","hasSelectAllItem","scrollToItem","handleEnterPressing","hasClass","downArrowHandler","_supportedKeys","downArrow","_createComponent","appendTo","registerKeyHandler","text","itemsContainer","prepend","_attachSelectAllHandler","_selectAllHandler","off","_selectAllClickHandler","isSelectedAll","result","_createActionByOption","_selectAllItems","_unselectAllItems","_checkSelectAllCapability","dataSource","getDataSource","group","log","_selection","selectAll","deselectAll","isItemSelected","checked","selectItem","unselectItem","dispose","_disposeSelectAll","removeClass","remove"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.selection.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\");\r\nvar eventsEngine = require(\"../../events/core/events_engine\");\r\nvar clickEvent = require(\"../../events/click\");\r\nvar extend = require(\"../../core/utils/extend\").extend;\r\nvar errors = require(\"../widget/ui.errors\");\r\nvar CheckBox = require(\"../check_box\");\r\nvar RadioButton = require(\"../radio_group/radio_button\");\r\nvar eventUtils = require(\"../../events/utils\");\r\nvar registerDecorator = require(\"./ui.list.edit.decorator_registry\").register;\r\nvar EditDecorator = require(\"./ui.list.edit.decorator\");\r\nvar SELECT_DECORATOR_ENABLED_CLASS = \"dx-list-select-decorator-enabled\";\r\nvar SELECT_DECORATOR_SELECT_ALL_CLASS = \"dx-list-select-all\";\r\nvar SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS = \"dx-list-select-all-checkbox\";\r\nvar SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS = \"dx-list-select-all-label\";\r\nvar SELECT_CHECKBOX_CONTAINER_CLASS = \"dx-list-select-checkbox-container\";\r\nvar SELECT_CHECKBOX_CLASS = \"dx-list-select-checkbox\";\r\nvar SELECT_RADIO_BUTTON_CONTAINER_CLASS = \"dx-list-select-radiobutton-container\";\r\nvar SELECT_RADIO_BUTTON_CLASS = \"dx-list-select-radiobutton\";\r\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar CLICK_EVENT_NAME = eventUtils.addNamespace(clickEvent.name, \"dxListEditDecorator\");\r\nregisterDecorator(\"selection\", \"default\", EditDecorator.inherit({\r\n    _init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        var selectionMode = this._list.option(\"selectionMode\");\r\n        this._singleStrategy = \"single\" === selectionMode;\r\n        this._containerClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CONTAINER_CLASS : SELECT_CHECKBOX_CONTAINER_CLASS;\r\n        this._controlClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CLASS : SELECT_CHECKBOX_CLASS;\r\n        this._controlWidget = this._singleStrategy ? RadioButton : CheckBox;\r\n        this._list.$element().addClass(SELECT_DECORATOR_ENABLED_CLASS)\r\n    },\r\n    beforeBag: function(config) {\r\n        var $itemElement = config.$itemElement;\r\n        var $container = config.$container;\r\n        var $control = $(\"<div>\").addClass(this._controlClass);\r\n        new this._controlWidget($control, extend(this._commonOptions(), {\r\n            value: this._isSelected($itemElement),\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            onValueChanged: function(e) {\r\n                this._processCheckedState($itemElement, e.value);\r\n                e.event && e.event.stopPropagation()\r\n            }.bind(this)\r\n        }));\r\n        $container.addClass(this._containerClass);\r\n        $container.append($control)\r\n    },\r\n    modifyElement: function(config) {\r\n        this.callBase.apply(this, arguments);\r\n        var $itemElement = config.$itemElement;\r\n        var control = this._controlWidget.getInstance($itemElement.find(\".\" + this._controlClass));\r\n        eventsEngine.on($itemElement, \"stateChanged\", function(e, state) {\r\n            control.option(\"value\", state)\r\n        }.bind(this))\r\n    },\r\n    _updateSelectAllState: function() {\r\n        if (!this._$selectAll) {\r\n            return\r\n        }\r\n        this._selectAllCheckBox.option(\"value\", this._list.isSelectAll())\r\n    },\r\n    afterRender: function() {\r\n        if (\"all\" !== this._list.option(\"selectionMode\")) {\r\n            return\r\n        }\r\n        if (!this._$selectAll) {\r\n            this._renderSelectAll()\r\n        } else {\r\n            this._updateSelectAllState()\r\n        }\r\n    },\r\n    handleKeyboardEvents: function(currentFocusedIndex, moveFocusUp) {\r\n        var moveFocusDown = !moveFocusUp;\r\n        var list = this._list;\r\n        var $selectAll = this._$selectAll;\r\n        var lastItemIndex = list._getLastItemIndex();\r\n        var isFocusOutOfList = moveFocusUp && 0 === currentFocusedIndex || moveFocusDown && currentFocusedIndex === lastItemIndex;\r\n        var hasSelectAllItem = !!$selectAll;\r\n        if (hasSelectAllItem && isFocusOutOfList) {\r\n            list.option(\"focusedElement\", $selectAll);\r\n            list.scrollToItem(list.option(\"focusedElement\"));\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    handleEnterPressing: function() {\r\n        if (this._$selectAll && this._$selectAll.hasClass(FOCUSED_STATE_CLASS)) {\r\n            this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"));\r\n            return true\r\n        }\r\n    },\r\n    _renderSelectAll: function() {\r\n        var $selectAll = this._$selectAll = $(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CLASS);\r\n        var list = this._list;\r\n        var downArrowHandler = list._supportedKeys().downArrow.bind(list);\r\n        this._selectAllCheckBox = list._createComponent($(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS).appendTo($selectAll), CheckBox, {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false\r\n        });\r\n        this._selectAllCheckBox.registerKeyHandler(\"downArrow\", downArrowHandler);\r\n        $(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS).text(this._list.option(\"selectAllText\")).appendTo($selectAll);\r\n        this._list.itemsContainer().prepend($selectAll);\r\n        this._updateSelectAllState();\r\n        this._attachSelectAllHandler()\r\n    },\r\n    _attachSelectAllHandler: function() {\r\n        this._selectAllCheckBox.option(\"onValueChanged\", this._selectAllHandler.bind(this));\r\n        eventsEngine.off(this._$selectAll, CLICK_EVENT_NAME);\r\n        eventsEngine.on(this._$selectAll, CLICK_EVENT_NAME, this._selectAllClickHandler.bind(this))\r\n    },\r\n    _selectAllHandler: function(e) {\r\n        e.event && e.event.stopPropagation();\r\n        var isSelectedAll = this._selectAllCheckBox.option(\"value\");\r\n        var result = this._list._createActionByOption(\"onSelectAllValueChanged\")({\r\n            value: isSelectedAll\r\n        });\r\n        if (false === result) {\r\n            return\r\n        }\r\n        if (true === isSelectedAll) {\r\n            this._selectAllItems()\r\n        } else {\r\n            if (false === isSelectedAll) {\r\n                this._unselectAllItems()\r\n            }\r\n        }\r\n    },\r\n    _checkSelectAllCapability: function() {\r\n        var list = this._list;\r\n        var dataSource = list.getDataSource();\r\n        if (\"allPages\" === list.option(\"selectAllMode\") && list.option(\"grouped\") && (!dataSource || !dataSource.group())) {\r\n            errors.log(\"W1010\");\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _selectAllItems: function() {\r\n        if (!this._checkSelectAllCapability()) {\r\n            return\r\n        }\r\n        this._list._selection.selectAll(\"page\" === this._list.option(\"selectAllMode\"))\r\n    },\r\n    _unselectAllItems: function() {\r\n        if (!this._checkSelectAllCapability()) {\r\n            return\r\n        }\r\n        this._list._selection.deselectAll(\"page\" === this._list.option(\"selectAllMode\"))\r\n    },\r\n    _selectAllClickHandler: function() {\r\n        this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"))\r\n    },\r\n    _isSelected: function($itemElement) {\r\n        return this._list.isItemSelected($itemElement)\r\n    },\r\n    _processCheckedState: function($itemElement, checked) {\r\n        if (checked) {\r\n            this._list.selectItem($itemElement)\r\n        } else {\r\n            this._list.unselectItem($itemElement)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._disposeSelectAll();\r\n        this._list.$element().removeClass(SELECT_DECORATOR_ENABLED_CLASS);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _disposeSelectAll: function() {\r\n        if (this._$selectAll) {\r\n            this._$selectAll.remove();\r\n            this._$selectAll = null\r\n        }\r\n    }\r\n}));\r\n"]},"metadata":{},"sourceType":"script"}