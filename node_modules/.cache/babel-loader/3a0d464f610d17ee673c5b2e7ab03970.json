{"ast":null,"code":"/**\r\n * DevExtreme (ui/text_box/ui.text_editor.base.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _dom_adapter = require(\"../../core/dom_adapter\");\n\nvar _dom_adapter2 = _interopRequireDefault(_dom_adapter);\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _dom = require(\"../../core/utils/dom\");\n\nvar _dom2 = _interopRequireDefault(_dom);\n\nvar _selectors = require(\"../widget/selectors\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _themes = require(\"../themes\");\n\nvar _themes2 = _interopRequireDefault(_themes);\n\nvar _editor = require(\"../editor/editor\");\n\nvar _editor2 = _interopRequireDefault(_editor);\n\nvar _utils = require(\"../../events/utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _pointer = require(\"../../events/pointer\");\n\nvar _pointer2 = _interopRequireDefault(_pointer);\n\nvar _uiText_editor = require(\"./ui.text_editor.clear\");\n\nvar _uiText_editor2 = _interopRequireDefault(_uiText_editor);\n\nvar _index = require(\"./texteditor_button_collection/index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _config = require(\"../../core/config\");\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _ui = require(\"../widget/ui.errors\");\n\nvar _ui2 = _interopRequireDefault(_ui);\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _load_indicator = require(\"../load_indicator\");\n\nvar _load_indicator2 = _interopRequireDefault(_load_indicator);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar TEXTEDITOR_CLASS = \"dx-texteditor\";\nvar TEXTEDITOR_INPUT_CONTAINER_CLASS = \"dx-texteditor-input-container\";\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\nvar TEXTEDITOR_INPUT_SELECTOR = \".\" + TEXTEDITOR_INPUT_CLASS;\nvar TEXTEDITOR_CONTAINER_CLASS = \"dx-texteditor-container\";\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\nvar TEXTEDITOR_PLACEHOLDER_CLASS = \"dx-placeholder\";\nvar TEXTEDITOR_EMPTY_INPUT_CLASS = \"dx-texteditor-empty\";\nvar TEXTEDITOR_STYLING_MODE_PREFIX = \"dx-editor-\";\nvar ALLOWED_STYLE_CLASSES = [TEXTEDITOR_STYLING_MODE_PREFIX + \"outlined\", TEXTEDITOR_STYLING_MODE_PREFIX + \"filled\", TEXTEDITOR_STYLING_MODE_PREFIX + \"underlined\"];\nvar STATE_INVISIBLE_CLASS = \"dx-state-invisible\";\nvar TEXTEDITOR_PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\nvar TEXTEDITOR_VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\nvar TEXTEDITOR_VALID_CLASS = \"dx-valid\";\nvar EVENTS_LIST = [\"KeyDown\", \"KeyPress\", \"KeyUp\", \"Change\", \"Cut\", \"Copy\", \"Paste\", \"Input\"];\nvar CONTROL_KEYS = [\"tab\", \"enter\", \"shift\", \"control\", \"alt\", \"escape\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"upArrow\", \"rightArrow\", \"downArrow\"];\n\nfunction checkButtonsOptionType(buttons) {\n  if ((0, _type.isDefined)(buttons) && !Array.isArray(buttons)) {\n    throw _ui2.default.Error(\"E1053\");\n  }\n}\n\nvar TextEditorBase = _editor2.default.inherit({\n  ctor: function ctor(_, options) {\n    if (options) {\n      checkButtonsOptionType(options.buttons);\n    }\n\n    this._buttonCollection = new _index2.default(this, this._getDefaultButtons());\n    this._$beforeButtonsContainer = null;\n    this._$afterButtonsContainer = null;\n    this.callBase.apply(this, arguments);\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return (0, _extend.extend)(this.callBase(), {\n      buttons: void 0,\n      value: \"\",\n      spellcheck: false,\n      showClearButton: false,\n      valueChangeEvent: \"change\",\n      placeholder: \"\",\n      inputAttr: {},\n      onFocusIn: null,\n      onFocusOut: null,\n      onKeyDown: null,\n      onKeyPress: null,\n      onKeyUp: null,\n      onChange: null,\n      onInput: null,\n      onCut: null,\n      onCopy: null,\n      onPaste: null,\n      onEnterKey: null,\n      mode: \"text\",\n      hoverStateEnabled: true,\n      focusStateEnabled: true,\n      text: void 0,\n      displayValueFormatter: function displayValueFormatter(value) {\n        return (0, _type.isDefined)(value) && false !== value ? value : \"\";\n      },\n      stylingMode: (0, _config2.default)().editorStylingMode || \"outlined\"\n    });\n  },\n  _defaultOptionsRules: function _defaultOptionsRules() {\n    var themeName = _themes2.default.current();\n\n    return this.callBase().concat([{\n      device: function device() {\n        return _themes2.default.isMaterial(themeName);\n      },\n      options: {\n        stylingMode: (0, _config2.default)().editorStylingMode || \"underlined\"\n      }\n    }]);\n  },\n  _getDefaultButtons: function _getDefaultButtons() {\n    return [{\n      name: \"clear\",\n      Ctor: _uiText_editor2.default\n    }];\n  },\n  _isClearButtonVisible: function _isClearButtonVisible() {\n    return this.option(\"showClearButton\") && !this.option(\"readOnly\");\n  },\n  _input: function _input() {\n    return this.$element().find(TEXTEDITOR_INPUT_SELECTOR).first();\n  },\n  _isFocused: function _isFocused() {\n    return (0, _selectors.focused)(this._input()) || this.callBase();\n  },\n  _inputWrapper: function _inputWrapper() {\n    return this.$element();\n  },\n  _buttonsContainer: function _buttonsContainer() {\n    return this._inputWrapper().find(\".\" + TEXTEDITOR_BUTTONS_CONTAINER_CLASS).eq(0);\n  },\n  _isControlKey: function _isControlKey(key) {\n    return CONTROL_KEYS.indexOf(key) !== -1;\n  },\n  _renderStylingMode: function _renderStylingMode() {\n    var _this = this;\n\n    var optionName = \"stylingMode\";\n    var optionValue = this.option(optionName);\n    ALLOWED_STYLE_CLASSES.forEach(function (className) {\n      return _this.$element().removeClass(className);\n    });\n    var stylingModeClass = TEXTEDITOR_STYLING_MODE_PREFIX + optionValue;\n\n    if (ALLOWED_STYLE_CLASSES.indexOf(stylingModeClass) === -1) {\n      var defaultOptionValue = this._getDefaultOptions()[optionName];\n\n      var platformOptionValue = this._convertRulesToOptions(this._defaultOptionsRules())[optionName];\n\n      stylingModeClass = TEXTEDITOR_STYLING_MODE_PREFIX + (platformOptionValue || defaultOptionValue);\n    }\n\n    this.$element().addClass(stylingModeClass);\n\n    this._updateButtonsStyling(optionValue);\n  },\n  _initMarkup: function _initMarkup() {\n    this.$element().addClass(TEXTEDITOR_CLASS);\n\n    this._renderInput();\n\n    this._renderStylingMode();\n\n    this._renderInputType();\n\n    this._renderPlaceholder();\n\n    this._renderProps();\n\n    this.callBase();\n\n    this._renderValue();\n  },\n  _render: function _render() {\n    this._renderPlaceholder();\n\n    this._refreshValueChangeEvent();\n\n    this._renderEvents();\n\n    this._renderEnterKeyAction();\n\n    this._renderEmptinessEvent();\n\n    this.callBase();\n  },\n  _renderInput: function _renderInput() {\n    this._$textEditorContainer = (0, _renderer2.default)(\"<div>\").addClass(TEXTEDITOR_CONTAINER_CLASS).appendTo(this.$element());\n    this._$textEditorInputContainer = (0, _renderer2.default)(\"<div>\").addClass(TEXTEDITOR_INPUT_CONTAINER_CLASS).appendTo(this._$textEditorContainer);\n\n    this._$textEditorInputContainer.append(this._createInput());\n\n    this._renderButtonContainers();\n  },\n  _getInputContainer: function _getInputContainer() {\n    return this._$textEditorInputContainer;\n  },\n  _renderPendingIndicator: function _renderPendingIndicator() {\n    this.$element().addClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\n\n    var $inputContainer = this._getInputContainer();\n\n    var $indicatorElement = (0, _renderer2.default)(\"<div>\").addClass(TEXTEDITOR_PENDING_INDICATOR_CLASS).appendTo($inputContainer);\n    this._pendingIndicator = this._createComponent($indicatorElement, _load_indicator2.default);\n  },\n  _disposePendingIndicator: function _disposePendingIndicator() {\n    if (!this._pendingIndicator) {\n      return;\n    }\n\n    this._pendingIndicator.dispose();\n\n    this._pendingIndicator.$element().remove();\n\n    this._pendingIndicator = null;\n    this.$element().removeClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\n  },\n  _renderValidationState: function _renderValidationState() {\n    this.callBase();\n    var isPending = \"pending\" === this.option(\"validationStatus\");\n    var $element = this.$element();\n\n    if (isPending) {\n      !this._pendingIndicator && this._renderPendingIndicator();\n      this._showValidMark = false;\n    } else {\n      if (\"invalid\" === this.option(\"validationStatus\")) {\n        this._showValidMark = false;\n      }\n\n      if (!this._showValidMark) {\n        this._showValidMark = \"valid\" === this.option(\"validationStatus\") && !!this._pendingIndicator;\n      }\n\n      this._disposePendingIndicator();\n    }\n\n    $element.toggleClass(TEXTEDITOR_VALID_CLASS, this._showValidMark);\n  },\n  _renderButtonContainers: function _renderButtonContainers() {\n    var buttons = this.option(\"buttons\");\n    this._$beforeButtonsContainer = this._buttonCollection.renderBeforeButtons(buttons, this._$textEditorContainer);\n    this._$afterButtonsContainer = this._buttonCollection.renderAfterButtons(buttons, this._$textEditorContainer);\n  },\n  _clean: function _clean() {\n    this._buttonCollection.clean();\n\n    this._disposePendingIndicator();\n\n    this._$beforeButtonsContainer = null;\n    this._$afterButtonsContainer = null;\n    this._$textEditorContainer = null;\n    this.callBase();\n  },\n  _createInput: function _createInput() {\n    var $input = (0, _renderer2.default)(\"<input>\");\n\n    this._applyInputAttributes($input, this.option(\"inputAttr\"));\n\n    return $input;\n  },\n  _setSubmitElementName: function _setSubmitElementName(name) {\n    var inputAttrName = this.option(\"inputAttr.name\");\n    return this.callBase(name || inputAttrName || \"\");\n  },\n  _applyInputAttributes: function _applyInputAttributes($input, customAttributes) {\n    $input.attr(\"autocomplete\", \"off\").attr(customAttributes).addClass(TEXTEDITOR_INPUT_CLASS).css(\"minHeight\", this.option(\"height\") ? \"0\" : \"\");\n  },\n  _updateButtons: function _updateButtons(names) {\n    this._buttonCollection.updateButtons(names);\n  },\n  _updateButtonsStyling: function _updateButtonsStyling(editorStylingMode) {\n    var _this2 = this;\n\n    (0, _iterator.each)(this.option(\"buttons\"), function (_, buttonOptions) {\n      if (buttonOptions.options && !buttonOptions.options.stylingMode) {\n        var buttonInstance = _this2.getButton(buttonOptions.name);\n\n        buttonInstance.option && buttonInstance.option(\"stylingMode\", \"underlined\" === editorStylingMode ? \"text\" : \"contained\");\n      }\n    });\n  },\n  _renderValue: function _renderValue() {\n    var renderInputPromise = this._renderInputValue();\n\n    return renderInputPromise.promise();\n  },\n  _renderInputValue: function _renderInputValue(value) {\n    value = value || this.option(\"value\");\n    var text = this.option(\"text\");\n    var displayValue = this.option(\"displayValue\");\n    var displayValueFormatter = this.option(\"displayValueFormatter\");\n\n    if (void 0 !== displayValue && null !== value) {\n      text = displayValueFormatter(displayValue);\n    } else {\n      if (!(0, _type.isDefined)(text)) {\n        text = displayValueFormatter(value);\n      }\n    }\n\n    this.option(\"text\", text);\n\n    if (this._input().val() !== ((0, _type.isDefined)(text) ? text : \"\")) {\n      this._renderDisplayText(text);\n    } else {\n      this._toggleEmptinessEventHandler();\n    }\n\n    return new _deferred.Deferred().resolve();\n  },\n  _renderDisplayText: function _renderDisplayText(text) {\n    this._input().val(text);\n\n    this._toggleEmptinessEventHandler();\n  },\n  _isValueValid: function _isValueValid() {\n    if (this._input().length) {\n      var validity = this._input().get(0).validity;\n\n      if (validity) {\n        return validity.valid;\n      }\n    }\n\n    return true;\n  },\n  _toggleEmptiness: function _toggleEmptiness(isEmpty) {\n    this.$element().toggleClass(TEXTEDITOR_EMPTY_INPUT_CLASS, isEmpty);\n\n    this._togglePlaceholder(isEmpty);\n  },\n  _togglePlaceholder: function _togglePlaceholder(isEmpty) {\n    if (!this._$placeholder) {\n      return;\n    }\n\n    this._$placeholder.toggleClass(STATE_INVISIBLE_CLASS, !isEmpty);\n  },\n  _renderProps: function _renderProps() {\n    this._toggleReadOnlyState();\n\n    this._toggleSpellcheckState();\n\n    this._toggleTabIndex();\n  },\n  _toggleDisabledState: function _toggleDisabledState(value) {\n    this.callBase.apply(this, arguments);\n\n    var $input = this._input();\n\n    if (value) {\n      $input.attr(\"disabled\", true);\n    } else {\n      $input.removeAttr(\"disabled\");\n    }\n  },\n  _toggleTabIndex: function _toggleTabIndex() {\n    var $input = this._input();\n\n    var disabled = this.option(\"disabled\");\n    var focusStateEnabled = this.option(\"focusStateEnabled\");\n\n    if (disabled || !focusStateEnabled) {\n      $input.attr(\"tabIndex\", -1);\n    } else {\n      $input.removeAttr(\"tabIndex\");\n    }\n  },\n  _toggleReadOnlyState: function _toggleReadOnlyState() {\n    this._input().prop(\"readOnly\", this._readOnlyPropValue());\n\n    this.callBase();\n  },\n  _readOnlyPropValue: function _readOnlyPropValue() {\n    return this.option(\"readOnly\");\n  },\n  _toggleSpellcheckState: function _toggleSpellcheckState() {\n    this._input().prop(\"spellcheck\", this.option(\"spellcheck\"));\n  },\n  _renderPlaceholder: function _renderPlaceholder() {\n    this._renderPlaceholderMarkup();\n\n    this._attachPlaceholderEvents();\n  },\n  _renderPlaceholderMarkup: function _renderPlaceholderMarkup() {\n    if (this._$placeholder) {\n      this._$placeholder.remove();\n\n      this._$placeholder = null;\n    }\n\n    var $input = this._input();\n\n    var placeholderText = this.option(\"placeholder\");\n    var $placeholder = this._$placeholder = (0, _renderer2.default)(\"<div>\").attr(\"data-dx_placeholder\", placeholderText);\n    $placeholder.insertAfter($input);\n    $placeholder.addClass(TEXTEDITOR_PLACEHOLDER_CLASS);\n  },\n  _attachPlaceholderEvents: function _attachPlaceholderEvents() {\n    var _this3 = this;\n\n    var startEvent = _utils2.default.addNamespace(_pointer2.default.up, this.NAME);\n\n    _events_engine2.default.on(this._$placeholder, startEvent, function () {\n      _events_engine2.default.trigger(_this3._input(), \"focus\");\n    });\n\n    this._toggleEmptinessEventHandler();\n  },\n  _placeholder: function _placeholder() {\n    return this._$placeholder || (0, _renderer2.default)();\n  },\n  _clearValueHandler: function _clearValueHandler(e) {\n    var $input = this._input();\n\n    e.stopPropagation();\n\n    this._saveValueChangeEvent(e);\n\n    this._clearValue();\n\n    !this._isFocused() && _events_engine2.default.trigger($input, \"focus\");\n\n    _events_engine2.default.trigger($input, \"input\");\n  },\n  _clearValue: function _clearValue() {\n    this.reset();\n  },\n  _renderEvents: function _renderEvents() {\n    var _this4 = this;\n\n    var $input = this._input();\n\n    (0, _iterator.each)(EVENTS_LIST, function (_, event) {\n      if (_this4.hasActionSubscription(\"on\" + event)) {\n        var action = _this4._createActionByOption(\"on\" + event, {\n          excludeValidators: [\"readOnly\"]\n        });\n\n        _events_engine2.default.on($input, _utils2.default.addNamespace(event.toLowerCase(), _this4.NAME), function (e) {\n          if (_this4._disposed) {\n            return;\n          }\n\n          action({\n            event: e\n          });\n        });\n      }\n    });\n  },\n  _refreshEvents: function _refreshEvents() {\n    var _this5 = this;\n\n    var $input = this._input();\n\n    (0, _iterator.each)(EVENTS_LIST, function (_, event) {\n      _events_engine2.default.off($input, _utils2.default.addNamespace(event.toLowerCase(), _this5.NAME));\n    });\n\n    this._renderEvents();\n  },\n  _keyPressHandler: function _keyPressHandler() {\n    this.option(\"text\", this._input().val());\n  },\n  _keyDownHandler: function _keyDownHandler(e) {\n    var $input = this._input();\n\n    var isCtrlEnter = e.ctrlKey && \"enter\" === _utils2.default.normalizeKeyName(e);\n\n    var isNewValue = $input.val() !== this.option(\"value\");\n\n    if (isCtrlEnter && isNewValue) {\n      _events_engine2.default.trigger($input, \"change\");\n    }\n  },\n  _renderValueChangeEvent: function _renderValueChangeEvent() {\n    var keyPressEvent = _utils2.default.addNamespace(this._renderValueEventName(), \"\".concat(this.NAME, \"TextChange\"));\n\n    var valueChangeEvent = _utils2.default.addNamespace(this.option(\"valueChangeEvent\"), \"\".concat(this.NAME, \"ValueChange\"));\n\n    var keyDownEvent = _utils2.default.addNamespace(\"keydown\", \"\".concat(this.NAME, \"TextChange\"));\n\n    var $input = this._input();\n\n    _events_engine2.default.on($input, keyPressEvent, this._keyPressHandler.bind(this));\n\n    _events_engine2.default.on($input, valueChangeEvent, this._valueChangeEventHandler.bind(this));\n\n    _events_engine2.default.on($input, keyDownEvent, this._keyDownHandler.bind(this));\n  },\n  _cleanValueChangeEvent: function _cleanValueChangeEvent() {\n    var valueChangeNamespace = \".\".concat(this.NAME, \"ValueChange\");\n    var textChangeNamespace = \".\".concat(this.NAME, \"TextChange\");\n\n    _events_engine2.default.off(this._input(), valueChangeNamespace);\n\n    _events_engine2.default.off(this._input(), textChangeNamespace);\n  },\n  _refreshValueChangeEvent: function _refreshValueChangeEvent() {\n    this._cleanValueChangeEvent();\n\n    this._renderValueChangeEvent();\n  },\n  _renderValueEventName: function _renderValueEventName() {\n    return \"input change keypress\";\n  },\n  _focusTarget: function _focusTarget() {\n    return this._input();\n  },\n  _focusEventTarget: function _focusEventTarget() {\n    return this.element();\n  },\n  _preventNestedFocusEvent: function _preventNestedFocusEvent(event) {\n    if (event.isDefaultPrevented()) {\n      return true;\n    }\n\n    var result = this._isNestedTarget(event.relatedTarget);\n\n    if (\"focusin\" === event.type) {\n      result = result && this._isNestedTarget(event.target);\n    }\n\n    result && event.preventDefault();\n    return result;\n  },\n  _isNestedTarget: function _isNestedTarget(target) {\n    return !!this.$element().find(target).length;\n  },\n  _focusClassTarget: function _focusClassTarget() {\n    return this.$element();\n  },\n  _focusInHandler: function _focusInHandler(event) {\n    this._preventNestedFocusEvent(event);\n\n    this.callBase.apply(this, arguments);\n  },\n  _focusOutHandler: function _focusOutHandler(event) {\n    this._preventNestedFocusEvent(event);\n\n    this.callBase.apply(this, arguments);\n  },\n  _toggleFocusClass: function _toggleFocusClass(isFocused, $element) {\n    this.callBase(isFocused, this._focusClassTarget($element));\n  },\n  _hasFocusClass: function _hasFocusClass(element) {\n    return this.callBase((0, _renderer2.default)(element || this.$element()));\n  },\n  _renderEmptinessEvent: function _renderEmptinessEvent() {\n    var $input = this._input();\n\n    _events_engine2.default.on($input, \"input blur\", this._toggleEmptinessEventHandler.bind(this));\n  },\n  _toggleEmptinessEventHandler: function _toggleEmptinessEventHandler() {\n    var text = this._input().val();\n\n    var isEmpty = (\"\" === text || null === text) && this._isValueValid();\n\n    this._toggleEmptiness(isEmpty);\n  },\n  _valueChangeEventHandler: function _valueChangeEventHandler(e, formattedValue) {\n    this._saveValueChangeEvent(e);\n\n    this.option(\"value\", arguments.length > 1 ? formattedValue : this._input().val());\n\n    this._saveValueChangeEvent(void 0);\n  },\n  _renderEnterKeyAction: function _renderEnterKeyAction() {\n    this._enterKeyAction = this._createActionByOption(\"onEnterKey\", {\n      excludeValidators: [\"readOnly\"]\n    });\n\n    _events_engine2.default.off(this._input(), \"keyup.onEnterKey.dxTextEditor\");\n\n    _events_engine2.default.on(this._input(), \"keyup.onEnterKey.dxTextEditor\", this._enterKeyHandlerUp.bind(this));\n  },\n  _enterKeyHandlerUp: function _enterKeyHandlerUp(e) {\n    if (this._disposed) {\n      return;\n    }\n\n    if (\"enter\" === _utils2.default.normalizeKeyName(e)) {\n      this._enterKeyAction({\n        event: e\n      });\n    }\n  },\n  _updateValue: function _updateValue() {\n    this.option(\"text\", void 0);\n\n    this._renderValue();\n  },\n  _dispose: function _dispose() {\n    this._enterKeyAction = void 0;\n    this.callBase();\n  },\n  _getSubmitElement: function _getSubmitElement() {\n    return this._input();\n  },\n  _optionChanged: function _optionChanged(args) {\n    var name = args.name;\n\n    if ((0, _array.inArray)(name.replace(\"on\", \"\"), EVENTS_LIST) > -1) {\n      this._refreshEvents();\n\n      return;\n    }\n\n    switch (name) {\n      case \"valueChangeEvent\":\n        this._refreshValueChangeEvent();\n\n        this._refreshFocusEvent();\n\n        this._refreshEvents();\n\n        break;\n\n      case \"onValueChanged\":\n        this._createValueChangeAction();\n\n        break;\n\n      case \"focusStateEnabled\":\n        this.callBase(args);\n\n        this._toggleTabIndex();\n\n        break;\n\n      case \"spellcheck\":\n        this._toggleSpellcheckState();\n\n        break;\n\n      case \"mode\":\n        this._renderInputType();\n\n        break;\n\n      case \"onEnterKey\":\n        this._renderEnterKeyAction();\n\n        break;\n\n      case \"placeholder\":\n        this._renderPlaceholder();\n\n        break;\n\n      case \"readOnly\":\n      case \"disabled\":\n        this._updateButtons();\n\n        this.callBase(args);\n        break;\n\n      case \"showClearButton\":\n        this._updateButtons([\"clear\"]);\n\n        break;\n\n      case \"text\":\n        break;\n\n      case \"value\":\n        this._updateValue();\n\n        this.callBase(args);\n        break;\n\n      case \"inputAttr\":\n        this._applyInputAttributes(this._input(), args.value);\n\n        break;\n\n      case \"stylingMode\":\n        this._renderStylingMode();\n\n        break;\n\n      case \"buttons\":\n        if (args.fullName === args.name) {\n          checkButtonsOptionType(args.value);\n        }\n\n        this._$beforeButtonsContainer && this._$beforeButtonsContainer.remove();\n        this._$afterButtonsContainer && this._$afterButtonsContainer.remove();\n\n        this._buttonCollection.clean();\n\n        this._renderButtonContainers();\n\n        break;\n\n      case \"displayValueFormatter\":\n        this._invalidate();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _renderInputType: function _renderInputType() {\n    this._setInputType(this.option(\"mode\"));\n  },\n  _setInputType: function _setInputType(type) {\n    var input = this._input();\n\n    if (\"search\" === type) {\n      type = \"text\";\n    }\n\n    try {\n      input.prop(\"type\", type);\n    } catch (e) {\n      input.prop(\"type\", \"text\");\n    }\n  },\n  getButton: function getButton(name) {\n    return this._buttonCollection.getButton(name);\n  },\n  focus: function focus() {\n    _events_engine2.default.trigger(this._input(), \"focus\");\n  },\n  blur: function blur() {\n    if (this._input().is(_dom_adapter2.default.getActiveElement())) {\n      _dom2.default.resetActiveElement();\n    }\n  },\n  reset: function reset() {\n    if (this._showValidMark) {\n      this._showValidMark = false;\n\n      this._renderValidationState();\n    }\n\n    var defaultOptions = this._getDefaultOptions();\n\n    if (this.option(\"value\") === defaultOptions.value) {\n      this.option(\"text\", \"\");\n\n      this._renderValue();\n    } else {\n      this.option(\"value\", defaultOptions.value);\n    }\n  },\n  on: function on(eventName, eventHandler) {\n    var result = this.callBase(eventName, eventHandler);\n    var event = eventName.charAt(0).toUpperCase() + eventName.substr(1);\n\n    if (EVENTS_LIST.indexOf(event) >= 0) {\n      this._refreshEvents();\n    }\n\n    return result;\n  }\n});\n\nmodule.exports = TextEditorBase;","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/ui/text_box/ui.text_editor.base.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_dom_adapter","_dom_adapter2","_events_engine","_events_engine2","_dom","_dom2","_selectors","_type","_extend","_array","_iterator","_themes","_themes2","_editor","_editor2","_utils","_utils2","_pointer","_pointer2","_uiText_editor","_uiText_editor2","_index","_index2","_config","_config2","_ui","_ui2","_deferred","_load_indicator","_load_indicator2","obj","__esModule","TEXTEDITOR_CLASS","TEXTEDITOR_INPUT_CONTAINER_CLASS","TEXTEDITOR_INPUT_CLASS","TEXTEDITOR_INPUT_SELECTOR","TEXTEDITOR_CONTAINER_CLASS","TEXTEDITOR_BUTTONS_CONTAINER_CLASS","TEXTEDITOR_PLACEHOLDER_CLASS","TEXTEDITOR_EMPTY_INPUT_CLASS","TEXTEDITOR_STYLING_MODE_PREFIX","ALLOWED_STYLE_CLASSES","STATE_INVISIBLE_CLASS","TEXTEDITOR_PENDING_INDICATOR_CLASS","TEXTEDITOR_VALIDATION_PENDING_CLASS","TEXTEDITOR_VALID_CLASS","EVENTS_LIST","CONTROL_KEYS","checkButtonsOptionType","buttons","isDefined","Array","isArray","default","Error","TextEditorBase","inherit","ctor","_","options","_buttonCollection","_getDefaultButtons","_$beforeButtonsContainer","_$afterButtonsContainer","callBase","apply","arguments","_getDefaultOptions","extend","value","spellcheck","showClearButton","valueChangeEvent","placeholder","inputAttr","onFocusIn","onFocusOut","onKeyDown","onKeyPress","onKeyUp","onChange","onInput","onCut","onCopy","onPaste","onEnterKey","mode","hoverStateEnabled","focusStateEnabled","text","displayValueFormatter","stylingMode","editorStylingMode","_defaultOptionsRules","themeName","current","concat","device","isMaterial","name","Ctor","_isClearButtonVisible","option","_input","$element","find","first","_isFocused","focused","_inputWrapper","_buttonsContainer","eq","_isControlKey","key","indexOf","_renderStylingMode","_this","optionName","optionValue","forEach","className","removeClass","stylingModeClass","defaultOptionValue","platformOptionValue","_convertRulesToOptions","addClass","_updateButtonsStyling","_initMarkup","_renderInput","_renderInputType","_renderPlaceholder","_renderProps","_renderValue","_render","_refreshValueChangeEvent","_renderEvents","_renderEnterKeyAction","_renderEmptinessEvent","_$textEditorContainer","appendTo","_$textEditorInputContainer","append","_createInput","_renderButtonContainers","_getInputContainer","_renderPendingIndicator","$inputContainer","$indicatorElement","_pendingIndicator","_createComponent","_disposePendingIndicator","dispose","remove","_renderValidationState","isPending","_showValidMark","toggleClass","renderBeforeButtons","renderAfterButtons","_clean","clean","$input","_applyInputAttributes","_setSubmitElementName","inputAttrName","customAttributes","attr","css","_updateButtons","names","updateButtons","_this2","each","buttonOptions","buttonInstance","getButton","renderInputPromise","_renderInputValue","promise","displayValue","val","_renderDisplayText","_toggleEmptinessEventHandler","Deferred","resolve","_isValueValid","length","validity","get","valid","_toggleEmptiness","isEmpty","_togglePlaceholder","_$placeholder","_toggleReadOnlyState","_toggleSpellcheckState","_toggleTabIndex","_toggleDisabledState","removeAttr","disabled","prop","_readOnlyPropValue","_renderPlaceholderMarkup","_attachPlaceholderEvents","placeholderText","$placeholder","insertAfter","_this3","startEvent","addNamespace","up","NAME","on","trigger","_placeholder","_clearValueHandler","e","stopPropagation","_saveValueChangeEvent","_clearValue","reset","_this4","event","hasActionSubscription","action","_createActionByOption","excludeValidators","toLowerCase","_disposed","_refreshEvents","_this5","off","_keyPressHandler","_keyDownHandler","isCtrlEnter","ctrlKey","normalizeKeyName","isNewValue","_renderValueChangeEvent","keyPressEvent","_renderValueEventName","keyDownEvent","bind","_valueChangeEventHandler","_cleanValueChangeEvent","valueChangeNamespace","textChangeNamespace","_focusTarget","_focusEventTarget","element","_preventNestedFocusEvent","isDefaultPrevented","result","_isNestedTarget","relatedTarget","type","target","preventDefault","_focusClassTarget","_focusInHandler","_focusOutHandler","_toggleFocusClass","isFocused","_hasFocusClass","formattedValue","_enterKeyAction","_enterKeyHandlerUp","_updateValue","_dispose","_getSubmitElement","_optionChanged","args","inArray","replace","_refreshFocusEvent","_createValueChangeAction","fullName","_invalidate","_setInputType","input","focus","blur","is","getActiveElement","resetActiveElement","defaultOptions","eventName","eventHandler","charAt","toUpperCase","substr","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/text_box/ui.text_editor.base.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _dom_adapter = require(\"../../core/dom_adapter\");\r\nvar _dom_adapter2 = _interopRequireDefault(_dom_adapter);\r\nvar _events_engine = require(\"../../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _dom2 = _interopRequireDefault(_dom);\r\nvar _selectors = require(\"../widget/selectors\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _themes = require(\"../themes\");\r\nvar _themes2 = _interopRequireDefault(_themes);\r\nvar _editor = require(\"../editor/editor\");\r\nvar _editor2 = _interopRequireDefault(_editor);\r\nvar _utils = require(\"../../events/utils\");\r\nvar _utils2 = _interopRequireDefault(_utils);\r\nvar _pointer = require(\"../../events/pointer\");\r\nvar _pointer2 = _interopRequireDefault(_pointer);\r\nvar _uiText_editor = require(\"./ui.text_editor.clear\");\r\nvar _uiText_editor2 = _interopRequireDefault(_uiText_editor);\r\nvar _index = require(\"./texteditor_button_collection/index\");\r\nvar _index2 = _interopRequireDefault(_index);\r\nvar _config = require(\"../../core/config\");\r\nvar _config2 = _interopRequireDefault(_config);\r\nvar _ui = require(\"../widget/ui.errors\");\r\nvar _ui2 = _interopRequireDefault(_ui);\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _load_indicator = require(\"../load_indicator\");\r\nvar _load_indicator2 = _interopRequireDefault(_load_indicator);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TEXTEDITOR_CLASS = \"dx-texteditor\";\r\nvar TEXTEDITOR_INPUT_CONTAINER_CLASS = \"dx-texteditor-input-container\";\r\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\r\nvar TEXTEDITOR_INPUT_SELECTOR = \".\" + TEXTEDITOR_INPUT_CLASS;\r\nvar TEXTEDITOR_CONTAINER_CLASS = \"dx-texteditor-container\";\r\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\r\nvar TEXTEDITOR_PLACEHOLDER_CLASS = \"dx-placeholder\";\r\nvar TEXTEDITOR_EMPTY_INPUT_CLASS = \"dx-texteditor-empty\";\r\nvar TEXTEDITOR_STYLING_MODE_PREFIX = \"dx-editor-\";\r\nvar ALLOWED_STYLE_CLASSES = [TEXTEDITOR_STYLING_MODE_PREFIX + \"outlined\", TEXTEDITOR_STYLING_MODE_PREFIX + \"filled\", TEXTEDITOR_STYLING_MODE_PREFIX + \"underlined\"];\r\nvar STATE_INVISIBLE_CLASS = \"dx-state-invisible\";\r\nvar TEXTEDITOR_PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\r\nvar TEXTEDITOR_VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\r\nvar TEXTEDITOR_VALID_CLASS = \"dx-valid\";\r\nvar EVENTS_LIST = [\"KeyDown\", \"KeyPress\", \"KeyUp\", \"Change\", \"Cut\", \"Copy\", \"Paste\", \"Input\"];\r\nvar CONTROL_KEYS = [\"tab\", \"enter\", \"shift\", \"control\", \"alt\", \"escape\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"upArrow\", \"rightArrow\", \"downArrow\"];\r\n\r\nfunction checkButtonsOptionType(buttons) {\r\n    if ((0, _type.isDefined)(buttons) && !Array.isArray(buttons)) {\r\n        throw _ui2.default.Error(\"E1053\")\r\n    }\r\n}\r\nvar TextEditorBase = _editor2.default.inherit({\r\n    ctor: function(_, options) {\r\n        if (options) {\r\n            checkButtonsOptionType(options.buttons)\r\n        }\r\n        this._buttonCollection = new _index2.default(this, this._getDefaultButtons());\r\n        this._$beforeButtonsContainer = null;\r\n        this._$afterButtonsContainer = null;\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            buttons: void 0,\r\n            value: \"\",\r\n            spellcheck: false,\r\n            showClearButton: false,\r\n            valueChangeEvent: \"change\",\r\n            placeholder: \"\",\r\n            inputAttr: {},\r\n            onFocusIn: null,\r\n            onFocusOut: null,\r\n            onKeyDown: null,\r\n            onKeyPress: null,\r\n            onKeyUp: null,\r\n            onChange: null,\r\n            onInput: null,\r\n            onCut: null,\r\n            onCopy: null,\r\n            onPaste: null,\r\n            onEnterKey: null,\r\n            mode: \"text\",\r\n            hoverStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            text: void 0,\r\n            displayValueFormatter: function(value) {\r\n                return (0, _type.isDefined)(value) && false !== value ? value : \"\"\r\n            },\r\n            stylingMode: (0, _config2.default)().editorStylingMode || \"outlined\"\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = _themes2.default.current();\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return _themes2.default.isMaterial(themeName)\r\n            },\r\n            options: {\r\n                stylingMode: (0, _config2.default)().editorStylingMode || \"underlined\"\r\n            }\r\n        }])\r\n    },\r\n    _getDefaultButtons: function() {\r\n        return [{\r\n            name: \"clear\",\r\n            Ctor: _uiText_editor2.default\r\n        }]\r\n    },\r\n    _isClearButtonVisible: function() {\r\n        return this.option(\"showClearButton\") && !this.option(\"readOnly\")\r\n    },\r\n    _input: function() {\r\n        return this.$element().find(TEXTEDITOR_INPUT_SELECTOR).first()\r\n    },\r\n    _isFocused: function() {\r\n        return (0, _selectors.focused)(this._input()) || this.callBase()\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element()\r\n    },\r\n    _buttonsContainer: function() {\r\n        return this._inputWrapper().find(\".\" + TEXTEDITOR_BUTTONS_CONTAINER_CLASS).eq(0)\r\n    },\r\n    _isControlKey: function(key) {\r\n        return CONTROL_KEYS.indexOf(key) !== -1\r\n    },\r\n    _renderStylingMode: function() {\r\n        var _this = this;\r\n        var optionName = \"stylingMode\";\r\n        var optionValue = this.option(optionName);\r\n        ALLOWED_STYLE_CLASSES.forEach(function(className) {\r\n            return _this.$element().removeClass(className)\r\n        });\r\n        var stylingModeClass = TEXTEDITOR_STYLING_MODE_PREFIX + optionValue;\r\n        if (ALLOWED_STYLE_CLASSES.indexOf(stylingModeClass) === -1) {\r\n            var defaultOptionValue = this._getDefaultOptions()[optionName];\r\n            var platformOptionValue = this._convertRulesToOptions(this._defaultOptionsRules())[optionName];\r\n            stylingModeClass = TEXTEDITOR_STYLING_MODE_PREFIX + (platformOptionValue || defaultOptionValue)\r\n        }\r\n        this.$element().addClass(stylingModeClass);\r\n        this._updateButtonsStyling(optionValue)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TEXTEDITOR_CLASS);\r\n        this._renderInput();\r\n        this._renderStylingMode();\r\n        this._renderInputType();\r\n        this._renderPlaceholder();\r\n        this._renderProps();\r\n        this.callBase();\r\n        this._renderValue()\r\n    },\r\n    _render: function() {\r\n        this._renderPlaceholder();\r\n        this._refreshValueChangeEvent();\r\n        this._renderEvents();\r\n        this._renderEnterKeyAction();\r\n        this._renderEmptinessEvent();\r\n        this.callBase()\r\n    },\r\n    _renderInput: function() {\r\n        this._$textEditorContainer = (0, _renderer2.default)(\"<div>\").addClass(TEXTEDITOR_CONTAINER_CLASS).appendTo(this.$element());\r\n        this._$textEditorInputContainer = (0, _renderer2.default)(\"<div>\").addClass(TEXTEDITOR_INPUT_CONTAINER_CLASS).appendTo(this._$textEditorContainer);\r\n        this._$textEditorInputContainer.append(this._createInput());\r\n        this._renderButtonContainers()\r\n    },\r\n    _getInputContainer: function() {\r\n        return this._$textEditorInputContainer\r\n    },\r\n    _renderPendingIndicator: function() {\r\n        this.$element().addClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\r\n        var $inputContainer = this._getInputContainer();\r\n        var $indicatorElement = (0, _renderer2.default)(\"<div>\").addClass(TEXTEDITOR_PENDING_INDICATOR_CLASS).appendTo($inputContainer);\r\n        this._pendingIndicator = this._createComponent($indicatorElement, _load_indicator2.default)\r\n    },\r\n    _disposePendingIndicator: function() {\r\n        if (!this._pendingIndicator) {\r\n            return\r\n        }\r\n        this._pendingIndicator.dispose();\r\n        this._pendingIndicator.$element().remove();\r\n        this._pendingIndicator = null;\r\n        this.$element().removeClass(TEXTEDITOR_VALIDATION_PENDING_CLASS)\r\n    },\r\n    _renderValidationState: function() {\r\n        this.callBase();\r\n        var isPending = \"pending\" === this.option(\"validationStatus\");\r\n        var $element = this.$element();\r\n        if (isPending) {\r\n            !this._pendingIndicator && this._renderPendingIndicator();\r\n            this._showValidMark = false\r\n        } else {\r\n            if (\"invalid\" === this.option(\"validationStatus\")) {\r\n                this._showValidMark = false\r\n            }\r\n            if (!this._showValidMark) {\r\n                this._showValidMark = \"valid\" === this.option(\"validationStatus\") && !!this._pendingIndicator\r\n            }\r\n            this._disposePendingIndicator()\r\n        }\r\n        $element.toggleClass(TEXTEDITOR_VALID_CLASS, this._showValidMark)\r\n    },\r\n    _renderButtonContainers: function() {\r\n        var buttons = this.option(\"buttons\");\r\n        this._$beforeButtonsContainer = this._buttonCollection.renderBeforeButtons(buttons, this._$textEditorContainer);\r\n        this._$afterButtonsContainer = this._buttonCollection.renderAfterButtons(buttons, this._$textEditorContainer)\r\n    },\r\n    _clean: function() {\r\n        this._buttonCollection.clean();\r\n        this._disposePendingIndicator();\r\n        this._$beforeButtonsContainer = null;\r\n        this._$afterButtonsContainer = null;\r\n        this._$textEditorContainer = null;\r\n        this.callBase()\r\n    },\r\n    _createInput: function() {\r\n        var $input = (0, _renderer2.default)(\"<input>\");\r\n        this._applyInputAttributes($input, this.option(\"inputAttr\"));\r\n        return $input\r\n    },\r\n    _setSubmitElementName: function(name) {\r\n        var inputAttrName = this.option(\"inputAttr.name\");\r\n        return this.callBase(name || inputAttrName || \"\")\r\n    },\r\n    _applyInputAttributes: function($input, customAttributes) {\r\n        $input.attr(\"autocomplete\", \"off\").attr(customAttributes).addClass(TEXTEDITOR_INPUT_CLASS).css(\"minHeight\", this.option(\"height\") ? \"0\" : \"\")\r\n    },\r\n    _updateButtons: function(names) {\r\n        this._buttonCollection.updateButtons(names)\r\n    },\r\n    _updateButtonsStyling: function(editorStylingMode) {\r\n        var _this2 = this;\r\n        (0, _iterator.each)(this.option(\"buttons\"), function(_, buttonOptions) {\r\n            if (buttonOptions.options && !buttonOptions.options.stylingMode) {\r\n                var buttonInstance = _this2.getButton(buttonOptions.name);\r\n                buttonInstance.option && buttonInstance.option(\"stylingMode\", \"underlined\" === editorStylingMode ? \"text\" : \"contained\")\r\n            }\r\n        })\r\n    },\r\n    _renderValue: function() {\r\n        var renderInputPromise = this._renderInputValue();\r\n        return renderInputPromise.promise()\r\n    },\r\n    _renderInputValue: function(value) {\r\n        value = value || this.option(\"value\");\r\n        var text = this.option(\"text\");\r\n        var displayValue = this.option(\"displayValue\");\r\n        var displayValueFormatter = this.option(\"displayValueFormatter\");\r\n        if (void 0 !== displayValue && null !== value) {\r\n            text = displayValueFormatter(displayValue)\r\n        } else {\r\n            if (!(0, _type.isDefined)(text)) {\r\n                text = displayValueFormatter(value)\r\n            }\r\n        }\r\n        this.option(\"text\", text);\r\n        if (this._input().val() !== ((0, _type.isDefined)(text) ? text : \"\")) {\r\n            this._renderDisplayText(text)\r\n        } else {\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        return (new _deferred.Deferred).resolve()\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        this._input().val(text);\r\n        this._toggleEmptinessEventHandler()\r\n    },\r\n    _isValueValid: function() {\r\n        if (this._input().length) {\r\n            var validity = this._input().get(0).validity;\r\n            if (validity) {\r\n                return validity.valid\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _toggleEmptiness: function(isEmpty) {\r\n        this.$element().toggleClass(TEXTEDITOR_EMPTY_INPUT_CLASS, isEmpty);\r\n        this._togglePlaceholder(isEmpty)\r\n    },\r\n    _togglePlaceholder: function(isEmpty) {\r\n        if (!this._$placeholder) {\r\n            return\r\n        }\r\n        this._$placeholder.toggleClass(STATE_INVISIBLE_CLASS, !isEmpty)\r\n    },\r\n    _renderProps: function() {\r\n        this._toggleReadOnlyState();\r\n        this._toggleSpellcheckState();\r\n        this._toggleTabIndex()\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        this.callBase.apply(this, arguments);\r\n        var $input = this._input();\r\n        if (value) {\r\n            $input.attr(\"disabled\", true)\r\n        } else {\r\n            $input.removeAttr(\"disabled\")\r\n        }\r\n    },\r\n    _toggleTabIndex: function() {\r\n        var $input = this._input();\r\n        var disabled = this.option(\"disabled\");\r\n        var focusStateEnabled = this.option(\"focusStateEnabled\");\r\n        if (disabled || !focusStateEnabled) {\r\n            $input.attr(\"tabIndex\", -1)\r\n        } else {\r\n            $input.removeAttr(\"tabIndex\")\r\n        }\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        this._input().prop(\"readOnly\", this._readOnlyPropValue());\r\n        this.callBase()\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return this.option(\"readOnly\")\r\n    },\r\n    _toggleSpellcheckState: function() {\r\n        this._input().prop(\"spellcheck\", this.option(\"spellcheck\"))\r\n    },\r\n    _renderPlaceholder: function() {\r\n        this._renderPlaceholderMarkup();\r\n        this._attachPlaceholderEvents()\r\n    },\r\n    _renderPlaceholderMarkup: function() {\r\n        if (this._$placeholder) {\r\n            this._$placeholder.remove();\r\n            this._$placeholder = null\r\n        }\r\n        var $input = this._input();\r\n        var placeholderText = this.option(\"placeholder\");\r\n        var $placeholder = this._$placeholder = (0, _renderer2.default)(\"<div>\").attr(\"data-dx_placeholder\", placeholderText);\r\n        $placeholder.insertAfter($input);\r\n        $placeholder.addClass(TEXTEDITOR_PLACEHOLDER_CLASS)\r\n    },\r\n    _attachPlaceholderEvents: function() {\r\n        var _this3 = this;\r\n        var startEvent = _utils2.default.addNamespace(_pointer2.default.up, this.NAME);\r\n        _events_engine2.default.on(this._$placeholder, startEvent, function() {\r\n            _events_engine2.default.trigger(_this3._input(), \"focus\")\r\n        });\r\n        this._toggleEmptinessEventHandler()\r\n    },\r\n    _placeholder: function() {\r\n        return this._$placeholder || (0, _renderer2.default)()\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        var $input = this._input();\r\n        e.stopPropagation();\r\n        this._saveValueChangeEvent(e);\r\n        this._clearValue();\r\n        !this._isFocused() && _events_engine2.default.trigger($input, \"focus\");\r\n        _events_engine2.default.trigger($input, \"input\")\r\n    },\r\n    _clearValue: function() {\r\n        this.reset()\r\n    },\r\n    _renderEvents: function() {\r\n        var _this4 = this;\r\n        var $input = this._input();\r\n        (0, _iterator.each)(EVENTS_LIST, function(_, event) {\r\n            if (_this4.hasActionSubscription(\"on\" + event)) {\r\n                var action = _this4._createActionByOption(\"on\" + event, {\r\n                    excludeValidators: [\"readOnly\"]\r\n                });\r\n                _events_engine2.default.on($input, _utils2.default.addNamespace(event.toLowerCase(), _this4.NAME), function(e) {\r\n                    if (_this4._disposed) {\r\n                        return\r\n                    }\r\n                    action({\r\n                        event: e\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _refreshEvents: function() {\r\n        var _this5 = this;\r\n        var $input = this._input();\r\n        (0, _iterator.each)(EVENTS_LIST, function(_, event) {\r\n            _events_engine2.default.off($input, _utils2.default.addNamespace(event.toLowerCase(), _this5.NAME))\r\n        });\r\n        this._renderEvents()\r\n    },\r\n    _keyPressHandler: function() {\r\n        this.option(\"text\", this._input().val())\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var $input = this._input();\r\n        var isCtrlEnter = e.ctrlKey && \"enter\" === _utils2.default.normalizeKeyName(e);\r\n        var isNewValue = $input.val() !== this.option(\"value\");\r\n        if (isCtrlEnter && isNewValue) {\r\n            _events_engine2.default.trigger($input, \"change\")\r\n        }\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        var keyPressEvent = _utils2.default.addNamespace(this._renderValueEventName(), \"\".concat(this.NAME, \"TextChange\"));\r\n        var valueChangeEvent = _utils2.default.addNamespace(this.option(\"valueChangeEvent\"), \"\".concat(this.NAME, \"ValueChange\"));\r\n        var keyDownEvent = _utils2.default.addNamespace(\"keydown\", \"\".concat(this.NAME, \"TextChange\"));\r\n        var $input = this._input();\r\n        _events_engine2.default.on($input, keyPressEvent, this._keyPressHandler.bind(this));\r\n        _events_engine2.default.on($input, valueChangeEvent, this._valueChangeEventHandler.bind(this));\r\n        _events_engine2.default.on($input, keyDownEvent, this._keyDownHandler.bind(this))\r\n    },\r\n    _cleanValueChangeEvent: function() {\r\n        var valueChangeNamespace = \".\".concat(this.NAME, \"ValueChange\");\r\n        var textChangeNamespace = \".\".concat(this.NAME, \"TextChange\");\r\n        _events_engine2.default.off(this._input(), valueChangeNamespace);\r\n        _events_engine2.default.off(this._input(), textChangeNamespace)\r\n    },\r\n    _refreshValueChangeEvent: function() {\r\n        this._cleanValueChangeEvent();\r\n        this._renderValueChangeEvent()\r\n    },\r\n    _renderValueEventName: function() {\r\n        return \"input change keypress\"\r\n    },\r\n    _focusTarget: function() {\r\n        return this._input()\r\n    },\r\n    _focusEventTarget: function() {\r\n        return this.element()\r\n    },\r\n    _preventNestedFocusEvent: function(event) {\r\n        if (event.isDefaultPrevented()) {\r\n            return true\r\n        }\r\n        var result = this._isNestedTarget(event.relatedTarget);\r\n        if (\"focusin\" === event.type) {\r\n            result = result && this._isNestedTarget(event.target)\r\n        }\r\n        result && event.preventDefault();\r\n        return result\r\n    },\r\n    _isNestedTarget: function(target) {\r\n        return !!this.$element().find(target).length\r\n    },\r\n    _focusClassTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _focusInHandler: function(event) {\r\n        this._preventNestedFocusEvent(event);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _focusOutHandler: function(event) {\r\n        this._preventNestedFocusEvent(event);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _toggleFocusClass: function(isFocused, $element) {\r\n        this.callBase(isFocused, this._focusClassTarget($element))\r\n    },\r\n    _hasFocusClass: function(element) {\r\n        return this.callBase((0, _renderer2.default)(element || this.$element()))\r\n    },\r\n    _renderEmptinessEvent: function() {\r\n        var $input = this._input();\r\n        _events_engine2.default.on($input, \"input blur\", this._toggleEmptinessEventHandler.bind(this))\r\n    },\r\n    _toggleEmptinessEventHandler: function() {\r\n        var text = this._input().val();\r\n        var isEmpty = (\"\" === text || null === text) && this._isValueValid();\r\n        this._toggleEmptiness(isEmpty)\r\n    },\r\n    _valueChangeEventHandler: function(e, formattedValue) {\r\n        this._saveValueChangeEvent(e);\r\n        this.option(\"value\", arguments.length > 1 ? formattedValue : this._input().val());\r\n        this._saveValueChangeEvent(void 0)\r\n    },\r\n    _renderEnterKeyAction: function() {\r\n        this._enterKeyAction = this._createActionByOption(\"onEnterKey\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        });\r\n        _events_engine2.default.off(this._input(), \"keyup.onEnterKey.dxTextEditor\");\r\n        _events_engine2.default.on(this._input(), \"keyup.onEnterKey.dxTextEditor\", this._enterKeyHandlerUp.bind(this))\r\n    },\r\n    _enterKeyHandlerUp: function(e) {\r\n        if (this._disposed) {\r\n            return\r\n        }\r\n        if (\"enter\" === _utils2.default.normalizeKeyName(e)) {\r\n            this._enterKeyAction({\r\n                event: e\r\n            })\r\n        }\r\n    },\r\n    _updateValue: function() {\r\n        this.option(\"text\", void 0);\r\n        this._renderValue()\r\n    },\r\n    _dispose: function() {\r\n        this._enterKeyAction = void 0;\r\n        this.callBase()\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._input()\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        if ((0, _array.inArray)(name.replace(\"on\", \"\"), EVENTS_LIST) > -1) {\r\n            this._refreshEvents();\r\n            return\r\n        }\r\n        switch (name) {\r\n            case \"valueChangeEvent\":\r\n                this._refreshValueChangeEvent();\r\n                this._refreshFocusEvent();\r\n                this._refreshEvents();\r\n                break;\r\n            case \"onValueChanged\":\r\n                this._createValueChangeAction();\r\n                break;\r\n            case \"focusStateEnabled\":\r\n                this.callBase(args);\r\n                this._toggleTabIndex();\r\n                break;\r\n            case \"spellcheck\":\r\n                this._toggleSpellcheckState();\r\n                break;\r\n            case \"mode\":\r\n                this._renderInputType();\r\n                break;\r\n            case \"onEnterKey\":\r\n                this._renderEnterKeyAction();\r\n                break;\r\n            case \"placeholder\":\r\n                this._renderPlaceholder();\r\n                break;\r\n            case \"readOnly\":\r\n            case \"disabled\":\r\n                this._updateButtons();\r\n                this.callBase(args);\r\n                break;\r\n            case \"showClearButton\":\r\n                this._updateButtons([\"clear\"]);\r\n                break;\r\n            case \"text\":\r\n                break;\r\n            case \"value\":\r\n                this._updateValue();\r\n                this.callBase(args);\r\n                break;\r\n            case \"inputAttr\":\r\n                this._applyInputAttributes(this._input(), args.value);\r\n                break;\r\n            case \"stylingMode\":\r\n                this._renderStylingMode();\r\n                break;\r\n            case \"buttons\":\r\n                if (args.fullName === args.name) {\r\n                    checkButtonsOptionType(args.value)\r\n                }\r\n                this._$beforeButtonsContainer && this._$beforeButtonsContainer.remove();\r\n                this._$afterButtonsContainer && this._$afterButtonsContainer.remove();\r\n                this._buttonCollection.clean();\r\n                this._renderButtonContainers();\r\n                break;\r\n            case \"displayValueFormatter\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _renderInputType: function() {\r\n        this._setInputType(this.option(\"mode\"))\r\n    },\r\n    _setInputType: function(type) {\r\n        var input = this._input();\r\n        if (\"search\" === type) {\r\n            type = \"text\"\r\n        }\r\n        try {\r\n            input.prop(\"type\", type)\r\n        } catch (e) {\r\n            input.prop(\"type\", \"text\")\r\n        }\r\n    },\r\n    getButton: function(name) {\r\n        return this._buttonCollection.getButton(name)\r\n    },\r\n    focus: function() {\r\n        _events_engine2.default.trigger(this._input(), \"focus\")\r\n    },\r\n    blur: function() {\r\n        if (this._input().is(_dom_adapter2.default.getActiveElement())) {\r\n            _dom2.default.resetActiveElement()\r\n        }\r\n    },\r\n    reset: function() {\r\n        if (this._showValidMark) {\r\n            this._showValidMark = false;\r\n            this._renderValidationState()\r\n        }\r\n        var defaultOptions = this._getDefaultOptions();\r\n        if (this.option(\"value\") === defaultOptions.value) {\r\n            this.option(\"text\", \"\");\r\n            this._renderValue()\r\n        } else {\r\n            this.option(\"value\", defaultOptions.value)\r\n        }\r\n    },\r\n    on: function(eventName, eventHandler) {\r\n        var result = this.callBase(eventName, eventHandler);\r\n        var event = eventName.charAt(0).toUpperCase() + eventName.substr(1);\r\n        if (EVENTS_LIST.indexOf(event) >= 0) {\r\n            this._refreshEvents()\r\n        }\r\n        return result\r\n    }\r\n});\r\nmodule.exports = TextEditorBase;\r\n"]},"metadata":{},"sourceType":"script"}