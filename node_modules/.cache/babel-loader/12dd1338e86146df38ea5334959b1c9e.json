{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/scatter_series.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar _extend = require(\"../../core/utils/extend\").extend;\n\nvar inArray = require(\"../../core/utils/array\").inArray;\n\nvar _each = require(\"../../core/utils/iterator\").each;\n\nvar rangeCalculator = require(\"./helpers/range_data_calculator\");\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar vizUtils = require(\"../core/utils\");\n\nvar _noop = require(\"../../core/utils/common\").noop;\n\nvar _isDefined = typeUtils.isDefined;\nvar _isString = typeUtils.isString;\nvar _map = vizUtils.map;\nvar _normalizeEnum = vizUtils.normalizeEnum;\nvar math = Math;\nvar _abs = math.abs;\nvar _sqrt = math.sqrt;\nvar _max = math.max;\nvar DEFAULT_TRACKER_WIDTH = 12;\nvar DEFAULT_DURATION = 400;\nvar HIGH_ERROR = \"highError\";\nvar LOW_ERROR = \"lowError\";\nvar VARIANCE = \"variance\";\nvar STANDARD_DEVIATION = \"stddeviation\";\nvar STANDARD_ERROR = \"stderror\";\nvar PERCENT = \"percent\";\nvar FIXED = \"fixed\";\nvar UNDEFINED = \"undefined\";\nvar DISCRETE = \"discrete\";\nvar LOGARITHMIC = \"logarithmic\";\nvar DATETIME = \"datetime\";\nexports.chart = {};\nexports.polar = {};\n\nfunction sum(array) {\n  var result = 0;\n\n  _each(array, function (_, value) {\n    result += value;\n  });\n\n  return result;\n}\n\nfunction isErrorBarTypeCorrect(type) {\n  return inArray(type, [FIXED, PERCENT, VARIANCE, STANDARD_DEVIATION, STANDARD_ERROR]) !== -1;\n}\n\nfunction variance(array, expectedValue) {\n  return sum(_map(array, function (value) {\n    return (value - expectedValue) * (value - expectedValue);\n  })) / array.length;\n}\n\nfunction calculateAvgErrorBars(result, data, series) {\n  var errorBarsOptions = series.getOptions().valueErrorBar;\n  var valueField = series.getValueFields()[0];\n  var lowValueField = errorBarsOptions.lowValueField || LOW_ERROR;\n  var highValueField = errorBarsOptions.highValueField || HIGH_ERROR;\n\n  if (series.areErrorBarsVisible() && void 0 === errorBarsOptions.type) {\n    var fusionData = data.reduce(function (result, item) {\n      if (_isDefined(item[lowValueField])) {\n        result[0] += item[valueField] - item[lowValueField];\n        result[1]++;\n      }\n\n      if (_isDefined(item[highValueField])) {\n        result[2] += item[highValueField] - item[valueField];\n        result[3]++;\n      }\n\n      return result;\n    }, [0, 0, 0, 0]);\n\n    if (fusionData[1]) {\n      result[lowValueField] = result[valueField] - fusionData[0] / fusionData[1];\n    }\n\n    if (fusionData[2]) {\n      result[highValueField] = result[valueField] + fusionData[2] / fusionData[3];\n    }\n  }\n\n  return result;\n}\n\nfunction calculateSumErrorBars(result, data, series) {\n  var errorBarsOptions = series.getOptions().valueErrorBar;\n  var lowValueField = errorBarsOptions.lowValueField || LOW_ERROR;\n  var highValueField = errorBarsOptions.highValueField || HIGH_ERROR;\n\n  if (series.areErrorBarsVisible() && void 0 === errorBarsOptions.type) {\n    result[lowValueField] = 0;\n    result[highValueField] = 0;\n    result = data.reduce(function (result, item) {\n      result[lowValueField] += item[lowValueField];\n      result[highValueField] += item[highValueField];\n      return result;\n    }, result);\n  }\n\n  return result;\n}\n\nfunction getMinMaxAggregator(compare) {\n  return function (_ref, series) {\n    var intervalStart = _ref.intervalStart,\n        data = _ref.data;\n    var valueField = series.getValueFields()[0];\n    var targetData = data[0];\n    targetData = data.reduce(function (result, item) {\n      var value = item[valueField];\n\n      if (null === result[valueField]) {\n        result = item;\n      }\n\n      if (null !== value && compare(value, result[valueField])) {\n        return item;\n      }\n\n      return result;\n    }, targetData);\n    return _extend({}, targetData, _defineProperty({}, series.getArgumentField(), intervalStart));\n  };\n}\n\nfunction checkFields(data, fieldsToCheck, skippedFields) {\n  var allFieldsIsValid = true;\n\n  for (var field in fieldsToCheck) {\n    var isArgument = \"argument\" === field;\n\n    if (isArgument || \"size\" === field ? !_isDefined(data[field]) : void 0 === data[field]) {\n      var selector = fieldsToCheck[field];\n\n      if (!isArgument) {\n        skippedFields[selector] = (skippedFields[selector] || 0) + 1;\n      }\n\n      allFieldsIsValid = false;\n    }\n  }\n\n  return allFieldsIsValid;\n}\n\nvar baseScatterMethods = {\n  _defaultDuration: DEFAULT_DURATION,\n  _defaultTrackerWidth: DEFAULT_TRACKER_WIDTH,\n  _applyStyle: _noop,\n  _updateOptions: _noop,\n  _parseStyle: _noop,\n  _prepareSegment: _noop,\n  _drawSegment: _noop,\n  _appendInGroup: function _appendInGroup() {\n    this._group.append(this._extGroups.seriesGroup);\n  },\n  _createLegendState: function _createLegendState(styleOptions, defaultColor) {\n    return {\n      fill: styleOptions.color || defaultColor,\n      hatching: styleOptions.hatching ? _extend({}, styleOptions.hatching, {\n        direction: \"right\"\n      }) : void 0\n    };\n  },\n  _applyElementsClipRect: function _applyElementsClipRect(settings) {\n    settings[\"clip-path\"] = this._paneClipRectID;\n  },\n  _applyMarkerClipRect: function _applyMarkerClipRect(settings) {\n    settings[\"clip-path\"] = this._forceClipping ? this._paneClipRectID : null;\n  },\n  _createGroup: function _createGroup(groupName, parent, target, settings) {\n    var group = parent[groupName] = parent[groupName] || this._renderer.g();\n\n    target && group.append(target);\n    settings && group.attr(settings);\n  },\n  _applyClearingSettings: function _applyClearingSettings(settings) {\n    settings.opacity = null;\n    settings.scale = null;\n\n    if (this._options.rotated) {\n      settings.translateX = null;\n    } else {\n      settings.translateY = null;\n    }\n  },\n  _createGroups: function _createGroups() {\n    var that = this;\n\n    that._createGroup(\"_markersGroup\", that, that._group);\n\n    that._createGroup(\"_labelsGroup\", that);\n  },\n  _setMarkerGroupSettings: function _setMarkerGroupSettings() {\n    var that = this;\n\n    var settings = that._createPointStyles(that._getMarkerGroupOptions()).normal;\n\n    settings.class = \"dxc-markers\";\n    settings.opacity = 1;\n\n    that._applyMarkerClipRect(settings);\n\n    that._markersGroup.attr(settings);\n  },\n  getVisibleArea: function getVisibleArea() {\n    return this._visibleArea;\n  },\n  areErrorBarsVisible: function areErrorBarsVisible() {\n    var errorBarOptions = this._options.valueErrorBar;\n    return errorBarOptions && this._errorBarsEnabled() && \"none\" !== errorBarOptions.displayMode && (isErrorBarTypeCorrect(_normalizeEnum(errorBarOptions.type)) || _isDefined(errorBarOptions.lowValueField) || _isDefined(errorBarOptions.highValueField));\n  },\n  groupPointsByCoords: function groupPointsByCoords(rotated) {\n    var cat = [];\n\n    _each(this.getVisiblePoints(), function (_, p) {\n      var pointCoord = parseInt(rotated ? p.vy : p.vx);\n\n      if (!cat[pointCoord]) {\n        cat[pointCoord] = p;\n      } else {\n        Array.isArray(cat[pointCoord]) ? cat[pointCoord].push(p) : cat[pointCoord] = [cat[pointCoord], p];\n      }\n    });\n\n    return cat;\n  },\n  _createErrorBarGroup: function _createErrorBarGroup(animationEnabled) {\n    var that = this;\n    var errorBarOptions = that._options.valueErrorBar;\n    var settings;\n\n    if (that.areErrorBarsVisible()) {\n      settings = {\n        \"class\": \"dxc-error-bars\",\n        stroke: errorBarOptions.color,\n        \"stroke-width\": errorBarOptions.lineWidth,\n        opacity: animationEnabled ? .001 : errorBarOptions.opacity || 1,\n        \"stroke-linecap\": \"square\",\n        sharp: true,\n        \"clip-path\": that._forceClipping ? that._paneClipRectID : that._widePaneClipRectID\n      };\n\n      that._createGroup(\"_errorBarGroup\", that, that._group, settings);\n    }\n  },\n  _setGroupsSettings: function _setGroupsSettings(animationEnabled) {\n    var that = this;\n\n    that._setMarkerGroupSettings();\n\n    that._setLabelGroupSettings(animationEnabled);\n\n    that._createErrorBarGroup(animationEnabled);\n  },\n  _getCreatingPointOptions: function _getCreatingPointOptions() {\n    var that = this;\n    var defaultPointOptions;\n    var creatingPointOptions = that._predefinedPointOptions;\n    var normalStyle;\n\n    if (!creatingPointOptions) {\n      defaultPointOptions = that._getPointOptions();\n      that._predefinedPointOptions = creatingPointOptions = _extend(true, {\n        styles: {}\n      }, defaultPointOptions);\n      normalStyle = defaultPointOptions.styles && defaultPointOptions.styles.normal || {};\n      creatingPointOptions.styles = creatingPointOptions.styles || {};\n      creatingPointOptions.styles.normal = {\n        \"stroke-width\": normalStyle[\"stroke-width\"],\n        r: normalStyle.r,\n        opacity: normalStyle.opacity\n      };\n    }\n\n    return creatingPointOptions;\n  },\n  _getPointOptions: function _getPointOptions() {\n    return this._parsePointOptions(this._preparePointOptions(), this._options.label);\n  },\n  _getOptionsForPoint: function _getOptionsForPoint() {\n    return this._options.point;\n  },\n  _parsePointStyle: function _parsePointStyle(style, defaultColor, defaultBorderColor, defaultSize) {\n    var border = style.border || {};\n    var sizeValue = void 0 !== style.size ? style.size : defaultSize;\n    return {\n      fill: style.color || defaultColor,\n      stroke: border.color || defaultBorderColor,\n      \"stroke-width\": border.visible ? border.width : 0,\n      r: sizeValue / 2 + (border.visible && 0 !== sizeValue ? ~~(border.width / 2) || 0 : 0)\n    };\n  },\n  _createPointStyles: function _createPointStyles(pointOptions) {\n    var that = this;\n    var mainPointColor = pointOptions.color || that._options.mainSeriesColor;\n    var containerColor = that._options.containerBackgroundColor;\n\n    var normalStyle = that._parsePointStyle(pointOptions, mainPointColor, mainPointColor);\n\n    normalStyle.visibility = pointOptions.visible ? \"visible\" : \"hidden\";\n    return {\n      normal: normalStyle,\n      hover: that._parsePointStyle(pointOptions.hoverStyle, containerColor, mainPointColor, pointOptions.size),\n      selection: that._parsePointStyle(pointOptions.selectionStyle, containerColor, mainPointColor, pointOptions.size)\n    };\n  },\n  _checkData: function _checkData(data, skippedFields, fieldsToCheck) {\n    fieldsToCheck = fieldsToCheck || {\n      value: this.getValueFields()[0]\n    };\n    fieldsToCheck.argument = this.getArgumentField();\n    return checkFields(data, fieldsToCheck, skippedFields || {}) && data.value === data.value;\n  },\n  getValueRangeInitialValue: function getValueRangeInitialValue() {\n    return;\n  },\n  _getRangeData: function _getRangeData() {\n    return rangeCalculator.getRangeData(this);\n  },\n  _getPointDataSelector: function _getPointDataSelector() {\n    var _this = this;\n\n    var valueField = this.getValueFields()[0];\n    var argumentField = this.getArgumentField();\n    var tagField = this.getTagField();\n    var areErrorBarsVisible = this.areErrorBarsVisible();\n    var lowValueField;\n    var highValueField;\n\n    if (areErrorBarsVisible) {\n      var errorBarOptions = this._options.valueErrorBar;\n      lowValueField = errorBarOptions.lowValueField || LOW_ERROR;\n      highValueField = errorBarOptions.highValueField || HIGH_ERROR;\n    }\n\n    return function (data) {\n      var pointData = {\n        value: _this._processEmptyValue(data[valueField]),\n        argument: data[argumentField],\n        tag: data[tagField],\n        data: data\n      };\n\n      if (areErrorBarsVisible) {\n        pointData.lowError = data[lowValueField];\n        pointData.highError = data[highValueField];\n      }\n\n      return pointData;\n    };\n  },\n  _errorBarsEnabled: function _errorBarsEnabled() {\n    return this.valueAxisType !== DISCRETE && this.valueAxisType !== LOGARITHMIC && this.valueType !== DATETIME;\n  },\n  _drawPoint: function _drawPoint(options) {\n    var point = options.point;\n\n    if (point.isInVisibleArea()) {\n      point.clearVisibility();\n      point.draw(this._renderer, options.groups, options.hasAnimation, options.firstDrawing);\n\n      this._drawnPoints.push(point);\n    } else {\n      point.setInvisibility();\n    }\n  },\n  _animateComplete: function _animateComplete() {\n    var that = this;\n    var animationSettings = {\n      duration: that._defaultDuration\n    };\n    that._labelsGroup && that._labelsGroup.animate({\n      opacity: 1\n    }, animationSettings);\n    that._errorBarGroup && that._errorBarGroup.animate({\n      opacity: that._options.valueErrorBar.opacity || 1\n    }, animationSettings);\n  },\n  _animate: function _animate() {\n    var that = this;\n    var lastPointIndex = that._drawnPoints.length - 1;\n\n    _each(that._drawnPoints || [], function (i, p) {\n      p.animate(i === lastPointIndex ? function () {\n        that._animateComplete();\n      } : void 0, {\n        translateX: p.x,\n        translateY: p.y\n      });\n    });\n  },\n  _defaultAggregator: \"avg\",\n  _aggregators: {\n    avg: function avg(_ref2, series) {\n      var _calculateAvgErrorBar;\n\n      var data = _ref2.data,\n          intervalStart = _ref2.intervalStart;\n\n      if (!data.length) {\n        return;\n      }\n\n      var valueField = series.getValueFields()[0];\n      var aggregationResult = data.reduce(function (result, item) {\n        var value = item[valueField];\n\n        if (_isDefined(value)) {\n          result[0] += value;\n          result[1]++;\n        } else {\n          if (null === value) {\n            result[2]++;\n          }\n        }\n\n        return result;\n      }, [0, 0, 0]);\n      return calculateAvgErrorBars((_calculateAvgErrorBar = {}, _defineProperty(_calculateAvgErrorBar, valueField, aggregationResult[2] === data.length ? null : aggregationResult[0] / aggregationResult[1]), _defineProperty(_calculateAvgErrorBar, series.getArgumentField(), intervalStart), _calculateAvgErrorBar), data, series);\n    },\n    sum: function sum(_ref3, series) {\n      var _calculateSumErrorBar;\n\n      var intervalStart = _ref3.intervalStart,\n          data = _ref3.data;\n\n      if (!data.length) {\n        return;\n      }\n\n      var valueField = series.getValueFields()[0];\n      var aggregationResult = data.reduce(function (result, item) {\n        var value = item[valueField];\n\n        if (void 0 !== value) {\n          result[0] += value;\n        }\n\n        if (null === value) {\n          result[1]++;\n        } else {\n          if (void 0 === value) {\n            result[2]++;\n          }\n        }\n\n        return result;\n      }, [0, 0, 0]);\n      var value = aggregationResult[0];\n\n      if (aggregationResult[1] === data.length) {\n        value = null;\n      }\n\n      if (aggregationResult[2] === data.length) {\n        return;\n      }\n\n      return calculateSumErrorBars((_calculateSumErrorBar = {}, _defineProperty(_calculateSumErrorBar, valueField, value), _defineProperty(_calculateSumErrorBar, series.getArgumentField(), intervalStart), _calculateSumErrorBar), data, series);\n    },\n    count: function count(_ref4, series) {\n      var _ref5;\n\n      var data = _ref4.data,\n          intervalStart = _ref4.intervalStart;\n      var valueField = series.getValueFields()[0];\n      return _ref5 = {}, _defineProperty(_ref5, series.getArgumentField(), intervalStart), _defineProperty(_ref5, valueField, data.filter(function (i) {\n        return void 0 !== i[valueField];\n      }).length), _ref5;\n    },\n    min: getMinMaxAggregator(function (a, b) {\n      return a < b;\n    }),\n    max: getMinMaxAggregator(function (a, b) {\n      return a > b;\n    })\n  },\n  _endUpdateData: function _endUpdateData() {\n    delete this._predefinedPointOptions;\n  },\n  getArgumentField: function getArgumentField() {\n    return this._options.argumentField || \"arg\";\n  },\n  getValueFields: function getValueFields() {\n    var options = this._options;\n    var errorBarsOptions = options.valueErrorBar;\n    var valueFields = [options.valueField || \"val\"];\n    var lowValueField;\n    var highValueField;\n\n    if (errorBarsOptions) {\n      lowValueField = errorBarsOptions.lowValueField;\n      highValueField = errorBarsOptions.highValueField;\n      _isString(lowValueField) && valueFields.push(lowValueField);\n      _isString(highValueField) && valueFields.push(highValueField);\n    }\n\n    return valueFields;\n  },\n  _calculateErrorBars: function _calculateErrorBars(data) {\n    if (!this.areErrorBarsVisible()) {\n      return;\n    }\n\n    var that = this;\n    var options = that._options;\n    var errorBarsOptions = options.valueErrorBar;\n\n    var errorBarType = _normalizeEnum(errorBarsOptions.type);\n\n    var floatErrorValue = parseFloat(errorBarsOptions.value);\n    var valueField = that.getValueFields()[0];\n    var value;\n    var lowValueField = errorBarsOptions.lowValueField || LOW_ERROR;\n    var highValueField = errorBarsOptions.highValueField || HIGH_ERROR;\n    var valueArray;\n    var valueArrayLength;\n    var meanValue;\n    var processDataItem;\n\n    var addSubError = function addSubError(_i, item) {\n      value = item.value;\n      item.lowError = value - floatErrorValue;\n      item.highError = value + floatErrorValue;\n    };\n\n    switch (errorBarType) {\n      case FIXED:\n        processDataItem = addSubError;\n        break;\n\n      case PERCENT:\n        processDataItem = function processDataItem(_, item) {\n          value = item.value;\n          var error = value * floatErrorValue / 100;\n          item.lowError = value - error;\n          item.highError = value + error;\n        };\n\n        break;\n\n      case UNDEFINED:\n        processDataItem = function processDataItem(_, item) {\n          item.lowError = item.data[lowValueField];\n          item.highError = item.data[highValueField];\n        };\n\n        break;\n\n      default:\n        valueArray = _map(data, function (item) {\n          return _isDefined(item.data[valueField]) ? item.data[valueField] : null;\n        });\n        valueArrayLength = valueArray.length;\n        floatErrorValue = floatErrorValue || 1;\n\n        switch (errorBarType) {\n          case VARIANCE:\n            floatErrorValue = variance(valueArray, sum(valueArray) / valueArrayLength) * floatErrorValue;\n            processDataItem = addSubError;\n            break;\n\n          case STANDARD_DEVIATION:\n            meanValue = sum(valueArray) / valueArrayLength;\n            floatErrorValue = _sqrt(variance(valueArray, meanValue)) * floatErrorValue;\n\n            processDataItem = function processDataItem(_, item) {\n              item.lowError = meanValue - floatErrorValue;\n              item.highError = meanValue + floatErrorValue;\n            };\n\n            break;\n\n          case STANDARD_ERROR:\n            floatErrorValue = _sqrt(variance(valueArray, sum(valueArray) / valueArrayLength) / valueArrayLength) * floatErrorValue;\n            processDataItem = addSubError;\n        }\n\n    }\n\n    processDataItem && _each(data, processDataItem);\n  },\n  _patchMarginOptions: function _patchMarginOptions(options) {\n    var pointOptions = this._getCreatingPointOptions();\n\n    var styles = pointOptions.styles;\n    var maxSize = [styles.normal, styles.hover, styles.selection].reduce(function (max, style) {\n      return _max(max, 2 * style.r + style[\"stroke-width\"]);\n    }, 0);\n    options.size = pointOptions.visible ? maxSize : 0;\n    options.sizePointNormalState = pointOptions.visible ? 2 * styles.normal.r + styles.normal[\"stroke-width\"] : 2;\n    return options;\n  },\n  usePointsToDefineAutoHiding: function usePointsToDefineAutoHiding() {\n    return true;\n  }\n};\nexports.chart = _extend({}, baseScatterMethods, {\n  drawTrackers: function drawTrackers() {\n    var that = this;\n    var trackers;\n    var trackersGroup;\n    var segments = that._segments || [];\n    var rotated = that._options.rotated;\n\n    if (!that.isVisible()) {\n      return;\n    }\n\n    if (segments.length) {\n      trackers = that._trackers = that._trackers || [];\n      trackersGroup = that._trackersGroup = (that._trackersGroup || that._renderer.g().attr({\n        fill: \"gray\",\n        opacity: .001,\n        stroke: \"gray\",\n        \"class\": \"dxc-trackers\"\n      })).attr({\n        \"clip-path\": this._paneClipRectID || null\n      }).append(that._group);\n\n      _each(segments, function (i, segment) {\n        if (!trackers[i]) {\n          trackers[i] = that._drawTrackerElement(segment).data({\n            \"chart-data-series\": that\n          }).append(trackersGroup);\n        } else {\n          that._updateTrackerElement(segment, trackers[i]);\n        }\n      });\n    }\n\n    that._trackersTranslator = that.groupPointsByCoords(rotated);\n  },\n  checkAxisVisibleAreaCoord: function checkAxisVisibleAreaCoord(isArgument, coord) {\n    var axis = isArgument ? this.getArgumentAxis() : this.getValueAxis();\n    var visibleArea = axis.getVisibleArea();\n    return _isDefined(coord) && visibleArea[0] <= coord && visibleArea[1] >= coord;\n  },\n  checkSeriesViewportCoord: function checkSeriesViewportCoord(axis, coord) {\n    return true;\n  },\n  getSeriesPairCoord: function getSeriesPairCoord(coord, isArgument) {\n    var oppositeCoord = null;\n    var isOpposite = !isArgument && !this._options.rotated || isArgument && this._options.rotated;\n    var coordName = !isOpposite ? \"vx\" : \"vy\";\n    var oppositeCoordName = !isOpposite ? \"vy\" : \"vx\";\n    var points = this.getVisiblePoints();\n\n    for (var i = 0; i < points.length; i++) {\n      var p = points[i];\n      var tmpCoord = p[coordName] === coord ? p[oppositeCoordName] : void 0;\n\n      if (this.checkAxisVisibleAreaCoord(!isArgument, tmpCoord)) {\n        oppositeCoord = tmpCoord;\n        break;\n      }\n    }\n\n    return oppositeCoord;\n  },\n  getNearestPointsByCoord: function getNearestPointsByCoord(coord, isArgument) {\n    var that = this;\n    var rotated = that.getOptions().rotated;\n    var isOpposite = !isArgument && !rotated || isArgument && rotated;\n    var coordName = isOpposite ? \"vy\" : \"vx\";\n    var points = that.getVisiblePoints();\n    var allPoints = that.getPoints();\n    var nearestPoints = [];\n\n    if (that.isVisible() && allPoints.length > 0) {\n      if (allPoints.length > 1) {\n        that.findNeighborPointsByCoord(coord, coordName, points.slice(0), allPoints, function (point, nextPoint) {\n          nearestPoints.push([point, nextPoint]);\n        });\n      } else {\n        if (allPoints[0][coordName] === coord) {\n          nearestPoints.push([allPoints[0], allPoints[0]]);\n        }\n      }\n    }\n\n    return nearestPoints;\n  },\n  findNeighborPointsByCoord: function findNeighborPointsByCoord(coord, coordName, points, allPoints, pushNeighborPoints) {\n    var searchPoints = allPoints;\n\n    if (points.length > 0) {\n      points.splice(0, 0, allPoints[allPoints.indexOf(points[0]) - 1]);\n      points.splice(points.length, 0, allPoints[allPoints.indexOf(points[points.length - 1]) + 1]);\n      searchPoints = points;\n    }\n\n    searchPoints.forEach(function (p, i) {\n      var np = searchPoints[i + 1];\n\n      if (p && np && (p[coordName] <= coord && np[coordName] >= coord || p[coordName] >= coord && np[coordName] <= coord)) {\n        pushNeighborPoints(p, np);\n      }\n    });\n  },\n  getNeighborPoint: function getNeighborPoint(x, y) {\n    var pCoord = this._options.rotated ? y : x;\n    var nCoord = pCoord;\n    var cat = this._trackersTranslator;\n    var point = null;\n    var minDistance;\n    var oppositeCoord = this._options.rotated ? x : y;\n    var oppositeCoordName = this._options.rotated ? \"vx\" : \"vy\";\n\n    if (this.isVisible() && cat) {\n      point = cat[pCoord];\n\n      do {\n        point = cat[nCoord] || cat[pCoord];\n        pCoord--;\n        nCoord++;\n      } while ((pCoord >= 0 || nCoord < cat.length) && !point);\n\n      if (Array.isArray(point)) {\n        minDistance = _abs(point[0][oppositeCoordName] - oppositeCoord);\n\n        _each(point, function (i, p) {\n          var distance = _abs(p[oppositeCoordName] - oppositeCoord);\n\n          if (minDistance >= distance) {\n            minDistance = distance;\n            point = p;\n          }\n        });\n      }\n    }\n\n    return point;\n  },\n  _applyVisibleArea: function _applyVisibleArea() {\n    var that = this;\n    var rotated = that._options.rotated;\n    var visibleX = (rotated ? that.getValueAxis() : that.getArgumentAxis()).getVisibleArea();\n    var visibleY = (rotated ? that.getArgumentAxis() : that.getValueAxis()).getVisibleArea();\n    that._visibleArea = {\n      minX: visibleX[0],\n      maxX: visibleX[1],\n      minY: visibleY[0],\n      maxY: visibleY[1]\n    };\n  },\n  getPointCenterByArg: function getPointCenterByArg(arg) {\n    var point = this.getPointsByArg(arg)[0];\n    return point ? point.getCenterCoord() : void 0;\n  }\n});\nexports.polar = _extend({}, baseScatterMethods, {\n  drawTrackers: function drawTrackers() {\n    exports.chart.drawTrackers.call(this);\n    var cat = this._trackersTranslator;\n    var index;\n\n    if (!this.isVisible()) {\n      return;\n    }\n\n    _each(cat, function (i, category) {\n      if (category) {\n        index = i;\n        return false;\n      }\n    });\n\n    cat[index + 360] = cat[index];\n  },\n  getNeighborPoint: function getNeighborPoint(x, y) {\n    var pos = vizUtils.convertXYToPolar(this.getValueAxis().getCenter(), x, y);\n    return exports.chart.getNeighborPoint.call(this, pos.phi, pos.r);\n  },\n  _applyVisibleArea: function _applyVisibleArea() {\n    var that = this;\n    var canvas = that.getValueAxis().getCanvas();\n    that._visibleArea = {\n      minX: canvas.left,\n      maxX: canvas.width - canvas.right,\n      minY: canvas.top,\n      maxY: canvas.height - canvas.bottom\n    };\n  }\n});","map":{"version":3,"sources":["C:/Users/va112/Documents/Webdev/React/Corona/node_modules/devextreme/viz/series/scatter_series.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extend","require","extend","inArray","_each","each","rangeCalculator","typeUtils","vizUtils","_noop","noop","_isDefined","isDefined","_isString","isString","_map","map","_normalizeEnum","normalizeEnum","math","Math","_abs","abs","_sqrt","sqrt","_max","max","DEFAULT_TRACKER_WIDTH","DEFAULT_DURATION","HIGH_ERROR","LOW_ERROR","VARIANCE","STANDARD_DEVIATION","STANDARD_ERROR","PERCENT","FIXED","UNDEFINED","DISCRETE","LOGARITHMIC","DATETIME","exports","chart","polar","sum","array","result","_","isErrorBarTypeCorrect","type","variance","expectedValue","length","calculateAvgErrorBars","data","series","errorBarsOptions","getOptions","valueErrorBar","valueField","getValueFields","lowValueField","highValueField","areErrorBarsVisible","fusionData","reduce","item","calculateSumErrorBars","getMinMaxAggregator","compare","_ref","intervalStart","targetData","getArgumentField","checkFields","fieldsToCheck","skippedFields","allFieldsIsValid","field","isArgument","selector","baseScatterMethods","_defaultDuration","_defaultTrackerWidth","_applyStyle","_updateOptions","_parseStyle","_prepareSegment","_drawSegment","_appendInGroup","_group","append","_extGroups","seriesGroup","_createLegendState","styleOptions","defaultColor","fill","color","hatching","direction","_applyElementsClipRect","settings","_paneClipRectID","_applyMarkerClipRect","_forceClipping","_createGroup","groupName","parent","target","group","_renderer","g","attr","_applyClearingSettings","opacity","scale","_options","rotated","translateX","translateY","_createGroups","that","_setMarkerGroupSettings","_createPointStyles","_getMarkerGroupOptions","normal","class","_markersGroup","getVisibleArea","_visibleArea","errorBarOptions","_errorBarsEnabled","displayMode","groupPointsByCoords","cat","getVisiblePoints","p","pointCoord","parseInt","vy","vx","Array","isArray","push","_createErrorBarGroup","animationEnabled","stroke","lineWidth","sharp","_widePaneClipRectID","_setGroupsSettings","_setLabelGroupSettings","_getCreatingPointOptions","defaultPointOptions","creatingPointOptions","_predefinedPointOptions","normalStyle","_getPointOptions","styles","r","_parsePointOptions","_preparePointOptions","label","_getOptionsForPoint","point","_parsePointStyle","style","defaultBorderColor","defaultSize","border","sizeValue","size","visible","width","pointOptions","mainPointColor","mainSeriesColor","containerColor","containerBackgroundColor","visibility","hover","hoverStyle","selection","selectionStyle","_checkData","argument","getValueRangeInitialValue","_getRangeData","getRangeData","_getPointDataSelector","_this","argumentField","tagField","getTagField","pointData","_processEmptyValue","tag","lowError","highError","valueAxisType","valueType","_drawPoint","options","isInVisibleArea","clearVisibility","draw","groups","hasAnimation","firstDrawing","_drawnPoints","setInvisibility","_animateComplete","animationSettings","duration","_labelsGroup","animate","_errorBarGroup","_animate","lastPointIndex","i","x","y","_defaultAggregator","_aggregators","avg","_ref2","_calculateAvgErrorBar","aggregationResult","_ref3","_calculateSumErrorBar","count","_ref4","_ref5","filter","min","a","b","_endUpdateData","valueFields","_calculateErrorBars","errorBarType","floatErrorValue","parseFloat","valueArray","valueArrayLength","meanValue","processDataItem","addSubError","_i","error","_patchMarginOptions","maxSize","sizePointNormalState","usePointsToDefineAutoHiding","drawTrackers","trackers","trackersGroup","segments","_segments","isVisible","_trackers","_trackersGroup","segment","_drawTrackerElement","_updateTrackerElement","_trackersTranslator","checkAxisVisibleAreaCoord","coord","axis","getArgumentAxis","getValueAxis","visibleArea","checkSeriesViewportCoord","getSeriesPairCoord","oppositeCoord","isOpposite","coordName","oppositeCoordName","points","tmpCoord","getNearestPointsByCoord","allPoints","getPoints","nearestPoints","findNeighborPointsByCoord","slice","nextPoint","pushNeighborPoints","searchPoints","splice","indexOf","forEach","np","getNeighborPoint","pCoord","nCoord","minDistance","distance","_applyVisibleArea","visibleX","visibleY","minX","maxX","minY","maxY","getPointCenterByArg","arg","getPointsByArg","getCenterCoord","call","index","category","pos","convertXYToPolar","getCenter","phi","canvas","getCanvas","left","right","top","height","bottom"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (viz/series/scatter_series.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar _extend = require(\"../../core/utils/extend\").extend;\r\nvar inArray = require(\"../../core/utils/array\").inArray;\r\nvar _each = require(\"../../core/utils/iterator\").each;\r\nvar rangeCalculator = require(\"./helpers/range_data_calculator\");\r\nvar typeUtils = require(\"../../core/utils/type\");\r\nvar vizUtils = require(\"../core/utils\");\r\nvar _noop = require(\"../../core/utils/common\").noop;\r\nvar _isDefined = typeUtils.isDefined;\r\nvar _isString = typeUtils.isString;\r\nvar _map = vizUtils.map;\r\nvar _normalizeEnum = vizUtils.normalizeEnum;\r\nvar math = Math;\r\nvar _abs = math.abs;\r\nvar _sqrt = math.sqrt;\r\nvar _max = math.max;\r\nvar DEFAULT_TRACKER_WIDTH = 12;\r\nvar DEFAULT_DURATION = 400;\r\nvar HIGH_ERROR = \"highError\";\r\nvar LOW_ERROR = \"lowError\";\r\nvar VARIANCE = \"variance\";\r\nvar STANDARD_DEVIATION = \"stddeviation\";\r\nvar STANDARD_ERROR = \"stderror\";\r\nvar PERCENT = \"percent\";\r\nvar FIXED = \"fixed\";\r\nvar UNDEFINED = \"undefined\";\r\nvar DISCRETE = \"discrete\";\r\nvar LOGARITHMIC = \"logarithmic\";\r\nvar DATETIME = \"datetime\";\r\nexports.chart = {};\r\nexports.polar = {};\r\n\r\nfunction sum(array) {\r\n    var result = 0;\r\n    _each(array, function(_, value) {\r\n        result += value\r\n    });\r\n    return result\r\n}\r\n\r\nfunction isErrorBarTypeCorrect(type) {\r\n    return inArray(type, [FIXED, PERCENT, VARIANCE, STANDARD_DEVIATION, STANDARD_ERROR]) !== -1\r\n}\r\n\r\nfunction variance(array, expectedValue) {\r\n    return sum(_map(array, function(value) {\r\n        return (value - expectedValue) * (value - expectedValue)\r\n    })) / array.length\r\n}\r\n\r\nfunction calculateAvgErrorBars(result, data, series) {\r\n    var errorBarsOptions = series.getOptions().valueErrorBar;\r\n    var valueField = series.getValueFields()[0];\r\n    var lowValueField = errorBarsOptions.lowValueField || LOW_ERROR;\r\n    var highValueField = errorBarsOptions.highValueField || HIGH_ERROR;\r\n    if (series.areErrorBarsVisible() && void 0 === errorBarsOptions.type) {\r\n        var fusionData = data.reduce(function(result, item) {\r\n            if (_isDefined(item[lowValueField])) {\r\n                result[0] += item[valueField] - item[lowValueField];\r\n                result[1]++\r\n            }\r\n            if (_isDefined(item[highValueField])) {\r\n                result[2] += item[highValueField] - item[valueField];\r\n                result[3]++\r\n            }\r\n            return result\r\n        }, [0, 0, 0, 0]);\r\n        if (fusionData[1]) {\r\n            result[lowValueField] = result[valueField] - fusionData[0] / fusionData[1]\r\n        }\r\n        if (fusionData[2]) {\r\n            result[highValueField] = result[valueField] + fusionData[2] / fusionData[3]\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction calculateSumErrorBars(result, data, series) {\r\n    var errorBarsOptions = series.getOptions().valueErrorBar;\r\n    var lowValueField = errorBarsOptions.lowValueField || LOW_ERROR;\r\n    var highValueField = errorBarsOptions.highValueField || HIGH_ERROR;\r\n    if (series.areErrorBarsVisible() && void 0 === errorBarsOptions.type) {\r\n        result[lowValueField] = 0;\r\n        result[highValueField] = 0;\r\n        result = data.reduce(function(result, item) {\r\n            result[lowValueField] += item[lowValueField];\r\n            result[highValueField] += item[highValueField];\r\n            return result\r\n        }, result)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getMinMaxAggregator(compare) {\r\n    return function(_ref, series) {\r\n        var intervalStart = _ref.intervalStart,\r\n            data = _ref.data;\r\n        var valueField = series.getValueFields()[0];\r\n        var targetData = data[0];\r\n        targetData = data.reduce(function(result, item) {\r\n            var value = item[valueField];\r\n            if (null === result[valueField]) {\r\n                result = item\r\n            }\r\n            if (null !== value && compare(value, result[valueField])) {\r\n                return item\r\n            }\r\n            return result\r\n        }, targetData);\r\n        return _extend({}, targetData, _defineProperty({}, series.getArgumentField(), intervalStart))\r\n    }\r\n}\r\n\r\nfunction checkFields(data, fieldsToCheck, skippedFields) {\r\n    var allFieldsIsValid = true;\r\n    for (var field in fieldsToCheck) {\r\n        var isArgument = \"argument\" === field;\r\n        if (isArgument || \"size\" === field ? !_isDefined(data[field]) : void 0 === data[field]) {\r\n            var selector = fieldsToCheck[field];\r\n            if (!isArgument) {\r\n                skippedFields[selector] = (skippedFields[selector] || 0) + 1\r\n            }\r\n            allFieldsIsValid = false\r\n        }\r\n    }\r\n    return allFieldsIsValid\r\n}\r\nvar baseScatterMethods = {\r\n    _defaultDuration: DEFAULT_DURATION,\r\n    _defaultTrackerWidth: DEFAULT_TRACKER_WIDTH,\r\n    _applyStyle: _noop,\r\n    _updateOptions: _noop,\r\n    _parseStyle: _noop,\r\n    _prepareSegment: _noop,\r\n    _drawSegment: _noop,\r\n    _appendInGroup: function() {\r\n        this._group.append(this._extGroups.seriesGroup)\r\n    },\r\n    _createLegendState: function(styleOptions, defaultColor) {\r\n        return {\r\n            fill: styleOptions.color || defaultColor,\r\n            hatching: styleOptions.hatching ? _extend({}, styleOptions.hatching, {\r\n                direction: \"right\"\r\n            }) : void 0\r\n        }\r\n    },\r\n    _applyElementsClipRect: function(settings) {\r\n        settings[\"clip-path\"] = this._paneClipRectID\r\n    },\r\n    _applyMarkerClipRect: function(settings) {\r\n        settings[\"clip-path\"] = this._forceClipping ? this._paneClipRectID : null\r\n    },\r\n    _createGroup: function(groupName, parent, target, settings) {\r\n        var group = parent[groupName] = parent[groupName] || this._renderer.g();\r\n        target && group.append(target);\r\n        settings && group.attr(settings)\r\n    },\r\n    _applyClearingSettings: function(settings) {\r\n        settings.opacity = null;\r\n        settings.scale = null;\r\n        if (this._options.rotated) {\r\n            settings.translateX = null\r\n        } else {\r\n            settings.translateY = null\r\n        }\r\n    },\r\n    _createGroups: function() {\r\n        var that = this;\r\n        that._createGroup(\"_markersGroup\", that, that._group);\r\n        that._createGroup(\"_labelsGroup\", that)\r\n    },\r\n    _setMarkerGroupSettings: function() {\r\n        var that = this;\r\n        var settings = that._createPointStyles(that._getMarkerGroupOptions()).normal;\r\n        settings.class = \"dxc-markers\";\r\n        settings.opacity = 1;\r\n        that._applyMarkerClipRect(settings);\r\n        that._markersGroup.attr(settings)\r\n    },\r\n    getVisibleArea: function() {\r\n        return this._visibleArea\r\n    },\r\n    areErrorBarsVisible: function() {\r\n        var errorBarOptions = this._options.valueErrorBar;\r\n        return errorBarOptions && this._errorBarsEnabled() && \"none\" !== errorBarOptions.displayMode && (isErrorBarTypeCorrect(_normalizeEnum(errorBarOptions.type)) || _isDefined(errorBarOptions.lowValueField) || _isDefined(errorBarOptions.highValueField))\r\n    },\r\n    groupPointsByCoords: function(rotated) {\r\n        var cat = [];\r\n        _each(this.getVisiblePoints(), function(_, p) {\r\n            var pointCoord = parseInt(rotated ? p.vy : p.vx);\r\n            if (!cat[pointCoord]) {\r\n                cat[pointCoord] = p\r\n            } else {\r\n                Array.isArray(cat[pointCoord]) ? cat[pointCoord].push(p) : cat[pointCoord] = [cat[pointCoord], p]\r\n            }\r\n        });\r\n        return cat\r\n    },\r\n    _createErrorBarGroup: function(animationEnabled) {\r\n        var that = this;\r\n        var errorBarOptions = that._options.valueErrorBar;\r\n        var settings;\r\n        if (that.areErrorBarsVisible()) {\r\n            settings = {\r\n                \"class\": \"dxc-error-bars\",\r\n                stroke: errorBarOptions.color,\r\n                \"stroke-width\": errorBarOptions.lineWidth,\r\n                opacity: animationEnabled ? .001 : errorBarOptions.opacity || 1,\r\n                \"stroke-linecap\": \"square\",\r\n                sharp: true,\r\n                \"clip-path\": that._forceClipping ? that._paneClipRectID : that._widePaneClipRectID\r\n            };\r\n            that._createGroup(\"_errorBarGroup\", that, that._group, settings)\r\n        }\r\n    },\r\n    _setGroupsSettings: function(animationEnabled) {\r\n        var that = this;\r\n        that._setMarkerGroupSettings();\r\n        that._setLabelGroupSettings(animationEnabled);\r\n        that._createErrorBarGroup(animationEnabled)\r\n    },\r\n    _getCreatingPointOptions: function() {\r\n        var that = this;\r\n        var defaultPointOptions;\r\n        var creatingPointOptions = that._predefinedPointOptions;\r\n        var normalStyle;\r\n        if (!creatingPointOptions) {\r\n            defaultPointOptions = that._getPointOptions();\r\n            that._predefinedPointOptions = creatingPointOptions = _extend(true, {\r\n                styles: {}\r\n            }, defaultPointOptions);\r\n            normalStyle = defaultPointOptions.styles && defaultPointOptions.styles.normal || {};\r\n            creatingPointOptions.styles = creatingPointOptions.styles || {};\r\n            creatingPointOptions.styles.normal = {\r\n                \"stroke-width\": normalStyle[\"stroke-width\"],\r\n                r: normalStyle.r,\r\n                opacity: normalStyle.opacity\r\n            }\r\n        }\r\n        return creatingPointOptions\r\n    },\r\n    _getPointOptions: function() {\r\n        return this._parsePointOptions(this._preparePointOptions(), this._options.label)\r\n    },\r\n    _getOptionsForPoint: function() {\r\n        return this._options.point\r\n    },\r\n    _parsePointStyle: function(style, defaultColor, defaultBorderColor, defaultSize) {\r\n        var border = style.border || {};\r\n        var sizeValue = void 0 !== style.size ? style.size : defaultSize;\r\n        return {\r\n            fill: style.color || defaultColor,\r\n            stroke: border.color || defaultBorderColor,\r\n            \"stroke-width\": border.visible ? border.width : 0,\r\n            r: sizeValue / 2 + (border.visible && 0 !== sizeValue ? ~~(border.width / 2) || 0 : 0)\r\n        }\r\n    },\r\n    _createPointStyles: function(pointOptions) {\r\n        var that = this;\r\n        var mainPointColor = pointOptions.color || that._options.mainSeriesColor;\r\n        var containerColor = that._options.containerBackgroundColor;\r\n        var normalStyle = that._parsePointStyle(pointOptions, mainPointColor, mainPointColor);\r\n        normalStyle.visibility = pointOptions.visible ? \"visible\" : \"hidden\";\r\n        return {\r\n            normal: normalStyle,\r\n            hover: that._parsePointStyle(pointOptions.hoverStyle, containerColor, mainPointColor, pointOptions.size),\r\n            selection: that._parsePointStyle(pointOptions.selectionStyle, containerColor, mainPointColor, pointOptions.size)\r\n        }\r\n    },\r\n    _checkData: function(data, skippedFields, fieldsToCheck) {\r\n        fieldsToCheck = fieldsToCheck || {\r\n            value: this.getValueFields()[0]\r\n        };\r\n        fieldsToCheck.argument = this.getArgumentField();\r\n        return checkFields(data, fieldsToCheck, skippedFields || {}) && data.value === data.value\r\n    },\r\n    getValueRangeInitialValue: function() {\r\n        return\r\n    },\r\n    _getRangeData: function() {\r\n        return rangeCalculator.getRangeData(this)\r\n    },\r\n    _getPointDataSelector: function() {\r\n        var _this = this;\r\n        var valueField = this.getValueFields()[0];\r\n        var argumentField = this.getArgumentField();\r\n        var tagField = this.getTagField();\r\n        var areErrorBarsVisible = this.areErrorBarsVisible();\r\n        var lowValueField;\r\n        var highValueField;\r\n        if (areErrorBarsVisible) {\r\n            var errorBarOptions = this._options.valueErrorBar;\r\n            lowValueField = errorBarOptions.lowValueField || LOW_ERROR;\r\n            highValueField = errorBarOptions.highValueField || HIGH_ERROR\r\n        }\r\n        return function(data) {\r\n            var pointData = {\r\n                value: _this._processEmptyValue(data[valueField]),\r\n                argument: data[argumentField],\r\n                tag: data[tagField],\r\n                data: data\r\n            };\r\n            if (areErrorBarsVisible) {\r\n                pointData.lowError = data[lowValueField];\r\n                pointData.highError = data[highValueField]\r\n            }\r\n            return pointData\r\n        }\r\n    },\r\n    _errorBarsEnabled: function() {\r\n        return this.valueAxisType !== DISCRETE && this.valueAxisType !== LOGARITHMIC && this.valueType !== DATETIME\r\n    },\r\n    _drawPoint: function(options) {\r\n        var point = options.point;\r\n        if (point.isInVisibleArea()) {\r\n            point.clearVisibility();\r\n            point.draw(this._renderer, options.groups, options.hasAnimation, options.firstDrawing);\r\n            this._drawnPoints.push(point)\r\n        } else {\r\n            point.setInvisibility()\r\n        }\r\n    },\r\n    _animateComplete: function() {\r\n        var that = this;\r\n        var animationSettings = {\r\n            duration: that._defaultDuration\r\n        };\r\n        that._labelsGroup && that._labelsGroup.animate({\r\n            opacity: 1\r\n        }, animationSettings);\r\n        that._errorBarGroup && that._errorBarGroup.animate({\r\n            opacity: that._options.valueErrorBar.opacity || 1\r\n        }, animationSettings)\r\n    },\r\n    _animate: function() {\r\n        var that = this;\r\n        var lastPointIndex = that._drawnPoints.length - 1;\r\n        _each(that._drawnPoints || [], function(i, p) {\r\n            p.animate(i === lastPointIndex ? function() {\r\n                that._animateComplete()\r\n            } : void 0, {\r\n                translateX: p.x,\r\n                translateY: p.y\r\n            })\r\n        })\r\n    },\r\n    _defaultAggregator: \"avg\",\r\n    _aggregators: {\r\n        avg: function(_ref2, series) {\r\n            var _calculateAvgErrorBar;\r\n            var data = _ref2.data,\r\n                intervalStart = _ref2.intervalStart;\r\n            if (!data.length) {\r\n                return\r\n            }\r\n            var valueField = series.getValueFields()[0];\r\n            var aggregationResult = data.reduce(function(result, item) {\r\n                var value = item[valueField];\r\n                if (_isDefined(value)) {\r\n                    result[0] += value;\r\n                    result[1]++\r\n                } else {\r\n                    if (null === value) {\r\n                        result[2]++\r\n                    }\r\n                }\r\n                return result\r\n            }, [0, 0, 0]);\r\n            return calculateAvgErrorBars((_calculateAvgErrorBar = {}, _defineProperty(_calculateAvgErrorBar, valueField, aggregationResult[2] === data.length ? null : aggregationResult[0] / aggregationResult[1]), _defineProperty(_calculateAvgErrorBar, series.getArgumentField(), intervalStart), _calculateAvgErrorBar), data, series)\r\n        },\r\n        sum: function(_ref3, series) {\r\n            var _calculateSumErrorBar;\r\n            var intervalStart = _ref3.intervalStart,\r\n                data = _ref3.data;\r\n            if (!data.length) {\r\n                return\r\n            }\r\n            var valueField = series.getValueFields()[0];\r\n            var aggregationResult = data.reduce(function(result, item) {\r\n                var value = item[valueField];\r\n                if (void 0 !== value) {\r\n                    result[0] += value\r\n                }\r\n                if (null === value) {\r\n                    result[1]++\r\n                } else {\r\n                    if (void 0 === value) {\r\n                        result[2]++\r\n                    }\r\n                }\r\n                return result\r\n            }, [0, 0, 0]);\r\n            var value = aggregationResult[0];\r\n            if (aggregationResult[1] === data.length) {\r\n                value = null\r\n            }\r\n            if (aggregationResult[2] === data.length) {\r\n                return\r\n            }\r\n            return calculateSumErrorBars((_calculateSumErrorBar = {}, _defineProperty(_calculateSumErrorBar, valueField, value), _defineProperty(_calculateSumErrorBar, series.getArgumentField(), intervalStart), _calculateSumErrorBar), data, series)\r\n        },\r\n        count: function(_ref4, series) {\r\n            var _ref5;\r\n            var data = _ref4.data,\r\n                intervalStart = _ref4.intervalStart;\r\n            var valueField = series.getValueFields()[0];\r\n            return _ref5 = {}, _defineProperty(_ref5, series.getArgumentField(), intervalStart), _defineProperty(_ref5, valueField, data.filter(function(i) {\r\n                return void 0 !== i[valueField]\r\n            }).length), _ref5\r\n        },\r\n        min: getMinMaxAggregator(function(a, b) {\r\n            return a < b\r\n        }),\r\n        max: getMinMaxAggregator(function(a, b) {\r\n            return a > b\r\n        })\r\n    },\r\n    _endUpdateData: function() {\r\n        delete this._predefinedPointOptions\r\n    },\r\n    getArgumentField: function() {\r\n        return this._options.argumentField || \"arg\"\r\n    },\r\n    getValueFields: function() {\r\n        var options = this._options;\r\n        var errorBarsOptions = options.valueErrorBar;\r\n        var valueFields = [options.valueField || \"val\"];\r\n        var lowValueField;\r\n        var highValueField;\r\n        if (errorBarsOptions) {\r\n            lowValueField = errorBarsOptions.lowValueField;\r\n            highValueField = errorBarsOptions.highValueField;\r\n            _isString(lowValueField) && valueFields.push(lowValueField);\r\n            _isString(highValueField) && valueFields.push(highValueField)\r\n        }\r\n        return valueFields\r\n    },\r\n    _calculateErrorBars: function(data) {\r\n        if (!this.areErrorBarsVisible()) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var options = that._options;\r\n        var errorBarsOptions = options.valueErrorBar;\r\n        var errorBarType = _normalizeEnum(errorBarsOptions.type);\r\n        var floatErrorValue = parseFloat(errorBarsOptions.value);\r\n        var valueField = that.getValueFields()[0];\r\n        var value;\r\n        var lowValueField = errorBarsOptions.lowValueField || LOW_ERROR;\r\n        var highValueField = errorBarsOptions.highValueField || HIGH_ERROR;\r\n        var valueArray;\r\n        var valueArrayLength;\r\n        var meanValue;\r\n        var processDataItem;\r\n        var addSubError = function(_i, item) {\r\n            value = item.value;\r\n            item.lowError = value - floatErrorValue;\r\n            item.highError = value + floatErrorValue\r\n        };\r\n        switch (errorBarType) {\r\n            case FIXED:\r\n                processDataItem = addSubError;\r\n                break;\r\n            case PERCENT:\r\n                processDataItem = function(_, item) {\r\n                    value = item.value;\r\n                    var error = value * floatErrorValue / 100;\r\n                    item.lowError = value - error;\r\n                    item.highError = value + error\r\n                };\r\n                break;\r\n            case UNDEFINED:\r\n                processDataItem = function(_, item) {\r\n                    item.lowError = item.data[lowValueField];\r\n                    item.highError = item.data[highValueField]\r\n                };\r\n                break;\r\n            default:\r\n                valueArray = _map(data, function(item) {\r\n                    return _isDefined(item.data[valueField]) ? item.data[valueField] : null\r\n                });\r\n                valueArrayLength = valueArray.length;\r\n                floatErrorValue = floatErrorValue || 1;\r\n                switch (errorBarType) {\r\n                    case VARIANCE:\r\n                        floatErrorValue = variance(valueArray, sum(valueArray) / valueArrayLength) * floatErrorValue;\r\n                        processDataItem = addSubError;\r\n                        break;\r\n                    case STANDARD_DEVIATION:\r\n                        meanValue = sum(valueArray) / valueArrayLength;\r\n                        floatErrorValue = _sqrt(variance(valueArray, meanValue)) * floatErrorValue;\r\n                        processDataItem = function(_, item) {\r\n                            item.lowError = meanValue - floatErrorValue;\r\n                            item.highError = meanValue + floatErrorValue\r\n                        };\r\n                        break;\r\n                    case STANDARD_ERROR:\r\n                        floatErrorValue = _sqrt(variance(valueArray, sum(valueArray) / valueArrayLength) / valueArrayLength) * floatErrorValue;\r\n                        processDataItem = addSubError\r\n                }\r\n        }\r\n        processDataItem && _each(data, processDataItem)\r\n    },\r\n    _patchMarginOptions: function(options) {\r\n        var pointOptions = this._getCreatingPointOptions();\r\n        var styles = pointOptions.styles;\r\n        var maxSize = [styles.normal, styles.hover, styles.selection].reduce(function(max, style) {\r\n            return _max(max, 2 * style.r + style[\"stroke-width\"])\r\n        }, 0);\r\n        options.size = pointOptions.visible ? maxSize : 0;\r\n        options.sizePointNormalState = pointOptions.visible ? 2 * styles.normal.r + styles.normal[\"stroke-width\"] : 2;\r\n        return options\r\n    },\r\n    usePointsToDefineAutoHiding: function() {\r\n        return true\r\n    }\r\n};\r\nexports.chart = _extend({}, baseScatterMethods, {\r\n    drawTrackers: function() {\r\n        var that = this;\r\n        var trackers;\r\n        var trackersGroup;\r\n        var segments = that._segments || [];\r\n        var rotated = that._options.rotated;\r\n        if (!that.isVisible()) {\r\n            return\r\n        }\r\n        if (segments.length) {\r\n            trackers = that._trackers = that._trackers || [];\r\n            trackersGroup = that._trackersGroup = (that._trackersGroup || that._renderer.g().attr({\r\n                fill: \"gray\",\r\n                opacity: .001,\r\n                stroke: \"gray\",\r\n                \"class\": \"dxc-trackers\"\r\n            })).attr({\r\n                \"clip-path\": this._paneClipRectID || null\r\n            }).append(that._group);\r\n            _each(segments, function(i, segment) {\r\n                if (!trackers[i]) {\r\n                    trackers[i] = that._drawTrackerElement(segment).data({\r\n                        \"chart-data-series\": that\r\n                    }).append(trackersGroup)\r\n                } else {\r\n                    that._updateTrackerElement(segment, trackers[i])\r\n                }\r\n            })\r\n        }\r\n        that._trackersTranslator = that.groupPointsByCoords(rotated)\r\n    },\r\n    checkAxisVisibleAreaCoord: function(isArgument, coord) {\r\n        var axis = isArgument ? this.getArgumentAxis() : this.getValueAxis();\r\n        var visibleArea = axis.getVisibleArea();\r\n        return _isDefined(coord) && visibleArea[0] <= coord && visibleArea[1] >= coord\r\n    },\r\n    checkSeriesViewportCoord: function(axis, coord) {\r\n        return true\r\n    },\r\n    getSeriesPairCoord: function(coord, isArgument) {\r\n        var oppositeCoord = null;\r\n        var isOpposite = !isArgument && !this._options.rotated || isArgument && this._options.rotated;\r\n        var coordName = !isOpposite ? \"vx\" : \"vy\";\r\n        var oppositeCoordName = !isOpposite ? \"vy\" : \"vx\";\r\n        var points = this.getVisiblePoints();\r\n        for (var i = 0; i < points.length; i++) {\r\n            var p = points[i];\r\n            var tmpCoord = p[coordName] === coord ? p[oppositeCoordName] : void 0;\r\n            if (this.checkAxisVisibleAreaCoord(!isArgument, tmpCoord)) {\r\n                oppositeCoord = tmpCoord;\r\n                break\r\n            }\r\n        }\r\n        return oppositeCoord\r\n    },\r\n    getNearestPointsByCoord: function(coord, isArgument) {\r\n        var that = this;\r\n        var rotated = that.getOptions().rotated;\r\n        var isOpposite = !isArgument && !rotated || isArgument && rotated;\r\n        var coordName = isOpposite ? \"vy\" : \"vx\";\r\n        var points = that.getVisiblePoints();\r\n        var allPoints = that.getPoints();\r\n        var nearestPoints = [];\r\n        if (that.isVisible() && allPoints.length > 0) {\r\n            if (allPoints.length > 1) {\r\n                that.findNeighborPointsByCoord(coord, coordName, points.slice(0), allPoints, function(point, nextPoint) {\r\n                    nearestPoints.push([point, nextPoint])\r\n                })\r\n            } else {\r\n                if (allPoints[0][coordName] === coord) {\r\n                    nearestPoints.push([allPoints[0], allPoints[0]])\r\n                }\r\n            }\r\n        }\r\n        return nearestPoints\r\n    },\r\n    findNeighborPointsByCoord: function(coord, coordName, points, allPoints, pushNeighborPoints) {\r\n        var searchPoints = allPoints;\r\n        if (points.length > 0) {\r\n            points.splice(0, 0, allPoints[allPoints.indexOf(points[0]) - 1]);\r\n            points.splice(points.length, 0, allPoints[allPoints.indexOf(points[points.length - 1]) + 1]);\r\n            searchPoints = points\r\n        }\r\n        searchPoints.forEach(function(p, i) {\r\n            var np = searchPoints[i + 1];\r\n            if (p && np && (p[coordName] <= coord && np[coordName] >= coord || p[coordName] >= coord && np[coordName] <= coord)) {\r\n                pushNeighborPoints(p, np)\r\n            }\r\n        })\r\n    },\r\n    getNeighborPoint: function(x, y) {\r\n        var pCoord = this._options.rotated ? y : x;\r\n        var nCoord = pCoord;\r\n        var cat = this._trackersTranslator;\r\n        var point = null;\r\n        var minDistance;\r\n        var oppositeCoord = this._options.rotated ? x : y;\r\n        var oppositeCoordName = this._options.rotated ? \"vx\" : \"vy\";\r\n        if (this.isVisible() && cat) {\r\n            point = cat[pCoord];\r\n            do {\r\n                point = cat[nCoord] || cat[pCoord];\r\n                pCoord--;\r\n                nCoord++\r\n            } while ((pCoord >= 0 || nCoord < cat.length) && !point);\r\n            if (Array.isArray(point)) {\r\n                minDistance = _abs(point[0][oppositeCoordName] - oppositeCoord);\r\n                _each(point, function(i, p) {\r\n                    var distance = _abs(p[oppositeCoordName] - oppositeCoord);\r\n                    if (minDistance >= distance) {\r\n                        minDistance = distance;\r\n                        point = p\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return point\r\n    },\r\n    _applyVisibleArea: function() {\r\n        var that = this;\r\n        var rotated = that._options.rotated;\r\n        var visibleX = (rotated ? that.getValueAxis() : that.getArgumentAxis()).getVisibleArea();\r\n        var visibleY = (rotated ? that.getArgumentAxis() : that.getValueAxis()).getVisibleArea();\r\n        that._visibleArea = {\r\n            minX: visibleX[0],\r\n            maxX: visibleX[1],\r\n            minY: visibleY[0],\r\n            maxY: visibleY[1]\r\n        }\r\n    },\r\n    getPointCenterByArg: function(arg) {\r\n        var point = this.getPointsByArg(arg)[0];\r\n        return point ? point.getCenterCoord() : void 0\r\n    }\r\n});\r\nexports.polar = _extend({}, baseScatterMethods, {\r\n    drawTrackers: function() {\r\n        exports.chart.drawTrackers.call(this);\r\n        var cat = this._trackersTranslator;\r\n        var index;\r\n        if (!this.isVisible()) {\r\n            return\r\n        }\r\n        _each(cat, function(i, category) {\r\n            if (category) {\r\n                index = i;\r\n                return false\r\n            }\r\n        });\r\n        cat[index + 360] = cat[index]\r\n    },\r\n    getNeighborPoint: function(x, y) {\r\n        var pos = vizUtils.convertXYToPolar(this.getValueAxis().getCenter(), x, y);\r\n        return exports.chart.getNeighborPoint.call(this, pos.phi, pos.r)\r\n    },\r\n    _applyVisibleArea: function() {\r\n        var that = this;\r\n        var canvas = that.getValueAxis().getCanvas();\r\n        that._visibleArea = {\r\n            minX: canvas.left,\r\n            maxX: canvas.width - canvas.right,\r\n            minY: canvas.top,\r\n            maxY: canvas.height - canvas.bottom\r\n        }\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}